# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_pyctp')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_pyctp')
    _pyctp = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_pyctp', [dirname(__file__)])
        except ImportError:
            import _pyctp
            return _pyctp
        try:
            _mod = imp.load_module('_pyctp', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _pyctp = swig_import_helper()
    del swig_import_helper
else:
    import _pyctp
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

try:
    import weakref
    weakref_proxy = weakref.proxy
except __builtin__.Exception:
    weakref_proxy = lambda x: x


THOST_TERT_RESTART = _pyctp.THOST_TERT_RESTART
THOST_TERT_RESUME = _pyctp.THOST_TERT_RESUME
THOST_TERT_QUICK = _pyctp.THOST_TERT_QUICK
THOST_FTDC_EXP_Normal = _pyctp.THOST_FTDC_EXP_Normal
THOST_FTDC_EXP_GenOrderByTrade = _pyctp.THOST_FTDC_EXP_GenOrderByTrade
THOST_FTDC_ICT_EID = _pyctp.THOST_FTDC_ICT_EID
THOST_FTDC_ICT_IDCard = _pyctp.THOST_FTDC_ICT_IDCard
THOST_FTDC_ICT_OfficerIDCard = _pyctp.THOST_FTDC_ICT_OfficerIDCard
THOST_FTDC_ICT_PoliceIDCard = _pyctp.THOST_FTDC_ICT_PoliceIDCard
THOST_FTDC_ICT_SoldierIDCard = _pyctp.THOST_FTDC_ICT_SoldierIDCard
THOST_FTDC_ICT_HouseholdRegister = _pyctp.THOST_FTDC_ICT_HouseholdRegister
THOST_FTDC_ICT_Passport = _pyctp.THOST_FTDC_ICT_Passport
THOST_FTDC_ICT_TaiwanCompatriotIDCard = _pyctp.THOST_FTDC_ICT_TaiwanCompatriotIDCard
THOST_FTDC_ICT_HomeComingCard = _pyctp.THOST_FTDC_ICT_HomeComingCard
THOST_FTDC_ICT_LicenseNo = _pyctp.THOST_FTDC_ICT_LicenseNo
THOST_FTDC_ICT_TaxNo = _pyctp.THOST_FTDC_ICT_TaxNo
THOST_FTDC_ICT_HMMainlandTravelPermit = _pyctp.THOST_FTDC_ICT_HMMainlandTravelPermit
THOST_FTDC_ICT_TwMainlandTravelPermit = _pyctp.THOST_FTDC_ICT_TwMainlandTravelPermit
THOST_FTDC_ICT_DrivingLicense = _pyctp.THOST_FTDC_ICT_DrivingLicense
THOST_FTDC_ICT_SocialID = _pyctp.THOST_FTDC_ICT_SocialID
THOST_FTDC_ICT_LocalID = _pyctp.THOST_FTDC_ICT_LocalID
THOST_FTDC_ICT_BusinessRegistration = _pyctp.THOST_FTDC_ICT_BusinessRegistration
THOST_FTDC_ICT_HKMCIDCard = _pyctp.THOST_FTDC_ICT_HKMCIDCard
THOST_FTDC_ICT_AccountsPermits = _pyctp.THOST_FTDC_ICT_AccountsPermits
THOST_FTDC_ICT_OtherCard = _pyctp.THOST_FTDC_ICT_OtherCard
THOST_FTDC_IR_All = _pyctp.THOST_FTDC_IR_All
THOST_FTDC_IR_Group = _pyctp.THOST_FTDC_IR_Group
THOST_FTDC_IR_Single = _pyctp.THOST_FTDC_IR_Single
THOST_FTDC_DR_All = _pyctp.THOST_FTDC_DR_All
THOST_FTDC_DR_Group = _pyctp.THOST_FTDC_DR_Group
THOST_FTDC_DR_Single = _pyctp.THOST_FTDC_DR_Single
THOST_FTDC_DS_Asynchronous = _pyctp.THOST_FTDC_DS_Asynchronous
THOST_FTDC_DS_Synchronizing = _pyctp.THOST_FTDC_DS_Synchronizing
THOST_FTDC_DS_Synchronized = _pyctp.THOST_FTDC_DS_Synchronized
THOST_FTDC_BDS_Synchronized = _pyctp.THOST_FTDC_BDS_Synchronized
THOST_FTDC_BDS_Synchronizing = _pyctp.THOST_FTDC_BDS_Synchronizing
THOST_FTDC_ECS_NoConnection = _pyctp.THOST_FTDC_ECS_NoConnection
THOST_FTDC_ECS_QryInstrumentSent = _pyctp.THOST_FTDC_ECS_QryInstrumentSent
THOST_FTDC_ECS_GotInformation = _pyctp.THOST_FTDC_ECS_GotInformation
THOST_FTDC_TCS_NotConnected = _pyctp.THOST_FTDC_TCS_NotConnected
THOST_FTDC_TCS_Connected = _pyctp.THOST_FTDC_TCS_Connected
THOST_FTDC_TCS_QryInstrumentSent = _pyctp.THOST_FTDC_TCS_QryInstrumentSent
THOST_FTDC_TCS_SubPrivateFlow = _pyctp.THOST_FTDC_TCS_SubPrivateFlow
THOST_FTDC_FC_DataAsync = _pyctp.THOST_FTDC_FC_DataAsync
THOST_FTDC_FC_ForceUserLogout = _pyctp.THOST_FTDC_FC_ForceUserLogout
THOST_FTDC_FC_UserPasswordUpdate = _pyctp.THOST_FTDC_FC_UserPasswordUpdate
THOST_FTDC_FC_BrokerPasswordUpdate = _pyctp.THOST_FTDC_FC_BrokerPasswordUpdate
THOST_FTDC_FC_InvestorPasswordUpdate = _pyctp.THOST_FTDC_FC_InvestorPasswordUpdate
THOST_FTDC_FC_OrderInsert = _pyctp.THOST_FTDC_FC_OrderInsert
THOST_FTDC_FC_OrderAction = _pyctp.THOST_FTDC_FC_OrderAction
THOST_FTDC_FC_SyncSystemData = _pyctp.THOST_FTDC_FC_SyncSystemData
THOST_FTDC_FC_SyncBrokerData = _pyctp.THOST_FTDC_FC_SyncBrokerData
THOST_FTDC_FC_BachSyncBrokerData = _pyctp.THOST_FTDC_FC_BachSyncBrokerData
THOST_FTDC_FC_SuperQuery = _pyctp.THOST_FTDC_FC_SuperQuery
THOST_FTDC_FC_ParkedOrderInsert = _pyctp.THOST_FTDC_FC_ParkedOrderInsert
THOST_FTDC_FC_ParkedOrderAction = _pyctp.THOST_FTDC_FC_ParkedOrderAction
THOST_FTDC_FC_SyncOTP = _pyctp.THOST_FTDC_FC_SyncOTP
THOST_FTDC_FC_DeleteOrder = _pyctp.THOST_FTDC_FC_DeleteOrder
THOST_FTDC_BFC_ForceUserLogout = _pyctp.THOST_FTDC_BFC_ForceUserLogout
THOST_FTDC_BFC_UserPasswordUpdate = _pyctp.THOST_FTDC_BFC_UserPasswordUpdate
THOST_FTDC_BFC_SyncBrokerData = _pyctp.THOST_FTDC_BFC_SyncBrokerData
THOST_FTDC_BFC_BachSyncBrokerData = _pyctp.THOST_FTDC_BFC_BachSyncBrokerData
THOST_FTDC_BFC_OrderInsert = _pyctp.THOST_FTDC_BFC_OrderInsert
THOST_FTDC_BFC_OrderAction = _pyctp.THOST_FTDC_BFC_OrderAction
THOST_FTDC_BFC_AllQuery = _pyctp.THOST_FTDC_BFC_AllQuery
THOST_FTDC_BFC_log = _pyctp.THOST_FTDC_BFC_log
THOST_FTDC_BFC_BaseQry = _pyctp.THOST_FTDC_BFC_BaseQry
THOST_FTDC_BFC_TradeQry = _pyctp.THOST_FTDC_BFC_TradeQry
THOST_FTDC_BFC_Trade = _pyctp.THOST_FTDC_BFC_Trade
THOST_FTDC_BFC_Virement = _pyctp.THOST_FTDC_BFC_Virement
THOST_FTDC_BFC_Risk = _pyctp.THOST_FTDC_BFC_Risk
THOST_FTDC_BFC_Session = _pyctp.THOST_FTDC_BFC_Session
THOST_FTDC_BFC_RiskNoticeCtl = _pyctp.THOST_FTDC_BFC_RiskNoticeCtl
THOST_FTDC_BFC_RiskNotice = _pyctp.THOST_FTDC_BFC_RiskNotice
THOST_FTDC_BFC_BrokerDeposit = _pyctp.THOST_FTDC_BFC_BrokerDeposit
THOST_FTDC_BFC_QueryFund = _pyctp.THOST_FTDC_BFC_QueryFund
THOST_FTDC_BFC_QueryOrder = _pyctp.THOST_FTDC_BFC_QueryOrder
THOST_FTDC_BFC_QueryTrade = _pyctp.THOST_FTDC_BFC_QueryTrade
THOST_FTDC_BFC_QueryPosition = _pyctp.THOST_FTDC_BFC_QueryPosition
THOST_FTDC_BFC_QueryMarketData = _pyctp.THOST_FTDC_BFC_QueryMarketData
THOST_FTDC_BFC_QueryUserEvent = _pyctp.THOST_FTDC_BFC_QueryUserEvent
THOST_FTDC_BFC_QueryRiskNotify = _pyctp.THOST_FTDC_BFC_QueryRiskNotify
THOST_FTDC_BFC_QueryFundChange = _pyctp.THOST_FTDC_BFC_QueryFundChange
THOST_FTDC_BFC_QueryInvestor = _pyctp.THOST_FTDC_BFC_QueryInvestor
THOST_FTDC_BFC_QueryTradingCode = _pyctp.THOST_FTDC_BFC_QueryTradingCode
THOST_FTDC_BFC_ForceClose = _pyctp.THOST_FTDC_BFC_ForceClose
THOST_FTDC_BFC_PressTest = _pyctp.THOST_FTDC_BFC_PressTest
THOST_FTDC_BFC_RemainCalc = _pyctp.THOST_FTDC_BFC_RemainCalc
THOST_FTDC_BFC_NetPositionInd = _pyctp.THOST_FTDC_BFC_NetPositionInd
THOST_FTDC_BFC_RiskPredict = _pyctp.THOST_FTDC_BFC_RiskPredict
THOST_FTDC_BFC_DataExport = _pyctp.THOST_FTDC_BFC_DataExport
THOST_FTDC_BFC_RiskTargetSetup = _pyctp.THOST_FTDC_BFC_RiskTargetSetup
THOST_FTDC_BFC_MarketDataWarn = _pyctp.THOST_FTDC_BFC_MarketDataWarn
THOST_FTDC_BFC_QryBizNotice = _pyctp.THOST_FTDC_BFC_QryBizNotice
THOST_FTDC_BFC_CfgBizNotice = _pyctp.THOST_FTDC_BFC_CfgBizNotice
THOST_FTDC_BFC_SyncOTP = _pyctp.THOST_FTDC_BFC_SyncOTP
THOST_FTDC_BFC_SendBizNotice = _pyctp.THOST_FTDC_BFC_SendBizNotice
THOST_FTDC_BFC_CfgRiskLevelStd = _pyctp.THOST_FTDC_BFC_CfgRiskLevelStd
THOST_FTDC_BFC_TbCommand = _pyctp.THOST_FTDC_BFC_TbCommand
THOST_FTDC_BFC_DeleteOrder = _pyctp.THOST_FTDC_BFC_DeleteOrder
THOST_FTDC_BFC_ParkedOrderInsert = _pyctp.THOST_FTDC_BFC_ParkedOrderInsert
THOST_FTDC_BFC_ParkedOrderAction = _pyctp.THOST_FTDC_BFC_ParkedOrderAction
THOST_FTDC_BFC_ExecOrderNoCheck = _pyctp.THOST_FTDC_BFC_ExecOrderNoCheck
THOST_FTDC_OAS_Submitted = _pyctp.THOST_FTDC_OAS_Submitted
THOST_FTDC_OAS_Accepted = _pyctp.THOST_FTDC_OAS_Accepted
THOST_FTDC_OAS_Rejected = _pyctp.THOST_FTDC_OAS_Rejected
THOST_FTDC_OST_AllTraded = _pyctp.THOST_FTDC_OST_AllTraded
THOST_FTDC_OST_PartTradedQueueing = _pyctp.THOST_FTDC_OST_PartTradedQueueing
THOST_FTDC_OST_PartTradedNotQueueing = _pyctp.THOST_FTDC_OST_PartTradedNotQueueing
THOST_FTDC_OST_NoTradeQueueing = _pyctp.THOST_FTDC_OST_NoTradeQueueing
THOST_FTDC_OST_NoTradeNotQueueing = _pyctp.THOST_FTDC_OST_NoTradeNotQueueing
THOST_FTDC_OST_Canceled = _pyctp.THOST_FTDC_OST_Canceled
THOST_FTDC_OST_Unknown = _pyctp.THOST_FTDC_OST_Unknown
THOST_FTDC_OST_NotTouched = _pyctp.THOST_FTDC_OST_NotTouched
THOST_FTDC_OST_Touched = _pyctp.THOST_FTDC_OST_Touched
THOST_FTDC_OSS_InsertSubmitted = _pyctp.THOST_FTDC_OSS_InsertSubmitted
THOST_FTDC_OSS_CancelSubmitted = _pyctp.THOST_FTDC_OSS_CancelSubmitted
THOST_FTDC_OSS_ModifySubmitted = _pyctp.THOST_FTDC_OSS_ModifySubmitted
THOST_FTDC_OSS_Accepted = _pyctp.THOST_FTDC_OSS_Accepted
THOST_FTDC_OSS_InsertRejected = _pyctp.THOST_FTDC_OSS_InsertRejected
THOST_FTDC_OSS_CancelRejected = _pyctp.THOST_FTDC_OSS_CancelRejected
THOST_FTDC_OSS_ModifyRejected = _pyctp.THOST_FTDC_OSS_ModifyRejected
THOST_FTDC_PSD_Today = _pyctp.THOST_FTDC_PSD_Today
THOST_FTDC_PSD_History = _pyctp.THOST_FTDC_PSD_History
THOST_FTDC_PDT_UseHistory = _pyctp.THOST_FTDC_PDT_UseHistory
THOST_FTDC_PDT_NoUseHistory = _pyctp.THOST_FTDC_PDT_NoUseHistory
THOST_FTDC_ER_Broker = _pyctp.THOST_FTDC_ER_Broker
THOST_FTDC_ER_Host = _pyctp.THOST_FTDC_ER_Host
THOST_FTDC_ER_Maker = _pyctp.THOST_FTDC_ER_Maker
THOST_FTDC_PC_Futures = _pyctp.THOST_FTDC_PC_Futures
THOST_FTDC_PC_Options = _pyctp.THOST_FTDC_PC_Options
THOST_FTDC_PC_Combination = _pyctp.THOST_FTDC_PC_Combination
THOST_FTDC_PC_Spot = _pyctp.THOST_FTDC_PC_Spot
THOST_FTDC_PC_EFP = _pyctp.THOST_FTDC_PC_EFP
THOST_FTDC_PC_SpotOption = _pyctp.THOST_FTDC_PC_SpotOption
THOST_FTDC_IP_NotStart = _pyctp.THOST_FTDC_IP_NotStart
THOST_FTDC_IP_Started = _pyctp.THOST_FTDC_IP_Started
THOST_FTDC_IP_Pause = _pyctp.THOST_FTDC_IP_Pause
THOST_FTDC_IP_Expired = _pyctp.THOST_FTDC_IP_Expired
THOST_FTDC_D_Buy = _pyctp.THOST_FTDC_D_Buy
THOST_FTDC_D_Sell = _pyctp.THOST_FTDC_D_Sell
THOST_FTDC_PT_Net = _pyctp.THOST_FTDC_PT_Net
THOST_FTDC_PT_Gross = _pyctp.THOST_FTDC_PT_Gross
THOST_FTDC_PD_Net = _pyctp.THOST_FTDC_PD_Net
THOST_FTDC_PD_Long = _pyctp.THOST_FTDC_PD_Long
THOST_FTDC_PD_Short = _pyctp.THOST_FTDC_PD_Short
THOST_FTDC_SS_NonActive = _pyctp.THOST_FTDC_SS_NonActive
THOST_FTDC_SS_Startup = _pyctp.THOST_FTDC_SS_Startup
THOST_FTDC_SS_Operating = _pyctp.THOST_FTDC_SS_Operating
THOST_FTDC_SS_Settlement = _pyctp.THOST_FTDC_SS_Settlement
THOST_FTDC_SS_SettlementFinished = _pyctp.THOST_FTDC_SS_SettlementFinished
THOST_FTDC_RA_Trade = _pyctp.THOST_FTDC_RA_Trade
THOST_FTDC_RA_Settlement = _pyctp.THOST_FTDC_RA_Settlement
THOST_FTDC_HF_Speculation = _pyctp.THOST_FTDC_HF_Speculation
THOST_FTDC_HF_Arbitrage = _pyctp.THOST_FTDC_HF_Arbitrage
THOST_FTDC_HF_Hedge = _pyctp.THOST_FTDC_HF_Hedge
THOST_FTDC_HF_MarketMaker = _pyctp.THOST_FTDC_HF_MarketMaker
THOST_FTDC_BHF_Speculation = _pyctp.THOST_FTDC_BHF_Speculation
THOST_FTDC_BHF_Arbitrage = _pyctp.THOST_FTDC_BHF_Arbitrage
THOST_FTDC_BHF_Hedge = _pyctp.THOST_FTDC_BHF_Hedge
THOST_FTDC_CIDT_Speculation = _pyctp.THOST_FTDC_CIDT_Speculation
THOST_FTDC_CIDT_Arbitrage = _pyctp.THOST_FTDC_CIDT_Arbitrage
THOST_FTDC_CIDT_Hedge = _pyctp.THOST_FTDC_CIDT_Hedge
THOST_FTDC_CIDT_MarketMaker = _pyctp.THOST_FTDC_CIDT_MarketMaker
THOST_FTDC_OPT_AnyPrice = _pyctp.THOST_FTDC_OPT_AnyPrice
THOST_FTDC_OPT_LimitPrice = _pyctp.THOST_FTDC_OPT_LimitPrice
THOST_FTDC_OPT_BestPrice = _pyctp.THOST_FTDC_OPT_BestPrice
THOST_FTDC_OPT_LastPrice = _pyctp.THOST_FTDC_OPT_LastPrice
THOST_FTDC_OPT_LastPricePlusOneTicks = _pyctp.THOST_FTDC_OPT_LastPricePlusOneTicks
THOST_FTDC_OPT_LastPricePlusTwoTicks = _pyctp.THOST_FTDC_OPT_LastPricePlusTwoTicks
THOST_FTDC_OPT_LastPricePlusThreeTicks = _pyctp.THOST_FTDC_OPT_LastPricePlusThreeTicks
THOST_FTDC_OPT_AskPrice1 = _pyctp.THOST_FTDC_OPT_AskPrice1
THOST_FTDC_OPT_AskPrice1PlusOneTicks = _pyctp.THOST_FTDC_OPT_AskPrice1PlusOneTicks
THOST_FTDC_OPT_AskPrice1PlusTwoTicks = _pyctp.THOST_FTDC_OPT_AskPrice1PlusTwoTicks
THOST_FTDC_OPT_AskPrice1PlusThreeTicks = _pyctp.THOST_FTDC_OPT_AskPrice1PlusThreeTicks
THOST_FTDC_OPT_BidPrice1 = _pyctp.THOST_FTDC_OPT_BidPrice1
THOST_FTDC_OPT_BidPrice1PlusOneTicks = _pyctp.THOST_FTDC_OPT_BidPrice1PlusOneTicks
THOST_FTDC_OPT_BidPrice1PlusTwoTicks = _pyctp.THOST_FTDC_OPT_BidPrice1PlusTwoTicks
THOST_FTDC_OPT_BidPrice1PlusThreeTicks = _pyctp.THOST_FTDC_OPT_BidPrice1PlusThreeTicks
THOST_FTDC_OPT_FiveLevelPrice = _pyctp.THOST_FTDC_OPT_FiveLevelPrice
THOST_FTDC_OF_Open = _pyctp.THOST_FTDC_OF_Open
THOST_FTDC_OF_Close = _pyctp.THOST_FTDC_OF_Close
THOST_FTDC_OF_ForceClose = _pyctp.THOST_FTDC_OF_ForceClose
THOST_FTDC_OF_CloseToday = _pyctp.THOST_FTDC_OF_CloseToday
THOST_FTDC_OF_CloseYesterday = _pyctp.THOST_FTDC_OF_CloseYesterday
THOST_FTDC_OF_ForceOff = _pyctp.THOST_FTDC_OF_ForceOff
THOST_FTDC_OF_LocalForceClose = _pyctp.THOST_FTDC_OF_LocalForceClose
THOST_FTDC_FCC_NotForceClose = _pyctp.THOST_FTDC_FCC_NotForceClose
THOST_FTDC_FCC_LackDeposit = _pyctp.THOST_FTDC_FCC_LackDeposit
THOST_FTDC_FCC_ClientOverPositionLimit = _pyctp.THOST_FTDC_FCC_ClientOverPositionLimit
THOST_FTDC_FCC_MemberOverPositionLimit = _pyctp.THOST_FTDC_FCC_MemberOverPositionLimit
THOST_FTDC_FCC_NotMultiple = _pyctp.THOST_FTDC_FCC_NotMultiple
THOST_FTDC_FCC_Violation = _pyctp.THOST_FTDC_FCC_Violation
THOST_FTDC_FCC_Other = _pyctp.THOST_FTDC_FCC_Other
THOST_FTDC_FCC_PersonDeliv = _pyctp.THOST_FTDC_FCC_PersonDeliv
THOST_FTDC_ORDT_Normal = _pyctp.THOST_FTDC_ORDT_Normal
THOST_FTDC_ORDT_DeriveFromQuote = _pyctp.THOST_FTDC_ORDT_DeriveFromQuote
THOST_FTDC_ORDT_DeriveFromCombination = _pyctp.THOST_FTDC_ORDT_DeriveFromCombination
THOST_FTDC_ORDT_Combination = _pyctp.THOST_FTDC_ORDT_Combination
THOST_FTDC_ORDT_ConditionalOrder = _pyctp.THOST_FTDC_ORDT_ConditionalOrder
THOST_FTDC_ORDT_Swap = _pyctp.THOST_FTDC_ORDT_Swap
THOST_FTDC_TC_IOC = _pyctp.THOST_FTDC_TC_IOC
THOST_FTDC_TC_GFS = _pyctp.THOST_FTDC_TC_GFS
THOST_FTDC_TC_GFD = _pyctp.THOST_FTDC_TC_GFD
THOST_FTDC_TC_GTD = _pyctp.THOST_FTDC_TC_GTD
THOST_FTDC_TC_GTC = _pyctp.THOST_FTDC_TC_GTC
THOST_FTDC_TC_GFA = _pyctp.THOST_FTDC_TC_GFA
THOST_FTDC_VC_AV = _pyctp.THOST_FTDC_VC_AV
THOST_FTDC_VC_MV = _pyctp.THOST_FTDC_VC_MV
THOST_FTDC_VC_CV = _pyctp.THOST_FTDC_VC_CV
THOST_FTDC_CC_Immediately = _pyctp.THOST_FTDC_CC_Immediately
THOST_FTDC_CC_Touch = _pyctp.THOST_FTDC_CC_Touch
THOST_FTDC_CC_TouchProfit = _pyctp.THOST_FTDC_CC_TouchProfit
THOST_FTDC_CC_ParkedOrder = _pyctp.THOST_FTDC_CC_ParkedOrder
THOST_FTDC_CC_LastPriceGreaterThanStopPrice = _pyctp.THOST_FTDC_CC_LastPriceGreaterThanStopPrice
THOST_FTDC_CC_LastPriceGreaterEqualStopPrice = _pyctp.THOST_FTDC_CC_LastPriceGreaterEqualStopPrice
THOST_FTDC_CC_LastPriceLesserThanStopPrice = _pyctp.THOST_FTDC_CC_LastPriceLesserThanStopPrice
THOST_FTDC_CC_LastPriceLesserEqualStopPrice = _pyctp.THOST_FTDC_CC_LastPriceLesserEqualStopPrice
THOST_FTDC_CC_AskPriceGreaterThanStopPrice = _pyctp.THOST_FTDC_CC_AskPriceGreaterThanStopPrice
THOST_FTDC_CC_AskPriceGreaterEqualStopPrice = _pyctp.THOST_FTDC_CC_AskPriceGreaterEqualStopPrice
THOST_FTDC_CC_AskPriceLesserThanStopPrice = _pyctp.THOST_FTDC_CC_AskPriceLesserThanStopPrice
THOST_FTDC_CC_AskPriceLesserEqualStopPrice = _pyctp.THOST_FTDC_CC_AskPriceLesserEqualStopPrice
THOST_FTDC_CC_BidPriceGreaterThanStopPrice = _pyctp.THOST_FTDC_CC_BidPriceGreaterThanStopPrice
THOST_FTDC_CC_BidPriceGreaterEqualStopPrice = _pyctp.THOST_FTDC_CC_BidPriceGreaterEqualStopPrice
THOST_FTDC_CC_BidPriceLesserThanStopPrice = _pyctp.THOST_FTDC_CC_BidPriceLesserThanStopPrice
THOST_FTDC_CC_BidPriceLesserEqualStopPrice = _pyctp.THOST_FTDC_CC_BidPriceLesserEqualStopPrice
THOST_FTDC_AF_Delete = _pyctp.THOST_FTDC_AF_Delete
THOST_FTDC_AF_Modify = _pyctp.THOST_FTDC_AF_Modify
THOST_FTDC_TR_Allow = _pyctp.THOST_FTDC_TR_Allow
THOST_FTDC_TR_CloseOnly = _pyctp.THOST_FTDC_TR_CloseOnly
THOST_FTDC_TR_Forbidden = _pyctp.THOST_FTDC_TR_Forbidden
THOST_FTDC_OSRC_Participant = _pyctp.THOST_FTDC_OSRC_Participant
THOST_FTDC_OSRC_Administrator = _pyctp.THOST_FTDC_OSRC_Administrator
THOST_FTDC_TRDT_SplitCombination = _pyctp.THOST_FTDC_TRDT_SplitCombination
THOST_FTDC_TRDT_Common = _pyctp.THOST_FTDC_TRDT_Common
THOST_FTDC_TRDT_OptionsExecution = _pyctp.THOST_FTDC_TRDT_OptionsExecution
THOST_FTDC_TRDT_OTC = _pyctp.THOST_FTDC_TRDT_OTC
THOST_FTDC_TRDT_EFPDerived = _pyctp.THOST_FTDC_TRDT_EFPDerived
THOST_FTDC_TRDT_CombinationDerived = _pyctp.THOST_FTDC_TRDT_CombinationDerived
THOST_FTDC_PSRC_LastPrice = _pyctp.THOST_FTDC_PSRC_LastPrice
THOST_FTDC_PSRC_Buy = _pyctp.THOST_FTDC_PSRC_Buy
THOST_FTDC_PSRC_Sell = _pyctp.THOST_FTDC_PSRC_Sell
THOST_FTDC_IS_BeforeTrading = _pyctp.THOST_FTDC_IS_BeforeTrading
THOST_FTDC_IS_NoTrading = _pyctp.THOST_FTDC_IS_NoTrading
THOST_FTDC_IS_Continous = _pyctp.THOST_FTDC_IS_Continous
THOST_FTDC_IS_AuctionOrdering = _pyctp.THOST_FTDC_IS_AuctionOrdering
THOST_FTDC_IS_AuctionBalance = _pyctp.THOST_FTDC_IS_AuctionBalance
THOST_FTDC_IS_AuctionMatch = _pyctp.THOST_FTDC_IS_AuctionMatch
THOST_FTDC_IS_Closed = _pyctp.THOST_FTDC_IS_Closed
THOST_FTDC_IER_Automatic = _pyctp.THOST_FTDC_IER_Automatic
THOST_FTDC_IER_Manual = _pyctp.THOST_FTDC_IER_Manual
THOST_FTDC_IER_Fuse = _pyctp.THOST_FTDC_IER_Fuse
THOST_FTDC_BS_NoUpload = _pyctp.THOST_FTDC_BS_NoUpload
THOST_FTDC_BS_Uploaded = _pyctp.THOST_FTDC_BS_Uploaded
THOST_FTDC_BS_Failed = _pyctp.THOST_FTDC_BS_Failed
THOST_FTDC_RS_All = _pyctp.THOST_FTDC_RS_All
THOST_FTDC_RS_ByProduct = _pyctp.THOST_FTDC_RS_ByProduct
THOST_FTDC_RP_ByVolume = _pyctp.THOST_FTDC_RP_ByVolume
THOST_FTDC_RP_ByFeeOnHand = _pyctp.THOST_FTDC_RP_ByFeeOnHand
THOST_FTDC_RL_Level1 = _pyctp.THOST_FTDC_RL_Level1
THOST_FTDC_RL_Level2 = _pyctp.THOST_FTDC_RL_Level2
THOST_FTDC_RL_Level3 = _pyctp.THOST_FTDC_RL_Level3
THOST_FTDC_RL_Level4 = _pyctp.THOST_FTDC_RL_Level4
THOST_FTDC_RL_Level5 = _pyctp.THOST_FTDC_RL_Level5
THOST_FTDC_RL_Level6 = _pyctp.THOST_FTDC_RL_Level6
THOST_FTDC_RL_Level7 = _pyctp.THOST_FTDC_RL_Level7
THOST_FTDC_RL_Level8 = _pyctp.THOST_FTDC_RL_Level8
THOST_FTDC_RL_Level9 = _pyctp.THOST_FTDC_RL_Level9
THOST_FTDC_RSD_ByPeriod = _pyctp.THOST_FTDC_RSD_ByPeriod
THOST_FTDC_RSD_ByStandard = _pyctp.THOST_FTDC_RSD_ByStandard
THOST_FTDC_MT_Out = _pyctp.THOST_FTDC_MT_Out
THOST_FTDC_MT_In = _pyctp.THOST_FTDC_MT_In
THOST_FTDC_ISPI_MortgageRatio = _pyctp.THOST_FTDC_ISPI_MortgageRatio
THOST_FTDC_ISPI_MarginWay = _pyctp.THOST_FTDC_ISPI_MarginWay
THOST_FTDC_ISPI_BillDeposit = _pyctp.THOST_FTDC_ISPI_BillDeposit
THOST_FTDC_ESPI_MortgageRatio = _pyctp.THOST_FTDC_ESPI_MortgageRatio
THOST_FTDC_ESPI_OtherFundItem = _pyctp.THOST_FTDC_ESPI_OtherFundItem
THOST_FTDC_ESPI_OtherFundImport = _pyctp.THOST_FTDC_ESPI_OtherFundImport
THOST_FTDC_ESPI_CFFEXMinPrepa = _pyctp.THOST_FTDC_ESPI_CFFEXMinPrepa
THOST_FTDC_ESPI_CZCESettlementType = _pyctp.THOST_FTDC_ESPI_CZCESettlementType
THOST_FTDC_ESPI_ExchDelivFeeMode = _pyctp.THOST_FTDC_ESPI_ExchDelivFeeMode
THOST_FTDC_ESPI_DelivFeeMode = _pyctp.THOST_FTDC_ESPI_DelivFeeMode
THOST_FTDC_ESPI_CZCEComMarginType = _pyctp.THOST_FTDC_ESPI_CZCEComMarginType
THOST_FTDC_ESPI_DceComMarginType = _pyctp.THOST_FTDC_ESPI_DceComMarginType
THOST_FTDC_ESPI_OptOutDisCountRate = _pyctp.THOST_FTDC_ESPI_OptOutDisCountRate
THOST_FTDC_ESPI_OptMiniGuarantee = _pyctp.THOST_FTDC_ESPI_OptMiniGuarantee
THOST_FTDC_SPI_InvestorIDMinLength = _pyctp.THOST_FTDC_SPI_InvestorIDMinLength
THOST_FTDC_SPI_AccountIDMinLength = _pyctp.THOST_FTDC_SPI_AccountIDMinLength
THOST_FTDC_SPI_UserRightLogon = _pyctp.THOST_FTDC_SPI_UserRightLogon
THOST_FTDC_SPI_SettlementBillTrade = _pyctp.THOST_FTDC_SPI_SettlementBillTrade
THOST_FTDC_SPI_TradingCode = _pyctp.THOST_FTDC_SPI_TradingCode
THOST_FTDC_SPI_CheckFund = _pyctp.THOST_FTDC_SPI_CheckFund
THOST_FTDC_SPI_CommModelRight = _pyctp.THOST_FTDC_SPI_CommModelRight
THOST_FTDC_SPI_MarginModelRight = _pyctp.THOST_FTDC_SPI_MarginModelRight
THOST_FTDC_SPI_IsStandardActive = _pyctp.THOST_FTDC_SPI_IsStandardActive
THOST_FTDC_SPI_UploadSettlementFile = _pyctp.THOST_FTDC_SPI_UploadSettlementFile
THOST_FTDC_SPI_DownloadCSRCFile = _pyctp.THOST_FTDC_SPI_DownloadCSRCFile
THOST_FTDC_SPI_SettlementBillFile = _pyctp.THOST_FTDC_SPI_SettlementBillFile
THOST_FTDC_SPI_CSRCOthersFile = _pyctp.THOST_FTDC_SPI_CSRCOthersFile
THOST_FTDC_SPI_InvestorPhoto = _pyctp.THOST_FTDC_SPI_InvestorPhoto
THOST_FTDC_SPI_CSRCData = _pyctp.THOST_FTDC_SPI_CSRCData
THOST_FTDC_SPI_InvestorPwdModel = _pyctp.THOST_FTDC_SPI_InvestorPwdModel
THOST_FTDC_SPI_CFFEXInvestorSettleFile = _pyctp.THOST_FTDC_SPI_CFFEXInvestorSettleFile
THOST_FTDC_SPI_InvestorIDType = _pyctp.THOST_FTDC_SPI_InvestorIDType
THOST_FTDC_SPI_FreezeMaxReMain = _pyctp.THOST_FTDC_SPI_FreezeMaxReMain
THOST_FTDC_SPI_IsSync = _pyctp.THOST_FTDC_SPI_IsSync
THOST_FTDC_SPI_RelieveOpenLimit = _pyctp.THOST_FTDC_SPI_RelieveOpenLimit
THOST_FTDC_SPI_IsStandardFreeze = _pyctp.THOST_FTDC_SPI_IsStandardFreeze
THOST_FTDC_SPI_CZCENormalProductHedge = _pyctp.THOST_FTDC_SPI_CZCENormalProductHedge
THOST_FTDC_TPID_EncryptionStandard = _pyctp.THOST_FTDC_TPID_EncryptionStandard
THOST_FTDC_TPID_RiskMode = _pyctp.THOST_FTDC_TPID_RiskMode
THOST_FTDC_TPID_RiskModeGlobal = _pyctp.THOST_FTDC_TPID_RiskModeGlobal
THOST_FTDC_TPID_modeEncode = _pyctp.THOST_FTDC_TPID_modeEncode
THOST_FTDC_TPID_tickMode = _pyctp.THOST_FTDC_TPID_tickMode
THOST_FTDC_TPID_SingleUserSessionMaxNum = _pyctp.THOST_FTDC_TPID_SingleUserSessionMaxNum
THOST_FTDC_TPID_LoginFailMaxNum = _pyctp.THOST_FTDC_TPID_LoginFailMaxNum
THOST_FTDC_TPID_IsAuthForce = _pyctp.THOST_FTDC_TPID_IsAuthForce
THOST_FTDC_TPID_IsPosiFreeze = _pyctp.THOST_FTDC_TPID_IsPosiFreeze
THOST_FTDC_TPID_IsPosiLimit = _pyctp.THOST_FTDC_TPID_IsPosiLimit
THOST_FTDC_TPID_ForQuoteTimeInterval = _pyctp.THOST_FTDC_TPID_ForQuoteTimeInterval
THOST_FTDC_TPID_IsFuturePosiLimit = _pyctp.THOST_FTDC_TPID_IsFuturePosiLimit
THOST_FTDC_TPID_IsFutureOrderFreq = _pyctp.THOST_FTDC_TPID_IsFutureOrderFreq
THOST_FTDC_TPID_IsExecOrderProfit = _pyctp.THOST_FTDC_TPID_IsExecOrderProfit
THOST_FTDC_FI_SettlementFund = _pyctp.THOST_FTDC_FI_SettlementFund
THOST_FTDC_FI_Trade = _pyctp.THOST_FTDC_FI_Trade
THOST_FTDC_FI_InvestorPosition = _pyctp.THOST_FTDC_FI_InvestorPosition
THOST_FTDC_FI_SubEntryFund = _pyctp.THOST_FTDC_FI_SubEntryFund
THOST_FTDC_FI_CZCECombinationPos = _pyctp.THOST_FTDC_FI_CZCECombinationPos
THOST_FTDC_FI_CSRCData = _pyctp.THOST_FTDC_FI_CSRCData
THOST_FTDC_FI_CZCEClose = _pyctp.THOST_FTDC_FI_CZCEClose
THOST_FTDC_FI_CZCENoClose = _pyctp.THOST_FTDC_FI_CZCENoClose
THOST_FTDC_FI_PositionDtl = _pyctp.THOST_FTDC_FI_PositionDtl
THOST_FTDC_FI_OptionStrike = _pyctp.THOST_FTDC_FI_OptionStrike
THOST_FTDC_FI_SettlementPriceComparison = _pyctp.THOST_FTDC_FI_SettlementPriceComparison
THOST_FTDC_FI_NonTradePosChange = _pyctp.THOST_FTDC_FI_NonTradePosChange
THOST_FTDC_FUT_Settlement = _pyctp.THOST_FTDC_FUT_Settlement
THOST_FTDC_FUT_Check = _pyctp.THOST_FTDC_FUT_Check
THOST_FTDC_FFT_Txt = _pyctp.THOST_FTDC_FFT_Txt
THOST_FTDC_FFT_Zip = _pyctp.THOST_FTDC_FFT_Zip
THOST_FTDC_FFT_DBF = _pyctp.THOST_FTDC_FFT_DBF
THOST_FTDC_FUS_SucceedUpload = _pyctp.THOST_FTDC_FUS_SucceedUpload
THOST_FTDC_FUS_FailedUpload = _pyctp.THOST_FTDC_FUS_FailedUpload
THOST_FTDC_FUS_SucceedLoad = _pyctp.THOST_FTDC_FUS_SucceedLoad
THOST_FTDC_FUS_PartSucceedLoad = _pyctp.THOST_FTDC_FUS_PartSucceedLoad
THOST_FTDC_FUS_FailedLoad = _pyctp.THOST_FTDC_FUS_FailedLoad
THOST_FTDC_TD_Out = _pyctp.THOST_FTDC_TD_Out
THOST_FTDC_TD_In = _pyctp.THOST_FTDC_TD_In
THOST_FTDC_SC_NoSpecialRule = _pyctp.THOST_FTDC_SC_NoSpecialRule
THOST_FTDC_SC_NoSpringFestival = _pyctp.THOST_FTDC_SC_NoSpringFestival
THOST_FTDC_IPT_LastSettlement = _pyctp.THOST_FTDC_IPT_LastSettlement
THOST_FTDC_IPT_LaseClose = _pyctp.THOST_FTDC_IPT_LaseClose
THOST_FTDC_PLP_Active = _pyctp.THOST_FTDC_PLP_Active
THOST_FTDC_PLP_NonActive = _pyctp.THOST_FTDC_PLP_NonActive
THOST_FTDC_PLP_Canceled = _pyctp.THOST_FTDC_PLP_Canceled
THOST_FTDC_DM_CashDeliv = _pyctp.THOST_FTDC_DM_CashDeliv
THOST_FTDC_DM_CommodityDeliv = _pyctp.THOST_FTDC_DM_CommodityDeliv
THOST_FTDC_FIOT_FundIO = _pyctp.THOST_FTDC_FIOT_FundIO
THOST_FTDC_FIOT_Transfer = _pyctp.THOST_FTDC_FIOT_Transfer
THOST_FTDC_FIOT_SwapCurrency = _pyctp.THOST_FTDC_FIOT_SwapCurrency
THOST_FTDC_FT_Deposite = _pyctp.THOST_FTDC_FT_Deposite
THOST_FTDC_FT_ItemFund = _pyctp.THOST_FTDC_FT_ItemFund
THOST_FTDC_FT_Company = _pyctp.THOST_FTDC_FT_Company
THOST_FTDC_FT_InnerTransfer = _pyctp.THOST_FTDC_FT_InnerTransfer
THOST_FTDC_FD_In = _pyctp.THOST_FTDC_FD_In
THOST_FTDC_FD_Out = _pyctp.THOST_FTDC_FD_Out
THOST_FTDC_FS_Record = _pyctp.THOST_FTDC_FS_Record
THOST_FTDC_FS_Check = _pyctp.THOST_FTDC_FS_Check
THOST_FTDC_FS_Charge = _pyctp.THOST_FTDC_FS_Charge
THOST_FTDC_PS_None = _pyctp.THOST_FTDC_PS_None
THOST_FTDC_PS_Publishing = _pyctp.THOST_FTDC_PS_Publishing
THOST_FTDC_PS_Published = _pyctp.THOST_FTDC_PS_Published
THOST_FTDC_ES_NonActive = _pyctp.THOST_FTDC_ES_NonActive
THOST_FTDC_ES_Startup = _pyctp.THOST_FTDC_ES_Startup
THOST_FTDC_ES_Initialize = _pyctp.THOST_FTDC_ES_Initialize
THOST_FTDC_ES_Initialized = _pyctp.THOST_FTDC_ES_Initialized
THOST_FTDC_ES_Close = _pyctp.THOST_FTDC_ES_Close
THOST_FTDC_ES_Closed = _pyctp.THOST_FTDC_ES_Closed
THOST_FTDC_ES_Settlement = _pyctp.THOST_FTDC_ES_Settlement
THOST_FTDC_STS_Initialize = _pyctp.THOST_FTDC_STS_Initialize
THOST_FTDC_STS_Settlementing = _pyctp.THOST_FTDC_STS_Settlementing
THOST_FTDC_STS_Settlemented = _pyctp.THOST_FTDC_STS_Settlemented
THOST_FTDC_STS_Finished = _pyctp.THOST_FTDC_STS_Finished
THOST_FTDC_CT_Person = _pyctp.THOST_FTDC_CT_Person
THOST_FTDC_CT_Company = _pyctp.THOST_FTDC_CT_Company
THOST_FTDC_CT_Fund = _pyctp.THOST_FTDC_CT_Fund
THOST_FTDC_CT_SpecialOrgan = _pyctp.THOST_FTDC_CT_SpecialOrgan
THOST_FTDC_CT_Asset = _pyctp.THOST_FTDC_CT_Asset
THOST_FTDC_BT_Trade = _pyctp.THOST_FTDC_BT_Trade
THOST_FTDC_BT_TradeSettle = _pyctp.THOST_FTDC_BT_TradeSettle
THOST_FTDC_FAS_Low = _pyctp.THOST_FTDC_FAS_Low
THOST_FTDC_FAS_Normal = _pyctp.THOST_FTDC_FAS_Normal
THOST_FTDC_FAS_Focus = _pyctp.THOST_FTDC_FAS_Focus
THOST_FTDC_FAS_Risk = _pyctp.THOST_FTDC_FAS_Risk
THOST_FTDC_FAS_ByTrade = _pyctp.THOST_FTDC_FAS_ByTrade
THOST_FTDC_FAS_ByDeliv = _pyctp.THOST_FTDC_FAS_ByDeliv
THOST_FTDC_FAS_None = _pyctp.THOST_FTDC_FAS_None
THOST_FTDC_FAS_FixFee = _pyctp.THOST_FTDC_FAS_FixFee
THOST_FTDC_PWDT_Trade = _pyctp.THOST_FTDC_PWDT_Trade
THOST_FTDC_PWDT_Account = _pyctp.THOST_FTDC_PWDT_Account
THOST_FTDC_AG_All = _pyctp.THOST_FTDC_AG_All
THOST_FTDC_AG_OnlyLost = _pyctp.THOST_FTDC_AG_OnlyLost
THOST_FTDC_AG_OnlyGain = _pyctp.THOST_FTDC_AG_OnlyGain
THOST_FTDC_AG_None = _pyctp.THOST_FTDC_AG_None
THOST_FTDC_ICP_Include = _pyctp.THOST_FTDC_ICP_Include
THOST_FTDC_ICP_NotInclude = _pyctp.THOST_FTDC_ICP_NotInclude
THOST_FTDC_AWT_Enable = _pyctp.THOST_FTDC_AWT_Enable
THOST_FTDC_AWT_Disable = _pyctp.THOST_FTDC_AWT_Disable
THOST_FTDC_AWT_NoHoldEnable = _pyctp.THOST_FTDC_AWT_NoHoldEnable
THOST_FTDC_FPWD_UnCheck = _pyctp.THOST_FTDC_FPWD_UnCheck
THOST_FTDC_FPWD_Check = _pyctp.THOST_FTDC_FPWD_Check
THOST_FTDC_TT_BankToFuture = _pyctp.THOST_FTDC_TT_BankToFuture
THOST_FTDC_TT_FutureToBank = _pyctp.THOST_FTDC_TT_FutureToBank
THOST_FTDC_TVF_Invalid = _pyctp.THOST_FTDC_TVF_Invalid
THOST_FTDC_TVF_Valid = _pyctp.THOST_FTDC_TVF_Valid
THOST_FTDC_TVF_Reverse = _pyctp.THOST_FTDC_TVF_Reverse
THOST_FTDC_RN_CD = _pyctp.THOST_FTDC_RN_CD
THOST_FTDC_RN_ZT = _pyctp.THOST_FTDC_RN_ZT
THOST_FTDC_RN_QT = _pyctp.THOST_FTDC_RN_QT
THOST_FTDC_SEX_None = _pyctp.THOST_FTDC_SEX_None
THOST_FTDC_SEX_Man = _pyctp.THOST_FTDC_SEX_Man
THOST_FTDC_SEX_Woman = _pyctp.THOST_FTDC_SEX_Woman
THOST_FTDC_UT_Investor = _pyctp.THOST_FTDC_UT_Investor
THOST_FTDC_UT_Operator = _pyctp.THOST_FTDC_UT_Operator
THOST_FTDC_UT_SuperUser = _pyctp.THOST_FTDC_UT_SuperUser
THOST_FTDC_RATETYPE_MarginRate = _pyctp.THOST_FTDC_RATETYPE_MarginRate
THOST_FTDC_NOTETYPE_TradeSettleBill = _pyctp.THOST_FTDC_NOTETYPE_TradeSettleBill
THOST_FTDC_NOTETYPE_TradeSettleMonth = _pyctp.THOST_FTDC_NOTETYPE_TradeSettleMonth
THOST_FTDC_NOTETYPE_CallMarginNotes = _pyctp.THOST_FTDC_NOTETYPE_CallMarginNotes
THOST_FTDC_NOTETYPE_ForceCloseNotes = _pyctp.THOST_FTDC_NOTETYPE_ForceCloseNotes
THOST_FTDC_NOTETYPE_TradeNotes = _pyctp.THOST_FTDC_NOTETYPE_TradeNotes
THOST_FTDC_NOTETYPE_DelivNotes = _pyctp.THOST_FTDC_NOTETYPE_DelivNotes
THOST_FTDC_SBS_Day = _pyctp.THOST_FTDC_SBS_Day
THOST_FTDC_SBS_Volume = _pyctp.THOST_FTDC_SBS_Volume
THOST_FTDC_ST_Day = _pyctp.THOST_FTDC_ST_Day
THOST_FTDC_ST_Month = _pyctp.THOST_FTDC_ST_Month
THOST_FTDC_URT_Logon = _pyctp.THOST_FTDC_URT_Logon
THOST_FTDC_URT_Transfer = _pyctp.THOST_FTDC_URT_Transfer
THOST_FTDC_URT_EMail = _pyctp.THOST_FTDC_URT_EMail
THOST_FTDC_URT_Fax = _pyctp.THOST_FTDC_URT_Fax
THOST_FTDC_URT_ConditionOrder = _pyctp.THOST_FTDC_URT_ConditionOrder
THOST_FTDC_MPT_PreSettlementPrice = _pyctp.THOST_FTDC_MPT_PreSettlementPrice
THOST_FTDC_MPT_SettlementPrice = _pyctp.THOST_FTDC_MPT_SettlementPrice
THOST_FTDC_MPT_AveragePrice = _pyctp.THOST_FTDC_MPT_AveragePrice
THOST_FTDC_MPT_OpenPrice = _pyctp.THOST_FTDC_MPT_OpenPrice
THOST_FTDC_BGS_None = _pyctp.THOST_FTDC_BGS_None
THOST_FTDC_BGS_NoGenerated = _pyctp.THOST_FTDC_BGS_NoGenerated
THOST_FTDC_BGS_Generated = _pyctp.THOST_FTDC_BGS_Generated
THOST_FTDC_AT_HandlePositionAlgo = _pyctp.THOST_FTDC_AT_HandlePositionAlgo
THOST_FTDC_AT_FindMarginRateAlgo = _pyctp.THOST_FTDC_AT_FindMarginRateAlgo
THOST_FTDC_HPA_Base = _pyctp.THOST_FTDC_HPA_Base
THOST_FTDC_HPA_DCE = _pyctp.THOST_FTDC_HPA_DCE
THOST_FTDC_HPA_CZCE = _pyctp.THOST_FTDC_HPA_CZCE
THOST_FTDC_FMRA_Base = _pyctp.THOST_FTDC_FMRA_Base
THOST_FTDC_FMRA_DCE = _pyctp.THOST_FTDC_FMRA_DCE
THOST_FTDC_FMRA_CZCE = _pyctp.THOST_FTDC_FMRA_CZCE
THOST_FTDC_HTAA_Base = _pyctp.THOST_FTDC_HTAA_Base
THOST_FTDC_HTAA_DCE = _pyctp.THOST_FTDC_HTAA_DCE
THOST_FTDC_HTAA_CZCE = _pyctp.THOST_FTDC_HTAA_CZCE
THOST_FTDC_PST_Order = _pyctp.THOST_FTDC_PST_Order
THOST_FTDC_PST_Open = _pyctp.THOST_FTDC_PST_Open
THOST_FTDC_PST_Fund = _pyctp.THOST_FTDC_PST_Fund
THOST_FTDC_PST_Settlement = _pyctp.THOST_FTDC_PST_Settlement
THOST_FTDC_PST_Company = _pyctp.THOST_FTDC_PST_Company
THOST_FTDC_PST_Corporation = _pyctp.THOST_FTDC_PST_Corporation
THOST_FTDC_PST_LinkMan = _pyctp.THOST_FTDC_PST_LinkMan
THOST_FTDC_PST_Ledger = _pyctp.THOST_FTDC_PST_Ledger
THOST_FTDC_PST_Trustee = _pyctp.THOST_FTDC_PST_Trustee
THOST_FTDC_PST_TrusteeCorporation = _pyctp.THOST_FTDC_PST_TrusteeCorporation
THOST_FTDC_PST_TrusteeOpen = _pyctp.THOST_FTDC_PST_TrusteeOpen
THOST_FTDC_PST_TrusteeContact = _pyctp.THOST_FTDC_PST_TrusteeContact
THOST_FTDC_PST_ForeignerRefer = _pyctp.THOST_FTDC_PST_ForeignerRefer
THOST_FTDC_PST_CorporationRefer = _pyctp.THOST_FTDC_PST_CorporationRefer
THOST_FTDC_QIR_All = _pyctp.THOST_FTDC_QIR_All
THOST_FTDC_QIR_Group = _pyctp.THOST_FTDC_QIR_Group
THOST_FTDC_QIR_Single = _pyctp.THOST_FTDC_QIR_Single
THOST_FTDC_IRS_Normal = _pyctp.THOST_FTDC_IRS_Normal
THOST_FTDC_IRS_Warn = _pyctp.THOST_FTDC_IRS_Warn
THOST_FTDC_IRS_Call = _pyctp.THOST_FTDC_IRS_Call
THOST_FTDC_IRS_Force = _pyctp.THOST_FTDC_IRS_Force
THOST_FTDC_IRS_Exception = _pyctp.THOST_FTDC_IRS_Exception
THOST_FTDC_UET_Login = _pyctp.THOST_FTDC_UET_Login
THOST_FTDC_UET_Logout = _pyctp.THOST_FTDC_UET_Logout
THOST_FTDC_UET_Trading = _pyctp.THOST_FTDC_UET_Trading
THOST_FTDC_UET_TradingError = _pyctp.THOST_FTDC_UET_TradingError
THOST_FTDC_UET_UpdatePassword = _pyctp.THOST_FTDC_UET_UpdatePassword
THOST_FTDC_UET_Authenticate = _pyctp.THOST_FTDC_UET_Authenticate
THOST_FTDC_UET_Other = _pyctp.THOST_FTDC_UET_Other
THOST_FTDC_ICS_Close = _pyctp.THOST_FTDC_ICS_Close
THOST_FTDC_ICS_CloseToday = _pyctp.THOST_FTDC_ICS_CloseToday
THOST_FTDC_SM_Non = _pyctp.THOST_FTDC_SM_Non
THOST_FTDC_SM_Instrument = _pyctp.THOST_FTDC_SM_Instrument
THOST_FTDC_SM_Product = _pyctp.THOST_FTDC_SM_Product
THOST_FTDC_SM_Investor = _pyctp.THOST_FTDC_SM_Investor
THOST_FTDC_PAOS_NotSend = _pyctp.THOST_FTDC_PAOS_NotSend
THOST_FTDC_PAOS_Send = _pyctp.THOST_FTDC_PAOS_Send
THOST_FTDC_PAOS_Deleted = _pyctp.THOST_FTDC_PAOS_Deleted
THOST_FTDC_VDS_Dealing = _pyctp.THOST_FTDC_VDS_Dealing
THOST_FTDC_VDS_DeaclSucceed = _pyctp.THOST_FTDC_VDS_DeaclSucceed
THOST_FTDC_ORGS_Standard = _pyctp.THOST_FTDC_ORGS_Standard
THOST_FTDC_ORGS_ESunny = _pyctp.THOST_FTDC_ORGS_ESunny
THOST_FTDC_ORGS_KingStarV6 = _pyctp.THOST_FTDC_ORGS_KingStarV6
THOST_FTDC_VTS_NaturalDeal = _pyctp.THOST_FTDC_VTS_NaturalDeal
THOST_FTDC_VTS_SucceedEnd = _pyctp.THOST_FTDC_VTS_SucceedEnd
THOST_FTDC_VTS_FailedEND = _pyctp.THOST_FTDC_VTS_FailedEND
THOST_FTDC_VTS_Exception = _pyctp.THOST_FTDC_VTS_Exception
THOST_FTDC_VTS_ManualDeal = _pyctp.THOST_FTDC_VTS_ManualDeal
THOST_FTDC_VTS_MesException = _pyctp.THOST_FTDC_VTS_MesException
THOST_FTDC_VTS_SysException = _pyctp.THOST_FTDC_VTS_SysException
THOST_FTDC_VBAT_BankBook = _pyctp.THOST_FTDC_VBAT_BankBook
THOST_FTDC_VBAT_BankCard = _pyctp.THOST_FTDC_VBAT_BankCard
THOST_FTDC_VBAT_CreditCard = _pyctp.THOST_FTDC_VBAT_CreditCard
THOST_FTDC_VMS_Natural = _pyctp.THOST_FTDC_VMS_Natural
THOST_FTDC_VMS_Canceled = _pyctp.THOST_FTDC_VMS_Canceled
THOST_FTDC_VAA_NoAvailAbility = _pyctp.THOST_FTDC_VAA_NoAvailAbility
THOST_FTDC_VAA_AvailAbility = _pyctp.THOST_FTDC_VAA_AvailAbility
THOST_FTDC_VAA_Repeal = _pyctp.THOST_FTDC_VAA_Repeal
THOST_FTDC_GEN_Program = _pyctp.THOST_FTDC_GEN_Program
THOST_FTDC_GEN_HandWork = _pyctp.THOST_FTDC_GEN_HandWork
THOST_FTDC_CFMMCKK_REQUEST = _pyctp.THOST_FTDC_CFMMCKK_REQUEST
THOST_FTDC_CFMMCKK_AUTO = _pyctp.THOST_FTDC_CFMMCKK_AUTO
THOST_FTDC_CFMMCKK_MANUAL = _pyctp.THOST_FTDC_CFMMCKK_MANUAL
THOST_FTDC_CFT_IDCard = _pyctp.THOST_FTDC_CFT_IDCard
THOST_FTDC_CFT_Passport = _pyctp.THOST_FTDC_CFT_Passport
THOST_FTDC_CFT_OfficerIDCard = _pyctp.THOST_FTDC_CFT_OfficerIDCard
THOST_FTDC_CFT_SoldierIDCard = _pyctp.THOST_FTDC_CFT_SoldierIDCard
THOST_FTDC_CFT_HomeComingCard = _pyctp.THOST_FTDC_CFT_HomeComingCard
THOST_FTDC_CFT_HouseholdRegister = _pyctp.THOST_FTDC_CFT_HouseholdRegister
THOST_FTDC_CFT_LicenseNo = _pyctp.THOST_FTDC_CFT_LicenseNo
THOST_FTDC_CFT_InstitutionCodeCard = _pyctp.THOST_FTDC_CFT_InstitutionCodeCard
THOST_FTDC_CFT_TempLicenseNo = _pyctp.THOST_FTDC_CFT_TempLicenseNo
THOST_FTDC_CFT_NoEnterpriseLicenseNo = _pyctp.THOST_FTDC_CFT_NoEnterpriseLicenseNo
THOST_FTDC_CFT_OtherCard = _pyctp.THOST_FTDC_CFT_OtherCard
THOST_FTDC_CFT_SuperDepAgree = _pyctp.THOST_FTDC_CFT_SuperDepAgree
THOST_FTDC_FBC_Others = _pyctp.THOST_FTDC_FBC_Others
THOST_FTDC_FBC_TransferDetails = _pyctp.THOST_FTDC_FBC_TransferDetails
THOST_FTDC_FBC_CustAccStatus = _pyctp.THOST_FTDC_FBC_CustAccStatus
THOST_FTDC_FBC_AccountTradeDetails = _pyctp.THOST_FTDC_FBC_AccountTradeDetails
THOST_FTDC_FBC_FutureAccountChangeInfoDetails = _pyctp.THOST_FTDC_FBC_FutureAccountChangeInfoDetails
THOST_FTDC_FBC_CustMoneyDetail = _pyctp.THOST_FTDC_FBC_CustMoneyDetail
THOST_FTDC_FBC_CustCancelAccountInfo = _pyctp.THOST_FTDC_FBC_CustCancelAccountInfo
THOST_FTDC_FBC_CustMoneyResult = _pyctp.THOST_FTDC_FBC_CustMoneyResult
THOST_FTDC_FBC_OthersExceptionResult = _pyctp.THOST_FTDC_FBC_OthersExceptionResult
THOST_FTDC_FBC_CustInterestNetMoneyDetails = _pyctp.THOST_FTDC_FBC_CustInterestNetMoneyDetails
THOST_FTDC_FBC_CustMoneySendAndReceiveDetails = _pyctp.THOST_FTDC_FBC_CustMoneySendAndReceiveDetails
THOST_FTDC_FBC_CorporationMoneyTotal = _pyctp.THOST_FTDC_FBC_CorporationMoneyTotal
THOST_FTDC_FBC_MainbodyMoneyTotal = _pyctp.THOST_FTDC_FBC_MainbodyMoneyTotal
THOST_FTDC_FBC_MainPartMonitorData = _pyctp.THOST_FTDC_FBC_MainPartMonitorData
THOST_FTDC_FBC_PreparationMoney = _pyctp.THOST_FTDC_FBC_PreparationMoney
THOST_FTDC_FBC_BankMoneyMonitorData = _pyctp.THOST_FTDC_FBC_BankMoneyMonitorData
THOST_FTDC_CEC_Exchange = _pyctp.THOST_FTDC_CEC_Exchange
THOST_FTDC_CEC_Cash = _pyctp.THOST_FTDC_CEC_Cash
THOST_FTDC_YNI_Yes = _pyctp.THOST_FTDC_YNI_Yes
THOST_FTDC_YNI_No = _pyctp.THOST_FTDC_YNI_No
THOST_FTDC_BLT_CurrentMoney = _pyctp.THOST_FTDC_BLT_CurrentMoney
THOST_FTDC_BLT_UsableMoney = _pyctp.THOST_FTDC_BLT_UsableMoney
THOST_FTDC_BLT_FetchableMoney = _pyctp.THOST_FTDC_BLT_FetchableMoney
THOST_FTDC_BLT_FreezeMoney = _pyctp.THOST_FTDC_BLT_FreezeMoney
THOST_FTDC_GD_Unknown = _pyctp.THOST_FTDC_GD_Unknown
THOST_FTDC_GD_Male = _pyctp.THOST_FTDC_GD_Male
THOST_FTDC_GD_Female = _pyctp.THOST_FTDC_GD_Female
THOST_FTDC_FPF_BEN = _pyctp.THOST_FTDC_FPF_BEN
THOST_FTDC_FPF_OUR = _pyctp.THOST_FTDC_FPF_OUR
THOST_FTDC_FPF_SHA = _pyctp.THOST_FTDC_FPF_SHA
THOST_FTDC_PWKT_ExchangeKey = _pyctp.THOST_FTDC_PWKT_ExchangeKey
THOST_FTDC_PWKT_PassWordKey = _pyctp.THOST_FTDC_PWKT_PassWordKey
THOST_FTDC_PWKT_MACKey = _pyctp.THOST_FTDC_PWKT_MACKey
THOST_FTDC_PWKT_MessageKey = _pyctp.THOST_FTDC_PWKT_MessageKey
THOST_FTDC_PWT_Query = _pyctp.THOST_FTDC_PWT_Query
THOST_FTDC_PWT_Fetch = _pyctp.THOST_FTDC_PWT_Fetch
THOST_FTDC_PWT_Transfer = _pyctp.THOST_FTDC_PWT_Transfer
THOST_FTDC_PWT_Trade = _pyctp.THOST_FTDC_PWT_Trade
THOST_FTDC_EM_NoEncry = _pyctp.THOST_FTDC_EM_NoEncry
THOST_FTDC_EM_DES = _pyctp.THOST_FTDC_EM_DES
THOST_FTDC_EM_3DES = _pyctp.THOST_FTDC_EM_3DES
THOST_FTDC_BRF_BankNotNeedRepeal = _pyctp.THOST_FTDC_BRF_BankNotNeedRepeal
THOST_FTDC_BRF_BankWaitingRepeal = _pyctp.THOST_FTDC_BRF_BankWaitingRepeal
THOST_FTDC_BRF_BankBeenRepealed = _pyctp.THOST_FTDC_BRF_BankBeenRepealed
THOST_FTDC_BRORF_BrokerNotNeedRepeal = _pyctp.THOST_FTDC_BRORF_BrokerNotNeedRepeal
THOST_FTDC_BRORF_BrokerWaitingRepeal = _pyctp.THOST_FTDC_BRORF_BrokerWaitingRepeal
THOST_FTDC_BRORF_BrokerBeenRepealed = _pyctp.THOST_FTDC_BRORF_BrokerBeenRepealed
THOST_FTDC_TS_Bank = _pyctp.THOST_FTDC_TS_Bank
THOST_FTDC_TS_Future = _pyctp.THOST_FTDC_TS_Future
THOST_FTDC_TS_Store = _pyctp.THOST_FTDC_TS_Store
THOST_FTDC_LF_Yes = _pyctp.THOST_FTDC_LF_Yes
THOST_FTDC_LF_No = _pyctp.THOST_FTDC_LF_No
THOST_FTDC_BAS_Normal = _pyctp.THOST_FTDC_BAS_Normal
THOST_FTDC_BAS_Freeze = _pyctp.THOST_FTDC_BAS_Freeze
THOST_FTDC_BAS_ReportLoss = _pyctp.THOST_FTDC_BAS_ReportLoss
THOST_FTDC_MAS_Normal = _pyctp.THOST_FTDC_MAS_Normal
THOST_FTDC_MAS_Cancel = _pyctp.THOST_FTDC_MAS_Cancel
THOST_FTDC_MSS_Point = _pyctp.THOST_FTDC_MSS_Point
THOST_FTDC_MSS_PrePoint = _pyctp.THOST_FTDC_MSS_PrePoint
THOST_FTDC_MSS_CancelPoint = _pyctp.THOST_FTDC_MSS_CancelPoint
THOST_FTDC_SYT_FutureBankTransfer = _pyctp.THOST_FTDC_SYT_FutureBankTransfer
THOST_FTDC_SYT_StockBankTransfer = _pyctp.THOST_FTDC_SYT_StockBankTransfer
THOST_FTDC_SYT_TheThirdPartStore = _pyctp.THOST_FTDC_SYT_TheThirdPartStore
THOST_FTDC_TEF_NormalProcessing = _pyctp.THOST_FTDC_TEF_NormalProcessing
THOST_FTDC_TEF_Success = _pyctp.THOST_FTDC_TEF_Success
THOST_FTDC_TEF_Failed = _pyctp.THOST_FTDC_TEF_Failed
THOST_FTDC_TEF_Abnormal = _pyctp.THOST_FTDC_TEF_Abnormal
THOST_FTDC_TEF_ManualProcessedForException = _pyctp.THOST_FTDC_TEF_ManualProcessedForException
THOST_FTDC_TEF_CommuFailedNeedManualProcess = _pyctp.THOST_FTDC_TEF_CommuFailedNeedManualProcess
THOST_FTDC_TEF_SysErrorNeedManualProcess = _pyctp.THOST_FTDC_TEF_SysErrorNeedManualProcess
THOST_FTDC_PSS_NotProcess = _pyctp.THOST_FTDC_PSS_NotProcess
THOST_FTDC_PSS_StartProcess = _pyctp.THOST_FTDC_PSS_StartProcess
THOST_FTDC_PSS_Finished = _pyctp.THOST_FTDC_PSS_Finished
THOST_FTDC_CUSTT_Person = _pyctp.THOST_FTDC_CUSTT_Person
THOST_FTDC_CUSTT_Institution = _pyctp.THOST_FTDC_CUSTT_Institution
THOST_FTDC_FBTTD_FromBankToFuture = _pyctp.THOST_FTDC_FBTTD_FromBankToFuture
THOST_FTDC_FBTTD_FromFutureToBank = _pyctp.THOST_FTDC_FBTTD_FromFutureToBank
THOST_FTDC_OOD_Open = _pyctp.THOST_FTDC_OOD_Open
THOST_FTDC_OOD_Destroy = _pyctp.THOST_FTDC_OOD_Destroy
THOST_FTDC_AVAF_Invalid = _pyctp.THOST_FTDC_AVAF_Invalid
THOST_FTDC_AVAF_Valid = _pyctp.THOST_FTDC_AVAF_Valid
THOST_FTDC_AVAF_Repeal = _pyctp.THOST_FTDC_AVAF_Repeal
THOST_FTDC_OT_Bank = _pyctp.THOST_FTDC_OT_Bank
THOST_FTDC_OT_Future = _pyctp.THOST_FTDC_OT_Future
THOST_FTDC_OT_PlateForm = _pyctp.THOST_FTDC_OT_PlateForm
THOST_FTDC_OL_HeadQuarters = _pyctp.THOST_FTDC_OL_HeadQuarters
THOST_FTDC_OL_Branch = _pyctp.THOST_FTDC_OL_Branch
THOST_FTDC_PID_FutureProtocal = _pyctp.THOST_FTDC_PID_FutureProtocal
THOST_FTDC_PID_ICBCProtocal = _pyctp.THOST_FTDC_PID_ICBCProtocal
THOST_FTDC_PID_ABCProtocal = _pyctp.THOST_FTDC_PID_ABCProtocal
THOST_FTDC_PID_CBCProtocal = _pyctp.THOST_FTDC_PID_CBCProtocal
THOST_FTDC_PID_CCBProtocal = _pyctp.THOST_FTDC_PID_CCBProtocal
THOST_FTDC_PID_BOCOMProtocal = _pyctp.THOST_FTDC_PID_BOCOMProtocal
THOST_FTDC_PID_FBTPlateFormProtocal = _pyctp.THOST_FTDC_PID_FBTPlateFormProtocal
THOST_FTDC_CM_ShortConnect = _pyctp.THOST_FTDC_CM_ShortConnect
THOST_FTDC_CM_LongConnect = _pyctp.THOST_FTDC_CM_LongConnect
THOST_FTDC_SRM_ASync = _pyctp.THOST_FTDC_SRM_ASync
THOST_FTDC_SRM_Sync = _pyctp.THOST_FTDC_SRM_Sync
THOST_FTDC_BAT_BankBook = _pyctp.THOST_FTDC_BAT_BankBook
THOST_FTDC_BAT_SavingCard = _pyctp.THOST_FTDC_BAT_SavingCard
THOST_FTDC_BAT_CreditCard = _pyctp.THOST_FTDC_BAT_CreditCard
THOST_FTDC_FAT_BankBook = _pyctp.THOST_FTDC_FAT_BankBook
THOST_FTDC_FAT_SavingCard = _pyctp.THOST_FTDC_FAT_SavingCard
THOST_FTDC_FAT_CreditCard = _pyctp.THOST_FTDC_FAT_CreditCard
THOST_FTDC_OS_Ready = _pyctp.THOST_FTDC_OS_Ready
THOST_FTDC_OS_CheckIn = _pyctp.THOST_FTDC_OS_CheckIn
THOST_FTDC_OS_CheckOut = _pyctp.THOST_FTDC_OS_CheckOut
THOST_FTDC_OS_CheckFileArrived = _pyctp.THOST_FTDC_OS_CheckFileArrived
THOST_FTDC_OS_CheckDetail = _pyctp.THOST_FTDC_OS_CheckDetail
THOST_FTDC_OS_DayEndClean = _pyctp.THOST_FTDC_OS_DayEndClean
THOST_FTDC_OS_Invalid = _pyctp.THOST_FTDC_OS_Invalid
THOST_FTDC_CCBFM_ByAmount = _pyctp.THOST_FTDC_CCBFM_ByAmount
THOST_FTDC_CCBFM_ByMonth = _pyctp.THOST_FTDC_CCBFM_ByMonth
THOST_FTDC_CAPIT_Client = _pyctp.THOST_FTDC_CAPIT_Client
THOST_FTDC_CAPIT_Server = _pyctp.THOST_FTDC_CAPIT_Server
THOST_FTDC_CAPIT_UserApi = _pyctp.THOST_FTDC_CAPIT_UserApi
THOST_FTDC_LS_Connected = _pyctp.THOST_FTDC_LS_Connected
THOST_FTDC_LS_Disconnected = _pyctp.THOST_FTDC_LS_Disconnected
THOST_FTDC_BPWDF_NoCheck = _pyctp.THOST_FTDC_BPWDF_NoCheck
THOST_FTDC_BPWDF_BlankCheck = _pyctp.THOST_FTDC_BPWDF_BlankCheck
THOST_FTDC_BPWDF_EncryptCheck = _pyctp.THOST_FTDC_BPWDF_EncryptCheck
THOST_FTDC_SAT_AccountID = _pyctp.THOST_FTDC_SAT_AccountID
THOST_FTDC_SAT_CardID = _pyctp.THOST_FTDC_SAT_CardID
THOST_FTDC_SAT_SHStockholderID = _pyctp.THOST_FTDC_SAT_SHStockholderID
THOST_FTDC_SAT_SZStockholderID = _pyctp.THOST_FTDC_SAT_SZStockholderID
THOST_FTDC_TRFS_Normal = _pyctp.THOST_FTDC_TRFS_Normal
THOST_FTDC_TRFS_Repealed = _pyctp.THOST_FTDC_TRFS_Repealed
THOST_FTDC_SPTYPE_Broker = _pyctp.THOST_FTDC_SPTYPE_Broker
THOST_FTDC_SPTYPE_Bank = _pyctp.THOST_FTDC_SPTYPE_Bank
THOST_FTDC_REQRSP_Request = _pyctp.THOST_FTDC_REQRSP_Request
THOST_FTDC_REQRSP_Response = _pyctp.THOST_FTDC_REQRSP_Response
THOST_FTDC_FBTUET_SignIn = _pyctp.THOST_FTDC_FBTUET_SignIn
THOST_FTDC_FBTUET_FromBankToFuture = _pyctp.THOST_FTDC_FBTUET_FromBankToFuture
THOST_FTDC_FBTUET_FromFutureToBank = _pyctp.THOST_FTDC_FBTUET_FromFutureToBank
THOST_FTDC_FBTUET_OpenAccount = _pyctp.THOST_FTDC_FBTUET_OpenAccount
THOST_FTDC_FBTUET_CancelAccount = _pyctp.THOST_FTDC_FBTUET_CancelAccount
THOST_FTDC_FBTUET_ChangeAccount = _pyctp.THOST_FTDC_FBTUET_ChangeAccount
THOST_FTDC_FBTUET_RepealFromBankToFuture = _pyctp.THOST_FTDC_FBTUET_RepealFromBankToFuture
THOST_FTDC_FBTUET_RepealFromFutureToBank = _pyctp.THOST_FTDC_FBTUET_RepealFromFutureToBank
THOST_FTDC_FBTUET_QueryBankAccount = _pyctp.THOST_FTDC_FBTUET_QueryBankAccount
THOST_FTDC_FBTUET_QueryFutureAccount = _pyctp.THOST_FTDC_FBTUET_QueryFutureAccount
THOST_FTDC_FBTUET_SignOut = _pyctp.THOST_FTDC_FBTUET_SignOut
THOST_FTDC_FBTUET_SyncKey = _pyctp.THOST_FTDC_FBTUET_SyncKey
THOST_FTDC_FBTUET_ReserveOpenAccount = _pyctp.THOST_FTDC_FBTUET_ReserveOpenAccount
THOST_FTDC_FBTUET_CancelReserveOpenAccount = _pyctp.THOST_FTDC_FBTUET_CancelReserveOpenAccount
THOST_FTDC_FBTUET_ReserveOpenAccountConfirm = _pyctp.THOST_FTDC_FBTUET_ReserveOpenAccountConfirm
THOST_FTDC_FBTUET_Other = _pyctp.THOST_FTDC_FBTUET_Other
THOST_FTDC_DBOP_Insert = _pyctp.THOST_FTDC_DBOP_Insert
THOST_FTDC_DBOP_Update = _pyctp.THOST_FTDC_DBOP_Update
THOST_FTDC_DBOP_Delete = _pyctp.THOST_FTDC_DBOP_Delete
THOST_FTDC_SYNF_Yes = _pyctp.THOST_FTDC_SYNF_Yes
THOST_FTDC_SYNF_No = _pyctp.THOST_FTDC_SYNF_No
THOST_FTDC_SYNT_OneOffSync = _pyctp.THOST_FTDC_SYNT_OneOffSync
THOST_FTDC_SYNT_TimerSync = _pyctp.THOST_FTDC_SYNT_TimerSync
THOST_FTDC_SYNT_TimerFullSync = _pyctp.THOST_FTDC_SYNT_TimerFullSync
THOST_FTDC_FBEDIR_Settlement = _pyctp.THOST_FTDC_FBEDIR_Settlement
THOST_FTDC_FBEDIR_Sale = _pyctp.THOST_FTDC_FBEDIR_Sale
THOST_FTDC_FBERES_Success = _pyctp.THOST_FTDC_FBERES_Success
THOST_FTDC_FBERES_InsufficientBalance = _pyctp.THOST_FTDC_FBERES_InsufficientBalance
THOST_FTDC_FBERES_UnknownTrading = _pyctp.THOST_FTDC_FBERES_UnknownTrading
THOST_FTDC_FBERES_Fail = _pyctp.THOST_FTDC_FBERES_Fail
THOST_FTDC_FBEES_Normal = _pyctp.THOST_FTDC_FBEES_Normal
THOST_FTDC_FBEES_ReExchange = _pyctp.THOST_FTDC_FBEES_ReExchange
THOST_FTDC_FBEFG_DataPackage = _pyctp.THOST_FTDC_FBEFG_DataPackage
THOST_FTDC_FBEFG_File = _pyctp.THOST_FTDC_FBEFG_File
THOST_FTDC_FBEAT_NotTrade = _pyctp.THOST_FTDC_FBEAT_NotTrade
THOST_FTDC_FBEAT_Trade = _pyctp.THOST_FTDC_FBEAT_Trade
THOST_FTDC_FBEUET_SignIn = _pyctp.THOST_FTDC_FBEUET_SignIn
THOST_FTDC_FBEUET_Exchange = _pyctp.THOST_FTDC_FBEUET_Exchange
THOST_FTDC_FBEUET_ReExchange = _pyctp.THOST_FTDC_FBEUET_ReExchange
THOST_FTDC_FBEUET_QueryBankAccount = _pyctp.THOST_FTDC_FBEUET_QueryBankAccount
THOST_FTDC_FBEUET_QueryExchDetial = _pyctp.THOST_FTDC_FBEUET_QueryExchDetial
THOST_FTDC_FBEUET_QueryExchSummary = _pyctp.THOST_FTDC_FBEUET_QueryExchSummary
THOST_FTDC_FBEUET_QueryExchRate = _pyctp.THOST_FTDC_FBEUET_QueryExchRate
THOST_FTDC_FBEUET_CheckBankAccount = _pyctp.THOST_FTDC_FBEUET_CheckBankAccount
THOST_FTDC_FBEUET_SignOut = _pyctp.THOST_FTDC_FBEUET_SignOut
THOST_FTDC_FBEUET_Other = _pyctp.THOST_FTDC_FBEUET_Other
THOST_FTDC_FBERF_UnProcessed = _pyctp.THOST_FTDC_FBERF_UnProcessed
THOST_FTDC_FBERF_WaitSend = _pyctp.THOST_FTDC_FBERF_WaitSend
THOST_FTDC_FBERF_SendSuccess = _pyctp.THOST_FTDC_FBERF_SendSuccess
THOST_FTDC_FBERF_SendFailed = _pyctp.THOST_FTDC_FBERF_SendFailed
THOST_FTDC_FBERF_WaitReSend = _pyctp.THOST_FTDC_FBERF_WaitReSend
THOST_FTDC_NC_NOERROR = _pyctp.THOST_FTDC_NC_NOERROR
THOST_FTDC_NC_Warn = _pyctp.THOST_FTDC_NC_Warn
THOST_FTDC_NC_Call = _pyctp.THOST_FTDC_NC_Call
THOST_FTDC_NC_Force = _pyctp.THOST_FTDC_NC_Force
THOST_FTDC_NC_CHUANCANG = _pyctp.THOST_FTDC_NC_CHUANCANG
THOST_FTDC_NC_Exception = _pyctp.THOST_FTDC_NC_Exception
THOST_FTDC_FCT_Manual = _pyctp.THOST_FTDC_FCT_Manual
THOST_FTDC_FCT_Single = _pyctp.THOST_FTDC_FCT_Single
THOST_FTDC_FCT_Group = _pyctp.THOST_FTDC_FCT_Group
THOST_FTDC_RNM_System = _pyctp.THOST_FTDC_RNM_System
THOST_FTDC_RNM_SMS = _pyctp.THOST_FTDC_RNM_SMS
THOST_FTDC_RNM_EMail = _pyctp.THOST_FTDC_RNM_EMail
THOST_FTDC_RNM_Manual = _pyctp.THOST_FTDC_RNM_Manual
THOST_FTDC_RNS_NotGen = _pyctp.THOST_FTDC_RNS_NotGen
THOST_FTDC_RNS_Generated = _pyctp.THOST_FTDC_RNS_Generated
THOST_FTDC_RNS_SendError = _pyctp.THOST_FTDC_RNS_SendError
THOST_FTDC_RNS_SendOk = _pyctp.THOST_FTDC_RNS_SendOk
THOST_FTDC_RNS_Received = _pyctp.THOST_FTDC_RNS_Received
THOST_FTDC_RNS_Confirmed = _pyctp.THOST_FTDC_RNS_Confirmed
THOST_FTDC_RUE_ExportData = _pyctp.THOST_FTDC_RUE_ExportData
THOST_FTDC_COST_LastPriceAsc = _pyctp.THOST_FTDC_COST_LastPriceAsc
THOST_FTDC_COST_LastPriceDesc = _pyctp.THOST_FTDC_COST_LastPriceDesc
THOST_FTDC_COST_AskPriceAsc = _pyctp.THOST_FTDC_COST_AskPriceAsc
THOST_FTDC_COST_AskPriceDesc = _pyctp.THOST_FTDC_COST_AskPriceDesc
THOST_FTDC_COST_BidPriceAsc = _pyctp.THOST_FTDC_COST_BidPriceAsc
THOST_FTDC_COST_BidPriceDesc = _pyctp.THOST_FTDC_COST_BidPriceDesc
THOST_FTDC_UOAST_NoSend = _pyctp.THOST_FTDC_UOAST_NoSend
THOST_FTDC_UOAST_Sended = _pyctp.THOST_FTDC_UOAST_Sended
THOST_FTDC_UOAST_Generated = _pyctp.THOST_FTDC_UOAST_Generated
THOST_FTDC_UOAST_SendFail = _pyctp.THOST_FTDC_UOAST_SendFail
THOST_FTDC_UOAST_Success = _pyctp.THOST_FTDC_UOAST_Success
THOST_FTDC_UOAST_Fail = _pyctp.THOST_FTDC_UOAST_Fail
THOST_FTDC_UOAST_Cancel = _pyctp.THOST_FTDC_UOAST_Cancel
THOST_FTDC_UOACS_NoApply = _pyctp.THOST_FTDC_UOACS_NoApply
THOST_FTDC_UOACS_Submited = _pyctp.THOST_FTDC_UOACS_Submited
THOST_FTDC_UOACS_Sended = _pyctp.THOST_FTDC_UOACS_Sended
THOST_FTDC_UOACS_Success = _pyctp.THOST_FTDC_UOACS_Success
THOST_FTDC_UOACS_Refuse = _pyctp.THOST_FTDC_UOACS_Refuse
THOST_FTDC_UOACS_Cancel = _pyctp.THOST_FTDC_UOACS_Cancel
THOST_FTDC_QT_Radio = _pyctp.THOST_FTDC_QT_Radio
THOST_FTDC_QT_Option = _pyctp.THOST_FTDC_QT_Option
THOST_FTDC_QT_Blank = _pyctp.THOST_FTDC_QT_Blank
THOST_FTDC_BT_Request = _pyctp.THOST_FTDC_BT_Request
THOST_FTDC_BT_Response = _pyctp.THOST_FTDC_BT_Response
THOST_FTDC_BT_Notice = _pyctp.THOST_FTDC_BT_Notice
THOST_FTDC_CRC_Success = _pyctp.THOST_FTDC_CRC_Success
THOST_FTDC_CRC_Working = _pyctp.THOST_FTDC_CRC_Working
THOST_FTDC_CRC_InfoFail = _pyctp.THOST_FTDC_CRC_InfoFail
THOST_FTDC_CRC_IDCardFail = _pyctp.THOST_FTDC_CRC_IDCardFail
THOST_FTDC_CRC_OtherFail = _pyctp.THOST_FTDC_CRC_OtherFail
THOST_FTDC_CfMMCCT_All = _pyctp.THOST_FTDC_CfMMCCT_All
THOST_FTDC_CfMMCCT_Person = _pyctp.THOST_FTDC_CfMMCCT_Person
THOST_FTDC_CfMMCCT_Company = _pyctp.THOST_FTDC_CfMMCCT_Company
THOST_FTDC_CfMMCCT_Other = _pyctp.THOST_FTDC_CfMMCCT_Other
THOST_FTDC_CfMMCCT_SpecialOrgan = _pyctp.THOST_FTDC_CfMMCCT_SpecialOrgan
THOST_FTDC_CfMMCCT_Asset = _pyctp.THOST_FTDC_CfMMCCT_Asset
THOST_FTDC_EIDT_SHFE = _pyctp.THOST_FTDC_EIDT_SHFE
THOST_FTDC_EIDT_CZCE = _pyctp.THOST_FTDC_EIDT_CZCE
THOST_FTDC_EIDT_DCE = _pyctp.THOST_FTDC_EIDT_DCE
THOST_FTDC_EIDT_CFFEX = _pyctp.THOST_FTDC_EIDT_CFFEX
THOST_FTDC_EIDT_INE = _pyctp.THOST_FTDC_EIDT_INE
THOST_FTDC_ECIDT_Hedge = _pyctp.THOST_FTDC_ECIDT_Hedge
THOST_FTDC_ECIDT_Arbitrage = _pyctp.THOST_FTDC_ECIDT_Arbitrage
THOST_FTDC_ECIDT_Speculation = _pyctp.THOST_FTDC_ECIDT_Speculation
THOST_FTDC_UF_NoUpdate = _pyctp.THOST_FTDC_UF_NoUpdate
THOST_FTDC_UF_Success = _pyctp.THOST_FTDC_UF_Success
THOST_FTDC_UF_Fail = _pyctp.THOST_FTDC_UF_Fail
THOST_FTDC_UF_TCSuccess = _pyctp.THOST_FTDC_UF_TCSuccess
THOST_FTDC_UF_TCFail = _pyctp.THOST_FTDC_UF_TCFail
THOST_FTDC_UF_Cancel = _pyctp.THOST_FTDC_UF_Cancel
THOST_FTDC_AOID_OpenInvestor = _pyctp.THOST_FTDC_AOID_OpenInvestor
THOST_FTDC_AOID_ModifyIDCard = _pyctp.THOST_FTDC_AOID_ModifyIDCard
THOST_FTDC_AOID_ModifyNoIDCard = _pyctp.THOST_FTDC_AOID_ModifyNoIDCard
THOST_FTDC_AOID_ApplyTradingCode = _pyctp.THOST_FTDC_AOID_ApplyTradingCode
THOST_FTDC_AOID_CancelTradingCode = _pyctp.THOST_FTDC_AOID_CancelTradingCode
THOST_FTDC_AOID_CancelInvestor = _pyctp.THOST_FTDC_AOID_CancelInvestor
THOST_FTDC_AOID_FreezeAccount = _pyctp.THOST_FTDC_AOID_FreezeAccount
THOST_FTDC_AOID_ActiveFreezeAccount = _pyctp.THOST_FTDC_AOID_ActiveFreezeAccount
THOST_FTDC_ASID_NoComplete = _pyctp.THOST_FTDC_ASID_NoComplete
THOST_FTDC_ASID_Submited = _pyctp.THOST_FTDC_ASID_Submited
THOST_FTDC_ASID_Checked = _pyctp.THOST_FTDC_ASID_Checked
THOST_FTDC_ASID_Refused = _pyctp.THOST_FTDC_ASID_Refused
THOST_FTDC_ASID_Deleted = _pyctp.THOST_FTDC_ASID_Deleted
THOST_FTDC_UOASM_ByAPI = _pyctp.THOST_FTDC_UOASM_ByAPI
THOST_FTDC_UOASM_ByFile = _pyctp.THOST_FTDC_UOASM_ByFile
THOST_FTDC_EvM_ADD = _pyctp.THOST_FTDC_EvM_ADD
THOST_FTDC_EvM_UPDATE = _pyctp.THOST_FTDC_EvM_UPDATE
THOST_FTDC_EvM_DELETE = _pyctp.THOST_FTDC_EvM_DELETE
THOST_FTDC_EvM_CHECK = _pyctp.THOST_FTDC_EvM_CHECK
THOST_FTDC_EvM_COPY = _pyctp.THOST_FTDC_EvM_COPY
THOST_FTDC_EvM_CANCEL = _pyctp.THOST_FTDC_EvM_CANCEL
THOST_FTDC_EvM_Reverse = _pyctp.THOST_FTDC_EvM_Reverse
THOST_FTDC_UOAA_ASR = _pyctp.THOST_FTDC_UOAA_ASR
THOST_FTDC_UOAA_ASNR = _pyctp.THOST_FTDC_UOAA_ASNR
THOST_FTDC_UOAA_NSAR = _pyctp.THOST_FTDC_UOAA_NSAR
THOST_FTDC_UOAA_NSR = _pyctp.THOST_FTDC_UOAA_NSR
THOST_FTDC_EvM_InvestorGroupFlow = _pyctp.THOST_FTDC_EvM_InvestorGroupFlow
THOST_FTDC_EvM_InvestorRate = _pyctp.THOST_FTDC_EvM_InvestorRate
THOST_FTDC_EvM_InvestorCommRateModel = _pyctp.THOST_FTDC_EvM_InvestorCommRateModel
THOST_FTDC_CL_Zero = _pyctp.THOST_FTDC_CL_Zero
THOST_FTDC_CL_One = _pyctp.THOST_FTDC_CL_One
THOST_FTDC_CL_Two = _pyctp.THOST_FTDC_CL_Two
THOST_FTDC_CHS_Init = _pyctp.THOST_FTDC_CHS_Init
THOST_FTDC_CHS_Checking = _pyctp.THOST_FTDC_CHS_Checking
THOST_FTDC_CHS_Checked = _pyctp.THOST_FTDC_CHS_Checked
THOST_FTDC_CHS_Refuse = _pyctp.THOST_FTDC_CHS_Refuse
THOST_FTDC_CHS_Cancel = _pyctp.THOST_FTDC_CHS_Cancel
THOST_FTDC_CHU_Unused = _pyctp.THOST_FTDC_CHU_Unused
THOST_FTDC_CHU_Used = _pyctp.THOST_FTDC_CHU_Used
THOST_FTDC_CHU_Fail = _pyctp.THOST_FTDC_CHU_Fail
THOST_FTDC_BAO_ByAccProperty = _pyctp.THOST_FTDC_BAO_ByAccProperty
THOST_FTDC_BAO_ByFBTransfer = _pyctp.THOST_FTDC_BAO_ByFBTransfer
THOST_FTDC_MBTS_ByInstrument = _pyctp.THOST_FTDC_MBTS_ByInstrument
THOST_FTDC_MBTS_ByDayInsPrc = _pyctp.THOST_FTDC_MBTS_ByDayInsPrc
THOST_FTDC_MBTS_ByDayIns = _pyctp.THOST_FTDC_MBTS_ByDayIns
THOST_FTDC_OTP_NONE = _pyctp.THOST_FTDC_OTP_NONE
THOST_FTDC_OTP_TOTP = _pyctp.THOST_FTDC_OTP_TOTP
THOST_FTDC_OTPS_Unused = _pyctp.THOST_FTDC_OTPS_Unused
THOST_FTDC_OTPS_Used = _pyctp.THOST_FTDC_OTPS_Used
THOST_FTDC_OTPS_Disuse = _pyctp.THOST_FTDC_OTPS_Disuse
THOST_FTDC_BUT_Investor = _pyctp.THOST_FTDC_BUT_Investor
THOST_FTDC_BUT_BrokerUser = _pyctp.THOST_FTDC_BUT_BrokerUser
THOST_FTDC_FUTT_Commodity = _pyctp.THOST_FTDC_FUTT_Commodity
THOST_FTDC_FUTT_Financial = _pyctp.THOST_FTDC_FUTT_Financial
THOST_FTDC_FET_Restriction = _pyctp.THOST_FTDC_FET_Restriction
THOST_FTDC_FET_TodayRestriction = _pyctp.THOST_FTDC_FET_TodayRestriction
THOST_FTDC_FET_Transfer = _pyctp.THOST_FTDC_FET_Transfer
THOST_FTDC_FET_Credit = _pyctp.THOST_FTDC_FET_Credit
THOST_FTDC_FET_InvestorWithdrawAlm = _pyctp.THOST_FTDC_FET_InvestorWithdrawAlm
THOST_FTDC_FET_BankRestriction = _pyctp.THOST_FTDC_FET_BankRestriction
THOST_FTDC_FET_Accountregister = _pyctp.THOST_FTDC_FET_Accountregister
THOST_FTDC_FET_ExchangeFundIO = _pyctp.THOST_FTDC_FET_ExchangeFundIO
THOST_FTDC_FET_InvestorFundIO = _pyctp.THOST_FTDC_FET_InvestorFundIO
THOST_FTDC_AST_FBTransfer = _pyctp.THOST_FTDC_AST_FBTransfer
THOST_FTDC_AST_ManualEntry = _pyctp.THOST_FTDC_AST_ManualEntry
THOST_FTDC_CST_UnifyAccount = _pyctp.THOST_FTDC_CST_UnifyAccount
THOST_FTDC_CST_ManualEntry = _pyctp.THOST_FTDC_CST_ManualEntry
THOST_FTDC_UR_All = _pyctp.THOST_FTDC_UR_All
THOST_FTDC_UR_Single = _pyctp.THOST_FTDC_UR_Single
THOST_FTDC_BG_Investor = _pyctp.THOST_FTDC_BG_Investor
THOST_FTDC_BG_Group = _pyctp.THOST_FTDC_BG_Group
THOST_FTDC_TSSM_Instrument = _pyctp.THOST_FTDC_TSSM_Instrument
THOST_FTDC_TSSM_Product = _pyctp.THOST_FTDC_TSSM_Product
THOST_FTDC_TSSM_Exchange = _pyctp.THOST_FTDC_TSSM_Exchange
THOST_FTDC_ESM_Relative = _pyctp.THOST_FTDC_ESM_Relative
THOST_FTDC_ESM_Typical = _pyctp.THOST_FTDC_ESM_Typical
THOST_FTDC_RIR_All = _pyctp.THOST_FTDC_RIR_All
THOST_FTDC_RIR_Model = _pyctp.THOST_FTDC_RIR_Model
THOST_FTDC_RIR_Single = _pyctp.THOST_FTDC_RIR_Single
THOST_FTDC_SDS_Initialize = _pyctp.THOST_FTDC_SDS_Initialize
THOST_FTDC_SDS_Settlementing = _pyctp.THOST_FTDC_SDS_Settlementing
THOST_FTDC_SDS_Settlemented = _pyctp.THOST_FTDC_SDS_Settlemented
THOST_FTDC_TSRC_NORMAL = _pyctp.THOST_FTDC_TSRC_NORMAL
THOST_FTDC_TSRC_QUERY = _pyctp.THOST_FTDC_TSRC_QUERY
THOST_FTDC_FSM_Product = _pyctp.THOST_FTDC_FSM_Product
THOST_FTDC_FSM_Exchange = _pyctp.THOST_FTDC_FSM_Exchange
THOST_FTDC_FSM_All = _pyctp.THOST_FTDC_FSM_All
THOST_FTDC_BIR_Property = _pyctp.THOST_FTDC_BIR_Property
THOST_FTDC_BIR_All = _pyctp.THOST_FTDC_BIR_All
THOST_FTDC_PIR_All = _pyctp.THOST_FTDC_PIR_All
THOST_FTDC_PIR_Property = _pyctp.THOST_FTDC_PIR_Property
THOST_FTDC_PIR_Single = _pyctp.THOST_FTDC_PIR_Single
THOST_FTDC_FIS_NoCreate = _pyctp.THOST_FTDC_FIS_NoCreate
THOST_FTDC_FIS_Created = _pyctp.THOST_FTDC_FIS_Created
THOST_FTDC_FIS_Failed = _pyctp.THOST_FTDC_FIS_Failed
THOST_FTDC_FGS_FileTransmit = _pyctp.THOST_FTDC_FGS_FileTransmit
THOST_FTDC_FGS_FileGen = _pyctp.THOST_FTDC_FGS_FileGen
THOST_FTDC_SoM_Add = _pyctp.THOST_FTDC_SoM_Add
THOST_FTDC_SoM_Update = _pyctp.THOST_FTDC_SoM_Update
THOST_FTDC_SoM_Delete = _pyctp.THOST_FTDC_SoM_Delete
THOST_FTDC_SoM_Copy = _pyctp.THOST_FTDC_SoM_Copy
THOST_FTDC_SoM_AcTive = _pyctp.THOST_FTDC_SoM_AcTive
THOST_FTDC_SoM_CanCel = _pyctp.THOST_FTDC_SoM_CanCel
THOST_FTDC_SoM_ReSet = _pyctp.THOST_FTDC_SoM_ReSet
THOST_FTDC_SoT_UpdatePassword = _pyctp.THOST_FTDC_SoT_UpdatePassword
THOST_FTDC_SoT_UserDepartment = _pyctp.THOST_FTDC_SoT_UserDepartment
THOST_FTDC_SoT_RoleManager = _pyctp.THOST_FTDC_SoT_RoleManager
THOST_FTDC_SoT_RoleFunction = _pyctp.THOST_FTDC_SoT_RoleFunction
THOST_FTDC_SoT_BaseParam = _pyctp.THOST_FTDC_SoT_BaseParam
THOST_FTDC_SoT_SetUserID = _pyctp.THOST_FTDC_SoT_SetUserID
THOST_FTDC_SoT_SetUserRole = _pyctp.THOST_FTDC_SoT_SetUserRole
THOST_FTDC_SoT_UserIpRestriction = _pyctp.THOST_FTDC_SoT_UserIpRestriction
THOST_FTDC_SoT_DepartmentManager = _pyctp.THOST_FTDC_SoT_DepartmentManager
THOST_FTDC_SoT_DepartmentCopy = _pyctp.THOST_FTDC_SoT_DepartmentCopy
THOST_FTDC_SoT_Tradingcode = _pyctp.THOST_FTDC_SoT_Tradingcode
THOST_FTDC_SoT_InvestorStatus = _pyctp.THOST_FTDC_SoT_InvestorStatus
THOST_FTDC_SoT_InvestorAuthority = _pyctp.THOST_FTDC_SoT_InvestorAuthority
THOST_FTDC_SoT_PropertySet = _pyctp.THOST_FTDC_SoT_PropertySet
THOST_FTDC_SoT_ReSetInvestorPasswd = _pyctp.THOST_FTDC_SoT_ReSetInvestorPasswd
THOST_FTDC_SoT_InvestorPersonalityInfo = _pyctp.THOST_FTDC_SoT_InvestorPersonalityInfo
THOST_FTDC_CSRCQ_Current = _pyctp.THOST_FTDC_CSRCQ_Current
THOST_FTDC_CSRCQ_History = _pyctp.THOST_FTDC_CSRCQ_History
THOST_FTDC_FRS_Normal = _pyctp.THOST_FTDC_FRS_Normal
THOST_FTDC_FRS_Freeze = _pyctp.THOST_FTDC_FRS_Freeze
THOST_FTDC_STST_Standard = _pyctp.THOST_FTDC_STST_Standard
THOST_FTDC_STST_NonStandard = _pyctp.THOST_FTDC_STST_NonStandard
THOST_FTDC_RPT_Freeze = _pyctp.THOST_FTDC_RPT_Freeze
THOST_FTDC_RPT_FreezeActive = _pyctp.THOST_FTDC_RPT_FreezeActive
THOST_FTDC_RPT_OpenLimit = _pyctp.THOST_FTDC_RPT_OpenLimit
THOST_FTDC_RPT_RelieveOpenLimit = _pyctp.THOST_FTDC_RPT_RelieveOpenLimit
THOST_FTDC_AMLDS_Normal = _pyctp.THOST_FTDC_AMLDS_Normal
THOST_FTDC_AMLDS_Deleted = _pyctp.THOST_FTDC_AMLDS_Deleted
THOST_FTDC_AMLCHS_Init = _pyctp.THOST_FTDC_AMLCHS_Init
THOST_FTDC_AMLCHS_Checking = _pyctp.THOST_FTDC_AMLCHS_Checking
THOST_FTDC_AMLCHS_Checked = _pyctp.THOST_FTDC_AMLCHS_Checked
THOST_FTDC_AMLCHS_RefuseReport = _pyctp.THOST_FTDC_AMLCHS_RefuseReport
THOST_FTDC_AMLDT_DrawDay = _pyctp.THOST_FTDC_AMLDT_DrawDay
THOST_FTDC_AMLDT_TouchDay = _pyctp.THOST_FTDC_AMLDT_TouchDay
THOST_FTDC_AMLCL_CheckLevel0 = _pyctp.THOST_FTDC_AMLCL_CheckLevel0
THOST_FTDC_AMLCL_CheckLevel1 = _pyctp.THOST_FTDC_AMLCL_CheckLevel1
THOST_FTDC_AMLCL_CheckLevel2 = _pyctp.THOST_FTDC_AMLCL_CheckLevel2
THOST_FTDC_AMLCL_CheckLevel3 = _pyctp.THOST_FTDC_AMLCL_CheckLevel3
THOST_FTDC_EFT_CSV = _pyctp.THOST_FTDC_EFT_CSV
THOST_FTDC_EFT_EXCEL = _pyctp.THOST_FTDC_EFT_EXCEL
THOST_FTDC_EFT_DBF = _pyctp.THOST_FTDC_EFT_DBF
THOST_FTDC_SMT_Before = _pyctp.THOST_FTDC_SMT_Before
THOST_FTDC_SMT_Settlement = _pyctp.THOST_FTDC_SMT_Settlement
THOST_FTDC_SMT_After = _pyctp.THOST_FTDC_SMT_After
THOST_FTDC_SMT_Settlemented = _pyctp.THOST_FTDC_SMT_Settlemented
THOST_FTDC_SML_Must = _pyctp.THOST_FTDC_SML_Must
THOST_FTDC_SML_Alarm = _pyctp.THOST_FTDC_SML_Alarm
THOST_FTDC_SML_Prompt = _pyctp.THOST_FTDC_SML_Prompt
THOST_FTDC_SML_Ignore = _pyctp.THOST_FTDC_SML_Ignore
THOST_FTDC_SMG_Exhcange = _pyctp.THOST_FTDC_SMG_Exhcange
THOST_FTDC_SMG_ASP = _pyctp.THOST_FTDC_SMG_ASP
THOST_FTDC_SMG_CSRC = _pyctp.THOST_FTDC_SMG_CSRC
THOST_FTDC_LUT_Repeatable = _pyctp.THOST_FTDC_LUT_Repeatable
THOST_FTDC_LUT_Unrepeatable = _pyctp.THOST_FTDC_LUT_Unrepeatable
THOST_FTDC_DAR_Settle = _pyctp.THOST_FTDC_DAR_Settle
THOST_FTDC_DAR_Exchange = _pyctp.THOST_FTDC_DAR_Exchange
THOST_FTDC_DAR_CSRC = _pyctp.THOST_FTDC_DAR_CSRC
THOST_FTDC_MGT_ExchMarginRate = _pyctp.THOST_FTDC_MGT_ExchMarginRate
THOST_FTDC_MGT_InstrMarginRate = _pyctp.THOST_FTDC_MGT_InstrMarginRate
THOST_FTDC_MGT_InstrMarginRateTrade = _pyctp.THOST_FTDC_MGT_InstrMarginRateTrade
THOST_FTDC_ACT_Intraday = _pyctp.THOST_FTDC_ACT_Intraday
THOST_FTDC_ACT_Long = _pyctp.THOST_FTDC_ACT_Long
THOST_FTDC_MRT_Exchange = _pyctp.THOST_FTDC_MRT_Exchange
THOST_FTDC_MRT_Investor = _pyctp.THOST_FTDC_MRT_Investor
THOST_FTDC_MRT_InvestorTrade = _pyctp.THOST_FTDC_MRT_InvestorTrade
THOST_FTDC_BUS_UnBak = _pyctp.THOST_FTDC_BUS_UnBak
THOST_FTDC_BUS_BakUp = _pyctp.THOST_FTDC_BUS_BakUp
THOST_FTDC_BUS_BakUped = _pyctp.THOST_FTDC_BUS_BakUped
THOST_FTDC_BUS_BakFail = _pyctp.THOST_FTDC_BUS_BakFail
THOST_FTDC_SIS_UnInitialize = _pyctp.THOST_FTDC_SIS_UnInitialize
THOST_FTDC_SIS_Initialize = _pyctp.THOST_FTDC_SIS_Initialize
THOST_FTDC_SIS_Initialized = _pyctp.THOST_FTDC_SIS_Initialized
THOST_FTDC_SRS_NoCreate = _pyctp.THOST_FTDC_SRS_NoCreate
THOST_FTDC_SRS_Create = _pyctp.THOST_FTDC_SRS_Create
THOST_FTDC_SRS_Created = _pyctp.THOST_FTDC_SRS_Created
THOST_FTDC_SRS_CreateFail = _pyctp.THOST_FTDC_SRS_CreateFail
THOST_FTDC_SSS_UnSaveData = _pyctp.THOST_FTDC_SSS_UnSaveData
THOST_FTDC_SSS_SaveDatad = _pyctp.THOST_FTDC_SSS_SaveDatad
THOST_FTDC_SAS_UnArchived = _pyctp.THOST_FTDC_SAS_UnArchived
THOST_FTDC_SAS_Archiving = _pyctp.THOST_FTDC_SAS_Archiving
THOST_FTDC_SAS_Archived = _pyctp.THOST_FTDC_SAS_Archived
THOST_FTDC_SAS_ArchiveFail = _pyctp.THOST_FTDC_SAS_ArchiveFail
THOST_FTDC_CTPT_Unkown = _pyctp.THOST_FTDC_CTPT_Unkown
THOST_FTDC_CTPT_MainCenter = _pyctp.THOST_FTDC_CTPT_MainCenter
THOST_FTDC_CTPT_BackUp = _pyctp.THOST_FTDC_CTPT_BackUp
THOST_FTDC_CDT_Normal = _pyctp.THOST_FTDC_CDT_Normal
THOST_FTDC_CDT_SpecFirst = _pyctp.THOST_FTDC_CDT_SpecFirst
THOST_FTDC_MFUR_None = _pyctp.THOST_FTDC_MFUR_None
THOST_FTDC_MFUR_Margin = _pyctp.THOST_FTDC_MFUR_Margin
THOST_FTDC_MFUR_All = _pyctp.THOST_FTDC_MFUR_All
THOST_FTDC_SPT_CzceHedge = _pyctp.THOST_FTDC_SPT_CzceHedge
THOST_FTDC_SPT_IneForeignCurrency = _pyctp.THOST_FTDC_SPT_IneForeignCurrency
THOST_FTDC_SPT_DceOpenClose = _pyctp.THOST_FTDC_SPT_DceOpenClose
THOST_FTDC_FMT_Mortgage = _pyctp.THOST_FTDC_FMT_Mortgage
THOST_FTDC_FMT_Redemption = _pyctp.THOST_FTDC_FMT_Redemption
THOST_FTDC_ASPI_BaseMargin = _pyctp.THOST_FTDC_ASPI_BaseMargin
THOST_FTDC_ASPI_LowestInterest = _pyctp.THOST_FTDC_ASPI_LowestInterest
THOST_FTDC_FMD_In = _pyctp.THOST_FTDC_FMD_In
THOST_FTDC_FMD_Out = _pyctp.THOST_FTDC_FMD_Out
THOST_FTDC_BT_Profit = _pyctp.THOST_FTDC_BT_Profit
THOST_FTDC_BT_Loss = _pyctp.THOST_FTDC_BT_Loss
THOST_FTDC_BT_Other = _pyctp.THOST_FTDC_BT_Other
THOST_FTDC_SST_Manual = _pyctp.THOST_FTDC_SST_Manual
THOST_FTDC_SST_Automatic = _pyctp.THOST_FTDC_SST_Automatic
THOST_FTDC_CED_Settlement = _pyctp.THOST_FTDC_CED_Settlement
THOST_FTDC_CED_Sale = _pyctp.THOST_FTDC_CED_Sale
THOST_FTDC_CSS_Entry = _pyctp.THOST_FTDC_CSS_Entry
THOST_FTDC_CSS_Approve = _pyctp.THOST_FTDC_CSS_Approve
THOST_FTDC_CSS_Refuse = _pyctp.THOST_FTDC_CSS_Refuse
THOST_FTDC_CSS_Revoke = _pyctp.THOST_FTDC_CSS_Revoke
THOST_FTDC_CSS_Send = _pyctp.THOST_FTDC_CSS_Send
THOST_FTDC_CSS_Success = _pyctp.THOST_FTDC_CSS_Success
THOST_FTDC_CSS_Failure = _pyctp.THOST_FTDC_CSS_Failure
THOST_FTDC_REQF_NoSend = _pyctp.THOST_FTDC_REQF_NoSend
THOST_FTDC_REQF_SendSuccess = _pyctp.THOST_FTDC_REQF_SendSuccess
THOST_FTDC_REQF_SendFailed = _pyctp.THOST_FTDC_REQF_SendFailed
THOST_FTDC_REQF_WaitReSend = _pyctp.THOST_FTDC_REQF_WaitReSend
THOST_FTDC_RESF_Success = _pyctp.THOST_FTDC_RESF_Success
THOST_FTDC_RESF_InsuffiCient = _pyctp.THOST_FTDC_RESF_InsuffiCient
THOST_FTDC_RESF_UnKnown = _pyctp.THOST_FTDC_RESF_UnKnown
THOST_FTDC_EXS_Before = _pyctp.THOST_FTDC_EXS_Before
THOST_FTDC_EXS_After = _pyctp.THOST_FTDC_EXS_After
THOST_FTDC_CR_Domestic = _pyctp.THOST_FTDC_CR_Domestic
THOST_FTDC_CR_GMT = _pyctp.THOST_FTDC_CR_GMT
THOST_FTDC_CR_Foreign = _pyctp.THOST_FTDC_CR_Foreign
THOST_FTDC_HB_No = _pyctp.THOST_FTDC_HB_No
THOST_FTDC_HB_Yes = _pyctp.THOST_FTDC_HB_Yes
THOST_FTDC_SM_Normal = _pyctp.THOST_FTDC_SM_Normal
THOST_FTDC_SM_Emerge = _pyctp.THOST_FTDC_SM_Emerge
THOST_FTDC_SM_Restore = _pyctp.THOST_FTDC_SM_Restore
THOST_FTDC_TPT_Full = _pyctp.THOST_FTDC_TPT_Full
THOST_FTDC_TPT_Increment = _pyctp.THOST_FTDC_TPT_Increment
THOST_FTDC_TPT_BackUp = _pyctp.THOST_FTDC_TPT_BackUp
THOST_FTDC_LM_Trade = _pyctp.THOST_FTDC_LM_Trade
THOST_FTDC_LM_Transfer = _pyctp.THOST_FTDC_LM_Transfer
THOST_FTDC_CPT_Instrument = _pyctp.THOST_FTDC_CPT_Instrument
THOST_FTDC_CPT_Margin = _pyctp.THOST_FTDC_CPT_Margin
THOST_FTDC_HT_Yes = _pyctp.THOST_FTDC_HT_Yes
THOST_FTDC_HT_No = _pyctp.THOST_FTDC_HT_No
THOST_FTDC_AMT_Bank = _pyctp.THOST_FTDC_AMT_Bank
THOST_FTDC_AMT_Securities = _pyctp.THOST_FTDC_AMT_Securities
THOST_FTDC_AMT_Fund = _pyctp.THOST_FTDC_AMT_Fund
THOST_FTDC_AMT_Insurance = _pyctp.THOST_FTDC_AMT_Insurance
THOST_FTDC_AMT_Trust = _pyctp.THOST_FTDC_AMT_Trust
THOST_FTDC_AMT_Other = _pyctp.THOST_FTDC_AMT_Other
THOST_FTDC_CFIOT_FundIO = _pyctp.THOST_FTDC_CFIOT_FundIO
THOST_FTDC_CFIOT_SwapCurrency = _pyctp.THOST_FTDC_CFIOT_SwapCurrency
THOST_FTDC_CAT_Futures = _pyctp.THOST_FTDC_CAT_Futures
THOST_FTDC_CAT_AssetmgrFuture = _pyctp.THOST_FTDC_CAT_AssetmgrFuture
THOST_FTDC_CAT_AssetmgrTrustee = _pyctp.THOST_FTDC_CAT_AssetmgrTrustee
THOST_FTDC_CAT_AssetmgrTransfer = _pyctp.THOST_FTDC_CAT_AssetmgrTransfer
THOST_FTDC_LT_Chinese = _pyctp.THOST_FTDC_LT_Chinese
THOST_FTDC_LT_English = _pyctp.THOST_FTDC_LT_English
THOST_FTDC_AMCT_Person = _pyctp.THOST_FTDC_AMCT_Person
THOST_FTDC_AMCT_Organ = _pyctp.THOST_FTDC_AMCT_Organ
THOST_FTDC_AMCT_SpecialOrgan = _pyctp.THOST_FTDC_AMCT_SpecialOrgan
THOST_FTDC_ASST_Futures = _pyctp.THOST_FTDC_ASST_Futures
THOST_FTDC_ASST_SpecialOrgan = _pyctp.THOST_FTDC_ASST_SpecialOrgan
THOST_FTDC_CIT_HasExch = _pyctp.THOST_FTDC_CIT_HasExch
THOST_FTDC_CIT_HasATP = _pyctp.THOST_FTDC_CIT_HasATP
THOST_FTDC_CIT_HasDiff = _pyctp.THOST_FTDC_CIT_HasDiff
THOST_FTDC_DT_HandDeliv = _pyctp.THOST_FTDC_DT_HandDeliv
THOST_FTDC_DT_PersonDeliv = _pyctp.THOST_FTDC_DT_PersonDeliv
THOST_FTDC_MMSA_NO = _pyctp.THOST_FTDC_MMSA_NO
THOST_FTDC_MMSA_YES = _pyctp.THOST_FTDC_MMSA_YES
THOST_FTDC_CACT_Person = _pyctp.THOST_FTDC_CACT_Person
THOST_FTDC_CACT_Company = _pyctp.THOST_FTDC_CACT_Company
THOST_FTDC_CACT_Other = _pyctp.THOST_FTDC_CACT_Other
THOST_FTDC_UOAAT_Futures = _pyctp.THOST_FTDC_UOAAT_Futures
THOST_FTDC_UOAAT_SpecialOrgan = _pyctp.THOST_FTDC_UOAAT_SpecialOrgan
THOST_FTDC_DEN_Buy = _pyctp.THOST_FTDC_DEN_Buy
THOST_FTDC_DEN_Sell = _pyctp.THOST_FTDC_DEN_Sell
THOST_FTDC_OFEN_Open = _pyctp.THOST_FTDC_OFEN_Open
THOST_FTDC_OFEN_Close = _pyctp.THOST_FTDC_OFEN_Close
THOST_FTDC_OFEN_ForceClose = _pyctp.THOST_FTDC_OFEN_ForceClose
THOST_FTDC_OFEN_CloseToday = _pyctp.THOST_FTDC_OFEN_CloseToday
THOST_FTDC_OFEN_CloseYesterday = _pyctp.THOST_FTDC_OFEN_CloseYesterday
THOST_FTDC_OFEN_ForceOff = _pyctp.THOST_FTDC_OFEN_ForceOff
THOST_FTDC_OFEN_LocalForceClose = _pyctp.THOST_FTDC_OFEN_LocalForceClose
THOST_FTDC_HFEN_Speculation = _pyctp.THOST_FTDC_HFEN_Speculation
THOST_FTDC_HFEN_Arbitrage = _pyctp.THOST_FTDC_HFEN_Arbitrage
THOST_FTDC_HFEN_Hedge = _pyctp.THOST_FTDC_HFEN_Hedge
THOST_FTDC_FIOTEN_FundIO = _pyctp.THOST_FTDC_FIOTEN_FundIO
THOST_FTDC_FIOTEN_Transfer = _pyctp.THOST_FTDC_FIOTEN_Transfer
THOST_FTDC_FIOTEN_SwapCurrency = _pyctp.THOST_FTDC_FIOTEN_SwapCurrency
THOST_FTDC_FTEN_Deposite = _pyctp.THOST_FTDC_FTEN_Deposite
THOST_FTDC_FTEN_ItemFund = _pyctp.THOST_FTDC_FTEN_ItemFund
THOST_FTDC_FTEN_Company = _pyctp.THOST_FTDC_FTEN_Company
THOST_FTDC_FTEN_InnerTransfer = _pyctp.THOST_FTDC_FTEN_InnerTransfer
THOST_FTDC_FDEN_In = _pyctp.THOST_FTDC_FDEN_In
THOST_FTDC_FDEN_Out = _pyctp.THOST_FTDC_FDEN_Out
THOST_FTDC_FMDEN_In = _pyctp.THOST_FTDC_FMDEN_In
THOST_FTDC_FMDEN_Out = _pyctp.THOST_FTDC_FMDEN_Out
THOST_FTDC_CP_CallOptions = _pyctp.THOST_FTDC_CP_CallOptions
THOST_FTDC_CP_PutOptions = _pyctp.THOST_FTDC_CP_PutOptions
THOST_FTDC_STM_Continental = _pyctp.THOST_FTDC_STM_Continental
THOST_FTDC_STM_American = _pyctp.THOST_FTDC_STM_American
THOST_FTDC_STM_Bermuda = _pyctp.THOST_FTDC_STM_Bermuda
THOST_FTDC_STT_Hedge = _pyctp.THOST_FTDC_STT_Hedge
THOST_FTDC_STT_Match = _pyctp.THOST_FTDC_STT_Match
THOST_FTDC_APPT_NotStrikeNum = _pyctp.THOST_FTDC_APPT_NotStrikeNum
THOST_FTDC_GUDS_Gen = _pyctp.THOST_FTDC_GUDS_Gen
THOST_FTDC_GUDS_Hand = _pyctp.THOST_FTDC_GUDS_Hand
THOST_FTDC_OER_NoExec = _pyctp.THOST_FTDC_OER_NoExec
THOST_FTDC_OER_Canceled = _pyctp.THOST_FTDC_OER_Canceled
THOST_FTDC_OER_OK = _pyctp.THOST_FTDC_OER_OK
THOST_FTDC_OER_NoPosition = _pyctp.THOST_FTDC_OER_NoPosition
THOST_FTDC_OER_NoDeposit = _pyctp.THOST_FTDC_OER_NoDeposit
THOST_FTDC_OER_NoParticipant = _pyctp.THOST_FTDC_OER_NoParticipant
THOST_FTDC_OER_NoClient = _pyctp.THOST_FTDC_OER_NoClient
THOST_FTDC_OER_NoInstrument = _pyctp.THOST_FTDC_OER_NoInstrument
THOST_FTDC_OER_NoRight = _pyctp.THOST_FTDC_OER_NoRight
THOST_FTDC_OER_InvalidVolume = _pyctp.THOST_FTDC_OER_InvalidVolume
THOST_FTDC_OER_NoEnoughHistoryTrade = _pyctp.THOST_FTDC_OER_NoEnoughHistoryTrade
THOST_FTDC_OER_Unknown = _pyctp.THOST_FTDC_OER_Unknown
THOST_FTDC_COMBT_Future = _pyctp.THOST_FTDC_COMBT_Future
THOST_FTDC_COMBT_BUL = _pyctp.THOST_FTDC_COMBT_BUL
THOST_FTDC_COMBT_BER = _pyctp.THOST_FTDC_COMBT_BER
THOST_FTDC_COMBT_STD = _pyctp.THOST_FTDC_COMBT_STD
THOST_FTDC_COMBT_STG = _pyctp.THOST_FTDC_COMBT_STG
THOST_FTDC_COMBT_PRT = _pyctp.THOST_FTDC_COMBT_PRT
THOST_FTDC_COMBT_CLD = _pyctp.THOST_FTDC_COMBT_CLD
THOST_FTDC_ORPT_PreSettlementPrice = _pyctp.THOST_FTDC_ORPT_PreSettlementPrice
THOST_FTDC_ORPT_OpenPrice = _pyctp.THOST_FTDC_ORPT_OpenPrice
THOST_FTDC_BLAG_Default = _pyctp.THOST_FTDC_BLAG_Default
THOST_FTDC_BLAG_IncludeOptValLost = _pyctp.THOST_FTDC_BLAG_IncludeOptValLost
THOST_FTDC_ACTP_Exec = _pyctp.THOST_FTDC_ACTP_Exec
THOST_FTDC_ACTP_Abandon = _pyctp.THOST_FTDC_ACTP_Abandon
THOST_FTDC_FQST_Submitted = _pyctp.THOST_FTDC_FQST_Submitted
THOST_FTDC_FQST_Accepted = _pyctp.THOST_FTDC_FQST_Accepted
THOST_FTDC_FQST_Rejected = _pyctp.THOST_FTDC_FQST_Rejected
THOST_FTDC_VM_Absolute = _pyctp.THOST_FTDC_VM_Absolute
THOST_FTDC_VM_Ratio = _pyctp.THOST_FTDC_VM_Ratio
THOST_FTDC_EOPF_Reserve = _pyctp.THOST_FTDC_EOPF_Reserve
THOST_FTDC_EOPF_UnReserve = _pyctp.THOST_FTDC_EOPF_UnReserve
THOST_FTDC_EOCF_AutoClose = _pyctp.THOST_FTDC_EOCF_AutoClose
THOST_FTDC_EOCF_NotToClose = _pyctp.THOST_FTDC_EOCF_NotToClose
THOST_FTDC_PTE_Futures = _pyctp.THOST_FTDC_PTE_Futures
THOST_FTDC_PTE_Options = _pyctp.THOST_FTDC_PTE_Options
THOST_FTDC_CUFN_CUFN_O = _pyctp.THOST_FTDC_CUFN_CUFN_O
THOST_FTDC_CUFN_CUFN_T = _pyctp.THOST_FTDC_CUFN_CUFN_T
THOST_FTDC_CUFN_CUFN_P = _pyctp.THOST_FTDC_CUFN_CUFN_P
THOST_FTDC_CUFN_CUFN_N = _pyctp.THOST_FTDC_CUFN_CUFN_N
THOST_FTDC_CUFN_CUFN_L = _pyctp.THOST_FTDC_CUFN_CUFN_L
THOST_FTDC_CUFN_CUFN_F = _pyctp.THOST_FTDC_CUFN_CUFN_F
THOST_FTDC_CUFN_CUFN_C = _pyctp.THOST_FTDC_CUFN_CUFN_C
THOST_FTDC_CUFN_CUFN_M = _pyctp.THOST_FTDC_CUFN_CUFN_M
THOST_FTDC_DUFN_DUFN_O = _pyctp.THOST_FTDC_DUFN_DUFN_O
THOST_FTDC_DUFN_DUFN_T = _pyctp.THOST_FTDC_DUFN_DUFN_T
THOST_FTDC_DUFN_DUFN_P = _pyctp.THOST_FTDC_DUFN_DUFN_P
THOST_FTDC_DUFN_DUFN_F = _pyctp.THOST_FTDC_DUFN_DUFN_F
THOST_FTDC_DUFN_DUFN_C = _pyctp.THOST_FTDC_DUFN_DUFN_C
THOST_FTDC_DUFN_DUFN_D = _pyctp.THOST_FTDC_DUFN_DUFN_D
THOST_FTDC_DUFN_DUFN_M = _pyctp.THOST_FTDC_DUFN_DUFN_M
THOST_FTDC_DUFN_DUFN_S = _pyctp.THOST_FTDC_DUFN_DUFN_S
THOST_FTDC_SUFN_SUFN_O = _pyctp.THOST_FTDC_SUFN_SUFN_O
THOST_FTDC_SUFN_SUFN_T = _pyctp.THOST_FTDC_SUFN_SUFN_T
THOST_FTDC_SUFN_SUFN_P = _pyctp.THOST_FTDC_SUFN_SUFN_P
THOST_FTDC_SUFN_SUFN_F = _pyctp.THOST_FTDC_SUFN_SUFN_F
THOST_FTDC_CFUFN_SUFN_T = _pyctp.THOST_FTDC_CFUFN_SUFN_T
THOST_FTDC_CFUFN_SUFN_P = _pyctp.THOST_FTDC_CFUFN_SUFN_P
THOST_FTDC_CFUFN_SUFN_F = _pyctp.THOST_FTDC_CFUFN_SUFN_F
THOST_FTDC_CFUFN_SUFN_S = _pyctp.THOST_FTDC_CFUFN_SUFN_S
THOST_FTDC_CMDR_Comb = _pyctp.THOST_FTDC_CMDR_Comb
THOST_FTDC_CMDR_UnComb = _pyctp.THOST_FTDC_CMDR_UnComb
THOST_FTDC_STOV_RealValue = _pyctp.THOST_FTDC_STOV_RealValue
THOST_FTDC_STOV_ProfitValue = _pyctp.THOST_FTDC_STOV_ProfitValue
THOST_FTDC_STOV_RealRatio = _pyctp.THOST_FTDC_STOV_RealRatio
THOST_FTDC_STOV_ProfitRatio = _pyctp.THOST_FTDC_STOV_ProfitRatio
THOST_FTDC_ROAST_Processing = _pyctp.THOST_FTDC_ROAST_Processing
THOST_FTDC_ROAST_Cancelled = _pyctp.THOST_FTDC_ROAST_Cancelled
THOST_FTDC_ROAST_Opened = _pyctp.THOST_FTDC_ROAST_Opened
THOST_FTDC_ROAST_Invalid = _pyctp.THOST_FTDC_ROAST_Invalid
class CThostFtdcDisseminationField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcDisseminationField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcDisseminationField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["SequenceSeries"] = _pyctp.CThostFtdcDisseminationField_SequenceSeries_set
    __swig_getmethods__["SequenceSeries"] = _pyctp.CThostFtdcDisseminationField_SequenceSeries_get
    if _newclass:
        SequenceSeries = _swig_property(_pyctp.CThostFtdcDisseminationField_SequenceSeries_get, _pyctp.CThostFtdcDisseminationField_SequenceSeries_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CThostFtdcDisseminationField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CThostFtdcDisseminationField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CThostFtdcDisseminationField_SequenceNo_get, _pyctp.CThostFtdcDisseminationField_SequenceNo_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcDisseminationField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcDisseminationField
    __del__ = lambda self: None
CThostFtdcDisseminationField_swigregister = _pyctp.CThostFtdcDisseminationField_swigregister
CThostFtdcDisseminationField_swigregister(CThostFtdcDisseminationField)

class CThostFtdcReqUserLoginField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcReqUserLoginField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcReqUserLoginField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcReqUserLoginField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcReqUserLoginField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcReqUserLoginField_TradingDay_get, _pyctp.CThostFtdcReqUserLoginField_TradingDay_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcReqUserLoginField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcReqUserLoginField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcReqUserLoginField_BrokerID_get, _pyctp.CThostFtdcReqUserLoginField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcReqUserLoginField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcReqUserLoginField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcReqUserLoginField_UserID_get, _pyctp.CThostFtdcReqUserLoginField_UserID_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcReqUserLoginField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcReqUserLoginField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcReqUserLoginField_Password_get, _pyctp.CThostFtdcReqUserLoginField_Password_set)
    __swig_setmethods__["UserProductInfo"] = _pyctp.CThostFtdcReqUserLoginField_UserProductInfo_set
    __swig_getmethods__["UserProductInfo"] = _pyctp.CThostFtdcReqUserLoginField_UserProductInfo_get
    if _newclass:
        UserProductInfo = _swig_property(_pyctp.CThostFtdcReqUserLoginField_UserProductInfo_get, _pyctp.CThostFtdcReqUserLoginField_UserProductInfo_set)
    __swig_setmethods__["InterfaceProductInfo"] = _pyctp.CThostFtdcReqUserLoginField_InterfaceProductInfo_set
    __swig_getmethods__["InterfaceProductInfo"] = _pyctp.CThostFtdcReqUserLoginField_InterfaceProductInfo_get
    if _newclass:
        InterfaceProductInfo = _swig_property(_pyctp.CThostFtdcReqUserLoginField_InterfaceProductInfo_get, _pyctp.CThostFtdcReqUserLoginField_InterfaceProductInfo_set)
    __swig_setmethods__["ProtocolInfo"] = _pyctp.CThostFtdcReqUserLoginField_ProtocolInfo_set
    __swig_getmethods__["ProtocolInfo"] = _pyctp.CThostFtdcReqUserLoginField_ProtocolInfo_get
    if _newclass:
        ProtocolInfo = _swig_property(_pyctp.CThostFtdcReqUserLoginField_ProtocolInfo_get, _pyctp.CThostFtdcReqUserLoginField_ProtocolInfo_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcReqUserLoginField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcReqUserLoginField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcReqUserLoginField_MacAddress_get, _pyctp.CThostFtdcReqUserLoginField_MacAddress_set)
    __swig_setmethods__["OneTimePassword"] = _pyctp.CThostFtdcReqUserLoginField_OneTimePassword_set
    __swig_getmethods__["OneTimePassword"] = _pyctp.CThostFtdcReqUserLoginField_OneTimePassword_get
    if _newclass:
        OneTimePassword = _swig_property(_pyctp.CThostFtdcReqUserLoginField_OneTimePassword_get, _pyctp.CThostFtdcReqUserLoginField_OneTimePassword_set)
    __swig_setmethods__["ClientIPAddress"] = _pyctp.CThostFtdcReqUserLoginField_ClientIPAddress_set
    __swig_getmethods__["ClientIPAddress"] = _pyctp.CThostFtdcReqUserLoginField_ClientIPAddress_get
    if _newclass:
        ClientIPAddress = _swig_property(_pyctp.CThostFtdcReqUserLoginField_ClientIPAddress_get, _pyctp.CThostFtdcReqUserLoginField_ClientIPAddress_set)
    __swig_setmethods__["LoginRemark"] = _pyctp.CThostFtdcReqUserLoginField_LoginRemark_set
    __swig_getmethods__["LoginRemark"] = _pyctp.CThostFtdcReqUserLoginField_LoginRemark_get
    if _newclass:
        LoginRemark = _swig_property(_pyctp.CThostFtdcReqUserLoginField_LoginRemark_get, _pyctp.CThostFtdcReqUserLoginField_LoginRemark_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcReqUserLoginField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcReqUserLoginField
    __del__ = lambda self: None
CThostFtdcReqUserLoginField_swigregister = _pyctp.CThostFtdcReqUserLoginField_swigregister
CThostFtdcReqUserLoginField_swigregister(CThostFtdcReqUserLoginField)

class CThostFtdcRspUserLoginField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcRspUserLoginField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcRspUserLoginField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcRspUserLoginField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcRspUserLoginField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcRspUserLoginField_TradingDay_get, _pyctp.CThostFtdcRspUserLoginField_TradingDay_set)
    __swig_setmethods__["LoginTime"] = _pyctp.CThostFtdcRspUserLoginField_LoginTime_set
    __swig_getmethods__["LoginTime"] = _pyctp.CThostFtdcRspUserLoginField_LoginTime_get
    if _newclass:
        LoginTime = _swig_property(_pyctp.CThostFtdcRspUserLoginField_LoginTime_get, _pyctp.CThostFtdcRspUserLoginField_LoginTime_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcRspUserLoginField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcRspUserLoginField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcRspUserLoginField_BrokerID_get, _pyctp.CThostFtdcRspUserLoginField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcRspUserLoginField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcRspUserLoginField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcRspUserLoginField_UserID_get, _pyctp.CThostFtdcRspUserLoginField_UserID_set)
    __swig_setmethods__["SystemName"] = _pyctp.CThostFtdcRspUserLoginField_SystemName_set
    __swig_getmethods__["SystemName"] = _pyctp.CThostFtdcRspUserLoginField_SystemName_get
    if _newclass:
        SystemName = _swig_property(_pyctp.CThostFtdcRspUserLoginField_SystemName_get, _pyctp.CThostFtdcRspUserLoginField_SystemName_set)
    __swig_setmethods__["FrontID"] = _pyctp.CThostFtdcRspUserLoginField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CThostFtdcRspUserLoginField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CThostFtdcRspUserLoginField_FrontID_get, _pyctp.CThostFtdcRspUserLoginField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcRspUserLoginField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcRspUserLoginField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcRspUserLoginField_SessionID_get, _pyctp.CThostFtdcRspUserLoginField_SessionID_set)
    __swig_setmethods__["MaxOrderRef"] = _pyctp.CThostFtdcRspUserLoginField_MaxOrderRef_set
    __swig_getmethods__["MaxOrderRef"] = _pyctp.CThostFtdcRspUserLoginField_MaxOrderRef_get
    if _newclass:
        MaxOrderRef = _swig_property(_pyctp.CThostFtdcRspUserLoginField_MaxOrderRef_get, _pyctp.CThostFtdcRspUserLoginField_MaxOrderRef_set)
    __swig_setmethods__["SHFETime"] = _pyctp.CThostFtdcRspUserLoginField_SHFETime_set
    __swig_getmethods__["SHFETime"] = _pyctp.CThostFtdcRspUserLoginField_SHFETime_get
    if _newclass:
        SHFETime = _swig_property(_pyctp.CThostFtdcRspUserLoginField_SHFETime_get, _pyctp.CThostFtdcRspUserLoginField_SHFETime_set)
    __swig_setmethods__["DCETime"] = _pyctp.CThostFtdcRspUserLoginField_DCETime_set
    __swig_getmethods__["DCETime"] = _pyctp.CThostFtdcRspUserLoginField_DCETime_get
    if _newclass:
        DCETime = _swig_property(_pyctp.CThostFtdcRspUserLoginField_DCETime_get, _pyctp.CThostFtdcRspUserLoginField_DCETime_set)
    __swig_setmethods__["CZCETime"] = _pyctp.CThostFtdcRspUserLoginField_CZCETime_set
    __swig_getmethods__["CZCETime"] = _pyctp.CThostFtdcRspUserLoginField_CZCETime_get
    if _newclass:
        CZCETime = _swig_property(_pyctp.CThostFtdcRspUserLoginField_CZCETime_get, _pyctp.CThostFtdcRspUserLoginField_CZCETime_set)
    __swig_setmethods__["FFEXTime"] = _pyctp.CThostFtdcRspUserLoginField_FFEXTime_set
    __swig_getmethods__["FFEXTime"] = _pyctp.CThostFtdcRspUserLoginField_FFEXTime_get
    if _newclass:
        FFEXTime = _swig_property(_pyctp.CThostFtdcRspUserLoginField_FFEXTime_get, _pyctp.CThostFtdcRspUserLoginField_FFEXTime_set)
    __swig_setmethods__["INETime"] = _pyctp.CThostFtdcRspUserLoginField_INETime_set
    __swig_getmethods__["INETime"] = _pyctp.CThostFtdcRspUserLoginField_INETime_get
    if _newclass:
        INETime = _swig_property(_pyctp.CThostFtdcRspUserLoginField_INETime_get, _pyctp.CThostFtdcRspUserLoginField_INETime_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcRspUserLoginField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcRspUserLoginField
    __del__ = lambda self: None
CThostFtdcRspUserLoginField_swigregister = _pyctp.CThostFtdcRspUserLoginField_swigregister
CThostFtdcRspUserLoginField_swigregister(CThostFtdcRspUserLoginField)

class CThostFtdcUserLogoutField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcUserLogoutField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcUserLogoutField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcUserLogoutField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcUserLogoutField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcUserLogoutField_BrokerID_get, _pyctp.CThostFtdcUserLogoutField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcUserLogoutField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcUserLogoutField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcUserLogoutField_UserID_get, _pyctp.CThostFtdcUserLogoutField_UserID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcUserLogoutField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcUserLogoutField
    __del__ = lambda self: None
CThostFtdcUserLogoutField_swigregister = _pyctp.CThostFtdcUserLogoutField_swigregister
CThostFtdcUserLogoutField_swigregister(CThostFtdcUserLogoutField)

class CThostFtdcForceUserLogoutField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcForceUserLogoutField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcForceUserLogoutField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcForceUserLogoutField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcForceUserLogoutField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcForceUserLogoutField_BrokerID_get, _pyctp.CThostFtdcForceUserLogoutField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcForceUserLogoutField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcForceUserLogoutField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcForceUserLogoutField_UserID_get, _pyctp.CThostFtdcForceUserLogoutField_UserID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcForceUserLogoutField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcForceUserLogoutField
    __del__ = lambda self: None
CThostFtdcForceUserLogoutField_swigregister = _pyctp.CThostFtdcForceUserLogoutField_swigregister
CThostFtdcForceUserLogoutField_swigregister(CThostFtdcForceUserLogoutField)

class CThostFtdcReqAuthenticateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcReqAuthenticateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcReqAuthenticateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcReqAuthenticateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcReqAuthenticateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcReqAuthenticateField_BrokerID_get, _pyctp.CThostFtdcReqAuthenticateField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcReqAuthenticateField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcReqAuthenticateField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcReqAuthenticateField_UserID_get, _pyctp.CThostFtdcReqAuthenticateField_UserID_set)
    __swig_setmethods__["UserProductInfo"] = _pyctp.CThostFtdcReqAuthenticateField_UserProductInfo_set
    __swig_getmethods__["UserProductInfo"] = _pyctp.CThostFtdcReqAuthenticateField_UserProductInfo_get
    if _newclass:
        UserProductInfo = _swig_property(_pyctp.CThostFtdcReqAuthenticateField_UserProductInfo_get, _pyctp.CThostFtdcReqAuthenticateField_UserProductInfo_set)
    __swig_setmethods__["AuthCode"] = _pyctp.CThostFtdcReqAuthenticateField_AuthCode_set
    __swig_getmethods__["AuthCode"] = _pyctp.CThostFtdcReqAuthenticateField_AuthCode_get
    if _newclass:
        AuthCode = _swig_property(_pyctp.CThostFtdcReqAuthenticateField_AuthCode_get, _pyctp.CThostFtdcReqAuthenticateField_AuthCode_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcReqAuthenticateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcReqAuthenticateField
    __del__ = lambda self: None
CThostFtdcReqAuthenticateField_swigregister = _pyctp.CThostFtdcReqAuthenticateField_swigregister
CThostFtdcReqAuthenticateField_swigregister(CThostFtdcReqAuthenticateField)

class CThostFtdcRspAuthenticateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcRspAuthenticateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcRspAuthenticateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcRspAuthenticateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcRspAuthenticateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcRspAuthenticateField_BrokerID_get, _pyctp.CThostFtdcRspAuthenticateField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcRspAuthenticateField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcRspAuthenticateField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcRspAuthenticateField_UserID_get, _pyctp.CThostFtdcRspAuthenticateField_UserID_set)
    __swig_setmethods__["UserProductInfo"] = _pyctp.CThostFtdcRspAuthenticateField_UserProductInfo_set
    __swig_getmethods__["UserProductInfo"] = _pyctp.CThostFtdcRspAuthenticateField_UserProductInfo_get
    if _newclass:
        UserProductInfo = _swig_property(_pyctp.CThostFtdcRspAuthenticateField_UserProductInfo_get, _pyctp.CThostFtdcRspAuthenticateField_UserProductInfo_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcRspAuthenticateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcRspAuthenticateField
    __del__ = lambda self: None
CThostFtdcRspAuthenticateField_swigregister = _pyctp.CThostFtdcRspAuthenticateField_swigregister
CThostFtdcRspAuthenticateField_swigregister(CThostFtdcRspAuthenticateField)

class CThostFtdcAuthenticationInfoField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcAuthenticationInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcAuthenticationInfoField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcAuthenticationInfoField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcAuthenticationInfoField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcAuthenticationInfoField_BrokerID_get, _pyctp.CThostFtdcAuthenticationInfoField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcAuthenticationInfoField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcAuthenticationInfoField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcAuthenticationInfoField_UserID_get, _pyctp.CThostFtdcAuthenticationInfoField_UserID_set)
    __swig_setmethods__["UserProductInfo"] = _pyctp.CThostFtdcAuthenticationInfoField_UserProductInfo_set
    __swig_getmethods__["UserProductInfo"] = _pyctp.CThostFtdcAuthenticationInfoField_UserProductInfo_get
    if _newclass:
        UserProductInfo = _swig_property(_pyctp.CThostFtdcAuthenticationInfoField_UserProductInfo_get, _pyctp.CThostFtdcAuthenticationInfoField_UserProductInfo_set)
    __swig_setmethods__["AuthInfo"] = _pyctp.CThostFtdcAuthenticationInfoField_AuthInfo_set
    __swig_getmethods__["AuthInfo"] = _pyctp.CThostFtdcAuthenticationInfoField_AuthInfo_get
    if _newclass:
        AuthInfo = _swig_property(_pyctp.CThostFtdcAuthenticationInfoField_AuthInfo_get, _pyctp.CThostFtdcAuthenticationInfoField_AuthInfo_set)
    __swig_setmethods__["IsResult"] = _pyctp.CThostFtdcAuthenticationInfoField_IsResult_set
    __swig_getmethods__["IsResult"] = _pyctp.CThostFtdcAuthenticationInfoField_IsResult_get
    if _newclass:
        IsResult = _swig_property(_pyctp.CThostFtdcAuthenticationInfoField_IsResult_get, _pyctp.CThostFtdcAuthenticationInfoField_IsResult_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcAuthenticationInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcAuthenticationInfoField
    __del__ = lambda self: None
CThostFtdcAuthenticationInfoField_swigregister = _pyctp.CThostFtdcAuthenticationInfoField_swigregister
CThostFtdcAuthenticationInfoField_swigregister(CThostFtdcAuthenticationInfoField)

class CThostFtdcTransferHeaderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcTransferHeaderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcTransferHeaderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["Version"] = _pyctp.CThostFtdcTransferHeaderField_Version_set
    __swig_getmethods__["Version"] = _pyctp.CThostFtdcTransferHeaderField_Version_get
    if _newclass:
        Version = _swig_property(_pyctp.CThostFtdcTransferHeaderField_Version_get, _pyctp.CThostFtdcTransferHeaderField_Version_set)
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcTransferHeaderField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcTransferHeaderField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcTransferHeaderField_TradeCode_get, _pyctp.CThostFtdcTransferHeaderField_TradeCode_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcTransferHeaderField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcTransferHeaderField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcTransferHeaderField_TradeDate_get, _pyctp.CThostFtdcTransferHeaderField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcTransferHeaderField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcTransferHeaderField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcTransferHeaderField_TradeTime_get, _pyctp.CThostFtdcTransferHeaderField_TradeTime_set)
    __swig_setmethods__["TradeSerial"] = _pyctp.CThostFtdcTransferHeaderField_TradeSerial_set
    __swig_getmethods__["TradeSerial"] = _pyctp.CThostFtdcTransferHeaderField_TradeSerial_get
    if _newclass:
        TradeSerial = _swig_property(_pyctp.CThostFtdcTransferHeaderField_TradeSerial_get, _pyctp.CThostFtdcTransferHeaderField_TradeSerial_set)
    __swig_setmethods__["FutureID"] = _pyctp.CThostFtdcTransferHeaderField_FutureID_set
    __swig_getmethods__["FutureID"] = _pyctp.CThostFtdcTransferHeaderField_FutureID_get
    if _newclass:
        FutureID = _swig_property(_pyctp.CThostFtdcTransferHeaderField_FutureID_get, _pyctp.CThostFtdcTransferHeaderField_FutureID_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcTransferHeaderField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcTransferHeaderField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcTransferHeaderField_BankID_get, _pyctp.CThostFtdcTransferHeaderField_BankID_set)
    __swig_setmethods__["BankBrchID"] = _pyctp.CThostFtdcTransferHeaderField_BankBrchID_set
    __swig_getmethods__["BankBrchID"] = _pyctp.CThostFtdcTransferHeaderField_BankBrchID_get
    if _newclass:
        BankBrchID = _swig_property(_pyctp.CThostFtdcTransferHeaderField_BankBrchID_get, _pyctp.CThostFtdcTransferHeaderField_BankBrchID_set)
    __swig_setmethods__["OperNo"] = _pyctp.CThostFtdcTransferHeaderField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CThostFtdcTransferHeaderField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CThostFtdcTransferHeaderField_OperNo_get, _pyctp.CThostFtdcTransferHeaderField_OperNo_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CThostFtdcTransferHeaderField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CThostFtdcTransferHeaderField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CThostFtdcTransferHeaderField_DeviceID_get, _pyctp.CThostFtdcTransferHeaderField_DeviceID_set)
    __swig_setmethods__["RecordNum"] = _pyctp.CThostFtdcTransferHeaderField_RecordNum_set
    __swig_getmethods__["RecordNum"] = _pyctp.CThostFtdcTransferHeaderField_RecordNum_get
    if _newclass:
        RecordNum = _swig_property(_pyctp.CThostFtdcTransferHeaderField_RecordNum_get, _pyctp.CThostFtdcTransferHeaderField_RecordNum_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcTransferHeaderField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcTransferHeaderField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcTransferHeaderField_SessionID_get, _pyctp.CThostFtdcTransferHeaderField_SessionID_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcTransferHeaderField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcTransferHeaderField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcTransferHeaderField_RequestID_get, _pyctp.CThostFtdcTransferHeaderField_RequestID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcTransferHeaderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcTransferHeaderField
    __del__ = lambda self: None
CThostFtdcTransferHeaderField_swigregister = _pyctp.CThostFtdcTransferHeaderField_swigregister
CThostFtdcTransferHeaderField_swigregister(CThostFtdcTransferHeaderField)

class CThostFtdcTransferBankToFutureReqField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcTransferBankToFutureReqField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcTransferBankToFutureReqField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["FutureAccount"] = _pyctp.CThostFtdcTransferBankToFutureReqField_FutureAccount_set
    __swig_getmethods__["FutureAccount"] = _pyctp.CThostFtdcTransferBankToFutureReqField_FutureAccount_get
    if _newclass:
        FutureAccount = _swig_property(_pyctp.CThostFtdcTransferBankToFutureReqField_FutureAccount_get, _pyctp.CThostFtdcTransferBankToFutureReqField_FutureAccount_set)
    __swig_setmethods__["FuturePwdFlag"] = _pyctp.CThostFtdcTransferBankToFutureReqField_FuturePwdFlag_set
    __swig_getmethods__["FuturePwdFlag"] = _pyctp.CThostFtdcTransferBankToFutureReqField_FuturePwdFlag_get
    if _newclass:
        FuturePwdFlag = _swig_property(_pyctp.CThostFtdcTransferBankToFutureReqField_FuturePwdFlag_get, _pyctp.CThostFtdcTransferBankToFutureReqField_FuturePwdFlag_set)
    __swig_setmethods__["FutureAccPwd"] = _pyctp.CThostFtdcTransferBankToFutureReqField_FutureAccPwd_set
    __swig_getmethods__["FutureAccPwd"] = _pyctp.CThostFtdcTransferBankToFutureReqField_FutureAccPwd_get
    if _newclass:
        FutureAccPwd = _swig_property(_pyctp.CThostFtdcTransferBankToFutureReqField_FutureAccPwd_get, _pyctp.CThostFtdcTransferBankToFutureReqField_FutureAccPwd_set)
    __swig_setmethods__["TradeAmt"] = _pyctp.CThostFtdcTransferBankToFutureReqField_TradeAmt_set
    __swig_getmethods__["TradeAmt"] = _pyctp.CThostFtdcTransferBankToFutureReqField_TradeAmt_get
    if _newclass:
        TradeAmt = _swig_property(_pyctp.CThostFtdcTransferBankToFutureReqField_TradeAmt_get, _pyctp.CThostFtdcTransferBankToFutureReqField_TradeAmt_set)
    __swig_setmethods__["CustFee"] = _pyctp.CThostFtdcTransferBankToFutureReqField_CustFee_set
    __swig_getmethods__["CustFee"] = _pyctp.CThostFtdcTransferBankToFutureReqField_CustFee_get
    if _newclass:
        CustFee = _swig_property(_pyctp.CThostFtdcTransferBankToFutureReqField_CustFee_get, _pyctp.CThostFtdcTransferBankToFutureReqField_CustFee_set)
    __swig_setmethods__["CurrencyCode"] = _pyctp.CThostFtdcTransferBankToFutureReqField_CurrencyCode_set
    __swig_getmethods__["CurrencyCode"] = _pyctp.CThostFtdcTransferBankToFutureReqField_CurrencyCode_get
    if _newclass:
        CurrencyCode = _swig_property(_pyctp.CThostFtdcTransferBankToFutureReqField_CurrencyCode_get, _pyctp.CThostFtdcTransferBankToFutureReqField_CurrencyCode_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcTransferBankToFutureReqField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcTransferBankToFutureReqField
    __del__ = lambda self: None
CThostFtdcTransferBankToFutureReqField_swigregister = _pyctp.CThostFtdcTransferBankToFutureReqField_swigregister
CThostFtdcTransferBankToFutureReqField_swigregister(CThostFtdcTransferBankToFutureReqField)

class CThostFtdcTransferBankToFutureRspField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcTransferBankToFutureRspField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcTransferBankToFutureRspField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["RetCode"] = _pyctp.CThostFtdcTransferBankToFutureRspField_RetCode_set
    __swig_getmethods__["RetCode"] = _pyctp.CThostFtdcTransferBankToFutureRspField_RetCode_get
    if _newclass:
        RetCode = _swig_property(_pyctp.CThostFtdcTransferBankToFutureRspField_RetCode_get, _pyctp.CThostFtdcTransferBankToFutureRspField_RetCode_set)
    __swig_setmethods__["RetInfo"] = _pyctp.CThostFtdcTransferBankToFutureRspField_RetInfo_set
    __swig_getmethods__["RetInfo"] = _pyctp.CThostFtdcTransferBankToFutureRspField_RetInfo_get
    if _newclass:
        RetInfo = _swig_property(_pyctp.CThostFtdcTransferBankToFutureRspField_RetInfo_get, _pyctp.CThostFtdcTransferBankToFutureRspField_RetInfo_set)
    __swig_setmethods__["FutureAccount"] = _pyctp.CThostFtdcTransferBankToFutureRspField_FutureAccount_set
    __swig_getmethods__["FutureAccount"] = _pyctp.CThostFtdcTransferBankToFutureRspField_FutureAccount_get
    if _newclass:
        FutureAccount = _swig_property(_pyctp.CThostFtdcTransferBankToFutureRspField_FutureAccount_get, _pyctp.CThostFtdcTransferBankToFutureRspField_FutureAccount_set)
    __swig_setmethods__["TradeAmt"] = _pyctp.CThostFtdcTransferBankToFutureRspField_TradeAmt_set
    __swig_getmethods__["TradeAmt"] = _pyctp.CThostFtdcTransferBankToFutureRspField_TradeAmt_get
    if _newclass:
        TradeAmt = _swig_property(_pyctp.CThostFtdcTransferBankToFutureRspField_TradeAmt_get, _pyctp.CThostFtdcTransferBankToFutureRspField_TradeAmt_set)
    __swig_setmethods__["CustFee"] = _pyctp.CThostFtdcTransferBankToFutureRspField_CustFee_set
    __swig_getmethods__["CustFee"] = _pyctp.CThostFtdcTransferBankToFutureRspField_CustFee_get
    if _newclass:
        CustFee = _swig_property(_pyctp.CThostFtdcTransferBankToFutureRspField_CustFee_get, _pyctp.CThostFtdcTransferBankToFutureRspField_CustFee_set)
    __swig_setmethods__["CurrencyCode"] = _pyctp.CThostFtdcTransferBankToFutureRspField_CurrencyCode_set
    __swig_getmethods__["CurrencyCode"] = _pyctp.CThostFtdcTransferBankToFutureRspField_CurrencyCode_get
    if _newclass:
        CurrencyCode = _swig_property(_pyctp.CThostFtdcTransferBankToFutureRspField_CurrencyCode_get, _pyctp.CThostFtdcTransferBankToFutureRspField_CurrencyCode_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcTransferBankToFutureRspField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcTransferBankToFutureRspField
    __del__ = lambda self: None
CThostFtdcTransferBankToFutureRspField_swigregister = _pyctp.CThostFtdcTransferBankToFutureRspField_swigregister
CThostFtdcTransferBankToFutureRspField_swigregister(CThostFtdcTransferBankToFutureRspField)

class CThostFtdcTransferFutureToBankReqField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcTransferFutureToBankReqField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcTransferFutureToBankReqField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["FutureAccount"] = _pyctp.CThostFtdcTransferFutureToBankReqField_FutureAccount_set
    __swig_getmethods__["FutureAccount"] = _pyctp.CThostFtdcTransferFutureToBankReqField_FutureAccount_get
    if _newclass:
        FutureAccount = _swig_property(_pyctp.CThostFtdcTransferFutureToBankReqField_FutureAccount_get, _pyctp.CThostFtdcTransferFutureToBankReqField_FutureAccount_set)
    __swig_setmethods__["FuturePwdFlag"] = _pyctp.CThostFtdcTransferFutureToBankReqField_FuturePwdFlag_set
    __swig_getmethods__["FuturePwdFlag"] = _pyctp.CThostFtdcTransferFutureToBankReqField_FuturePwdFlag_get
    if _newclass:
        FuturePwdFlag = _swig_property(_pyctp.CThostFtdcTransferFutureToBankReqField_FuturePwdFlag_get, _pyctp.CThostFtdcTransferFutureToBankReqField_FuturePwdFlag_set)
    __swig_setmethods__["FutureAccPwd"] = _pyctp.CThostFtdcTransferFutureToBankReqField_FutureAccPwd_set
    __swig_getmethods__["FutureAccPwd"] = _pyctp.CThostFtdcTransferFutureToBankReqField_FutureAccPwd_get
    if _newclass:
        FutureAccPwd = _swig_property(_pyctp.CThostFtdcTransferFutureToBankReqField_FutureAccPwd_get, _pyctp.CThostFtdcTransferFutureToBankReqField_FutureAccPwd_set)
    __swig_setmethods__["TradeAmt"] = _pyctp.CThostFtdcTransferFutureToBankReqField_TradeAmt_set
    __swig_getmethods__["TradeAmt"] = _pyctp.CThostFtdcTransferFutureToBankReqField_TradeAmt_get
    if _newclass:
        TradeAmt = _swig_property(_pyctp.CThostFtdcTransferFutureToBankReqField_TradeAmt_get, _pyctp.CThostFtdcTransferFutureToBankReqField_TradeAmt_set)
    __swig_setmethods__["CustFee"] = _pyctp.CThostFtdcTransferFutureToBankReqField_CustFee_set
    __swig_getmethods__["CustFee"] = _pyctp.CThostFtdcTransferFutureToBankReqField_CustFee_get
    if _newclass:
        CustFee = _swig_property(_pyctp.CThostFtdcTransferFutureToBankReqField_CustFee_get, _pyctp.CThostFtdcTransferFutureToBankReqField_CustFee_set)
    __swig_setmethods__["CurrencyCode"] = _pyctp.CThostFtdcTransferFutureToBankReqField_CurrencyCode_set
    __swig_getmethods__["CurrencyCode"] = _pyctp.CThostFtdcTransferFutureToBankReqField_CurrencyCode_get
    if _newclass:
        CurrencyCode = _swig_property(_pyctp.CThostFtdcTransferFutureToBankReqField_CurrencyCode_get, _pyctp.CThostFtdcTransferFutureToBankReqField_CurrencyCode_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcTransferFutureToBankReqField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcTransferFutureToBankReqField
    __del__ = lambda self: None
CThostFtdcTransferFutureToBankReqField_swigregister = _pyctp.CThostFtdcTransferFutureToBankReqField_swigregister
CThostFtdcTransferFutureToBankReqField_swigregister(CThostFtdcTransferFutureToBankReqField)

class CThostFtdcTransferFutureToBankRspField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcTransferFutureToBankRspField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcTransferFutureToBankRspField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["RetCode"] = _pyctp.CThostFtdcTransferFutureToBankRspField_RetCode_set
    __swig_getmethods__["RetCode"] = _pyctp.CThostFtdcTransferFutureToBankRspField_RetCode_get
    if _newclass:
        RetCode = _swig_property(_pyctp.CThostFtdcTransferFutureToBankRspField_RetCode_get, _pyctp.CThostFtdcTransferFutureToBankRspField_RetCode_set)
    __swig_setmethods__["RetInfo"] = _pyctp.CThostFtdcTransferFutureToBankRspField_RetInfo_set
    __swig_getmethods__["RetInfo"] = _pyctp.CThostFtdcTransferFutureToBankRspField_RetInfo_get
    if _newclass:
        RetInfo = _swig_property(_pyctp.CThostFtdcTransferFutureToBankRspField_RetInfo_get, _pyctp.CThostFtdcTransferFutureToBankRspField_RetInfo_set)
    __swig_setmethods__["FutureAccount"] = _pyctp.CThostFtdcTransferFutureToBankRspField_FutureAccount_set
    __swig_getmethods__["FutureAccount"] = _pyctp.CThostFtdcTransferFutureToBankRspField_FutureAccount_get
    if _newclass:
        FutureAccount = _swig_property(_pyctp.CThostFtdcTransferFutureToBankRspField_FutureAccount_get, _pyctp.CThostFtdcTransferFutureToBankRspField_FutureAccount_set)
    __swig_setmethods__["TradeAmt"] = _pyctp.CThostFtdcTransferFutureToBankRspField_TradeAmt_set
    __swig_getmethods__["TradeAmt"] = _pyctp.CThostFtdcTransferFutureToBankRspField_TradeAmt_get
    if _newclass:
        TradeAmt = _swig_property(_pyctp.CThostFtdcTransferFutureToBankRspField_TradeAmt_get, _pyctp.CThostFtdcTransferFutureToBankRspField_TradeAmt_set)
    __swig_setmethods__["CustFee"] = _pyctp.CThostFtdcTransferFutureToBankRspField_CustFee_set
    __swig_getmethods__["CustFee"] = _pyctp.CThostFtdcTransferFutureToBankRspField_CustFee_get
    if _newclass:
        CustFee = _swig_property(_pyctp.CThostFtdcTransferFutureToBankRspField_CustFee_get, _pyctp.CThostFtdcTransferFutureToBankRspField_CustFee_set)
    __swig_setmethods__["CurrencyCode"] = _pyctp.CThostFtdcTransferFutureToBankRspField_CurrencyCode_set
    __swig_getmethods__["CurrencyCode"] = _pyctp.CThostFtdcTransferFutureToBankRspField_CurrencyCode_get
    if _newclass:
        CurrencyCode = _swig_property(_pyctp.CThostFtdcTransferFutureToBankRspField_CurrencyCode_get, _pyctp.CThostFtdcTransferFutureToBankRspField_CurrencyCode_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcTransferFutureToBankRspField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcTransferFutureToBankRspField
    __del__ = lambda self: None
CThostFtdcTransferFutureToBankRspField_swigregister = _pyctp.CThostFtdcTransferFutureToBankRspField_swigregister
CThostFtdcTransferFutureToBankRspField_swigregister(CThostFtdcTransferFutureToBankRspField)

class CThostFtdcTransferQryBankReqField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcTransferQryBankReqField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcTransferQryBankReqField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["FutureAccount"] = _pyctp.CThostFtdcTransferQryBankReqField_FutureAccount_set
    __swig_getmethods__["FutureAccount"] = _pyctp.CThostFtdcTransferQryBankReqField_FutureAccount_get
    if _newclass:
        FutureAccount = _swig_property(_pyctp.CThostFtdcTransferQryBankReqField_FutureAccount_get, _pyctp.CThostFtdcTransferQryBankReqField_FutureAccount_set)
    __swig_setmethods__["FuturePwdFlag"] = _pyctp.CThostFtdcTransferQryBankReqField_FuturePwdFlag_set
    __swig_getmethods__["FuturePwdFlag"] = _pyctp.CThostFtdcTransferQryBankReqField_FuturePwdFlag_get
    if _newclass:
        FuturePwdFlag = _swig_property(_pyctp.CThostFtdcTransferQryBankReqField_FuturePwdFlag_get, _pyctp.CThostFtdcTransferQryBankReqField_FuturePwdFlag_set)
    __swig_setmethods__["FutureAccPwd"] = _pyctp.CThostFtdcTransferQryBankReqField_FutureAccPwd_set
    __swig_getmethods__["FutureAccPwd"] = _pyctp.CThostFtdcTransferQryBankReqField_FutureAccPwd_get
    if _newclass:
        FutureAccPwd = _swig_property(_pyctp.CThostFtdcTransferQryBankReqField_FutureAccPwd_get, _pyctp.CThostFtdcTransferQryBankReqField_FutureAccPwd_set)
    __swig_setmethods__["CurrencyCode"] = _pyctp.CThostFtdcTransferQryBankReqField_CurrencyCode_set
    __swig_getmethods__["CurrencyCode"] = _pyctp.CThostFtdcTransferQryBankReqField_CurrencyCode_get
    if _newclass:
        CurrencyCode = _swig_property(_pyctp.CThostFtdcTransferQryBankReqField_CurrencyCode_get, _pyctp.CThostFtdcTransferQryBankReqField_CurrencyCode_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcTransferQryBankReqField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcTransferQryBankReqField
    __del__ = lambda self: None
CThostFtdcTransferQryBankReqField_swigregister = _pyctp.CThostFtdcTransferQryBankReqField_swigregister
CThostFtdcTransferQryBankReqField_swigregister(CThostFtdcTransferQryBankReqField)

class CThostFtdcTransferQryBankRspField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcTransferQryBankRspField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcTransferQryBankRspField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["RetCode"] = _pyctp.CThostFtdcTransferQryBankRspField_RetCode_set
    __swig_getmethods__["RetCode"] = _pyctp.CThostFtdcTransferQryBankRspField_RetCode_get
    if _newclass:
        RetCode = _swig_property(_pyctp.CThostFtdcTransferQryBankRspField_RetCode_get, _pyctp.CThostFtdcTransferQryBankRspField_RetCode_set)
    __swig_setmethods__["RetInfo"] = _pyctp.CThostFtdcTransferQryBankRspField_RetInfo_set
    __swig_getmethods__["RetInfo"] = _pyctp.CThostFtdcTransferQryBankRspField_RetInfo_get
    if _newclass:
        RetInfo = _swig_property(_pyctp.CThostFtdcTransferQryBankRspField_RetInfo_get, _pyctp.CThostFtdcTransferQryBankRspField_RetInfo_set)
    __swig_setmethods__["FutureAccount"] = _pyctp.CThostFtdcTransferQryBankRspField_FutureAccount_set
    __swig_getmethods__["FutureAccount"] = _pyctp.CThostFtdcTransferQryBankRspField_FutureAccount_get
    if _newclass:
        FutureAccount = _swig_property(_pyctp.CThostFtdcTransferQryBankRspField_FutureAccount_get, _pyctp.CThostFtdcTransferQryBankRspField_FutureAccount_set)
    __swig_setmethods__["TradeAmt"] = _pyctp.CThostFtdcTransferQryBankRspField_TradeAmt_set
    __swig_getmethods__["TradeAmt"] = _pyctp.CThostFtdcTransferQryBankRspField_TradeAmt_get
    if _newclass:
        TradeAmt = _swig_property(_pyctp.CThostFtdcTransferQryBankRspField_TradeAmt_get, _pyctp.CThostFtdcTransferQryBankRspField_TradeAmt_set)
    __swig_setmethods__["UseAmt"] = _pyctp.CThostFtdcTransferQryBankRspField_UseAmt_set
    __swig_getmethods__["UseAmt"] = _pyctp.CThostFtdcTransferQryBankRspField_UseAmt_get
    if _newclass:
        UseAmt = _swig_property(_pyctp.CThostFtdcTransferQryBankRspField_UseAmt_get, _pyctp.CThostFtdcTransferQryBankRspField_UseAmt_set)
    __swig_setmethods__["FetchAmt"] = _pyctp.CThostFtdcTransferQryBankRspField_FetchAmt_set
    __swig_getmethods__["FetchAmt"] = _pyctp.CThostFtdcTransferQryBankRspField_FetchAmt_get
    if _newclass:
        FetchAmt = _swig_property(_pyctp.CThostFtdcTransferQryBankRspField_FetchAmt_get, _pyctp.CThostFtdcTransferQryBankRspField_FetchAmt_set)
    __swig_setmethods__["CurrencyCode"] = _pyctp.CThostFtdcTransferQryBankRspField_CurrencyCode_set
    __swig_getmethods__["CurrencyCode"] = _pyctp.CThostFtdcTransferQryBankRspField_CurrencyCode_get
    if _newclass:
        CurrencyCode = _swig_property(_pyctp.CThostFtdcTransferQryBankRspField_CurrencyCode_get, _pyctp.CThostFtdcTransferQryBankRspField_CurrencyCode_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcTransferQryBankRspField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcTransferQryBankRspField
    __del__ = lambda self: None
CThostFtdcTransferQryBankRspField_swigregister = _pyctp.CThostFtdcTransferQryBankRspField_swigregister
CThostFtdcTransferQryBankRspField_swigregister(CThostFtdcTransferQryBankRspField)

class CThostFtdcTransferQryDetailReqField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcTransferQryDetailReqField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcTransferQryDetailReqField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["FutureAccount"] = _pyctp.CThostFtdcTransferQryDetailReqField_FutureAccount_set
    __swig_getmethods__["FutureAccount"] = _pyctp.CThostFtdcTransferQryDetailReqField_FutureAccount_get
    if _newclass:
        FutureAccount = _swig_property(_pyctp.CThostFtdcTransferQryDetailReqField_FutureAccount_get, _pyctp.CThostFtdcTransferQryDetailReqField_FutureAccount_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcTransferQryDetailReqField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcTransferQryDetailReqField
    __del__ = lambda self: None
CThostFtdcTransferQryDetailReqField_swigregister = _pyctp.CThostFtdcTransferQryDetailReqField_swigregister
CThostFtdcTransferQryDetailReqField_swigregister(CThostFtdcTransferQryDetailReqField)

class CThostFtdcTransferQryDetailRspField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcTransferQryDetailRspField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcTransferQryDetailRspField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcTransferQryDetailRspField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcTransferQryDetailRspField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcTransferQryDetailRspField_TradeDate_get, _pyctp.CThostFtdcTransferQryDetailRspField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcTransferQryDetailRspField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcTransferQryDetailRspField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcTransferQryDetailRspField_TradeTime_get, _pyctp.CThostFtdcTransferQryDetailRspField_TradeTime_set)
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcTransferQryDetailRspField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcTransferQryDetailRspField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcTransferQryDetailRspField_TradeCode_get, _pyctp.CThostFtdcTransferQryDetailRspField_TradeCode_set)
    __swig_setmethods__["FutureSerial"] = _pyctp.CThostFtdcTransferQryDetailRspField_FutureSerial_set
    __swig_getmethods__["FutureSerial"] = _pyctp.CThostFtdcTransferQryDetailRspField_FutureSerial_get
    if _newclass:
        FutureSerial = _swig_property(_pyctp.CThostFtdcTransferQryDetailRspField_FutureSerial_get, _pyctp.CThostFtdcTransferQryDetailRspField_FutureSerial_set)
    __swig_setmethods__["FutureID"] = _pyctp.CThostFtdcTransferQryDetailRspField_FutureID_set
    __swig_getmethods__["FutureID"] = _pyctp.CThostFtdcTransferQryDetailRspField_FutureID_get
    if _newclass:
        FutureID = _swig_property(_pyctp.CThostFtdcTransferQryDetailRspField_FutureID_get, _pyctp.CThostFtdcTransferQryDetailRspField_FutureID_set)
    __swig_setmethods__["FutureAccount"] = _pyctp.CThostFtdcTransferQryDetailRspField_FutureAccount_set
    __swig_getmethods__["FutureAccount"] = _pyctp.CThostFtdcTransferQryDetailRspField_FutureAccount_get
    if _newclass:
        FutureAccount = _swig_property(_pyctp.CThostFtdcTransferQryDetailRspField_FutureAccount_get, _pyctp.CThostFtdcTransferQryDetailRspField_FutureAccount_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcTransferQryDetailRspField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcTransferQryDetailRspField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcTransferQryDetailRspField_BankSerial_get, _pyctp.CThostFtdcTransferQryDetailRspField_BankSerial_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcTransferQryDetailRspField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcTransferQryDetailRspField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcTransferQryDetailRspField_BankID_get, _pyctp.CThostFtdcTransferQryDetailRspField_BankID_set)
    __swig_setmethods__["BankBrchID"] = _pyctp.CThostFtdcTransferQryDetailRspField_BankBrchID_set
    __swig_getmethods__["BankBrchID"] = _pyctp.CThostFtdcTransferQryDetailRspField_BankBrchID_get
    if _newclass:
        BankBrchID = _swig_property(_pyctp.CThostFtdcTransferQryDetailRspField_BankBrchID_get, _pyctp.CThostFtdcTransferQryDetailRspField_BankBrchID_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CThostFtdcTransferQryDetailRspField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CThostFtdcTransferQryDetailRspField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CThostFtdcTransferQryDetailRspField_BankAccount_get, _pyctp.CThostFtdcTransferQryDetailRspField_BankAccount_set)
    __swig_setmethods__["CertCode"] = _pyctp.CThostFtdcTransferQryDetailRspField_CertCode_set
    __swig_getmethods__["CertCode"] = _pyctp.CThostFtdcTransferQryDetailRspField_CertCode_get
    if _newclass:
        CertCode = _swig_property(_pyctp.CThostFtdcTransferQryDetailRspField_CertCode_get, _pyctp.CThostFtdcTransferQryDetailRspField_CertCode_set)
    __swig_setmethods__["CurrencyCode"] = _pyctp.CThostFtdcTransferQryDetailRspField_CurrencyCode_set
    __swig_getmethods__["CurrencyCode"] = _pyctp.CThostFtdcTransferQryDetailRspField_CurrencyCode_get
    if _newclass:
        CurrencyCode = _swig_property(_pyctp.CThostFtdcTransferQryDetailRspField_CurrencyCode_get, _pyctp.CThostFtdcTransferQryDetailRspField_CurrencyCode_set)
    __swig_setmethods__["TxAmount"] = _pyctp.CThostFtdcTransferQryDetailRspField_TxAmount_set
    __swig_getmethods__["TxAmount"] = _pyctp.CThostFtdcTransferQryDetailRspField_TxAmount_get
    if _newclass:
        TxAmount = _swig_property(_pyctp.CThostFtdcTransferQryDetailRspField_TxAmount_get, _pyctp.CThostFtdcTransferQryDetailRspField_TxAmount_set)
    __swig_setmethods__["Flag"] = _pyctp.CThostFtdcTransferQryDetailRspField_Flag_set
    __swig_getmethods__["Flag"] = _pyctp.CThostFtdcTransferQryDetailRspField_Flag_get
    if _newclass:
        Flag = _swig_property(_pyctp.CThostFtdcTransferQryDetailRspField_Flag_get, _pyctp.CThostFtdcTransferQryDetailRspField_Flag_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcTransferQryDetailRspField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcTransferQryDetailRspField
    __del__ = lambda self: None
CThostFtdcTransferQryDetailRspField_swigregister = _pyctp.CThostFtdcTransferQryDetailRspField_swigregister
CThostFtdcTransferQryDetailRspField_swigregister(CThostFtdcTransferQryDetailRspField)

class CThostFtdcRspInfoField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcRspInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcRspInfoField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ErrorID"] = _pyctp.CThostFtdcRspInfoField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CThostFtdcRspInfoField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CThostFtdcRspInfoField_ErrorID_get, _pyctp.CThostFtdcRspInfoField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CThostFtdcRspInfoField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CThostFtdcRspInfoField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CThostFtdcRspInfoField_ErrorMsg_get, _pyctp.CThostFtdcRspInfoField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcRspInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcRspInfoField
    __del__ = lambda self: None
CThostFtdcRspInfoField_swigregister = _pyctp.CThostFtdcRspInfoField_swigregister
CThostFtdcRspInfoField_swigregister(CThostFtdcRspInfoField)

class CThostFtdcExchangeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcExchangeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcExchangeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcExchangeField_ExchangeID_get, _pyctp.CThostFtdcExchangeField_ExchangeID_set)
    __swig_setmethods__["ExchangeName"] = _pyctp.CThostFtdcExchangeField_ExchangeName_set
    __swig_getmethods__["ExchangeName"] = _pyctp.CThostFtdcExchangeField_ExchangeName_get
    if _newclass:
        ExchangeName = _swig_property(_pyctp.CThostFtdcExchangeField_ExchangeName_get, _pyctp.CThostFtdcExchangeField_ExchangeName_set)
    __swig_setmethods__["ExchangeProperty"] = _pyctp.CThostFtdcExchangeField_ExchangeProperty_set
    __swig_getmethods__["ExchangeProperty"] = _pyctp.CThostFtdcExchangeField_ExchangeProperty_get
    if _newclass:
        ExchangeProperty = _swig_property(_pyctp.CThostFtdcExchangeField_ExchangeProperty_get, _pyctp.CThostFtdcExchangeField_ExchangeProperty_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcExchangeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcExchangeField
    __del__ = lambda self: None
CThostFtdcExchangeField_swigregister = _pyctp.CThostFtdcExchangeField_swigregister
CThostFtdcExchangeField_swigregister(CThostFtdcExchangeField)

class CThostFtdcProductField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcProductField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcProductField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ProductID"] = _pyctp.CThostFtdcProductField_ProductID_set
    __swig_getmethods__["ProductID"] = _pyctp.CThostFtdcProductField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_pyctp.CThostFtdcProductField_ProductID_get, _pyctp.CThostFtdcProductField_ProductID_set)
    __swig_setmethods__["ProductName"] = _pyctp.CThostFtdcProductField_ProductName_set
    __swig_getmethods__["ProductName"] = _pyctp.CThostFtdcProductField_ProductName_get
    if _newclass:
        ProductName = _swig_property(_pyctp.CThostFtdcProductField_ProductName_get, _pyctp.CThostFtdcProductField_ProductName_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcProductField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcProductField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcProductField_ExchangeID_get, _pyctp.CThostFtdcProductField_ExchangeID_set)
    __swig_setmethods__["ProductClass"] = _pyctp.CThostFtdcProductField_ProductClass_set
    __swig_getmethods__["ProductClass"] = _pyctp.CThostFtdcProductField_ProductClass_get
    if _newclass:
        ProductClass = _swig_property(_pyctp.CThostFtdcProductField_ProductClass_get, _pyctp.CThostFtdcProductField_ProductClass_set)
    __swig_setmethods__["VolumeMultiple"] = _pyctp.CThostFtdcProductField_VolumeMultiple_set
    __swig_getmethods__["VolumeMultiple"] = _pyctp.CThostFtdcProductField_VolumeMultiple_get
    if _newclass:
        VolumeMultiple = _swig_property(_pyctp.CThostFtdcProductField_VolumeMultiple_get, _pyctp.CThostFtdcProductField_VolumeMultiple_set)
    __swig_setmethods__["PriceTick"] = _pyctp.CThostFtdcProductField_PriceTick_set
    __swig_getmethods__["PriceTick"] = _pyctp.CThostFtdcProductField_PriceTick_get
    if _newclass:
        PriceTick = _swig_property(_pyctp.CThostFtdcProductField_PriceTick_get, _pyctp.CThostFtdcProductField_PriceTick_set)
    __swig_setmethods__["MaxMarketOrderVolume"] = _pyctp.CThostFtdcProductField_MaxMarketOrderVolume_set
    __swig_getmethods__["MaxMarketOrderVolume"] = _pyctp.CThostFtdcProductField_MaxMarketOrderVolume_get
    if _newclass:
        MaxMarketOrderVolume = _swig_property(_pyctp.CThostFtdcProductField_MaxMarketOrderVolume_get, _pyctp.CThostFtdcProductField_MaxMarketOrderVolume_set)
    __swig_setmethods__["MinMarketOrderVolume"] = _pyctp.CThostFtdcProductField_MinMarketOrderVolume_set
    __swig_getmethods__["MinMarketOrderVolume"] = _pyctp.CThostFtdcProductField_MinMarketOrderVolume_get
    if _newclass:
        MinMarketOrderVolume = _swig_property(_pyctp.CThostFtdcProductField_MinMarketOrderVolume_get, _pyctp.CThostFtdcProductField_MinMarketOrderVolume_set)
    __swig_setmethods__["MaxLimitOrderVolume"] = _pyctp.CThostFtdcProductField_MaxLimitOrderVolume_set
    __swig_getmethods__["MaxLimitOrderVolume"] = _pyctp.CThostFtdcProductField_MaxLimitOrderVolume_get
    if _newclass:
        MaxLimitOrderVolume = _swig_property(_pyctp.CThostFtdcProductField_MaxLimitOrderVolume_get, _pyctp.CThostFtdcProductField_MaxLimitOrderVolume_set)
    __swig_setmethods__["MinLimitOrderVolume"] = _pyctp.CThostFtdcProductField_MinLimitOrderVolume_set
    __swig_getmethods__["MinLimitOrderVolume"] = _pyctp.CThostFtdcProductField_MinLimitOrderVolume_get
    if _newclass:
        MinLimitOrderVolume = _swig_property(_pyctp.CThostFtdcProductField_MinLimitOrderVolume_get, _pyctp.CThostFtdcProductField_MinLimitOrderVolume_set)
    __swig_setmethods__["PositionType"] = _pyctp.CThostFtdcProductField_PositionType_set
    __swig_getmethods__["PositionType"] = _pyctp.CThostFtdcProductField_PositionType_get
    if _newclass:
        PositionType = _swig_property(_pyctp.CThostFtdcProductField_PositionType_get, _pyctp.CThostFtdcProductField_PositionType_set)
    __swig_setmethods__["PositionDateType"] = _pyctp.CThostFtdcProductField_PositionDateType_set
    __swig_getmethods__["PositionDateType"] = _pyctp.CThostFtdcProductField_PositionDateType_get
    if _newclass:
        PositionDateType = _swig_property(_pyctp.CThostFtdcProductField_PositionDateType_get, _pyctp.CThostFtdcProductField_PositionDateType_set)
    __swig_setmethods__["CloseDealType"] = _pyctp.CThostFtdcProductField_CloseDealType_set
    __swig_getmethods__["CloseDealType"] = _pyctp.CThostFtdcProductField_CloseDealType_get
    if _newclass:
        CloseDealType = _swig_property(_pyctp.CThostFtdcProductField_CloseDealType_get, _pyctp.CThostFtdcProductField_CloseDealType_set)
    __swig_setmethods__["TradeCurrencyID"] = _pyctp.CThostFtdcProductField_TradeCurrencyID_set
    __swig_getmethods__["TradeCurrencyID"] = _pyctp.CThostFtdcProductField_TradeCurrencyID_get
    if _newclass:
        TradeCurrencyID = _swig_property(_pyctp.CThostFtdcProductField_TradeCurrencyID_get, _pyctp.CThostFtdcProductField_TradeCurrencyID_set)
    __swig_setmethods__["MortgageFundUseRange"] = _pyctp.CThostFtdcProductField_MortgageFundUseRange_set
    __swig_getmethods__["MortgageFundUseRange"] = _pyctp.CThostFtdcProductField_MortgageFundUseRange_get
    if _newclass:
        MortgageFundUseRange = _swig_property(_pyctp.CThostFtdcProductField_MortgageFundUseRange_get, _pyctp.CThostFtdcProductField_MortgageFundUseRange_set)
    __swig_setmethods__["ExchangeProductID"] = _pyctp.CThostFtdcProductField_ExchangeProductID_set
    __swig_getmethods__["ExchangeProductID"] = _pyctp.CThostFtdcProductField_ExchangeProductID_get
    if _newclass:
        ExchangeProductID = _swig_property(_pyctp.CThostFtdcProductField_ExchangeProductID_get, _pyctp.CThostFtdcProductField_ExchangeProductID_set)
    __swig_setmethods__["UnderlyingMultiple"] = _pyctp.CThostFtdcProductField_UnderlyingMultiple_set
    __swig_getmethods__["UnderlyingMultiple"] = _pyctp.CThostFtdcProductField_UnderlyingMultiple_get
    if _newclass:
        UnderlyingMultiple = _swig_property(_pyctp.CThostFtdcProductField_UnderlyingMultiple_get, _pyctp.CThostFtdcProductField_UnderlyingMultiple_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcProductField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcProductField
    __del__ = lambda self: None
CThostFtdcProductField_swigregister = _pyctp.CThostFtdcProductField_swigregister
CThostFtdcProductField_swigregister(CThostFtdcProductField)

class CThostFtdcInstrumentField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcInstrumentField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcInstrumentField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcInstrumentField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcInstrumentField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcInstrumentField_InstrumentID_get, _pyctp.CThostFtdcInstrumentField_InstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcInstrumentField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcInstrumentField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcInstrumentField_ExchangeID_get, _pyctp.CThostFtdcInstrumentField_ExchangeID_set)
    __swig_setmethods__["InstrumentName"] = _pyctp.CThostFtdcInstrumentField_InstrumentName_set
    __swig_getmethods__["InstrumentName"] = _pyctp.CThostFtdcInstrumentField_InstrumentName_get
    if _newclass:
        InstrumentName = _swig_property(_pyctp.CThostFtdcInstrumentField_InstrumentName_get, _pyctp.CThostFtdcInstrumentField_InstrumentName_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CThostFtdcInstrumentField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CThostFtdcInstrumentField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CThostFtdcInstrumentField_ExchangeInstID_get, _pyctp.CThostFtdcInstrumentField_ExchangeInstID_set)
    __swig_setmethods__["ProductID"] = _pyctp.CThostFtdcInstrumentField_ProductID_set
    __swig_getmethods__["ProductID"] = _pyctp.CThostFtdcInstrumentField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_pyctp.CThostFtdcInstrumentField_ProductID_get, _pyctp.CThostFtdcInstrumentField_ProductID_set)
    __swig_setmethods__["ProductClass"] = _pyctp.CThostFtdcInstrumentField_ProductClass_set
    __swig_getmethods__["ProductClass"] = _pyctp.CThostFtdcInstrumentField_ProductClass_get
    if _newclass:
        ProductClass = _swig_property(_pyctp.CThostFtdcInstrumentField_ProductClass_get, _pyctp.CThostFtdcInstrumentField_ProductClass_set)
    __swig_setmethods__["DeliveryYear"] = _pyctp.CThostFtdcInstrumentField_DeliveryYear_set
    __swig_getmethods__["DeliveryYear"] = _pyctp.CThostFtdcInstrumentField_DeliveryYear_get
    if _newclass:
        DeliveryYear = _swig_property(_pyctp.CThostFtdcInstrumentField_DeliveryYear_get, _pyctp.CThostFtdcInstrumentField_DeliveryYear_set)
    __swig_setmethods__["DeliveryMonth"] = _pyctp.CThostFtdcInstrumentField_DeliveryMonth_set
    __swig_getmethods__["DeliveryMonth"] = _pyctp.CThostFtdcInstrumentField_DeliveryMonth_get
    if _newclass:
        DeliveryMonth = _swig_property(_pyctp.CThostFtdcInstrumentField_DeliveryMonth_get, _pyctp.CThostFtdcInstrumentField_DeliveryMonth_set)
    __swig_setmethods__["MaxMarketOrderVolume"] = _pyctp.CThostFtdcInstrumentField_MaxMarketOrderVolume_set
    __swig_getmethods__["MaxMarketOrderVolume"] = _pyctp.CThostFtdcInstrumentField_MaxMarketOrderVolume_get
    if _newclass:
        MaxMarketOrderVolume = _swig_property(_pyctp.CThostFtdcInstrumentField_MaxMarketOrderVolume_get, _pyctp.CThostFtdcInstrumentField_MaxMarketOrderVolume_set)
    __swig_setmethods__["MinMarketOrderVolume"] = _pyctp.CThostFtdcInstrumentField_MinMarketOrderVolume_set
    __swig_getmethods__["MinMarketOrderVolume"] = _pyctp.CThostFtdcInstrumentField_MinMarketOrderVolume_get
    if _newclass:
        MinMarketOrderVolume = _swig_property(_pyctp.CThostFtdcInstrumentField_MinMarketOrderVolume_get, _pyctp.CThostFtdcInstrumentField_MinMarketOrderVolume_set)
    __swig_setmethods__["MaxLimitOrderVolume"] = _pyctp.CThostFtdcInstrumentField_MaxLimitOrderVolume_set
    __swig_getmethods__["MaxLimitOrderVolume"] = _pyctp.CThostFtdcInstrumentField_MaxLimitOrderVolume_get
    if _newclass:
        MaxLimitOrderVolume = _swig_property(_pyctp.CThostFtdcInstrumentField_MaxLimitOrderVolume_get, _pyctp.CThostFtdcInstrumentField_MaxLimitOrderVolume_set)
    __swig_setmethods__["MinLimitOrderVolume"] = _pyctp.CThostFtdcInstrumentField_MinLimitOrderVolume_set
    __swig_getmethods__["MinLimitOrderVolume"] = _pyctp.CThostFtdcInstrumentField_MinLimitOrderVolume_get
    if _newclass:
        MinLimitOrderVolume = _swig_property(_pyctp.CThostFtdcInstrumentField_MinLimitOrderVolume_get, _pyctp.CThostFtdcInstrumentField_MinLimitOrderVolume_set)
    __swig_setmethods__["VolumeMultiple"] = _pyctp.CThostFtdcInstrumentField_VolumeMultiple_set
    __swig_getmethods__["VolumeMultiple"] = _pyctp.CThostFtdcInstrumentField_VolumeMultiple_get
    if _newclass:
        VolumeMultiple = _swig_property(_pyctp.CThostFtdcInstrumentField_VolumeMultiple_get, _pyctp.CThostFtdcInstrumentField_VolumeMultiple_set)
    __swig_setmethods__["PriceTick"] = _pyctp.CThostFtdcInstrumentField_PriceTick_set
    __swig_getmethods__["PriceTick"] = _pyctp.CThostFtdcInstrumentField_PriceTick_get
    if _newclass:
        PriceTick = _swig_property(_pyctp.CThostFtdcInstrumentField_PriceTick_get, _pyctp.CThostFtdcInstrumentField_PriceTick_set)
    __swig_setmethods__["CreateDate"] = _pyctp.CThostFtdcInstrumentField_CreateDate_set
    __swig_getmethods__["CreateDate"] = _pyctp.CThostFtdcInstrumentField_CreateDate_get
    if _newclass:
        CreateDate = _swig_property(_pyctp.CThostFtdcInstrumentField_CreateDate_get, _pyctp.CThostFtdcInstrumentField_CreateDate_set)
    __swig_setmethods__["OpenDate"] = _pyctp.CThostFtdcInstrumentField_OpenDate_set
    __swig_getmethods__["OpenDate"] = _pyctp.CThostFtdcInstrumentField_OpenDate_get
    if _newclass:
        OpenDate = _swig_property(_pyctp.CThostFtdcInstrumentField_OpenDate_get, _pyctp.CThostFtdcInstrumentField_OpenDate_set)
    __swig_setmethods__["ExpireDate"] = _pyctp.CThostFtdcInstrumentField_ExpireDate_set
    __swig_getmethods__["ExpireDate"] = _pyctp.CThostFtdcInstrumentField_ExpireDate_get
    if _newclass:
        ExpireDate = _swig_property(_pyctp.CThostFtdcInstrumentField_ExpireDate_get, _pyctp.CThostFtdcInstrumentField_ExpireDate_set)
    __swig_setmethods__["StartDelivDate"] = _pyctp.CThostFtdcInstrumentField_StartDelivDate_set
    __swig_getmethods__["StartDelivDate"] = _pyctp.CThostFtdcInstrumentField_StartDelivDate_get
    if _newclass:
        StartDelivDate = _swig_property(_pyctp.CThostFtdcInstrumentField_StartDelivDate_get, _pyctp.CThostFtdcInstrumentField_StartDelivDate_set)
    __swig_setmethods__["EndDelivDate"] = _pyctp.CThostFtdcInstrumentField_EndDelivDate_set
    __swig_getmethods__["EndDelivDate"] = _pyctp.CThostFtdcInstrumentField_EndDelivDate_get
    if _newclass:
        EndDelivDate = _swig_property(_pyctp.CThostFtdcInstrumentField_EndDelivDate_get, _pyctp.CThostFtdcInstrumentField_EndDelivDate_set)
    __swig_setmethods__["InstLifePhase"] = _pyctp.CThostFtdcInstrumentField_InstLifePhase_set
    __swig_getmethods__["InstLifePhase"] = _pyctp.CThostFtdcInstrumentField_InstLifePhase_get
    if _newclass:
        InstLifePhase = _swig_property(_pyctp.CThostFtdcInstrumentField_InstLifePhase_get, _pyctp.CThostFtdcInstrumentField_InstLifePhase_set)
    __swig_setmethods__["IsTrading"] = _pyctp.CThostFtdcInstrumentField_IsTrading_set
    __swig_getmethods__["IsTrading"] = _pyctp.CThostFtdcInstrumentField_IsTrading_get
    if _newclass:
        IsTrading = _swig_property(_pyctp.CThostFtdcInstrumentField_IsTrading_get, _pyctp.CThostFtdcInstrumentField_IsTrading_set)
    __swig_setmethods__["PositionType"] = _pyctp.CThostFtdcInstrumentField_PositionType_set
    __swig_getmethods__["PositionType"] = _pyctp.CThostFtdcInstrumentField_PositionType_get
    if _newclass:
        PositionType = _swig_property(_pyctp.CThostFtdcInstrumentField_PositionType_get, _pyctp.CThostFtdcInstrumentField_PositionType_set)
    __swig_setmethods__["PositionDateType"] = _pyctp.CThostFtdcInstrumentField_PositionDateType_set
    __swig_getmethods__["PositionDateType"] = _pyctp.CThostFtdcInstrumentField_PositionDateType_get
    if _newclass:
        PositionDateType = _swig_property(_pyctp.CThostFtdcInstrumentField_PositionDateType_get, _pyctp.CThostFtdcInstrumentField_PositionDateType_set)
    __swig_setmethods__["LongMarginRatio"] = _pyctp.CThostFtdcInstrumentField_LongMarginRatio_set
    __swig_getmethods__["LongMarginRatio"] = _pyctp.CThostFtdcInstrumentField_LongMarginRatio_get
    if _newclass:
        LongMarginRatio = _swig_property(_pyctp.CThostFtdcInstrumentField_LongMarginRatio_get, _pyctp.CThostFtdcInstrumentField_LongMarginRatio_set)
    __swig_setmethods__["ShortMarginRatio"] = _pyctp.CThostFtdcInstrumentField_ShortMarginRatio_set
    __swig_getmethods__["ShortMarginRatio"] = _pyctp.CThostFtdcInstrumentField_ShortMarginRatio_get
    if _newclass:
        ShortMarginRatio = _swig_property(_pyctp.CThostFtdcInstrumentField_ShortMarginRatio_get, _pyctp.CThostFtdcInstrumentField_ShortMarginRatio_set)
    __swig_setmethods__["MaxMarginSideAlgorithm"] = _pyctp.CThostFtdcInstrumentField_MaxMarginSideAlgorithm_set
    __swig_getmethods__["MaxMarginSideAlgorithm"] = _pyctp.CThostFtdcInstrumentField_MaxMarginSideAlgorithm_get
    if _newclass:
        MaxMarginSideAlgorithm = _swig_property(_pyctp.CThostFtdcInstrumentField_MaxMarginSideAlgorithm_get, _pyctp.CThostFtdcInstrumentField_MaxMarginSideAlgorithm_set)
    __swig_setmethods__["UnderlyingInstrID"] = _pyctp.CThostFtdcInstrumentField_UnderlyingInstrID_set
    __swig_getmethods__["UnderlyingInstrID"] = _pyctp.CThostFtdcInstrumentField_UnderlyingInstrID_get
    if _newclass:
        UnderlyingInstrID = _swig_property(_pyctp.CThostFtdcInstrumentField_UnderlyingInstrID_get, _pyctp.CThostFtdcInstrumentField_UnderlyingInstrID_set)
    __swig_setmethods__["StrikePrice"] = _pyctp.CThostFtdcInstrumentField_StrikePrice_set
    __swig_getmethods__["StrikePrice"] = _pyctp.CThostFtdcInstrumentField_StrikePrice_get
    if _newclass:
        StrikePrice = _swig_property(_pyctp.CThostFtdcInstrumentField_StrikePrice_get, _pyctp.CThostFtdcInstrumentField_StrikePrice_set)
    __swig_setmethods__["OptionsType"] = _pyctp.CThostFtdcInstrumentField_OptionsType_set
    __swig_getmethods__["OptionsType"] = _pyctp.CThostFtdcInstrumentField_OptionsType_get
    if _newclass:
        OptionsType = _swig_property(_pyctp.CThostFtdcInstrumentField_OptionsType_get, _pyctp.CThostFtdcInstrumentField_OptionsType_set)
    __swig_setmethods__["UnderlyingMultiple"] = _pyctp.CThostFtdcInstrumentField_UnderlyingMultiple_set
    __swig_getmethods__["UnderlyingMultiple"] = _pyctp.CThostFtdcInstrumentField_UnderlyingMultiple_get
    if _newclass:
        UnderlyingMultiple = _swig_property(_pyctp.CThostFtdcInstrumentField_UnderlyingMultiple_get, _pyctp.CThostFtdcInstrumentField_UnderlyingMultiple_set)
    __swig_setmethods__["CombinationType"] = _pyctp.CThostFtdcInstrumentField_CombinationType_set
    __swig_getmethods__["CombinationType"] = _pyctp.CThostFtdcInstrumentField_CombinationType_get
    if _newclass:
        CombinationType = _swig_property(_pyctp.CThostFtdcInstrumentField_CombinationType_get, _pyctp.CThostFtdcInstrumentField_CombinationType_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcInstrumentField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcInstrumentField
    __del__ = lambda self: None
CThostFtdcInstrumentField_swigregister = _pyctp.CThostFtdcInstrumentField_swigregister
CThostFtdcInstrumentField_swigregister(CThostFtdcInstrumentField)

class CThostFtdcBrokerField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcBrokerField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcBrokerField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcBrokerField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcBrokerField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcBrokerField_BrokerID_get, _pyctp.CThostFtdcBrokerField_BrokerID_set)
    __swig_setmethods__["BrokerAbbr"] = _pyctp.CThostFtdcBrokerField_BrokerAbbr_set
    __swig_getmethods__["BrokerAbbr"] = _pyctp.CThostFtdcBrokerField_BrokerAbbr_get
    if _newclass:
        BrokerAbbr = _swig_property(_pyctp.CThostFtdcBrokerField_BrokerAbbr_get, _pyctp.CThostFtdcBrokerField_BrokerAbbr_set)
    __swig_setmethods__["BrokerName"] = _pyctp.CThostFtdcBrokerField_BrokerName_set
    __swig_getmethods__["BrokerName"] = _pyctp.CThostFtdcBrokerField_BrokerName_get
    if _newclass:
        BrokerName = _swig_property(_pyctp.CThostFtdcBrokerField_BrokerName_get, _pyctp.CThostFtdcBrokerField_BrokerName_set)
    __swig_setmethods__["IsActive"] = _pyctp.CThostFtdcBrokerField_IsActive_set
    __swig_getmethods__["IsActive"] = _pyctp.CThostFtdcBrokerField_IsActive_get
    if _newclass:
        IsActive = _swig_property(_pyctp.CThostFtdcBrokerField_IsActive_get, _pyctp.CThostFtdcBrokerField_IsActive_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcBrokerField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcBrokerField
    __del__ = lambda self: None
CThostFtdcBrokerField_swigregister = _pyctp.CThostFtdcBrokerField_swigregister
CThostFtdcBrokerField_swigregister(CThostFtdcBrokerField)

class CThostFtdcTraderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcTraderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcTraderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcTraderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcTraderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcTraderField_ExchangeID_get, _pyctp.CThostFtdcTraderField_ExchangeID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcTraderField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcTraderField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcTraderField_TraderID_get, _pyctp.CThostFtdcTraderField_TraderID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcTraderField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcTraderField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcTraderField_ParticipantID_get, _pyctp.CThostFtdcTraderField_ParticipantID_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcTraderField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcTraderField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcTraderField_Password_get, _pyctp.CThostFtdcTraderField_Password_set)
    __swig_setmethods__["InstallCount"] = _pyctp.CThostFtdcTraderField_InstallCount_set
    __swig_getmethods__["InstallCount"] = _pyctp.CThostFtdcTraderField_InstallCount_get
    if _newclass:
        InstallCount = _swig_property(_pyctp.CThostFtdcTraderField_InstallCount_get, _pyctp.CThostFtdcTraderField_InstallCount_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcTraderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcTraderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcTraderField_BrokerID_get, _pyctp.CThostFtdcTraderField_BrokerID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcTraderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcTraderField
    __del__ = lambda self: None
CThostFtdcTraderField_swigregister = _pyctp.CThostFtdcTraderField_swigregister
CThostFtdcTraderField_swigregister(CThostFtdcTraderField)

class CThostFtdcInvestorField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcInvestorField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcInvestorField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcInvestorField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcInvestorField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcInvestorField_InvestorID_get, _pyctp.CThostFtdcInvestorField_InvestorID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcInvestorField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcInvestorField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcInvestorField_BrokerID_get, _pyctp.CThostFtdcInvestorField_BrokerID_set)
    __swig_setmethods__["InvestorGroupID"] = _pyctp.CThostFtdcInvestorField_InvestorGroupID_set
    __swig_getmethods__["InvestorGroupID"] = _pyctp.CThostFtdcInvestorField_InvestorGroupID_get
    if _newclass:
        InvestorGroupID = _swig_property(_pyctp.CThostFtdcInvestorField_InvestorGroupID_get, _pyctp.CThostFtdcInvestorField_InvestorGroupID_set)
    __swig_setmethods__["InvestorName"] = _pyctp.CThostFtdcInvestorField_InvestorName_set
    __swig_getmethods__["InvestorName"] = _pyctp.CThostFtdcInvestorField_InvestorName_get
    if _newclass:
        InvestorName = _swig_property(_pyctp.CThostFtdcInvestorField_InvestorName_get, _pyctp.CThostFtdcInvestorField_InvestorName_set)
    __swig_setmethods__["IdentifiedCardType"] = _pyctp.CThostFtdcInvestorField_IdentifiedCardType_set
    __swig_getmethods__["IdentifiedCardType"] = _pyctp.CThostFtdcInvestorField_IdentifiedCardType_get
    if _newclass:
        IdentifiedCardType = _swig_property(_pyctp.CThostFtdcInvestorField_IdentifiedCardType_get, _pyctp.CThostFtdcInvestorField_IdentifiedCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcInvestorField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcInvestorField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CThostFtdcInvestorField_IdentifiedCardNo_get, _pyctp.CThostFtdcInvestorField_IdentifiedCardNo_set)
    __swig_setmethods__["IsActive"] = _pyctp.CThostFtdcInvestorField_IsActive_set
    __swig_getmethods__["IsActive"] = _pyctp.CThostFtdcInvestorField_IsActive_get
    if _newclass:
        IsActive = _swig_property(_pyctp.CThostFtdcInvestorField_IsActive_get, _pyctp.CThostFtdcInvestorField_IsActive_set)
    __swig_setmethods__["Telephone"] = _pyctp.CThostFtdcInvestorField_Telephone_set
    __swig_getmethods__["Telephone"] = _pyctp.CThostFtdcInvestorField_Telephone_get
    if _newclass:
        Telephone = _swig_property(_pyctp.CThostFtdcInvestorField_Telephone_get, _pyctp.CThostFtdcInvestorField_Telephone_set)
    __swig_setmethods__["Address"] = _pyctp.CThostFtdcInvestorField_Address_set
    __swig_getmethods__["Address"] = _pyctp.CThostFtdcInvestorField_Address_get
    if _newclass:
        Address = _swig_property(_pyctp.CThostFtdcInvestorField_Address_get, _pyctp.CThostFtdcInvestorField_Address_set)
    __swig_setmethods__["OpenDate"] = _pyctp.CThostFtdcInvestorField_OpenDate_set
    __swig_getmethods__["OpenDate"] = _pyctp.CThostFtdcInvestorField_OpenDate_get
    if _newclass:
        OpenDate = _swig_property(_pyctp.CThostFtdcInvestorField_OpenDate_get, _pyctp.CThostFtdcInvestorField_OpenDate_set)
    __swig_setmethods__["Mobile"] = _pyctp.CThostFtdcInvestorField_Mobile_set
    __swig_getmethods__["Mobile"] = _pyctp.CThostFtdcInvestorField_Mobile_get
    if _newclass:
        Mobile = _swig_property(_pyctp.CThostFtdcInvestorField_Mobile_get, _pyctp.CThostFtdcInvestorField_Mobile_set)
    __swig_setmethods__["CommModelID"] = _pyctp.CThostFtdcInvestorField_CommModelID_set
    __swig_getmethods__["CommModelID"] = _pyctp.CThostFtdcInvestorField_CommModelID_get
    if _newclass:
        CommModelID = _swig_property(_pyctp.CThostFtdcInvestorField_CommModelID_get, _pyctp.CThostFtdcInvestorField_CommModelID_set)
    __swig_setmethods__["MarginModelID"] = _pyctp.CThostFtdcInvestorField_MarginModelID_set
    __swig_getmethods__["MarginModelID"] = _pyctp.CThostFtdcInvestorField_MarginModelID_get
    if _newclass:
        MarginModelID = _swig_property(_pyctp.CThostFtdcInvestorField_MarginModelID_get, _pyctp.CThostFtdcInvestorField_MarginModelID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcInvestorField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcInvestorField
    __del__ = lambda self: None
CThostFtdcInvestorField_swigregister = _pyctp.CThostFtdcInvestorField_swigregister
CThostFtdcInvestorField_swigregister(CThostFtdcInvestorField)

class CThostFtdcTradingCodeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcTradingCodeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcTradingCodeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcTradingCodeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcTradingCodeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcTradingCodeField_InvestorID_get, _pyctp.CThostFtdcTradingCodeField_InvestorID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcTradingCodeField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcTradingCodeField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcTradingCodeField_BrokerID_get, _pyctp.CThostFtdcTradingCodeField_BrokerID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcTradingCodeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcTradingCodeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcTradingCodeField_ExchangeID_get, _pyctp.CThostFtdcTradingCodeField_ExchangeID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcTradingCodeField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcTradingCodeField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcTradingCodeField_ClientID_get, _pyctp.CThostFtdcTradingCodeField_ClientID_set)
    __swig_setmethods__["IsActive"] = _pyctp.CThostFtdcTradingCodeField_IsActive_set
    __swig_getmethods__["IsActive"] = _pyctp.CThostFtdcTradingCodeField_IsActive_get
    if _newclass:
        IsActive = _swig_property(_pyctp.CThostFtdcTradingCodeField_IsActive_get, _pyctp.CThostFtdcTradingCodeField_IsActive_set)
    __swig_setmethods__["ClientIDType"] = _pyctp.CThostFtdcTradingCodeField_ClientIDType_set
    __swig_getmethods__["ClientIDType"] = _pyctp.CThostFtdcTradingCodeField_ClientIDType_get
    if _newclass:
        ClientIDType = _swig_property(_pyctp.CThostFtdcTradingCodeField_ClientIDType_get, _pyctp.CThostFtdcTradingCodeField_ClientIDType_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcTradingCodeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcTradingCodeField
    __del__ = lambda self: None
CThostFtdcTradingCodeField_swigregister = _pyctp.CThostFtdcTradingCodeField_swigregister
CThostFtdcTradingCodeField_swigregister(CThostFtdcTradingCodeField)

class CThostFtdcPartBrokerField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcPartBrokerField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcPartBrokerField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcPartBrokerField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcPartBrokerField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcPartBrokerField_BrokerID_get, _pyctp.CThostFtdcPartBrokerField_BrokerID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcPartBrokerField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcPartBrokerField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcPartBrokerField_ExchangeID_get, _pyctp.CThostFtdcPartBrokerField_ExchangeID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcPartBrokerField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcPartBrokerField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcPartBrokerField_ParticipantID_get, _pyctp.CThostFtdcPartBrokerField_ParticipantID_set)
    __swig_setmethods__["IsActive"] = _pyctp.CThostFtdcPartBrokerField_IsActive_set
    __swig_getmethods__["IsActive"] = _pyctp.CThostFtdcPartBrokerField_IsActive_get
    if _newclass:
        IsActive = _swig_property(_pyctp.CThostFtdcPartBrokerField_IsActive_get, _pyctp.CThostFtdcPartBrokerField_IsActive_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcPartBrokerField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcPartBrokerField
    __del__ = lambda self: None
CThostFtdcPartBrokerField_swigregister = _pyctp.CThostFtdcPartBrokerField_swigregister
CThostFtdcPartBrokerField_swigregister(CThostFtdcPartBrokerField)

class CThostFtdcSuperUserField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcSuperUserField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcSuperUserField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcSuperUserField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcSuperUserField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcSuperUserField_UserID_get, _pyctp.CThostFtdcSuperUserField_UserID_set)
    __swig_setmethods__["UserName"] = _pyctp.CThostFtdcSuperUserField_UserName_set
    __swig_getmethods__["UserName"] = _pyctp.CThostFtdcSuperUserField_UserName_get
    if _newclass:
        UserName = _swig_property(_pyctp.CThostFtdcSuperUserField_UserName_get, _pyctp.CThostFtdcSuperUserField_UserName_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcSuperUserField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcSuperUserField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcSuperUserField_Password_get, _pyctp.CThostFtdcSuperUserField_Password_set)
    __swig_setmethods__["IsActive"] = _pyctp.CThostFtdcSuperUserField_IsActive_set
    __swig_getmethods__["IsActive"] = _pyctp.CThostFtdcSuperUserField_IsActive_get
    if _newclass:
        IsActive = _swig_property(_pyctp.CThostFtdcSuperUserField_IsActive_get, _pyctp.CThostFtdcSuperUserField_IsActive_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcSuperUserField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcSuperUserField
    __del__ = lambda self: None
CThostFtdcSuperUserField_swigregister = _pyctp.CThostFtdcSuperUserField_swigregister
CThostFtdcSuperUserField_swigregister(CThostFtdcSuperUserField)

class CThostFtdcSuperUserFunctionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcSuperUserFunctionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcSuperUserFunctionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcSuperUserFunctionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcSuperUserFunctionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcSuperUserFunctionField_UserID_get, _pyctp.CThostFtdcSuperUserFunctionField_UserID_set)
    __swig_setmethods__["FunctionCode"] = _pyctp.CThostFtdcSuperUserFunctionField_FunctionCode_set
    __swig_getmethods__["FunctionCode"] = _pyctp.CThostFtdcSuperUserFunctionField_FunctionCode_get
    if _newclass:
        FunctionCode = _swig_property(_pyctp.CThostFtdcSuperUserFunctionField_FunctionCode_get, _pyctp.CThostFtdcSuperUserFunctionField_FunctionCode_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcSuperUserFunctionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcSuperUserFunctionField
    __del__ = lambda self: None
CThostFtdcSuperUserFunctionField_swigregister = _pyctp.CThostFtdcSuperUserFunctionField_swigregister
CThostFtdcSuperUserFunctionField_swigregister(CThostFtdcSuperUserFunctionField)

class CThostFtdcInvestorGroupField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcInvestorGroupField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcInvestorGroupField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcInvestorGroupField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcInvestorGroupField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcInvestorGroupField_BrokerID_get, _pyctp.CThostFtdcInvestorGroupField_BrokerID_set)
    __swig_setmethods__["InvestorGroupID"] = _pyctp.CThostFtdcInvestorGroupField_InvestorGroupID_set
    __swig_getmethods__["InvestorGroupID"] = _pyctp.CThostFtdcInvestorGroupField_InvestorGroupID_get
    if _newclass:
        InvestorGroupID = _swig_property(_pyctp.CThostFtdcInvestorGroupField_InvestorGroupID_get, _pyctp.CThostFtdcInvestorGroupField_InvestorGroupID_set)
    __swig_setmethods__["InvestorGroupName"] = _pyctp.CThostFtdcInvestorGroupField_InvestorGroupName_set
    __swig_getmethods__["InvestorGroupName"] = _pyctp.CThostFtdcInvestorGroupField_InvestorGroupName_get
    if _newclass:
        InvestorGroupName = _swig_property(_pyctp.CThostFtdcInvestorGroupField_InvestorGroupName_get, _pyctp.CThostFtdcInvestorGroupField_InvestorGroupName_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcInvestorGroupField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcInvestorGroupField
    __del__ = lambda self: None
CThostFtdcInvestorGroupField_swigregister = _pyctp.CThostFtdcInvestorGroupField_swigregister
CThostFtdcInvestorGroupField_swigregister(CThostFtdcInvestorGroupField)

class CThostFtdcTradingAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcTradingAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcTradingAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcTradingAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcTradingAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcTradingAccountField_BrokerID_get, _pyctp.CThostFtdcTradingAccountField_BrokerID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcTradingAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcTradingAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcTradingAccountField_AccountID_get, _pyctp.CThostFtdcTradingAccountField_AccountID_set)
    __swig_setmethods__["PreMortgage"] = _pyctp.CThostFtdcTradingAccountField_PreMortgage_set
    __swig_getmethods__["PreMortgage"] = _pyctp.CThostFtdcTradingAccountField_PreMortgage_get
    if _newclass:
        PreMortgage = _swig_property(_pyctp.CThostFtdcTradingAccountField_PreMortgage_get, _pyctp.CThostFtdcTradingAccountField_PreMortgage_set)
    __swig_setmethods__["PreCredit"] = _pyctp.CThostFtdcTradingAccountField_PreCredit_set
    __swig_getmethods__["PreCredit"] = _pyctp.CThostFtdcTradingAccountField_PreCredit_get
    if _newclass:
        PreCredit = _swig_property(_pyctp.CThostFtdcTradingAccountField_PreCredit_get, _pyctp.CThostFtdcTradingAccountField_PreCredit_set)
    __swig_setmethods__["PreDeposit"] = _pyctp.CThostFtdcTradingAccountField_PreDeposit_set
    __swig_getmethods__["PreDeposit"] = _pyctp.CThostFtdcTradingAccountField_PreDeposit_get
    if _newclass:
        PreDeposit = _swig_property(_pyctp.CThostFtdcTradingAccountField_PreDeposit_get, _pyctp.CThostFtdcTradingAccountField_PreDeposit_set)
    __swig_setmethods__["PreBalance"] = _pyctp.CThostFtdcTradingAccountField_PreBalance_set
    __swig_getmethods__["PreBalance"] = _pyctp.CThostFtdcTradingAccountField_PreBalance_get
    if _newclass:
        PreBalance = _swig_property(_pyctp.CThostFtdcTradingAccountField_PreBalance_get, _pyctp.CThostFtdcTradingAccountField_PreBalance_set)
    __swig_setmethods__["PreMargin"] = _pyctp.CThostFtdcTradingAccountField_PreMargin_set
    __swig_getmethods__["PreMargin"] = _pyctp.CThostFtdcTradingAccountField_PreMargin_get
    if _newclass:
        PreMargin = _swig_property(_pyctp.CThostFtdcTradingAccountField_PreMargin_get, _pyctp.CThostFtdcTradingAccountField_PreMargin_set)
    __swig_setmethods__["InterestBase"] = _pyctp.CThostFtdcTradingAccountField_InterestBase_set
    __swig_getmethods__["InterestBase"] = _pyctp.CThostFtdcTradingAccountField_InterestBase_get
    if _newclass:
        InterestBase = _swig_property(_pyctp.CThostFtdcTradingAccountField_InterestBase_get, _pyctp.CThostFtdcTradingAccountField_InterestBase_set)
    __swig_setmethods__["Interest"] = _pyctp.CThostFtdcTradingAccountField_Interest_set
    __swig_getmethods__["Interest"] = _pyctp.CThostFtdcTradingAccountField_Interest_get
    if _newclass:
        Interest = _swig_property(_pyctp.CThostFtdcTradingAccountField_Interest_get, _pyctp.CThostFtdcTradingAccountField_Interest_set)
    __swig_setmethods__["Deposit"] = _pyctp.CThostFtdcTradingAccountField_Deposit_set
    __swig_getmethods__["Deposit"] = _pyctp.CThostFtdcTradingAccountField_Deposit_get
    if _newclass:
        Deposit = _swig_property(_pyctp.CThostFtdcTradingAccountField_Deposit_get, _pyctp.CThostFtdcTradingAccountField_Deposit_set)
    __swig_setmethods__["Withdraw"] = _pyctp.CThostFtdcTradingAccountField_Withdraw_set
    __swig_getmethods__["Withdraw"] = _pyctp.CThostFtdcTradingAccountField_Withdraw_get
    if _newclass:
        Withdraw = _swig_property(_pyctp.CThostFtdcTradingAccountField_Withdraw_get, _pyctp.CThostFtdcTradingAccountField_Withdraw_set)
    __swig_setmethods__["FrozenMargin"] = _pyctp.CThostFtdcTradingAccountField_FrozenMargin_set
    __swig_getmethods__["FrozenMargin"] = _pyctp.CThostFtdcTradingAccountField_FrozenMargin_get
    if _newclass:
        FrozenMargin = _swig_property(_pyctp.CThostFtdcTradingAccountField_FrozenMargin_get, _pyctp.CThostFtdcTradingAccountField_FrozenMargin_set)
    __swig_setmethods__["FrozenCash"] = _pyctp.CThostFtdcTradingAccountField_FrozenCash_set
    __swig_getmethods__["FrozenCash"] = _pyctp.CThostFtdcTradingAccountField_FrozenCash_get
    if _newclass:
        FrozenCash = _swig_property(_pyctp.CThostFtdcTradingAccountField_FrozenCash_get, _pyctp.CThostFtdcTradingAccountField_FrozenCash_set)
    __swig_setmethods__["FrozenCommission"] = _pyctp.CThostFtdcTradingAccountField_FrozenCommission_set
    __swig_getmethods__["FrozenCommission"] = _pyctp.CThostFtdcTradingAccountField_FrozenCommission_get
    if _newclass:
        FrozenCommission = _swig_property(_pyctp.CThostFtdcTradingAccountField_FrozenCommission_get, _pyctp.CThostFtdcTradingAccountField_FrozenCommission_set)
    __swig_setmethods__["CurrMargin"] = _pyctp.CThostFtdcTradingAccountField_CurrMargin_set
    __swig_getmethods__["CurrMargin"] = _pyctp.CThostFtdcTradingAccountField_CurrMargin_get
    if _newclass:
        CurrMargin = _swig_property(_pyctp.CThostFtdcTradingAccountField_CurrMargin_get, _pyctp.CThostFtdcTradingAccountField_CurrMargin_set)
    __swig_setmethods__["CashIn"] = _pyctp.CThostFtdcTradingAccountField_CashIn_set
    __swig_getmethods__["CashIn"] = _pyctp.CThostFtdcTradingAccountField_CashIn_get
    if _newclass:
        CashIn = _swig_property(_pyctp.CThostFtdcTradingAccountField_CashIn_get, _pyctp.CThostFtdcTradingAccountField_CashIn_set)
    __swig_setmethods__["Commission"] = _pyctp.CThostFtdcTradingAccountField_Commission_set
    __swig_getmethods__["Commission"] = _pyctp.CThostFtdcTradingAccountField_Commission_get
    if _newclass:
        Commission = _swig_property(_pyctp.CThostFtdcTradingAccountField_Commission_get, _pyctp.CThostFtdcTradingAccountField_Commission_set)
    __swig_setmethods__["CloseProfit"] = _pyctp.CThostFtdcTradingAccountField_CloseProfit_set
    __swig_getmethods__["CloseProfit"] = _pyctp.CThostFtdcTradingAccountField_CloseProfit_get
    if _newclass:
        CloseProfit = _swig_property(_pyctp.CThostFtdcTradingAccountField_CloseProfit_get, _pyctp.CThostFtdcTradingAccountField_CloseProfit_set)
    __swig_setmethods__["PositionProfit"] = _pyctp.CThostFtdcTradingAccountField_PositionProfit_set
    __swig_getmethods__["PositionProfit"] = _pyctp.CThostFtdcTradingAccountField_PositionProfit_get
    if _newclass:
        PositionProfit = _swig_property(_pyctp.CThostFtdcTradingAccountField_PositionProfit_get, _pyctp.CThostFtdcTradingAccountField_PositionProfit_set)
    __swig_setmethods__["Balance"] = _pyctp.CThostFtdcTradingAccountField_Balance_set
    __swig_getmethods__["Balance"] = _pyctp.CThostFtdcTradingAccountField_Balance_get
    if _newclass:
        Balance = _swig_property(_pyctp.CThostFtdcTradingAccountField_Balance_get, _pyctp.CThostFtdcTradingAccountField_Balance_set)
    __swig_setmethods__["Available"] = _pyctp.CThostFtdcTradingAccountField_Available_set
    __swig_getmethods__["Available"] = _pyctp.CThostFtdcTradingAccountField_Available_get
    if _newclass:
        Available = _swig_property(_pyctp.CThostFtdcTradingAccountField_Available_get, _pyctp.CThostFtdcTradingAccountField_Available_set)
    __swig_setmethods__["WithdrawQuota"] = _pyctp.CThostFtdcTradingAccountField_WithdrawQuota_set
    __swig_getmethods__["WithdrawQuota"] = _pyctp.CThostFtdcTradingAccountField_WithdrawQuota_get
    if _newclass:
        WithdrawQuota = _swig_property(_pyctp.CThostFtdcTradingAccountField_WithdrawQuota_get, _pyctp.CThostFtdcTradingAccountField_WithdrawQuota_set)
    __swig_setmethods__["Reserve"] = _pyctp.CThostFtdcTradingAccountField_Reserve_set
    __swig_getmethods__["Reserve"] = _pyctp.CThostFtdcTradingAccountField_Reserve_get
    if _newclass:
        Reserve = _swig_property(_pyctp.CThostFtdcTradingAccountField_Reserve_get, _pyctp.CThostFtdcTradingAccountField_Reserve_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcTradingAccountField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcTradingAccountField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcTradingAccountField_TradingDay_get, _pyctp.CThostFtdcTradingAccountField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CThostFtdcTradingAccountField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CThostFtdcTradingAccountField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CThostFtdcTradingAccountField_SettlementID_get, _pyctp.CThostFtdcTradingAccountField_SettlementID_set)
    __swig_setmethods__["Credit"] = _pyctp.CThostFtdcTradingAccountField_Credit_set
    __swig_getmethods__["Credit"] = _pyctp.CThostFtdcTradingAccountField_Credit_get
    if _newclass:
        Credit = _swig_property(_pyctp.CThostFtdcTradingAccountField_Credit_get, _pyctp.CThostFtdcTradingAccountField_Credit_set)
    __swig_setmethods__["Mortgage"] = _pyctp.CThostFtdcTradingAccountField_Mortgage_set
    __swig_getmethods__["Mortgage"] = _pyctp.CThostFtdcTradingAccountField_Mortgage_get
    if _newclass:
        Mortgage = _swig_property(_pyctp.CThostFtdcTradingAccountField_Mortgage_get, _pyctp.CThostFtdcTradingAccountField_Mortgage_set)
    __swig_setmethods__["ExchangeMargin"] = _pyctp.CThostFtdcTradingAccountField_ExchangeMargin_set
    __swig_getmethods__["ExchangeMargin"] = _pyctp.CThostFtdcTradingAccountField_ExchangeMargin_get
    if _newclass:
        ExchangeMargin = _swig_property(_pyctp.CThostFtdcTradingAccountField_ExchangeMargin_get, _pyctp.CThostFtdcTradingAccountField_ExchangeMargin_set)
    __swig_setmethods__["DeliveryMargin"] = _pyctp.CThostFtdcTradingAccountField_DeliveryMargin_set
    __swig_getmethods__["DeliveryMargin"] = _pyctp.CThostFtdcTradingAccountField_DeliveryMargin_get
    if _newclass:
        DeliveryMargin = _swig_property(_pyctp.CThostFtdcTradingAccountField_DeliveryMargin_get, _pyctp.CThostFtdcTradingAccountField_DeliveryMargin_set)
    __swig_setmethods__["ExchangeDeliveryMargin"] = _pyctp.CThostFtdcTradingAccountField_ExchangeDeliveryMargin_set
    __swig_getmethods__["ExchangeDeliveryMargin"] = _pyctp.CThostFtdcTradingAccountField_ExchangeDeliveryMargin_get
    if _newclass:
        ExchangeDeliveryMargin = _swig_property(_pyctp.CThostFtdcTradingAccountField_ExchangeDeliveryMargin_get, _pyctp.CThostFtdcTradingAccountField_ExchangeDeliveryMargin_set)
    __swig_setmethods__["ReserveBalance"] = _pyctp.CThostFtdcTradingAccountField_ReserveBalance_set
    __swig_getmethods__["ReserveBalance"] = _pyctp.CThostFtdcTradingAccountField_ReserveBalance_get
    if _newclass:
        ReserveBalance = _swig_property(_pyctp.CThostFtdcTradingAccountField_ReserveBalance_get, _pyctp.CThostFtdcTradingAccountField_ReserveBalance_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcTradingAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcTradingAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcTradingAccountField_CurrencyID_get, _pyctp.CThostFtdcTradingAccountField_CurrencyID_set)
    __swig_setmethods__["PreFundMortgageIn"] = _pyctp.CThostFtdcTradingAccountField_PreFundMortgageIn_set
    __swig_getmethods__["PreFundMortgageIn"] = _pyctp.CThostFtdcTradingAccountField_PreFundMortgageIn_get
    if _newclass:
        PreFundMortgageIn = _swig_property(_pyctp.CThostFtdcTradingAccountField_PreFundMortgageIn_get, _pyctp.CThostFtdcTradingAccountField_PreFundMortgageIn_set)
    __swig_setmethods__["PreFundMortgageOut"] = _pyctp.CThostFtdcTradingAccountField_PreFundMortgageOut_set
    __swig_getmethods__["PreFundMortgageOut"] = _pyctp.CThostFtdcTradingAccountField_PreFundMortgageOut_get
    if _newclass:
        PreFundMortgageOut = _swig_property(_pyctp.CThostFtdcTradingAccountField_PreFundMortgageOut_get, _pyctp.CThostFtdcTradingAccountField_PreFundMortgageOut_set)
    __swig_setmethods__["FundMortgageIn"] = _pyctp.CThostFtdcTradingAccountField_FundMortgageIn_set
    __swig_getmethods__["FundMortgageIn"] = _pyctp.CThostFtdcTradingAccountField_FundMortgageIn_get
    if _newclass:
        FundMortgageIn = _swig_property(_pyctp.CThostFtdcTradingAccountField_FundMortgageIn_get, _pyctp.CThostFtdcTradingAccountField_FundMortgageIn_set)
    __swig_setmethods__["FundMortgageOut"] = _pyctp.CThostFtdcTradingAccountField_FundMortgageOut_set
    __swig_getmethods__["FundMortgageOut"] = _pyctp.CThostFtdcTradingAccountField_FundMortgageOut_get
    if _newclass:
        FundMortgageOut = _swig_property(_pyctp.CThostFtdcTradingAccountField_FundMortgageOut_get, _pyctp.CThostFtdcTradingAccountField_FundMortgageOut_set)
    __swig_setmethods__["FundMortgageAvailable"] = _pyctp.CThostFtdcTradingAccountField_FundMortgageAvailable_set
    __swig_getmethods__["FundMortgageAvailable"] = _pyctp.CThostFtdcTradingAccountField_FundMortgageAvailable_get
    if _newclass:
        FundMortgageAvailable = _swig_property(_pyctp.CThostFtdcTradingAccountField_FundMortgageAvailable_get, _pyctp.CThostFtdcTradingAccountField_FundMortgageAvailable_set)
    __swig_setmethods__["MortgageableFund"] = _pyctp.CThostFtdcTradingAccountField_MortgageableFund_set
    __swig_getmethods__["MortgageableFund"] = _pyctp.CThostFtdcTradingAccountField_MortgageableFund_get
    if _newclass:
        MortgageableFund = _swig_property(_pyctp.CThostFtdcTradingAccountField_MortgageableFund_get, _pyctp.CThostFtdcTradingAccountField_MortgageableFund_set)
    __swig_setmethods__["SpecProductMargin"] = _pyctp.CThostFtdcTradingAccountField_SpecProductMargin_set
    __swig_getmethods__["SpecProductMargin"] = _pyctp.CThostFtdcTradingAccountField_SpecProductMargin_get
    if _newclass:
        SpecProductMargin = _swig_property(_pyctp.CThostFtdcTradingAccountField_SpecProductMargin_get, _pyctp.CThostFtdcTradingAccountField_SpecProductMargin_set)
    __swig_setmethods__["SpecProductFrozenMargin"] = _pyctp.CThostFtdcTradingAccountField_SpecProductFrozenMargin_set
    __swig_getmethods__["SpecProductFrozenMargin"] = _pyctp.CThostFtdcTradingAccountField_SpecProductFrozenMargin_get
    if _newclass:
        SpecProductFrozenMargin = _swig_property(_pyctp.CThostFtdcTradingAccountField_SpecProductFrozenMargin_get, _pyctp.CThostFtdcTradingAccountField_SpecProductFrozenMargin_set)
    __swig_setmethods__["SpecProductCommission"] = _pyctp.CThostFtdcTradingAccountField_SpecProductCommission_set
    __swig_getmethods__["SpecProductCommission"] = _pyctp.CThostFtdcTradingAccountField_SpecProductCommission_get
    if _newclass:
        SpecProductCommission = _swig_property(_pyctp.CThostFtdcTradingAccountField_SpecProductCommission_get, _pyctp.CThostFtdcTradingAccountField_SpecProductCommission_set)
    __swig_setmethods__["SpecProductFrozenCommission"] = _pyctp.CThostFtdcTradingAccountField_SpecProductFrozenCommission_set
    __swig_getmethods__["SpecProductFrozenCommission"] = _pyctp.CThostFtdcTradingAccountField_SpecProductFrozenCommission_get
    if _newclass:
        SpecProductFrozenCommission = _swig_property(_pyctp.CThostFtdcTradingAccountField_SpecProductFrozenCommission_get, _pyctp.CThostFtdcTradingAccountField_SpecProductFrozenCommission_set)
    __swig_setmethods__["SpecProductPositionProfit"] = _pyctp.CThostFtdcTradingAccountField_SpecProductPositionProfit_set
    __swig_getmethods__["SpecProductPositionProfit"] = _pyctp.CThostFtdcTradingAccountField_SpecProductPositionProfit_get
    if _newclass:
        SpecProductPositionProfit = _swig_property(_pyctp.CThostFtdcTradingAccountField_SpecProductPositionProfit_get, _pyctp.CThostFtdcTradingAccountField_SpecProductPositionProfit_set)
    __swig_setmethods__["SpecProductCloseProfit"] = _pyctp.CThostFtdcTradingAccountField_SpecProductCloseProfit_set
    __swig_getmethods__["SpecProductCloseProfit"] = _pyctp.CThostFtdcTradingAccountField_SpecProductCloseProfit_get
    if _newclass:
        SpecProductCloseProfit = _swig_property(_pyctp.CThostFtdcTradingAccountField_SpecProductCloseProfit_get, _pyctp.CThostFtdcTradingAccountField_SpecProductCloseProfit_set)
    __swig_setmethods__["SpecProductPositionProfitByAlg"] = _pyctp.CThostFtdcTradingAccountField_SpecProductPositionProfitByAlg_set
    __swig_getmethods__["SpecProductPositionProfitByAlg"] = _pyctp.CThostFtdcTradingAccountField_SpecProductPositionProfitByAlg_get
    if _newclass:
        SpecProductPositionProfitByAlg = _swig_property(_pyctp.CThostFtdcTradingAccountField_SpecProductPositionProfitByAlg_get, _pyctp.CThostFtdcTradingAccountField_SpecProductPositionProfitByAlg_set)
    __swig_setmethods__["SpecProductExchangeMargin"] = _pyctp.CThostFtdcTradingAccountField_SpecProductExchangeMargin_set
    __swig_getmethods__["SpecProductExchangeMargin"] = _pyctp.CThostFtdcTradingAccountField_SpecProductExchangeMargin_get
    if _newclass:
        SpecProductExchangeMargin = _swig_property(_pyctp.CThostFtdcTradingAccountField_SpecProductExchangeMargin_get, _pyctp.CThostFtdcTradingAccountField_SpecProductExchangeMargin_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcTradingAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcTradingAccountField
    __del__ = lambda self: None
CThostFtdcTradingAccountField_swigregister = _pyctp.CThostFtdcTradingAccountField_swigregister
CThostFtdcTradingAccountField_swigregister(CThostFtdcTradingAccountField)

class CThostFtdcInvestorPositionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcInvestorPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcInvestorPositionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcInvestorPositionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcInvestorPositionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcInvestorPositionField_InstrumentID_get, _pyctp.CThostFtdcInvestorPositionField_InstrumentID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcInvestorPositionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcInvestorPositionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcInvestorPositionField_BrokerID_get, _pyctp.CThostFtdcInvestorPositionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcInvestorPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcInvestorPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcInvestorPositionField_InvestorID_get, _pyctp.CThostFtdcInvestorPositionField_InvestorID_set)
    __swig_setmethods__["PosiDirection"] = _pyctp.CThostFtdcInvestorPositionField_PosiDirection_set
    __swig_getmethods__["PosiDirection"] = _pyctp.CThostFtdcInvestorPositionField_PosiDirection_get
    if _newclass:
        PosiDirection = _swig_property(_pyctp.CThostFtdcInvestorPositionField_PosiDirection_get, _pyctp.CThostFtdcInvestorPositionField_PosiDirection_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcInvestorPositionField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcInvestorPositionField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcInvestorPositionField_HedgeFlag_get, _pyctp.CThostFtdcInvestorPositionField_HedgeFlag_set)
    __swig_setmethods__["PositionDate"] = _pyctp.CThostFtdcInvestorPositionField_PositionDate_set
    __swig_getmethods__["PositionDate"] = _pyctp.CThostFtdcInvestorPositionField_PositionDate_get
    if _newclass:
        PositionDate = _swig_property(_pyctp.CThostFtdcInvestorPositionField_PositionDate_get, _pyctp.CThostFtdcInvestorPositionField_PositionDate_set)
    __swig_setmethods__["YdPosition"] = _pyctp.CThostFtdcInvestorPositionField_YdPosition_set
    __swig_getmethods__["YdPosition"] = _pyctp.CThostFtdcInvestorPositionField_YdPosition_get
    if _newclass:
        YdPosition = _swig_property(_pyctp.CThostFtdcInvestorPositionField_YdPosition_get, _pyctp.CThostFtdcInvestorPositionField_YdPosition_set)
    __swig_setmethods__["Position"] = _pyctp.CThostFtdcInvestorPositionField_Position_set
    __swig_getmethods__["Position"] = _pyctp.CThostFtdcInvestorPositionField_Position_get
    if _newclass:
        Position = _swig_property(_pyctp.CThostFtdcInvestorPositionField_Position_get, _pyctp.CThostFtdcInvestorPositionField_Position_set)
    __swig_setmethods__["LongFrozen"] = _pyctp.CThostFtdcInvestorPositionField_LongFrozen_set
    __swig_getmethods__["LongFrozen"] = _pyctp.CThostFtdcInvestorPositionField_LongFrozen_get
    if _newclass:
        LongFrozen = _swig_property(_pyctp.CThostFtdcInvestorPositionField_LongFrozen_get, _pyctp.CThostFtdcInvestorPositionField_LongFrozen_set)
    __swig_setmethods__["ShortFrozen"] = _pyctp.CThostFtdcInvestorPositionField_ShortFrozen_set
    __swig_getmethods__["ShortFrozen"] = _pyctp.CThostFtdcInvestorPositionField_ShortFrozen_get
    if _newclass:
        ShortFrozen = _swig_property(_pyctp.CThostFtdcInvestorPositionField_ShortFrozen_get, _pyctp.CThostFtdcInvestorPositionField_ShortFrozen_set)
    __swig_setmethods__["LongFrozenAmount"] = _pyctp.CThostFtdcInvestorPositionField_LongFrozenAmount_set
    __swig_getmethods__["LongFrozenAmount"] = _pyctp.CThostFtdcInvestorPositionField_LongFrozenAmount_get
    if _newclass:
        LongFrozenAmount = _swig_property(_pyctp.CThostFtdcInvestorPositionField_LongFrozenAmount_get, _pyctp.CThostFtdcInvestorPositionField_LongFrozenAmount_set)
    __swig_setmethods__["ShortFrozenAmount"] = _pyctp.CThostFtdcInvestorPositionField_ShortFrozenAmount_set
    __swig_getmethods__["ShortFrozenAmount"] = _pyctp.CThostFtdcInvestorPositionField_ShortFrozenAmount_get
    if _newclass:
        ShortFrozenAmount = _swig_property(_pyctp.CThostFtdcInvestorPositionField_ShortFrozenAmount_get, _pyctp.CThostFtdcInvestorPositionField_ShortFrozenAmount_set)
    __swig_setmethods__["OpenVolume"] = _pyctp.CThostFtdcInvestorPositionField_OpenVolume_set
    __swig_getmethods__["OpenVolume"] = _pyctp.CThostFtdcInvestorPositionField_OpenVolume_get
    if _newclass:
        OpenVolume = _swig_property(_pyctp.CThostFtdcInvestorPositionField_OpenVolume_get, _pyctp.CThostFtdcInvestorPositionField_OpenVolume_set)
    __swig_setmethods__["CloseVolume"] = _pyctp.CThostFtdcInvestorPositionField_CloseVolume_set
    __swig_getmethods__["CloseVolume"] = _pyctp.CThostFtdcInvestorPositionField_CloseVolume_get
    if _newclass:
        CloseVolume = _swig_property(_pyctp.CThostFtdcInvestorPositionField_CloseVolume_get, _pyctp.CThostFtdcInvestorPositionField_CloseVolume_set)
    __swig_setmethods__["OpenAmount"] = _pyctp.CThostFtdcInvestorPositionField_OpenAmount_set
    __swig_getmethods__["OpenAmount"] = _pyctp.CThostFtdcInvestorPositionField_OpenAmount_get
    if _newclass:
        OpenAmount = _swig_property(_pyctp.CThostFtdcInvestorPositionField_OpenAmount_get, _pyctp.CThostFtdcInvestorPositionField_OpenAmount_set)
    __swig_setmethods__["CloseAmount"] = _pyctp.CThostFtdcInvestorPositionField_CloseAmount_set
    __swig_getmethods__["CloseAmount"] = _pyctp.CThostFtdcInvestorPositionField_CloseAmount_get
    if _newclass:
        CloseAmount = _swig_property(_pyctp.CThostFtdcInvestorPositionField_CloseAmount_get, _pyctp.CThostFtdcInvestorPositionField_CloseAmount_set)
    __swig_setmethods__["PositionCost"] = _pyctp.CThostFtdcInvestorPositionField_PositionCost_set
    __swig_getmethods__["PositionCost"] = _pyctp.CThostFtdcInvestorPositionField_PositionCost_get
    if _newclass:
        PositionCost = _swig_property(_pyctp.CThostFtdcInvestorPositionField_PositionCost_get, _pyctp.CThostFtdcInvestorPositionField_PositionCost_set)
    __swig_setmethods__["PreMargin"] = _pyctp.CThostFtdcInvestorPositionField_PreMargin_set
    __swig_getmethods__["PreMargin"] = _pyctp.CThostFtdcInvestorPositionField_PreMargin_get
    if _newclass:
        PreMargin = _swig_property(_pyctp.CThostFtdcInvestorPositionField_PreMargin_get, _pyctp.CThostFtdcInvestorPositionField_PreMargin_set)
    __swig_setmethods__["UseMargin"] = _pyctp.CThostFtdcInvestorPositionField_UseMargin_set
    __swig_getmethods__["UseMargin"] = _pyctp.CThostFtdcInvestorPositionField_UseMargin_get
    if _newclass:
        UseMargin = _swig_property(_pyctp.CThostFtdcInvestorPositionField_UseMargin_get, _pyctp.CThostFtdcInvestorPositionField_UseMargin_set)
    __swig_setmethods__["FrozenMargin"] = _pyctp.CThostFtdcInvestorPositionField_FrozenMargin_set
    __swig_getmethods__["FrozenMargin"] = _pyctp.CThostFtdcInvestorPositionField_FrozenMargin_get
    if _newclass:
        FrozenMargin = _swig_property(_pyctp.CThostFtdcInvestorPositionField_FrozenMargin_get, _pyctp.CThostFtdcInvestorPositionField_FrozenMargin_set)
    __swig_setmethods__["FrozenCash"] = _pyctp.CThostFtdcInvestorPositionField_FrozenCash_set
    __swig_getmethods__["FrozenCash"] = _pyctp.CThostFtdcInvestorPositionField_FrozenCash_get
    if _newclass:
        FrozenCash = _swig_property(_pyctp.CThostFtdcInvestorPositionField_FrozenCash_get, _pyctp.CThostFtdcInvestorPositionField_FrozenCash_set)
    __swig_setmethods__["FrozenCommission"] = _pyctp.CThostFtdcInvestorPositionField_FrozenCommission_set
    __swig_getmethods__["FrozenCommission"] = _pyctp.CThostFtdcInvestorPositionField_FrozenCommission_get
    if _newclass:
        FrozenCommission = _swig_property(_pyctp.CThostFtdcInvestorPositionField_FrozenCommission_get, _pyctp.CThostFtdcInvestorPositionField_FrozenCommission_set)
    __swig_setmethods__["CashIn"] = _pyctp.CThostFtdcInvestorPositionField_CashIn_set
    __swig_getmethods__["CashIn"] = _pyctp.CThostFtdcInvestorPositionField_CashIn_get
    if _newclass:
        CashIn = _swig_property(_pyctp.CThostFtdcInvestorPositionField_CashIn_get, _pyctp.CThostFtdcInvestorPositionField_CashIn_set)
    __swig_setmethods__["Commission"] = _pyctp.CThostFtdcInvestorPositionField_Commission_set
    __swig_getmethods__["Commission"] = _pyctp.CThostFtdcInvestorPositionField_Commission_get
    if _newclass:
        Commission = _swig_property(_pyctp.CThostFtdcInvestorPositionField_Commission_get, _pyctp.CThostFtdcInvestorPositionField_Commission_set)
    __swig_setmethods__["CloseProfit"] = _pyctp.CThostFtdcInvestorPositionField_CloseProfit_set
    __swig_getmethods__["CloseProfit"] = _pyctp.CThostFtdcInvestorPositionField_CloseProfit_get
    if _newclass:
        CloseProfit = _swig_property(_pyctp.CThostFtdcInvestorPositionField_CloseProfit_get, _pyctp.CThostFtdcInvestorPositionField_CloseProfit_set)
    __swig_setmethods__["PositionProfit"] = _pyctp.CThostFtdcInvestorPositionField_PositionProfit_set
    __swig_getmethods__["PositionProfit"] = _pyctp.CThostFtdcInvestorPositionField_PositionProfit_get
    if _newclass:
        PositionProfit = _swig_property(_pyctp.CThostFtdcInvestorPositionField_PositionProfit_get, _pyctp.CThostFtdcInvestorPositionField_PositionProfit_set)
    __swig_setmethods__["PreSettlementPrice"] = _pyctp.CThostFtdcInvestorPositionField_PreSettlementPrice_set
    __swig_getmethods__["PreSettlementPrice"] = _pyctp.CThostFtdcInvestorPositionField_PreSettlementPrice_get
    if _newclass:
        PreSettlementPrice = _swig_property(_pyctp.CThostFtdcInvestorPositionField_PreSettlementPrice_get, _pyctp.CThostFtdcInvestorPositionField_PreSettlementPrice_set)
    __swig_setmethods__["SettlementPrice"] = _pyctp.CThostFtdcInvestorPositionField_SettlementPrice_set
    __swig_getmethods__["SettlementPrice"] = _pyctp.CThostFtdcInvestorPositionField_SettlementPrice_get
    if _newclass:
        SettlementPrice = _swig_property(_pyctp.CThostFtdcInvestorPositionField_SettlementPrice_get, _pyctp.CThostFtdcInvestorPositionField_SettlementPrice_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcInvestorPositionField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcInvestorPositionField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcInvestorPositionField_TradingDay_get, _pyctp.CThostFtdcInvestorPositionField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CThostFtdcInvestorPositionField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CThostFtdcInvestorPositionField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CThostFtdcInvestorPositionField_SettlementID_get, _pyctp.CThostFtdcInvestorPositionField_SettlementID_set)
    __swig_setmethods__["OpenCost"] = _pyctp.CThostFtdcInvestorPositionField_OpenCost_set
    __swig_getmethods__["OpenCost"] = _pyctp.CThostFtdcInvestorPositionField_OpenCost_get
    if _newclass:
        OpenCost = _swig_property(_pyctp.CThostFtdcInvestorPositionField_OpenCost_get, _pyctp.CThostFtdcInvestorPositionField_OpenCost_set)
    __swig_setmethods__["ExchangeMargin"] = _pyctp.CThostFtdcInvestorPositionField_ExchangeMargin_set
    __swig_getmethods__["ExchangeMargin"] = _pyctp.CThostFtdcInvestorPositionField_ExchangeMargin_get
    if _newclass:
        ExchangeMargin = _swig_property(_pyctp.CThostFtdcInvestorPositionField_ExchangeMargin_get, _pyctp.CThostFtdcInvestorPositionField_ExchangeMargin_set)
    __swig_setmethods__["CombPosition"] = _pyctp.CThostFtdcInvestorPositionField_CombPosition_set
    __swig_getmethods__["CombPosition"] = _pyctp.CThostFtdcInvestorPositionField_CombPosition_get
    if _newclass:
        CombPosition = _swig_property(_pyctp.CThostFtdcInvestorPositionField_CombPosition_get, _pyctp.CThostFtdcInvestorPositionField_CombPosition_set)
    __swig_setmethods__["CombLongFrozen"] = _pyctp.CThostFtdcInvestorPositionField_CombLongFrozen_set
    __swig_getmethods__["CombLongFrozen"] = _pyctp.CThostFtdcInvestorPositionField_CombLongFrozen_get
    if _newclass:
        CombLongFrozen = _swig_property(_pyctp.CThostFtdcInvestorPositionField_CombLongFrozen_get, _pyctp.CThostFtdcInvestorPositionField_CombLongFrozen_set)
    __swig_setmethods__["CombShortFrozen"] = _pyctp.CThostFtdcInvestorPositionField_CombShortFrozen_set
    __swig_getmethods__["CombShortFrozen"] = _pyctp.CThostFtdcInvestorPositionField_CombShortFrozen_get
    if _newclass:
        CombShortFrozen = _swig_property(_pyctp.CThostFtdcInvestorPositionField_CombShortFrozen_get, _pyctp.CThostFtdcInvestorPositionField_CombShortFrozen_set)
    __swig_setmethods__["CloseProfitByDate"] = _pyctp.CThostFtdcInvestorPositionField_CloseProfitByDate_set
    __swig_getmethods__["CloseProfitByDate"] = _pyctp.CThostFtdcInvestorPositionField_CloseProfitByDate_get
    if _newclass:
        CloseProfitByDate = _swig_property(_pyctp.CThostFtdcInvestorPositionField_CloseProfitByDate_get, _pyctp.CThostFtdcInvestorPositionField_CloseProfitByDate_set)
    __swig_setmethods__["CloseProfitByTrade"] = _pyctp.CThostFtdcInvestorPositionField_CloseProfitByTrade_set
    __swig_getmethods__["CloseProfitByTrade"] = _pyctp.CThostFtdcInvestorPositionField_CloseProfitByTrade_get
    if _newclass:
        CloseProfitByTrade = _swig_property(_pyctp.CThostFtdcInvestorPositionField_CloseProfitByTrade_get, _pyctp.CThostFtdcInvestorPositionField_CloseProfitByTrade_set)
    __swig_setmethods__["TodayPosition"] = _pyctp.CThostFtdcInvestorPositionField_TodayPosition_set
    __swig_getmethods__["TodayPosition"] = _pyctp.CThostFtdcInvestorPositionField_TodayPosition_get
    if _newclass:
        TodayPosition = _swig_property(_pyctp.CThostFtdcInvestorPositionField_TodayPosition_get, _pyctp.CThostFtdcInvestorPositionField_TodayPosition_set)
    __swig_setmethods__["MarginRateByMoney"] = _pyctp.CThostFtdcInvestorPositionField_MarginRateByMoney_set
    __swig_getmethods__["MarginRateByMoney"] = _pyctp.CThostFtdcInvestorPositionField_MarginRateByMoney_get
    if _newclass:
        MarginRateByMoney = _swig_property(_pyctp.CThostFtdcInvestorPositionField_MarginRateByMoney_get, _pyctp.CThostFtdcInvestorPositionField_MarginRateByMoney_set)
    __swig_setmethods__["MarginRateByVolume"] = _pyctp.CThostFtdcInvestorPositionField_MarginRateByVolume_set
    __swig_getmethods__["MarginRateByVolume"] = _pyctp.CThostFtdcInvestorPositionField_MarginRateByVolume_get
    if _newclass:
        MarginRateByVolume = _swig_property(_pyctp.CThostFtdcInvestorPositionField_MarginRateByVolume_get, _pyctp.CThostFtdcInvestorPositionField_MarginRateByVolume_set)
    __swig_setmethods__["StrikeFrozen"] = _pyctp.CThostFtdcInvestorPositionField_StrikeFrozen_set
    __swig_getmethods__["StrikeFrozen"] = _pyctp.CThostFtdcInvestorPositionField_StrikeFrozen_get
    if _newclass:
        StrikeFrozen = _swig_property(_pyctp.CThostFtdcInvestorPositionField_StrikeFrozen_get, _pyctp.CThostFtdcInvestorPositionField_StrikeFrozen_set)
    __swig_setmethods__["StrikeFrozenAmount"] = _pyctp.CThostFtdcInvestorPositionField_StrikeFrozenAmount_set
    __swig_getmethods__["StrikeFrozenAmount"] = _pyctp.CThostFtdcInvestorPositionField_StrikeFrozenAmount_get
    if _newclass:
        StrikeFrozenAmount = _swig_property(_pyctp.CThostFtdcInvestorPositionField_StrikeFrozenAmount_get, _pyctp.CThostFtdcInvestorPositionField_StrikeFrozenAmount_set)
    __swig_setmethods__["AbandonFrozen"] = _pyctp.CThostFtdcInvestorPositionField_AbandonFrozen_set
    __swig_getmethods__["AbandonFrozen"] = _pyctp.CThostFtdcInvestorPositionField_AbandonFrozen_get
    if _newclass:
        AbandonFrozen = _swig_property(_pyctp.CThostFtdcInvestorPositionField_AbandonFrozen_get, _pyctp.CThostFtdcInvestorPositionField_AbandonFrozen_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcInvestorPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcInvestorPositionField
    __del__ = lambda self: None
CThostFtdcInvestorPositionField_swigregister = _pyctp.CThostFtdcInvestorPositionField_swigregister
CThostFtdcInvestorPositionField_swigregister(CThostFtdcInvestorPositionField)

class CThostFtdcInstrumentMarginRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcInstrumentMarginRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcInstrumentMarginRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcInstrumentMarginRateField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcInstrumentMarginRateField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcInstrumentMarginRateField_InstrumentID_get, _pyctp.CThostFtdcInstrumentMarginRateField_InstrumentID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CThostFtdcInstrumentMarginRateField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CThostFtdcInstrumentMarginRateField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CThostFtdcInstrumentMarginRateField_InvestorRange_get, _pyctp.CThostFtdcInstrumentMarginRateField_InvestorRange_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcInstrumentMarginRateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcInstrumentMarginRateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcInstrumentMarginRateField_BrokerID_get, _pyctp.CThostFtdcInstrumentMarginRateField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcInstrumentMarginRateField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcInstrumentMarginRateField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcInstrumentMarginRateField_InvestorID_get, _pyctp.CThostFtdcInstrumentMarginRateField_InvestorID_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcInstrumentMarginRateField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcInstrumentMarginRateField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcInstrumentMarginRateField_HedgeFlag_get, _pyctp.CThostFtdcInstrumentMarginRateField_HedgeFlag_set)
    __swig_setmethods__["LongMarginRatioByMoney"] = _pyctp.CThostFtdcInstrumentMarginRateField_LongMarginRatioByMoney_set
    __swig_getmethods__["LongMarginRatioByMoney"] = _pyctp.CThostFtdcInstrumentMarginRateField_LongMarginRatioByMoney_get
    if _newclass:
        LongMarginRatioByMoney = _swig_property(_pyctp.CThostFtdcInstrumentMarginRateField_LongMarginRatioByMoney_get, _pyctp.CThostFtdcInstrumentMarginRateField_LongMarginRatioByMoney_set)
    __swig_setmethods__["LongMarginRatioByVolume"] = _pyctp.CThostFtdcInstrumentMarginRateField_LongMarginRatioByVolume_set
    __swig_getmethods__["LongMarginRatioByVolume"] = _pyctp.CThostFtdcInstrumentMarginRateField_LongMarginRatioByVolume_get
    if _newclass:
        LongMarginRatioByVolume = _swig_property(_pyctp.CThostFtdcInstrumentMarginRateField_LongMarginRatioByVolume_get, _pyctp.CThostFtdcInstrumentMarginRateField_LongMarginRatioByVolume_set)
    __swig_setmethods__["ShortMarginRatioByMoney"] = _pyctp.CThostFtdcInstrumentMarginRateField_ShortMarginRatioByMoney_set
    __swig_getmethods__["ShortMarginRatioByMoney"] = _pyctp.CThostFtdcInstrumentMarginRateField_ShortMarginRatioByMoney_get
    if _newclass:
        ShortMarginRatioByMoney = _swig_property(_pyctp.CThostFtdcInstrumentMarginRateField_ShortMarginRatioByMoney_get, _pyctp.CThostFtdcInstrumentMarginRateField_ShortMarginRatioByMoney_set)
    __swig_setmethods__["ShortMarginRatioByVolume"] = _pyctp.CThostFtdcInstrumentMarginRateField_ShortMarginRatioByVolume_set
    __swig_getmethods__["ShortMarginRatioByVolume"] = _pyctp.CThostFtdcInstrumentMarginRateField_ShortMarginRatioByVolume_get
    if _newclass:
        ShortMarginRatioByVolume = _swig_property(_pyctp.CThostFtdcInstrumentMarginRateField_ShortMarginRatioByVolume_get, _pyctp.CThostFtdcInstrumentMarginRateField_ShortMarginRatioByVolume_set)
    __swig_setmethods__["IsRelative"] = _pyctp.CThostFtdcInstrumentMarginRateField_IsRelative_set
    __swig_getmethods__["IsRelative"] = _pyctp.CThostFtdcInstrumentMarginRateField_IsRelative_get
    if _newclass:
        IsRelative = _swig_property(_pyctp.CThostFtdcInstrumentMarginRateField_IsRelative_get, _pyctp.CThostFtdcInstrumentMarginRateField_IsRelative_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcInstrumentMarginRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcInstrumentMarginRateField
    __del__ = lambda self: None
CThostFtdcInstrumentMarginRateField_swigregister = _pyctp.CThostFtdcInstrumentMarginRateField_swigregister
CThostFtdcInstrumentMarginRateField_swigregister(CThostFtdcInstrumentMarginRateField)

class CThostFtdcInstrumentCommissionRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcInstrumentCommissionRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcInstrumentCommissionRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcInstrumentCommissionRateField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcInstrumentCommissionRateField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcInstrumentCommissionRateField_InstrumentID_get, _pyctp.CThostFtdcInstrumentCommissionRateField_InstrumentID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CThostFtdcInstrumentCommissionRateField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CThostFtdcInstrumentCommissionRateField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CThostFtdcInstrumentCommissionRateField_InvestorRange_get, _pyctp.CThostFtdcInstrumentCommissionRateField_InvestorRange_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcInstrumentCommissionRateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcInstrumentCommissionRateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcInstrumentCommissionRateField_BrokerID_get, _pyctp.CThostFtdcInstrumentCommissionRateField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcInstrumentCommissionRateField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcInstrumentCommissionRateField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcInstrumentCommissionRateField_InvestorID_get, _pyctp.CThostFtdcInstrumentCommissionRateField_InvestorID_set)
    __swig_setmethods__["OpenRatioByMoney"] = _pyctp.CThostFtdcInstrumentCommissionRateField_OpenRatioByMoney_set
    __swig_getmethods__["OpenRatioByMoney"] = _pyctp.CThostFtdcInstrumentCommissionRateField_OpenRatioByMoney_get
    if _newclass:
        OpenRatioByMoney = _swig_property(_pyctp.CThostFtdcInstrumentCommissionRateField_OpenRatioByMoney_get, _pyctp.CThostFtdcInstrumentCommissionRateField_OpenRatioByMoney_set)
    __swig_setmethods__["OpenRatioByVolume"] = _pyctp.CThostFtdcInstrumentCommissionRateField_OpenRatioByVolume_set
    __swig_getmethods__["OpenRatioByVolume"] = _pyctp.CThostFtdcInstrumentCommissionRateField_OpenRatioByVolume_get
    if _newclass:
        OpenRatioByVolume = _swig_property(_pyctp.CThostFtdcInstrumentCommissionRateField_OpenRatioByVolume_get, _pyctp.CThostFtdcInstrumentCommissionRateField_OpenRatioByVolume_set)
    __swig_setmethods__["CloseRatioByMoney"] = _pyctp.CThostFtdcInstrumentCommissionRateField_CloseRatioByMoney_set
    __swig_getmethods__["CloseRatioByMoney"] = _pyctp.CThostFtdcInstrumentCommissionRateField_CloseRatioByMoney_get
    if _newclass:
        CloseRatioByMoney = _swig_property(_pyctp.CThostFtdcInstrumentCommissionRateField_CloseRatioByMoney_get, _pyctp.CThostFtdcInstrumentCommissionRateField_CloseRatioByMoney_set)
    __swig_setmethods__["CloseRatioByVolume"] = _pyctp.CThostFtdcInstrumentCommissionRateField_CloseRatioByVolume_set
    __swig_getmethods__["CloseRatioByVolume"] = _pyctp.CThostFtdcInstrumentCommissionRateField_CloseRatioByVolume_get
    if _newclass:
        CloseRatioByVolume = _swig_property(_pyctp.CThostFtdcInstrumentCommissionRateField_CloseRatioByVolume_get, _pyctp.CThostFtdcInstrumentCommissionRateField_CloseRatioByVolume_set)
    __swig_setmethods__["CloseTodayRatioByMoney"] = _pyctp.CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByMoney_set
    __swig_getmethods__["CloseTodayRatioByMoney"] = _pyctp.CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByMoney_get
    if _newclass:
        CloseTodayRatioByMoney = _swig_property(_pyctp.CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByMoney_get, _pyctp.CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByMoney_set)
    __swig_setmethods__["CloseTodayRatioByVolume"] = _pyctp.CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByVolume_set
    __swig_getmethods__["CloseTodayRatioByVolume"] = _pyctp.CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByVolume_get
    if _newclass:
        CloseTodayRatioByVolume = _swig_property(_pyctp.CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByVolume_get, _pyctp.CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByVolume_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcInstrumentCommissionRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcInstrumentCommissionRateField
    __del__ = lambda self: None
CThostFtdcInstrumentCommissionRateField_swigregister = _pyctp.CThostFtdcInstrumentCommissionRateField_swigregister
CThostFtdcInstrumentCommissionRateField_swigregister(CThostFtdcInstrumentCommissionRateField)

class CThostFtdcDepthMarketDataField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcDepthMarketDataField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcDepthMarketDataField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcDepthMarketDataField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcDepthMarketDataField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_TradingDay_get, _pyctp.CThostFtdcDepthMarketDataField_TradingDay_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcDepthMarketDataField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcDepthMarketDataField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_InstrumentID_get, _pyctp.CThostFtdcDepthMarketDataField_InstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcDepthMarketDataField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcDepthMarketDataField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_ExchangeID_get, _pyctp.CThostFtdcDepthMarketDataField_ExchangeID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CThostFtdcDepthMarketDataField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CThostFtdcDepthMarketDataField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_ExchangeInstID_get, _pyctp.CThostFtdcDepthMarketDataField_ExchangeInstID_set)
    __swig_setmethods__["LastPrice"] = _pyctp.CThostFtdcDepthMarketDataField_LastPrice_set
    __swig_getmethods__["LastPrice"] = _pyctp.CThostFtdcDepthMarketDataField_LastPrice_get
    if _newclass:
        LastPrice = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_LastPrice_get, _pyctp.CThostFtdcDepthMarketDataField_LastPrice_set)
    __swig_setmethods__["PreSettlementPrice"] = _pyctp.CThostFtdcDepthMarketDataField_PreSettlementPrice_set
    __swig_getmethods__["PreSettlementPrice"] = _pyctp.CThostFtdcDepthMarketDataField_PreSettlementPrice_get
    if _newclass:
        PreSettlementPrice = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_PreSettlementPrice_get, _pyctp.CThostFtdcDepthMarketDataField_PreSettlementPrice_set)
    __swig_setmethods__["PreClosePrice"] = _pyctp.CThostFtdcDepthMarketDataField_PreClosePrice_set
    __swig_getmethods__["PreClosePrice"] = _pyctp.CThostFtdcDepthMarketDataField_PreClosePrice_get
    if _newclass:
        PreClosePrice = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_PreClosePrice_get, _pyctp.CThostFtdcDepthMarketDataField_PreClosePrice_set)
    __swig_setmethods__["PreOpenInterest"] = _pyctp.CThostFtdcDepthMarketDataField_PreOpenInterest_set
    __swig_getmethods__["PreOpenInterest"] = _pyctp.CThostFtdcDepthMarketDataField_PreOpenInterest_get
    if _newclass:
        PreOpenInterest = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_PreOpenInterest_get, _pyctp.CThostFtdcDepthMarketDataField_PreOpenInterest_set)
    __swig_setmethods__["OpenPrice"] = _pyctp.CThostFtdcDepthMarketDataField_OpenPrice_set
    __swig_getmethods__["OpenPrice"] = _pyctp.CThostFtdcDepthMarketDataField_OpenPrice_get
    if _newclass:
        OpenPrice = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_OpenPrice_get, _pyctp.CThostFtdcDepthMarketDataField_OpenPrice_set)
    __swig_setmethods__["HighestPrice"] = _pyctp.CThostFtdcDepthMarketDataField_HighestPrice_set
    __swig_getmethods__["HighestPrice"] = _pyctp.CThostFtdcDepthMarketDataField_HighestPrice_get
    if _newclass:
        HighestPrice = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_HighestPrice_get, _pyctp.CThostFtdcDepthMarketDataField_HighestPrice_set)
    __swig_setmethods__["LowestPrice"] = _pyctp.CThostFtdcDepthMarketDataField_LowestPrice_set
    __swig_getmethods__["LowestPrice"] = _pyctp.CThostFtdcDepthMarketDataField_LowestPrice_get
    if _newclass:
        LowestPrice = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_LowestPrice_get, _pyctp.CThostFtdcDepthMarketDataField_LowestPrice_set)
    __swig_setmethods__["Volume"] = _pyctp.CThostFtdcDepthMarketDataField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CThostFtdcDepthMarketDataField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_Volume_get, _pyctp.CThostFtdcDepthMarketDataField_Volume_set)
    __swig_setmethods__["Turnover"] = _pyctp.CThostFtdcDepthMarketDataField_Turnover_set
    __swig_getmethods__["Turnover"] = _pyctp.CThostFtdcDepthMarketDataField_Turnover_get
    if _newclass:
        Turnover = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_Turnover_get, _pyctp.CThostFtdcDepthMarketDataField_Turnover_set)
    __swig_setmethods__["OpenInterest"] = _pyctp.CThostFtdcDepthMarketDataField_OpenInterest_set
    __swig_getmethods__["OpenInterest"] = _pyctp.CThostFtdcDepthMarketDataField_OpenInterest_get
    if _newclass:
        OpenInterest = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_OpenInterest_get, _pyctp.CThostFtdcDepthMarketDataField_OpenInterest_set)
    __swig_setmethods__["ClosePrice"] = _pyctp.CThostFtdcDepthMarketDataField_ClosePrice_set
    __swig_getmethods__["ClosePrice"] = _pyctp.CThostFtdcDepthMarketDataField_ClosePrice_get
    if _newclass:
        ClosePrice = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_ClosePrice_get, _pyctp.CThostFtdcDepthMarketDataField_ClosePrice_set)
    __swig_setmethods__["SettlementPrice"] = _pyctp.CThostFtdcDepthMarketDataField_SettlementPrice_set
    __swig_getmethods__["SettlementPrice"] = _pyctp.CThostFtdcDepthMarketDataField_SettlementPrice_get
    if _newclass:
        SettlementPrice = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_SettlementPrice_get, _pyctp.CThostFtdcDepthMarketDataField_SettlementPrice_set)
    __swig_setmethods__["UpperLimitPrice"] = _pyctp.CThostFtdcDepthMarketDataField_UpperLimitPrice_set
    __swig_getmethods__["UpperLimitPrice"] = _pyctp.CThostFtdcDepthMarketDataField_UpperLimitPrice_get
    if _newclass:
        UpperLimitPrice = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_UpperLimitPrice_get, _pyctp.CThostFtdcDepthMarketDataField_UpperLimitPrice_set)
    __swig_setmethods__["LowerLimitPrice"] = _pyctp.CThostFtdcDepthMarketDataField_LowerLimitPrice_set
    __swig_getmethods__["LowerLimitPrice"] = _pyctp.CThostFtdcDepthMarketDataField_LowerLimitPrice_get
    if _newclass:
        LowerLimitPrice = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_LowerLimitPrice_get, _pyctp.CThostFtdcDepthMarketDataField_LowerLimitPrice_set)
    __swig_setmethods__["PreDelta"] = _pyctp.CThostFtdcDepthMarketDataField_PreDelta_set
    __swig_getmethods__["PreDelta"] = _pyctp.CThostFtdcDepthMarketDataField_PreDelta_get
    if _newclass:
        PreDelta = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_PreDelta_get, _pyctp.CThostFtdcDepthMarketDataField_PreDelta_set)
    __swig_setmethods__["CurrDelta"] = _pyctp.CThostFtdcDepthMarketDataField_CurrDelta_set
    __swig_getmethods__["CurrDelta"] = _pyctp.CThostFtdcDepthMarketDataField_CurrDelta_get
    if _newclass:
        CurrDelta = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_CurrDelta_get, _pyctp.CThostFtdcDepthMarketDataField_CurrDelta_set)
    __swig_setmethods__["UpdateTime"] = _pyctp.CThostFtdcDepthMarketDataField_UpdateTime_set
    __swig_getmethods__["UpdateTime"] = _pyctp.CThostFtdcDepthMarketDataField_UpdateTime_get
    if _newclass:
        UpdateTime = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_UpdateTime_get, _pyctp.CThostFtdcDepthMarketDataField_UpdateTime_set)
    __swig_setmethods__["UpdateMillisec"] = _pyctp.CThostFtdcDepthMarketDataField_UpdateMillisec_set
    __swig_getmethods__["UpdateMillisec"] = _pyctp.CThostFtdcDepthMarketDataField_UpdateMillisec_get
    if _newclass:
        UpdateMillisec = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_UpdateMillisec_get, _pyctp.CThostFtdcDepthMarketDataField_UpdateMillisec_set)
    __swig_setmethods__["BidPrice1"] = _pyctp.CThostFtdcDepthMarketDataField_BidPrice1_set
    __swig_getmethods__["BidPrice1"] = _pyctp.CThostFtdcDepthMarketDataField_BidPrice1_get
    if _newclass:
        BidPrice1 = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_BidPrice1_get, _pyctp.CThostFtdcDepthMarketDataField_BidPrice1_set)
    __swig_setmethods__["BidVolume1"] = _pyctp.CThostFtdcDepthMarketDataField_BidVolume1_set
    __swig_getmethods__["BidVolume1"] = _pyctp.CThostFtdcDepthMarketDataField_BidVolume1_get
    if _newclass:
        BidVolume1 = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_BidVolume1_get, _pyctp.CThostFtdcDepthMarketDataField_BidVolume1_set)
    __swig_setmethods__["AskPrice1"] = _pyctp.CThostFtdcDepthMarketDataField_AskPrice1_set
    __swig_getmethods__["AskPrice1"] = _pyctp.CThostFtdcDepthMarketDataField_AskPrice1_get
    if _newclass:
        AskPrice1 = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_AskPrice1_get, _pyctp.CThostFtdcDepthMarketDataField_AskPrice1_set)
    __swig_setmethods__["AskVolume1"] = _pyctp.CThostFtdcDepthMarketDataField_AskVolume1_set
    __swig_getmethods__["AskVolume1"] = _pyctp.CThostFtdcDepthMarketDataField_AskVolume1_get
    if _newclass:
        AskVolume1 = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_AskVolume1_get, _pyctp.CThostFtdcDepthMarketDataField_AskVolume1_set)
    __swig_setmethods__["BidPrice2"] = _pyctp.CThostFtdcDepthMarketDataField_BidPrice2_set
    __swig_getmethods__["BidPrice2"] = _pyctp.CThostFtdcDepthMarketDataField_BidPrice2_get
    if _newclass:
        BidPrice2 = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_BidPrice2_get, _pyctp.CThostFtdcDepthMarketDataField_BidPrice2_set)
    __swig_setmethods__["BidVolume2"] = _pyctp.CThostFtdcDepthMarketDataField_BidVolume2_set
    __swig_getmethods__["BidVolume2"] = _pyctp.CThostFtdcDepthMarketDataField_BidVolume2_get
    if _newclass:
        BidVolume2 = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_BidVolume2_get, _pyctp.CThostFtdcDepthMarketDataField_BidVolume2_set)
    __swig_setmethods__["AskPrice2"] = _pyctp.CThostFtdcDepthMarketDataField_AskPrice2_set
    __swig_getmethods__["AskPrice2"] = _pyctp.CThostFtdcDepthMarketDataField_AskPrice2_get
    if _newclass:
        AskPrice2 = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_AskPrice2_get, _pyctp.CThostFtdcDepthMarketDataField_AskPrice2_set)
    __swig_setmethods__["AskVolume2"] = _pyctp.CThostFtdcDepthMarketDataField_AskVolume2_set
    __swig_getmethods__["AskVolume2"] = _pyctp.CThostFtdcDepthMarketDataField_AskVolume2_get
    if _newclass:
        AskVolume2 = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_AskVolume2_get, _pyctp.CThostFtdcDepthMarketDataField_AskVolume2_set)
    __swig_setmethods__["BidPrice3"] = _pyctp.CThostFtdcDepthMarketDataField_BidPrice3_set
    __swig_getmethods__["BidPrice3"] = _pyctp.CThostFtdcDepthMarketDataField_BidPrice3_get
    if _newclass:
        BidPrice3 = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_BidPrice3_get, _pyctp.CThostFtdcDepthMarketDataField_BidPrice3_set)
    __swig_setmethods__["BidVolume3"] = _pyctp.CThostFtdcDepthMarketDataField_BidVolume3_set
    __swig_getmethods__["BidVolume3"] = _pyctp.CThostFtdcDepthMarketDataField_BidVolume3_get
    if _newclass:
        BidVolume3 = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_BidVolume3_get, _pyctp.CThostFtdcDepthMarketDataField_BidVolume3_set)
    __swig_setmethods__["AskPrice3"] = _pyctp.CThostFtdcDepthMarketDataField_AskPrice3_set
    __swig_getmethods__["AskPrice3"] = _pyctp.CThostFtdcDepthMarketDataField_AskPrice3_get
    if _newclass:
        AskPrice3 = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_AskPrice3_get, _pyctp.CThostFtdcDepthMarketDataField_AskPrice3_set)
    __swig_setmethods__["AskVolume3"] = _pyctp.CThostFtdcDepthMarketDataField_AskVolume3_set
    __swig_getmethods__["AskVolume3"] = _pyctp.CThostFtdcDepthMarketDataField_AskVolume3_get
    if _newclass:
        AskVolume3 = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_AskVolume3_get, _pyctp.CThostFtdcDepthMarketDataField_AskVolume3_set)
    __swig_setmethods__["BidPrice4"] = _pyctp.CThostFtdcDepthMarketDataField_BidPrice4_set
    __swig_getmethods__["BidPrice4"] = _pyctp.CThostFtdcDepthMarketDataField_BidPrice4_get
    if _newclass:
        BidPrice4 = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_BidPrice4_get, _pyctp.CThostFtdcDepthMarketDataField_BidPrice4_set)
    __swig_setmethods__["BidVolume4"] = _pyctp.CThostFtdcDepthMarketDataField_BidVolume4_set
    __swig_getmethods__["BidVolume4"] = _pyctp.CThostFtdcDepthMarketDataField_BidVolume4_get
    if _newclass:
        BidVolume4 = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_BidVolume4_get, _pyctp.CThostFtdcDepthMarketDataField_BidVolume4_set)
    __swig_setmethods__["AskPrice4"] = _pyctp.CThostFtdcDepthMarketDataField_AskPrice4_set
    __swig_getmethods__["AskPrice4"] = _pyctp.CThostFtdcDepthMarketDataField_AskPrice4_get
    if _newclass:
        AskPrice4 = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_AskPrice4_get, _pyctp.CThostFtdcDepthMarketDataField_AskPrice4_set)
    __swig_setmethods__["AskVolume4"] = _pyctp.CThostFtdcDepthMarketDataField_AskVolume4_set
    __swig_getmethods__["AskVolume4"] = _pyctp.CThostFtdcDepthMarketDataField_AskVolume4_get
    if _newclass:
        AskVolume4 = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_AskVolume4_get, _pyctp.CThostFtdcDepthMarketDataField_AskVolume4_set)
    __swig_setmethods__["BidPrice5"] = _pyctp.CThostFtdcDepthMarketDataField_BidPrice5_set
    __swig_getmethods__["BidPrice5"] = _pyctp.CThostFtdcDepthMarketDataField_BidPrice5_get
    if _newclass:
        BidPrice5 = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_BidPrice5_get, _pyctp.CThostFtdcDepthMarketDataField_BidPrice5_set)
    __swig_setmethods__["BidVolume5"] = _pyctp.CThostFtdcDepthMarketDataField_BidVolume5_set
    __swig_getmethods__["BidVolume5"] = _pyctp.CThostFtdcDepthMarketDataField_BidVolume5_get
    if _newclass:
        BidVolume5 = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_BidVolume5_get, _pyctp.CThostFtdcDepthMarketDataField_BidVolume5_set)
    __swig_setmethods__["AskPrice5"] = _pyctp.CThostFtdcDepthMarketDataField_AskPrice5_set
    __swig_getmethods__["AskPrice5"] = _pyctp.CThostFtdcDepthMarketDataField_AskPrice5_get
    if _newclass:
        AskPrice5 = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_AskPrice5_get, _pyctp.CThostFtdcDepthMarketDataField_AskPrice5_set)
    __swig_setmethods__["AskVolume5"] = _pyctp.CThostFtdcDepthMarketDataField_AskVolume5_set
    __swig_getmethods__["AskVolume5"] = _pyctp.CThostFtdcDepthMarketDataField_AskVolume5_get
    if _newclass:
        AskVolume5 = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_AskVolume5_get, _pyctp.CThostFtdcDepthMarketDataField_AskVolume5_set)
    __swig_setmethods__["AveragePrice"] = _pyctp.CThostFtdcDepthMarketDataField_AveragePrice_set
    __swig_getmethods__["AveragePrice"] = _pyctp.CThostFtdcDepthMarketDataField_AveragePrice_get
    if _newclass:
        AveragePrice = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_AveragePrice_get, _pyctp.CThostFtdcDepthMarketDataField_AveragePrice_set)
    __swig_setmethods__["ActionDay"] = _pyctp.CThostFtdcDepthMarketDataField_ActionDay_set
    __swig_getmethods__["ActionDay"] = _pyctp.CThostFtdcDepthMarketDataField_ActionDay_get
    if _newclass:
        ActionDay = _swig_property(_pyctp.CThostFtdcDepthMarketDataField_ActionDay_get, _pyctp.CThostFtdcDepthMarketDataField_ActionDay_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcDepthMarketDataField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcDepthMarketDataField
    __del__ = lambda self: None
CThostFtdcDepthMarketDataField_swigregister = _pyctp.CThostFtdcDepthMarketDataField_swigregister
CThostFtdcDepthMarketDataField_swigregister(CThostFtdcDepthMarketDataField)

class CThostFtdcInstrumentTradingRightField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcInstrumentTradingRightField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcInstrumentTradingRightField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcInstrumentTradingRightField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcInstrumentTradingRightField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcInstrumentTradingRightField_InstrumentID_get, _pyctp.CThostFtdcInstrumentTradingRightField_InstrumentID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CThostFtdcInstrumentTradingRightField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CThostFtdcInstrumentTradingRightField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CThostFtdcInstrumentTradingRightField_InvestorRange_get, _pyctp.CThostFtdcInstrumentTradingRightField_InvestorRange_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcInstrumentTradingRightField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcInstrumentTradingRightField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcInstrumentTradingRightField_BrokerID_get, _pyctp.CThostFtdcInstrumentTradingRightField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcInstrumentTradingRightField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcInstrumentTradingRightField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcInstrumentTradingRightField_InvestorID_get, _pyctp.CThostFtdcInstrumentTradingRightField_InvestorID_set)
    __swig_setmethods__["TradingRight"] = _pyctp.CThostFtdcInstrumentTradingRightField_TradingRight_set
    __swig_getmethods__["TradingRight"] = _pyctp.CThostFtdcInstrumentTradingRightField_TradingRight_get
    if _newclass:
        TradingRight = _swig_property(_pyctp.CThostFtdcInstrumentTradingRightField_TradingRight_get, _pyctp.CThostFtdcInstrumentTradingRightField_TradingRight_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcInstrumentTradingRightField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcInstrumentTradingRightField
    __del__ = lambda self: None
CThostFtdcInstrumentTradingRightField_swigregister = _pyctp.CThostFtdcInstrumentTradingRightField_swigregister
CThostFtdcInstrumentTradingRightField_swigregister(CThostFtdcInstrumentTradingRightField)

class CThostFtdcBrokerUserField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcBrokerUserField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcBrokerUserField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcBrokerUserField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcBrokerUserField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcBrokerUserField_BrokerID_get, _pyctp.CThostFtdcBrokerUserField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcBrokerUserField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcBrokerUserField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcBrokerUserField_UserID_get, _pyctp.CThostFtdcBrokerUserField_UserID_set)
    __swig_setmethods__["UserName"] = _pyctp.CThostFtdcBrokerUserField_UserName_set
    __swig_getmethods__["UserName"] = _pyctp.CThostFtdcBrokerUserField_UserName_get
    if _newclass:
        UserName = _swig_property(_pyctp.CThostFtdcBrokerUserField_UserName_get, _pyctp.CThostFtdcBrokerUserField_UserName_set)
    __swig_setmethods__["UserType"] = _pyctp.CThostFtdcBrokerUserField_UserType_set
    __swig_getmethods__["UserType"] = _pyctp.CThostFtdcBrokerUserField_UserType_get
    if _newclass:
        UserType = _swig_property(_pyctp.CThostFtdcBrokerUserField_UserType_get, _pyctp.CThostFtdcBrokerUserField_UserType_set)
    __swig_setmethods__["IsActive"] = _pyctp.CThostFtdcBrokerUserField_IsActive_set
    __swig_getmethods__["IsActive"] = _pyctp.CThostFtdcBrokerUserField_IsActive_get
    if _newclass:
        IsActive = _swig_property(_pyctp.CThostFtdcBrokerUserField_IsActive_get, _pyctp.CThostFtdcBrokerUserField_IsActive_set)
    __swig_setmethods__["IsUsingOTP"] = _pyctp.CThostFtdcBrokerUserField_IsUsingOTP_set
    __swig_getmethods__["IsUsingOTP"] = _pyctp.CThostFtdcBrokerUserField_IsUsingOTP_get
    if _newclass:
        IsUsingOTP = _swig_property(_pyctp.CThostFtdcBrokerUserField_IsUsingOTP_get, _pyctp.CThostFtdcBrokerUserField_IsUsingOTP_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcBrokerUserField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcBrokerUserField
    __del__ = lambda self: None
CThostFtdcBrokerUserField_swigregister = _pyctp.CThostFtdcBrokerUserField_swigregister
CThostFtdcBrokerUserField_swigregister(CThostFtdcBrokerUserField)

class CThostFtdcBrokerUserPasswordField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcBrokerUserPasswordField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcBrokerUserPasswordField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcBrokerUserPasswordField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcBrokerUserPasswordField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcBrokerUserPasswordField_BrokerID_get, _pyctp.CThostFtdcBrokerUserPasswordField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcBrokerUserPasswordField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcBrokerUserPasswordField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcBrokerUserPasswordField_UserID_get, _pyctp.CThostFtdcBrokerUserPasswordField_UserID_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcBrokerUserPasswordField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcBrokerUserPasswordField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcBrokerUserPasswordField_Password_get, _pyctp.CThostFtdcBrokerUserPasswordField_Password_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcBrokerUserPasswordField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcBrokerUserPasswordField
    __del__ = lambda self: None
CThostFtdcBrokerUserPasswordField_swigregister = _pyctp.CThostFtdcBrokerUserPasswordField_swigregister
CThostFtdcBrokerUserPasswordField_swigregister(CThostFtdcBrokerUserPasswordField)

class CThostFtdcBrokerUserFunctionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcBrokerUserFunctionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcBrokerUserFunctionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcBrokerUserFunctionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcBrokerUserFunctionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcBrokerUserFunctionField_BrokerID_get, _pyctp.CThostFtdcBrokerUserFunctionField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcBrokerUserFunctionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcBrokerUserFunctionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcBrokerUserFunctionField_UserID_get, _pyctp.CThostFtdcBrokerUserFunctionField_UserID_set)
    __swig_setmethods__["BrokerFunctionCode"] = _pyctp.CThostFtdcBrokerUserFunctionField_BrokerFunctionCode_set
    __swig_getmethods__["BrokerFunctionCode"] = _pyctp.CThostFtdcBrokerUserFunctionField_BrokerFunctionCode_get
    if _newclass:
        BrokerFunctionCode = _swig_property(_pyctp.CThostFtdcBrokerUserFunctionField_BrokerFunctionCode_get, _pyctp.CThostFtdcBrokerUserFunctionField_BrokerFunctionCode_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcBrokerUserFunctionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcBrokerUserFunctionField
    __del__ = lambda self: None
CThostFtdcBrokerUserFunctionField_swigregister = _pyctp.CThostFtdcBrokerUserFunctionField_swigregister
CThostFtdcBrokerUserFunctionField_swigregister(CThostFtdcBrokerUserFunctionField)

class CThostFtdcTraderOfferField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcTraderOfferField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcTraderOfferField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcTraderOfferField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcTraderOfferField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcTraderOfferField_ExchangeID_get, _pyctp.CThostFtdcTraderOfferField_ExchangeID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcTraderOfferField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcTraderOfferField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcTraderOfferField_TraderID_get, _pyctp.CThostFtdcTraderOfferField_TraderID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcTraderOfferField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcTraderOfferField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcTraderOfferField_ParticipantID_get, _pyctp.CThostFtdcTraderOfferField_ParticipantID_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcTraderOfferField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcTraderOfferField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcTraderOfferField_Password_get, _pyctp.CThostFtdcTraderOfferField_Password_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcTraderOfferField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcTraderOfferField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcTraderOfferField_InstallID_get, _pyctp.CThostFtdcTraderOfferField_InstallID_set)
    __swig_setmethods__["OrderLocalID"] = _pyctp.CThostFtdcTraderOfferField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _pyctp.CThostFtdcTraderOfferField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_pyctp.CThostFtdcTraderOfferField_OrderLocalID_get, _pyctp.CThostFtdcTraderOfferField_OrderLocalID_set)
    __swig_setmethods__["TraderConnectStatus"] = _pyctp.CThostFtdcTraderOfferField_TraderConnectStatus_set
    __swig_getmethods__["TraderConnectStatus"] = _pyctp.CThostFtdcTraderOfferField_TraderConnectStatus_get
    if _newclass:
        TraderConnectStatus = _swig_property(_pyctp.CThostFtdcTraderOfferField_TraderConnectStatus_get, _pyctp.CThostFtdcTraderOfferField_TraderConnectStatus_set)
    __swig_setmethods__["ConnectRequestDate"] = _pyctp.CThostFtdcTraderOfferField_ConnectRequestDate_set
    __swig_getmethods__["ConnectRequestDate"] = _pyctp.CThostFtdcTraderOfferField_ConnectRequestDate_get
    if _newclass:
        ConnectRequestDate = _swig_property(_pyctp.CThostFtdcTraderOfferField_ConnectRequestDate_get, _pyctp.CThostFtdcTraderOfferField_ConnectRequestDate_set)
    __swig_setmethods__["ConnectRequestTime"] = _pyctp.CThostFtdcTraderOfferField_ConnectRequestTime_set
    __swig_getmethods__["ConnectRequestTime"] = _pyctp.CThostFtdcTraderOfferField_ConnectRequestTime_get
    if _newclass:
        ConnectRequestTime = _swig_property(_pyctp.CThostFtdcTraderOfferField_ConnectRequestTime_get, _pyctp.CThostFtdcTraderOfferField_ConnectRequestTime_set)
    __swig_setmethods__["LastReportDate"] = _pyctp.CThostFtdcTraderOfferField_LastReportDate_set
    __swig_getmethods__["LastReportDate"] = _pyctp.CThostFtdcTraderOfferField_LastReportDate_get
    if _newclass:
        LastReportDate = _swig_property(_pyctp.CThostFtdcTraderOfferField_LastReportDate_get, _pyctp.CThostFtdcTraderOfferField_LastReportDate_set)
    __swig_setmethods__["LastReportTime"] = _pyctp.CThostFtdcTraderOfferField_LastReportTime_set
    __swig_getmethods__["LastReportTime"] = _pyctp.CThostFtdcTraderOfferField_LastReportTime_get
    if _newclass:
        LastReportTime = _swig_property(_pyctp.CThostFtdcTraderOfferField_LastReportTime_get, _pyctp.CThostFtdcTraderOfferField_LastReportTime_set)
    __swig_setmethods__["ConnectDate"] = _pyctp.CThostFtdcTraderOfferField_ConnectDate_set
    __swig_getmethods__["ConnectDate"] = _pyctp.CThostFtdcTraderOfferField_ConnectDate_get
    if _newclass:
        ConnectDate = _swig_property(_pyctp.CThostFtdcTraderOfferField_ConnectDate_get, _pyctp.CThostFtdcTraderOfferField_ConnectDate_set)
    __swig_setmethods__["ConnectTime"] = _pyctp.CThostFtdcTraderOfferField_ConnectTime_set
    __swig_getmethods__["ConnectTime"] = _pyctp.CThostFtdcTraderOfferField_ConnectTime_get
    if _newclass:
        ConnectTime = _swig_property(_pyctp.CThostFtdcTraderOfferField_ConnectTime_get, _pyctp.CThostFtdcTraderOfferField_ConnectTime_set)
    __swig_setmethods__["StartDate"] = _pyctp.CThostFtdcTraderOfferField_StartDate_set
    __swig_getmethods__["StartDate"] = _pyctp.CThostFtdcTraderOfferField_StartDate_get
    if _newclass:
        StartDate = _swig_property(_pyctp.CThostFtdcTraderOfferField_StartDate_get, _pyctp.CThostFtdcTraderOfferField_StartDate_set)
    __swig_setmethods__["StartTime"] = _pyctp.CThostFtdcTraderOfferField_StartTime_set
    __swig_getmethods__["StartTime"] = _pyctp.CThostFtdcTraderOfferField_StartTime_get
    if _newclass:
        StartTime = _swig_property(_pyctp.CThostFtdcTraderOfferField_StartTime_get, _pyctp.CThostFtdcTraderOfferField_StartTime_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcTraderOfferField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcTraderOfferField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcTraderOfferField_TradingDay_get, _pyctp.CThostFtdcTraderOfferField_TradingDay_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcTraderOfferField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcTraderOfferField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcTraderOfferField_BrokerID_get, _pyctp.CThostFtdcTraderOfferField_BrokerID_set)
    __swig_setmethods__["MaxTradeID"] = _pyctp.CThostFtdcTraderOfferField_MaxTradeID_set
    __swig_getmethods__["MaxTradeID"] = _pyctp.CThostFtdcTraderOfferField_MaxTradeID_get
    if _newclass:
        MaxTradeID = _swig_property(_pyctp.CThostFtdcTraderOfferField_MaxTradeID_get, _pyctp.CThostFtdcTraderOfferField_MaxTradeID_set)
    __swig_setmethods__["MaxOrderMessageReference"] = _pyctp.CThostFtdcTraderOfferField_MaxOrderMessageReference_set
    __swig_getmethods__["MaxOrderMessageReference"] = _pyctp.CThostFtdcTraderOfferField_MaxOrderMessageReference_get
    if _newclass:
        MaxOrderMessageReference = _swig_property(_pyctp.CThostFtdcTraderOfferField_MaxOrderMessageReference_get, _pyctp.CThostFtdcTraderOfferField_MaxOrderMessageReference_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcTraderOfferField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcTraderOfferField
    __del__ = lambda self: None
CThostFtdcTraderOfferField_swigregister = _pyctp.CThostFtdcTraderOfferField_swigregister
CThostFtdcTraderOfferField_swigregister(CThostFtdcTraderOfferField)

class CThostFtdcSettlementInfoField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcSettlementInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcSettlementInfoField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcSettlementInfoField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcSettlementInfoField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcSettlementInfoField_TradingDay_get, _pyctp.CThostFtdcSettlementInfoField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CThostFtdcSettlementInfoField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CThostFtdcSettlementInfoField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CThostFtdcSettlementInfoField_SettlementID_get, _pyctp.CThostFtdcSettlementInfoField_SettlementID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcSettlementInfoField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcSettlementInfoField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcSettlementInfoField_BrokerID_get, _pyctp.CThostFtdcSettlementInfoField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcSettlementInfoField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcSettlementInfoField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcSettlementInfoField_InvestorID_get, _pyctp.CThostFtdcSettlementInfoField_InvestorID_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CThostFtdcSettlementInfoField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CThostFtdcSettlementInfoField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CThostFtdcSettlementInfoField_SequenceNo_get, _pyctp.CThostFtdcSettlementInfoField_SequenceNo_set)
    __swig_setmethods__["Content"] = _pyctp.CThostFtdcSettlementInfoField_Content_set
    __swig_getmethods__["Content"] = _pyctp.CThostFtdcSettlementInfoField_Content_get
    if _newclass:
        Content = _swig_property(_pyctp.CThostFtdcSettlementInfoField_Content_get, _pyctp.CThostFtdcSettlementInfoField_Content_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcSettlementInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcSettlementInfoField
    __del__ = lambda self: None
CThostFtdcSettlementInfoField_swigregister = _pyctp.CThostFtdcSettlementInfoField_swigregister
CThostFtdcSettlementInfoField_swigregister(CThostFtdcSettlementInfoField)

class CThostFtdcInstrumentMarginRateAdjustField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcInstrumentMarginRateAdjustField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcInstrumentMarginRateAdjustField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcInstrumentMarginRateAdjustField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcInstrumentMarginRateAdjustField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcInstrumentMarginRateAdjustField_InstrumentID_get, _pyctp.CThostFtdcInstrumentMarginRateAdjustField_InstrumentID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CThostFtdcInstrumentMarginRateAdjustField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CThostFtdcInstrumentMarginRateAdjustField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CThostFtdcInstrumentMarginRateAdjustField_InvestorRange_get, _pyctp.CThostFtdcInstrumentMarginRateAdjustField_InvestorRange_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcInstrumentMarginRateAdjustField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcInstrumentMarginRateAdjustField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcInstrumentMarginRateAdjustField_BrokerID_get, _pyctp.CThostFtdcInstrumentMarginRateAdjustField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcInstrumentMarginRateAdjustField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcInstrumentMarginRateAdjustField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcInstrumentMarginRateAdjustField_InvestorID_get, _pyctp.CThostFtdcInstrumentMarginRateAdjustField_InvestorID_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcInstrumentMarginRateAdjustField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcInstrumentMarginRateAdjustField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcInstrumentMarginRateAdjustField_HedgeFlag_get, _pyctp.CThostFtdcInstrumentMarginRateAdjustField_HedgeFlag_set)
    __swig_setmethods__["LongMarginRatioByMoney"] = _pyctp.CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByMoney_set
    __swig_getmethods__["LongMarginRatioByMoney"] = _pyctp.CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByMoney_get
    if _newclass:
        LongMarginRatioByMoney = _swig_property(_pyctp.CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByMoney_get, _pyctp.CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByMoney_set)
    __swig_setmethods__["LongMarginRatioByVolume"] = _pyctp.CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByVolume_set
    __swig_getmethods__["LongMarginRatioByVolume"] = _pyctp.CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByVolume_get
    if _newclass:
        LongMarginRatioByVolume = _swig_property(_pyctp.CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByVolume_get, _pyctp.CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByVolume_set)
    __swig_setmethods__["ShortMarginRatioByMoney"] = _pyctp.CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByMoney_set
    __swig_getmethods__["ShortMarginRatioByMoney"] = _pyctp.CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByMoney_get
    if _newclass:
        ShortMarginRatioByMoney = _swig_property(_pyctp.CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByMoney_get, _pyctp.CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByMoney_set)
    __swig_setmethods__["ShortMarginRatioByVolume"] = _pyctp.CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByVolume_set
    __swig_getmethods__["ShortMarginRatioByVolume"] = _pyctp.CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByVolume_get
    if _newclass:
        ShortMarginRatioByVolume = _swig_property(_pyctp.CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByVolume_get, _pyctp.CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByVolume_set)
    __swig_setmethods__["IsRelative"] = _pyctp.CThostFtdcInstrumentMarginRateAdjustField_IsRelative_set
    __swig_getmethods__["IsRelative"] = _pyctp.CThostFtdcInstrumentMarginRateAdjustField_IsRelative_get
    if _newclass:
        IsRelative = _swig_property(_pyctp.CThostFtdcInstrumentMarginRateAdjustField_IsRelative_get, _pyctp.CThostFtdcInstrumentMarginRateAdjustField_IsRelative_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcInstrumentMarginRateAdjustField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcInstrumentMarginRateAdjustField
    __del__ = lambda self: None
CThostFtdcInstrumentMarginRateAdjustField_swigregister = _pyctp.CThostFtdcInstrumentMarginRateAdjustField_swigregister
CThostFtdcInstrumentMarginRateAdjustField_swigregister(CThostFtdcInstrumentMarginRateAdjustField)

class CThostFtdcExchangeMarginRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcExchangeMarginRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcExchangeMarginRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcExchangeMarginRateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcExchangeMarginRateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcExchangeMarginRateField_BrokerID_get, _pyctp.CThostFtdcExchangeMarginRateField_BrokerID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcExchangeMarginRateField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcExchangeMarginRateField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcExchangeMarginRateField_InstrumentID_get, _pyctp.CThostFtdcExchangeMarginRateField_InstrumentID_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcExchangeMarginRateField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcExchangeMarginRateField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcExchangeMarginRateField_HedgeFlag_get, _pyctp.CThostFtdcExchangeMarginRateField_HedgeFlag_set)
    __swig_setmethods__["LongMarginRatioByMoney"] = _pyctp.CThostFtdcExchangeMarginRateField_LongMarginRatioByMoney_set
    __swig_getmethods__["LongMarginRatioByMoney"] = _pyctp.CThostFtdcExchangeMarginRateField_LongMarginRatioByMoney_get
    if _newclass:
        LongMarginRatioByMoney = _swig_property(_pyctp.CThostFtdcExchangeMarginRateField_LongMarginRatioByMoney_get, _pyctp.CThostFtdcExchangeMarginRateField_LongMarginRatioByMoney_set)
    __swig_setmethods__["LongMarginRatioByVolume"] = _pyctp.CThostFtdcExchangeMarginRateField_LongMarginRatioByVolume_set
    __swig_getmethods__["LongMarginRatioByVolume"] = _pyctp.CThostFtdcExchangeMarginRateField_LongMarginRatioByVolume_get
    if _newclass:
        LongMarginRatioByVolume = _swig_property(_pyctp.CThostFtdcExchangeMarginRateField_LongMarginRatioByVolume_get, _pyctp.CThostFtdcExchangeMarginRateField_LongMarginRatioByVolume_set)
    __swig_setmethods__["ShortMarginRatioByMoney"] = _pyctp.CThostFtdcExchangeMarginRateField_ShortMarginRatioByMoney_set
    __swig_getmethods__["ShortMarginRatioByMoney"] = _pyctp.CThostFtdcExchangeMarginRateField_ShortMarginRatioByMoney_get
    if _newclass:
        ShortMarginRatioByMoney = _swig_property(_pyctp.CThostFtdcExchangeMarginRateField_ShortMarginRatioByMoney_get, _pyctp.CThostFtdcExchangeMarginRateField_ShortMarginRatioByMoney_set)
    __swig_setmethods__["ShortMarginRatioByVolume"] = _pyctp.CThostFtdcExchangeMarginRateField_ShortMarginRatioByVolume_set
    __swig_getmethods__["ShortMarginRatioByVolume"] = _pyctp.CThostFtdcExchangeMarginRateField_ShortMarginRatioByVolume_get
    if _newclass:
        ShortMarginRatioByVolume = _swig_property(_pyctp.CThostFtdcExchangeMarginRateField_ShortMarginRatioByVolume_get, _pyctp.CThostFtdcExchangeMarginRateField_ShortMarginRatioByVolume_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcExchangeMarginRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcExchangeMarginRateField
    __del__ = lambda self: None
CThostFtdcExchangeMarginRateField_swigregister = _pyctp.CThostFtdcExchangeMarginRateField_swigregister
CThostFtdcExchangeMarginRateField_swigregister(CThostFtdcExchangeMarginRateField)

class CThostFtdcExchangeMarginRateAdjustField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcExchangeMarginRateAdjustField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcExchangeMarginRateAdjustField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcExchangeMarginRateAdjustField_BrokerID_get, _pyctp.CThostFtdcExchangeMarginRateAdjustField_BrokerID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcExchangeMarginRateAdjustField_InstrumentID_get, _pyctp.CThostFtdcExchangeMarginRateAdjustField_InstrumentID_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcExchangeMarginRateAdjustField_HedgeFlag_get, _pyctp.CThostFtdcExchangeMarginRateAdjustField_HedgeFlag_set)
    __swig_setmethods__["LongMarginRatioByMoney"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByMoney_set
    __swig_getmethods__["LongMarginRatioByMoney"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByMoney_get
    if _newclass:
        LongMarginRatioByMoney = _swig_property(_pyctp.CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByMoney_get, _pyctp.CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByMoney_set)
    __swig_setmethods__["LongMarginRatioByVolume"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByVolume_set
    __swig_getmethods__["LongMarginRatioByVolume"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByVolume_get
    if _newclass:
        LongMarginRatioByVolume = _swig_property(_pyctp.CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByVolume_get, _pyctp.CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByVolume_set)
    __swig_setmethods__["ShortMarginRatioByMoney"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByMoney_set
    __swig_getmethods__["ShortMarginRatioByMoney"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByMoney_get
    if _newclass:
        ShortMarginRatioByMoney = _swig_property(_pyctp.CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByMoney_get, _pyctp.CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByMoney_set)
    __swig_setmethods__["ShortMarginRatioByVolume"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByVolume_set
    __swig_getmethods__["ShortMarginRatioByVolume"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByVolume_get
    if _newclass:
        ShortMarginRatioByVolume = _swig_property(_pyctp.CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByVolume_get, _pyctp.CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByVolume_set)
    __swig_setmethods__["ExchLongMarginRatioByMoney"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByMoney_set
    __swig_getmethods__["ExchLongMarginRatioByMoney"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByMoney_get
    if _newclass:
        ExchLongMarginRatioByMoney = _swig_property(_pyctp.CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByMoney_get, _pyctp.CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByMoney_set)
    __swig_setmethods__["ExchLongMarginRatioByVolume"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByVolume_set
    __swig_getmethods__["ExchLongMarginRatioByVolume"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByVolume_get
    if _newclass:
        ExchLongMarginRatioByVolume = _swig_property(_pyctp.CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByVolume_get, _pyctp.CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByVolume_set)
    __swig_setmethods__["ExchShortMarginRatioByMoney"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByMoney_set
    __swig_getmethods__["ExchShortMarginRatioByMoney"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByMoney_get
    if _newclass:
        ExchShortMarginRatioByMoney = _swig_property(_pyctp.CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByMoney_get, _pyctp.CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByMoney_set)
    __swig_setmethods__["ExchShortMarginRatioByVolume"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByVolume_set
    __swig_getmethods__["ExchShortMarginRatioByVolume"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByVolume_get
    if _newclass:
        ExchShortMarginRatioByVolume = _swig_property(_pyctp.CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByVolume_get, _pyctp.CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByVolume_set)
    __swig_setmethods__["NoLongMarginRatioByMoney"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByMoney_set
    __swig_getmethods__["NoLongMarginRatioByMoney"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByMoney_get
    if _newclass:
        NoLongMarginRatioByMoney = _swig_property(_pyctp.CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByMoney_get, _pyctp.CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByMoney_set)
    __swig_setmethods__["NoLongMarginRatioByVolume"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByVolume_set
    __swig_getmethods__["NoLongMarginRatioByVolume"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByVolume_get
    if _newclass:
        NoLongMarginRatioByVolume = _swig_property(_pyctp.CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByVolume_get, _pyctp.CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByVolume_set)
    __swig_setmethods__["NoShortMarginRatioByMoney"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByMoney_set
    __swig_getmethods__["NoShortMarginRatioByMoney"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByMoney_get
    if _newclass:
        NoShortMarginRatioByMoney = _swig_property(_pyctp.CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByMoney_get, _pyctp.CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByMoney_set)
    __swig_setmethods__["NoShortMarginRatioByVolume"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByVolume_set
    __swig_getmethods__["NoShortMarginRatioByVolume"] = _pyctp.CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByVolume_get
    if _newclass:
        NoShortMarginRatioByVolume = _swig_property(_pyctp.CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByVolume_get, _pyctp.CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByVolume_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcExchangeMarginRateAdjustField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcExchangeMarginRateAdjustField
    __del__ = lambda self: None
CThostFtdcExchangeMarginRateAdjustField_swigregister = _pyctp.CThostFtdcExchangeMarginRateAdjustField_swigregister
CThostFtdcExchangeMarginRateAdjustField_swigregister(CThostFtdcExchangeMarginRateAdjustField)

class CThostFtdcExchangeRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcExchangeRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcExchangeRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcExchangeRateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcExchangeRateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcExchangeRateField_BrokerID_get, _pyctp.CThostFtdcExchangeRateField_BrokerID_set)
    __swig_setmethods__["FromCurrencyID"] = _pyctp.CThostFtdcExchangeRateField_FromCurrencyID_set
    __swig_getmethods__["FromCurrencyID"] = _pyctp.CThostFtdcExchangeRateField_FromCurrencyID_get
    if _newclass:
        FromCurrencyID = _swig_property(_pyctp.CThostFtdcExchangeRateField_FromCurrencyID_get, _pyctp.CThostFtdcExchangeRateField_FromCurrencyID_set)
    __swig_setmethods__["FromCurrencyUnit"] = _pyctp.CThostFtdcExchangeRateField_FromCurrencyUnit_set
    __swig_getmethods__["FromCurrencyUnit"] = _pyctp.CThostFtdcExchangeRateField_FromCurrencyUnit_get
    if _newclass:
        FromCurrencyUnit = _swig_property(_pyctp.CThostFtdcExchangeRateField_FromCurrencyUnit_get, _pyctp.CThostFtdcExchangeRateField_FromCurrencyUnit_set)
    __swig_setmethods__["ToCurrencyID"] = _pyctp.CThostFtdcExchangeRateField_ToCurrencyID_set
    __swig_getmethods__["ToCurrencyID"] = _pyctp.CThostFtdcExchangeRateField_ToCurrencyID_get
    if _newclass:
        ToCurrencyID = _swig_property(_pyctp.CThostFtdcExchangeRateField_ToCurrencyID_get, _pyctp.CThostFtdcExchangeRateField_ToCurrencyID_set)
    __swig_setmethods__["ExchangeRate"] = _pyctp.CThostFtdcExchangeRateField_ExchangeRate_set
    __swig_getmethods__["ExchangeRate"] = _pyctp.CThostFtdcExchangeRateField_ExchangeRate_get
    if _newclass:
        ExchangeRate = _swig_property(_pyctp.CThostFtdcExchangeRateField_ExchangeRate_get, _pyctp.CThostFtdcExchangeRateField_ExchangeRate_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcExchangeRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcExchangeRateField
    __del__ = lambda self: None
CThostFtdcExchangeRateField_swigregister = _pyctp.CThostFtdcExchangeRateField_swigregister
CThostFtdcExchangeRateField_swigregister(CThostFtdcExchangeRateField)

class CThostFtdcSettlementRefField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcSettlementRefField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcSettlementRefField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcSettlementRefField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcSettlementRefField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcSettlementRefField_TradingDay_get, _pyctp.CThostFtdcSettlementRefField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CThostFtdcSettlementRefField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CThostFtdcSettlementRefField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CThostFtdcSettlementRefField_SettlementID_get, _pyctp.CThostFtdcSettlementRefField_SettlementID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcSettlementRefField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcSettlementRefField
    __del__ = lambda self: None
CThostFtdcSettlementRefField_swigregister = _pyctp.CThostFtdcSettlementRefField_swigregister
CThostFtdcSettlementRefField_swigregister(CThostFtdcSettlementRefField)

class CThostFtdcCurrentTimeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcCurrentTimeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcCurrentTimeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["CurrDate"] = _pyctp.CThostFtdcCurrentTimeField_CurrDate_set
    __swig_getmethods__["CurrDate"] = _pyctp.CThostFtdcCurrentTimeField_CurrDate_get
    if _newclass:
        CurrDate = _swig_property(_pyctp.CThostFtdcCurrentTimeField_CurrDate_get, _pyctp.CThostFtdcCurrentTimeField_CurrDate_set)
    __swig_setmethods__["CurrTime"] = _pyctp.CThostFtdcCurrentTimeField_CurrTime_set
    __swig_getmethods__["CurrTime"] = _pyctp.CThostFtdcCurrentTimeField_CurrTime_get
    if _newclass:
        CurrTime = _swig_property(_pyctp.CThostFtdcCurrentTimeField_CurrTime_get, _pyctp.CThostFtdcCurrentTimeField_CurrTime_set)
    __swig_setmethods__["CurrMillisec"] = _pyctp.CThostFtdcCurrentTimeField_CurrMillisec_set
    __swig_getmethods__["CurrMillisec"] = _pyctp.CThostFtdcCurrentTimeField_CurrMillisec_get
    if _newclass:
        CurrMillisec = _swig_property(_pyctp.CThostFtdcCurrentTimeField_CurrMillisec_get, _pyctp.CThostFtdcCurrentTimeField_CurrMillisec_set)
    __swig_setmethods__["ActionDay"] = _pyctp.CThostFtdcCurrentTimeField_ActionDay_set
    __swig_getmethods__["ActionDay"] = _pyctp.CThostFtdcCurrentTimeField_ActionDay_get
    if _newclass:
        ActionDay = _swig_property(_pyctp.CThostFtdcCurrentTimeField_ActionDay_get, _pyctp.CThostFtdcCurrentTimeField_ActionDay_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcCurrentTimeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcCurrentTimeField
    __del__ = lambda self: None
CThostFtdcCurrentTimeField_swigregister = _pyctp.CThostFtdcCurrentTimeField_swigregister
CThostFtdcCurrentTimeField_swigregister(CThostFtdcCurrentTimeField)

class CThostFtdcCommPhaseField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcCommPhaseField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcCommPhaseField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcCommPhaseField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcCommPhaseField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcCommPhaseField_TradingDay_get, _pyctp.CThostFtdcCommPhaseField_TradingDay_set)
    __swig_setmethods__["CommPhaseNo"] = _pyctp.CThostFtdcCommPhaseField_CommPhaseNo_set
    __swig_getmethods__["CommPhaseNo"] = _pyctp.CThostFtdcCommPhaseField_CommPhaseNo_get
    if _newclass:
        CommPhaseNo = _swig_property(_pyctp.CThostFtdcCommPhaseField_CommPhaseNo_get, _pyctp.CThostFtdcCommPhaseField_CommPhaseNo_set)
    __swig_setmethods__["SystemID"] = _pyctp.CThostFtdcCommPhaseField_SystemID_set
    __swig_getmethods__["SystemID"] = _pyctp.CThostFtdcCommPhaseField_SystemID_get
    if _newclass:
        SystemID = _swig_property(_pyctp.CThostFtdcCommPhaseField_SystemID_get, _pyctp.CThostFtdcCommPhaseField_SystemID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcCommPhaseField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcCommPhaseField
    __del__ = lambda self: None
CThostFtdcCommPhaseField_swigregister = _pyctp.CThostFtdcCommPhaseField_swigregister
CThostFtdcCommPhaseField_swigregister(CThostFtdcCommPhaseField)

class CThostFtdcLoginInfoField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcLoginInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcLoginInfoField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["FrontID"] = _pyctp.CThostFtdcLoginInfoField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CThostFtdcLoginInfoField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CThostFtdcLoginInfoField_FrontID_get, _pyctp.CThostFtdcLoginInfoField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcLoginInfoField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcLoginInfoField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcLoginInfoField_SessionID_get, _pyctp.CThostFtdcLoginInfoField_SessionID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcLoginInfoField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcLoginInfoField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcLoginInfoField_BrokerID_get, _pyctp.CThostFtdcLoginInfoField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcLoginInfoField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcLoginInfoField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcLoginInfoField_UserID_get, _pyctp.CThostFtdcLoginInfoField_UserID_set)
    __swig_setmethods__["LoginDate"] = _pyctp.CThostFtdcLoginInfoField_LoginDate_set
    __swig_getmethods__["LoginDate"] = _pyctp.CThostFtdcLoginInfoField_LoginDate_get
    if _newclass:
        LoginDate = _swig_property(_pyctp.CThostFtdcLoginInfoField_LoginDate_get, _pyctp.CThostFtdcLoginInfoField_LoginDate_set)
    __swig_setmethods__["LoginTime"] = _pyctp.CThostFtdcLoginInfoField_LoginTime_set
    __swig_getmethods__["LoginTime"] = _pyctp.CThostFtdcLoginInfoField_LoginTime_get
    if _newclass:
        LoginTime = _swig_property(_pyctp.CThostFtdcLoginInfoField_LoginTime_get, _pyctp.CThostFtdcLoginInfoField_LoginTime_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcLoginInfoField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcLoginInfoField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcLoginInfoField_IPAddress_get, _pyctp.CThostFtdcLoginInfoField_IPAddress_set)
    __swig_setmethods__["UserProductInfo"] = _pyctp.CThostFtdcLoginInfoField_UserProductInfo_set
    __swig_getmethods__["UserProductInfo"] = _pyctp.CThostFtdcLoginInfoField_UserProductInfo_get
    if _newclass:
        UserProductInfo = _swig_property(_pyctp.CThostFtdcLoginInfoField_UserProductInfo_get, _pyctp.CThostFtdcLoginInfoField_UserProductInfo_set)
    __swig_setmethods__["InterfaceProductInfo"] = _pyctp.CThostFtdcLoginInfoField_InterfaceProductInfo_set
    __swig_getmethods__["InterfaceProductInfo"] = _pyctp.CThostFtdcLoginInfoField_InterfaceProductInfo_get
    if _newclass:
        InterfaceProductInfo = _swig_property(_pyctp.CThostFtdcLoginInfoField_InterfaceProductInfo_get, _pyctp.CThostFtdcLoginInfoField_InterfaceProductInfo_set)
    __swig_setmethods__["ProtocolInfo"] = _pyctp.CThostFtdcLoginInfoField_ProtocolInfo_set
    __swig_getmethods__["ProtocolInfo"] = _pyctp.CThostFtdcLoginInfoField_ProtocolInfo_get
    if _newclass:
        ProtocolInfo = _swig_property(_pyctp.CThostFtdcLoginInfoField_ProtocolInfo_get, _pyctp.CThostFtdcLoginInfoField_ProtocolInfo_set)
    __swig_setmethods__["SystemName"] = _pyctp.CThostFtdcLoginInfoField_SystemName_set
    __swig_getmethods__["SystemName"] = _pyctp.CThostFtdcLoginInfoField_SystemName_get
    if _newclass:
        SystemName = _swig_property(_pyctp.CThostFtdcLoginInfoField_SystemName_get, _pyctp.CThostFtdcLoginInfoField_SystemName_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcLoginInfoField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcLoginInfoField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcLoginInfoField_Password_get, _pyctp.CThostFtdcLoginInfoField_Password_set)
    __swig_setmethods__["MaxOrderRef"] = _pyctp.CThostFtdcLoginInfoField_MaxOrderRef_set
    __swig_getmethods__["MaxOrderRef"] = _pyctp.CThostFtdcLoginInfoField_MaxOrderRef_get
    if _newclass:
        MaxOrderRef = _swig_property(_pyctp.CThostFtdcLoginInfoField_MaxOrderRef_get, _pyctp.CThostFtdcLoginInfoField_MaxOrderRef_set)
    __swig_setmethods__["SHFETime"] = _pyctp.CThostFtdcLoginInfoField_SHFETime_set
    __swig_getmethods__["SHFETime"] = _pyctp.CThostFtdcLoginInfoField_SHFETime_get
    if _newclass:
        SHFETime = _swig_property(_pyctp.CThostFtdcLoginInfoField_SHFETime_get, _pyctp.CThostFtdcLoginInfoField_SHFETime_set)
    __swig_setmethods__["DCETime"] = _pyctp.CThostFtdcLoginInfoField_DCETime_set
    __swig_getmethods__["DCETime"] = _pyctp.CThostFtdcLoginInfoField_DCETime_get
    if _newclass:
        DCETime = _swig_property(_pyctp.CThostFtdcLoginInfoField_DCETime_get, _pyctp.CThostFtdcLoginInfoField_DCETime_set)
    __swig_setmethods__["CZCETime"] = _pyctp.CThostFtdcLoginInfoField_CZCETime_set
    __swig_getmethods__["CZCETime"] = _pyctp.CThostFtdcLoginInfoField_CZCETime_get
    if _newclass:
        CZCETime = _swig_property(_pyctp.CThostFtdcLoginInfoField_CZCETime_get, _pyctp.CThostFtdcLoginInfoField_CZCETime_set)
    __swig_setmethods__["FFEXTime"] = _pyctp.CThostFtdcLoginInfoField_FFEXTime_set
    __swig_getmethods__["FFEXTime"] = _pyctp.CThostFtdcLoginInfoField_FFEXTime_get
    if _newclass:
        FFEXTime = _swig_property(_pyctp.CThostFtdcLoginInfoField_FFEXTime_get, _pyctp.CThostFtdcLoginInfoField_FFEXTime_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcLoginInfoField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcLoginInfoField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcLoginInfoField_MacAddress_get, _pyctp.CThostFtdcLoginInfoField_MacAddress_set)
    __swig_setmethods__["OneTimePassword"] = _pyctp.CThostFtdcLoginInfoField_OneTimePassword_set
    __swig_getmethods__["OneTimePassword"] = _pyctp.CThostFtdcLoginInfoField_OneTimePassword_get
    if _newclass:
        OneTimePassword = _swig_property(_pyctp.CThostFtdcLoginInfoField_OneTimePassword_get, _pyctp.CThostFtdcLoginInfoField_OneTimePassword_set)
    __swig_setmethods__["INETime"] = _pyctp.CThostFtdcLoginInfoField_INETime_set
    __swig_getmethods__["INETime"] = _pyctp.CThostFtdcLoginInfoField_INETime_get
    if _newclass:
        INETime = _swig_property(_pyctp.CThostFtdcLoginInfoField_INETime_get, _pyctp.CThostFtdcLoginInfoField_INETime_set)
    __swig_setmethods__["IsQryControl"] = _pyctp.CThostFtdcLoginInfoField_IsQryControl_set
    __swig_getmethods__["IsQryControl"] = _pyctp.CThostFtdcLoginInfoField_IsQryControl_get
    if _newclass:
        IsQryControl = _swig_property(_pyctp.CThostFtdcLoginInfoField_IsQryControl_get, _pyctp.CThostFtdcLoginInfoField_IsQryControl_set)
    __swig_setmethods__["LoginRemark"] = _pyctp.CThostFtdcLoginInfoField_LoginRemark_set
    __swig_getmethods__["LoginRemark"] = _pyctp.CThostFtdcLoginInfoField_LoginRemark_get
    if _newclass:
        LoginRemark = _swig_property(_pyctp.CThostFtdcLoginInfoField_LoginRemark_get, _pyctp.CThostFtdcLoginInfoField_LoginRemark_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcLoginInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcLoginInfoField
    __del__ = lambda self: None
CThostFtdcLoginInfoField_swigregister = _pyctp.CThostFtdcLoginInfoField_swigregister
CThostFtdcLoginInfoField_swigregister(CThostFtdcLoginInfoField)

class CThostFtdcLogoutAllField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcLogoutAllField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcLogoutAllField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["FrontID"] = _pyctp.CThostFtdcLogoutAllField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CThostFtdcLogoutAllField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CThostFtdcLogoutAllField_FrontID_get, _pyctp.CThostFtdcLogoutAllField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcLogoutAllField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcLogoutAllField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcLogoutAllField_SessionID_get, _pyctp.CThostFtdcLogoutAllField_SessionID_set)
    __swig_setmethods__["SystemName"] = _pyctp.CThostFtdcLogoutAllField_SystemName_set
    __swig_getmethods__["SystemName"] = _pyctp.CThostFtdcLogoutAllField_SystemName_get
    if _newclass:
        SystemName = _swig_property(_pyctp.CThostFtdcLogoutAllField_SystemName_get, _pyctp.CThostFtdcLogoutAllField_SystemName_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcLogoutAllField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcLogoutAllField
    __del__ = lambda self: None
CThostFtdcLogoutAllField_swigregister = _pyctp.CThostFtdcLogoutAllField_swigregister
CThostFtdcLogoutAllField_swigregister(CThostFtdcLogoutAllField)

class CThostFtdcFrontStatusField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcFrontStatusField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcFrontStatusField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["FrontID"] = _pyctp.CThostFtdcFrontStatusField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CThostFtdcFrontStatusField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CThostFtdcFrontStatusField_FrontID_get, _pyctp.CThostFtdcFrontStatusField_FrontID_set)
    __swig_setmethods__["LastReportDate"] = _pyctp.CThostFtdcFrontStatusField_LastReportDate_set
    __swig_getmethods__["LastReportDate"] = _pyctp.CThostFtdcFrontStatusField_LastReportDate_get
    if _newclass:
        LastReportDate = _swig_property(_pyctp.CThostFtdcFrontStatusField_LastReportDate_get, _pyctp.CThostFtdcFrontStatusField_LastReportDate_set)
    __swig_setmethods__["LastReportTime"] = _pyctp.CThostFtdcFrontStatusField_LastReportTime_set
    __swig_getmethods__["LastReportTime"] = _pyctp.CThostFtdcFrontStatusField_LastReportTime_get
    if _newclass:
        LastReportTime = _swig_property(_pyctp.CThostFtdcFrontStatusField_LastReportTime_get, _pyctp.CThostFtdcFrontStatusField_LastReportTime_set)
    __swig_setmethods__["IsActive"] = _pyctp.CThostFtdcFrontStatusField_IsActive_set
    __swig_getmethods__["IsActive"] = _pyctp.CThostFtdcFrontStatusField_IsActive_get
    if _newclass:
        IsActive = _swig_property(_pyctp.CThostFtdcFrontStatusField_IsActive_get, _pyctp.CThostFtdcFrontStatusField_IsActive_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcFrontStatusField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcFrontStatusField
    __del__ = lambda self: None
CThostFtdcFrontStatusField_swigregister = _pyctp.CThostFtdcFrontStatusField_swigregister
CThostFtdcFrontStatusField_swigregister(CThostFtdcFrontStatusField)

class CThostFtdcUserPasswordUpdateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcUserPasswordUpdateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcUserPasswordUpdateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcUserPasswordUpdateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcUserPasswordUpdateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcUserPasswordUpdateField_BrokerID_get, _pyctp.CThostFtdcUserPasswordUpdateField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcUserPasswordUpdateField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcUserPasswordUpdateField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcUserPasswordUpdateField_UserID_get, _pyctp.CThostFtdcUserPasswordUpdateField_UserID_set)
    __swig_setmethods__["OldPassword"] = _pyctp.CThostFtdcUserPasswordUpdateField_OldPassword_set
    __swig_getmethods__["OldPassword"] = _pyctp.CThostFtdcUserPasswordUpdateField_OldPassword_get
    if _newclass:
        OldPassword = _swig_property(_pyctp.CThostFtdcUserPasswordUpdateField_OldPassword_get, _pyctp.CThostFtdcUserPasswordUpdateField_OldPassword_set)
    __swig_setmethods__["NewPassword"] = _pyctp.CThostFtdcUserPasswordUpdateField_NewPassword_set
    __swig_getmethods__["NewPassword"] = _pyctp.CThostFtdcUserPasswordUpdateField_NewPassword_get
    if _newclass:
        NewPassword = _swig_property(_pyctp.CThostFtdcUserPasswordUpdateField_NewPassword_get, _pyctp.CThostFtdcUserPasswordUpdateField_NewPassword_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcUserPasswordUpdateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcUserPasswordUpdateField
    __del__ = lambda self: None
CThostFtdcUserPasswordUpdateField_swigregister = _pyctp.CThostFtdcUserPasswordUpdateField_swigregister
CThostFtdcUserPasswordUpdateField_swigregister(CThostFtdcUserPasswordUpdateField)

class CThostFtdcInputOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcInputOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcInputOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcInputOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcInputOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcInputOrderField_BrokerID_get, _pyctp.CThostFtdcInputOrderField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcInputOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcInputOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcInputOrderField_InvestorID_get, _pyctp.CThostFtdcInputOrderField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcInputOrderField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcInputOrderField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcInputOrderField_InstrumentID_get, _pyctp.CThostFtdcInputOrderField_InstrumentID_set)
    __swig_setmethods__["OrderRef"] = _pyctp.CThostFtdcInputOrderField_OrderRef_set
    __swig_getmethods__["OrderRef"] = _pyctp.CThostFtdcInputOrderField_OrderRef_get
    if _newclass:
        OrderRef = _swig_property(_pyctp.CThostFtdcInputOrderField_OrderRef_get, _pyctp.CThostFtdcInputOrderField_OrderRef_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcInputOrderField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcInputOrderField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcInputOrderField_UserID_get, _pyctp.CThostFtdcInputOrderField_UserID_set)
    __swig_setmethods__["OrderPriceType"] = _pyctp.CThostFtdcInputOrderField_OrderPriceType_set
    __swig_getmethods__["OrderPriceType"] = _pyctp.CThostFtdcInputOrderField_OrderPriceType_get
    if _newclass:
        OrderPriceType = _swig_property(_pyctp.CThostFtdcInputOrderField_OrderPriceType_get, _pyctp.CThostFtdcInputOrderField_OrderPriceType_set)
    __swig_setmethods__["Direction"] = _pyctp.CThostFtdcInputOrderField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CThostFtdcInputOrderField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CThostFtdcInputOrderField_Direction_get, _pyctp.CThostFtdcInputOrderField_Direction_set)
    __swig_setmethods__["CombOffsetFlag"] = _pyctp.CThostFtdcInputOrderField_CombOffsetFlag_set
    __swig_getmethods__["CombOffsetFlag"] = _pyctp.CThostFtdcInputOrderField_CombOffsetFlag_get
    if _newclass:
        CombOffsetFlag = _swig_property(_pyctp.CThostFtdcInputOrderField_CombOffsetFlag_get, _pyctp.CThostFtdcInputOrderField_CombOffsetFlag_set)
    __swig_setmethods__["CombHedgeFlag"] = _pyctp.CThostFtdcInputOrderField_CombHedgeFlag_set
    __swig_getmethods__["CombHedgeFlag"] = _pyctp.CThostFtdcInputOrderField_CombHedgeFlag_get
    if _newclass:
        CombHedgeFlag = _swig_property(_pyctp.CThostFtdcInputOrderField_CombHedgeFlag_get, _pyctp.CThostFtdcInputOrderField_CombHedgeFlag_set)
    __swig_setmethods__["LimitPrice"] = _pyctp.CThostFtdcInputOrderField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _pyctp.CThostFtdcInputOrderField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_pyctp.CThostFtdcInputOrderField_LimitPrice_get, _pyctp.CThostFtdcInputOrderField_LimitPrice_set)
    __swig_setmethods__["VolumeTotalOriginal"] = _pyctp.CThostFtdcInputOrderField_VolumeTotalOriginal_set
    __swig_getmethods__["VolumeTotalOriginal"] = _pyctp.CThostFtdcInputOrderField_VolumeTotalOriginal_get
    if _newclass:
        VolumeTotalOriginal = _swig_property(_pyctp.CThostFtdcInputOrderField_VolumeTotalOriginal_get, _pyctp.CThostFtdcInputOrderField_VolumeTotalOriginal_set)
    __swig_setmethods__["TimeCondition"] = _pyctp.CThostFtdcInputOrderField_TimeCondition_set
    __swig_getmethods__["TimeCondition"] = _pyctp.CThostFtdcInputOrderField_TimeCondition_get
    if _newclass:
        TimeCondition = _swig_property(_pyctp.CThostFtdcInputOrderField_TimeCondition_get, _pyctp.CThostFtdcInputOrderField_TimeCondition_set)
    __swig_setmethods__["GTDDate"] = _pyctp.CThostFtdcInputOrderField_GTDDate_set
    __swig_getmethods__["GTDDate"] = _pyctp.CThostFtdcInputOrderField_GTDDate_get
    if _newclass:
        GTDDate = _swig_property(_pyctp.CThostFtdcInputOrderField_GTDDate_get, _pyctp.CThostFtdcInputOrderField_GTDDate_set)
    __swig_setmethods__["VolumeCondition"] = _pyctp.CThostFtdcInputOrderField_VolumeCondition_set
    __swig_getmethods__["VolumeCondition"] = _pyctp.CThostFtdcInputOrderField_VolumeCondition_get
    if _newclass:
        VolumeCondition = _swig_property(_pyctp.CThostFtdcInputOrderField_VolumeCondition_get, _pyctp.CThostFtdcInputOrderField_VolumeCondition_set)
    __swig_setmethods__["MinVolume"] = _pyctp.CThostFtdcInputOrderField_MinVolume_set
    __swig_getmethods__["MinVolume"] = _pyctp.CThostFtdcInputOrderField_MinVolume_get
    if _newclass:
        MinVolume = _swig_property(_pyctp.CThostFtdcInputOrderField_MinVolume_get, _pyctp.CThostFtdcInputOrderField_MinVolume_set)
    __swig_setmethods__["ContingentCondition"] = _pyctp.CThostFtdcInputOrderField_ContingentCondition_set
    __swig_getmethods__["ContingentCondition"] = _pyctp.CThostFtdcInputOrderField_ContingentCondition_get
    if _newclass:
        ContingentCondition = _swig_property(_pyctp.CThostFtdcInputOrderField_ContingentCondition_get, _pyctp.CThostFtdcInputOrderField_ContingentCondition_set)
    __swig_setmethods__["StopPrice"] = _pyctp.CThostFtdcInputOrderField_StopPrice_set
    __swig_getmethods__["StopPrice"] = _pyctp.CThostFtdcInputOrderField_StopPrice_get
    if _newclass:
        StopPrice = _swig_property(_pyctp.CThostFtdcInputOrderField_StopPrice_get, _pyctp.CThostFtdcInputOrderField_StopPrice_set)
    __swig_setmethods__["ForceCloseReason"] = _pyctp.CThostFtdcInputOrderField_ForceCloseReason_set
    __swig_getmethods__["ForceCloseReason"] = _pyctp.CThostFtdcInputOrderField_ForceCloseReason_get
    if _newclass:
        ForceCloseReason = _swig_property(_pyctp.CThostFtdcInputOrderField_ForceCloseReason_get, _pyctp.CThostFtdcInputOrderField_ForceCloseReason_set)
    __swig_setmethods__["IsAutoSuspend"] = _pyctp.CThostFtdcInputOrderField_IsAutoSuspend_set
    __swig_getmethods__["IsAutoSuspend"] = _pyctp.CThostFtdcInputOrderField_IsAutoSuspend_get
    if _newclass:
        IsAutoSuspend = _swig_property(_pyctp.CThostFtdcInputOrderField_IsAutoSuspend_get, _pyctp.CThostFtdcInputOrderField_IsAutoSuspend_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CThostFtdcInputOrderField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CThostFtdcInputOrderField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CThostFtdcInputOrderField_BusinessUnit_get, _pyctp.CThostFtdcInputOrderField_BusinessUnit_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcInputOrderField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcInputOrderField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcInputOrderField_RequestID_get, _pyctp.CThostFtdcInputOrderField_RequestID_set)
    __swig_setmethods__["UserForceClose"] = _pyctp.CThostFtdcInputOrderField_UserForceClose_set
    __swig_getmethods__["UserForceClose"] = _pyctp.CThostFtdcInputOrderField_UserForceClose_get
    if _newclass:
        UserForceClose = _swig_property(_pyctp.CThostFtdcInputOrderField_UserForceClose_get, _pyctp.CThostFtdcInputOrderField_UserForceClose_set)
    __swig_setmethods__["IsSwapOrder"] = _pyctp.CThostFtdcInputOrderField_IsSwapOrder_set
    __swig_getmethods__["IsSwapOrder"] = _pyctp.CThostFtdcInputOrderField_IsSwapOrder_get
    if _newclass:
        IsSwapOrder = _swig_property(_pyctp.CThostFtdcInputOrderField_IsSwapOrder_get, _pyctp.CThostFtdcInputOrderField_IsSwapOrder_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcInputOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcInputOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcInputOrderField_ExchangeID_get, _pyctp.CThostFtdcInputOrderField_ExchangeID_set)
    __swig_setmethods__["InvestUnitID"] = _pyctp.CThostFtdcInputOrderField_InvestUnitID_set
    __swig_getmethods__["InvestUnitID"] = _pyctp.CThostFtdcInputOrderField_InvestUnitID_get
    if _newclass:
        InvestUnitID = _swig_property(_pyctp.CThostFtdcInputOrderField_InvestUnitID_get, _pyctp.CThostFtdcInputOrderField_InvestUnitID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcInputOrderField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcInputOrderField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcInputOrderField_AccountID_get, _pyctp.CThostFtdcInputOrderField_AccountID_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcInputOrderField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcInputOrderField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcInputOrderField_CurrencyID_get, _pyctp.CThostFtdcInputOrderField_CurrencyID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcInputOrderField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcInputOrderField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcInputOrderField_ClientID_get, _pyctp.CThostFtdcInputOrderField_ClientID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcInputOrderField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcInputOrderField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcInputOrderField_IPAddress_get, _pyctp.CThostFtdcInputOrderField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcInputOrderField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcInputOrderField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcInputOrderField_MacAddress_get, _pyctp.CThostFtdcInputOrderField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcInputOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcInputOrderField
    __del__ = lambda self: None
CThostFtdcInputOrderField_swigregister = _pyctp.CThostFtdcInputOrderField_swigregister
CThostFtdcInputOrderField_swigregister(CThostFtdcInputOrderField)

class CThostFtdcOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcOrderField_BrokerID_get, _pyctp.CThostFtdcOrderField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcOrderField_InvestorID_get, _pyctp.CThostFtdcOrderField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcOrderField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcOrderField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcOrderField_InstrumentID_get, _pyctp.CThostFtdcOrderField_InstrumentID_set)
    __swig_setmethods__["OrderRef"] = _pyctp.CThostFtdcOrderField_OrderRef_set
    __swig_getmethods__["OrderRef"] = _pyctp.CThostFtdcOrderField_OrderRef_get
    if _newclass:
        OrderRef = _swig_property(_pyctp.CThostFtdcOrderField_OrderRef_get, _pyctp.CThostFtdcOrderField_OrderRef_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcOrderField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcOrderField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcOrderField_UserID_get, _pyctp.CThostFtdcOrderField_UserID_set)
    __swig_setmethods__["OrderPriceType"] = _pyctp.CThostFtdcOrderField_OrderPriceType_set
    __swig_getmethods__["OrderPriceType"] = _pyctp.CThostFtdcOrderField_OrderPriceType_get
    if _newclass:
        OrderPriceType = _swig_property(_pyctp.CThostFtdcOrderField_OrderPriceType_get, _pyctp.CThostFtdcOrderField_OrderPriceType_set)
    __swig_setmethods__["Direction"] = _pyctp.CThostFtdcOrderField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CThostFtdcOrderField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CThostFtdcOrderField_Direction_get, _pyctp.CThostFtdcOrderField_Direction_set)
    __swig_setmethods__["CombOffsetFlag"] = _pyctp.CThostFtdcOrderField_CombOffsetFlag_set
    __swig_getmethods__["CombOffsetFlag"] = _pyctp.CThostFtdcOrderField_CombOffsetFlag_get
    if _newclass:
        CombOffsetFlag = _swig_property(_pyctp.CThostFtdcOrderField_CombOffsetFlag_get, _pyctp.CThostFtdcOrderField_CombOffsetFlag_set)
    __swig_setmethods__["CombHedgeFlag"] = _pyctp.CThostFtdcOrderField_CombHedgeFlag_set
    __swig_getmethods__["CombHedgeFlag"] = _pyctp.CThostFtdcOrderField_CombHedgeFlag_get
    if _newclass:
        CombHedgeFlag = _swig_property(_pyctp.CThostFtdcOrderField_CombHedgeFlag_get, _pyctp.CThostFtdcOrderField_CombHedgeFlag_set)
    __swig_setmethods__["LimitPrice"] = _pyctp.CThostFtdcOrderField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _pyctp.CThostFtdcOrderField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_pyctp.CThostFtdcOrderField_LimitPrice_get, _pyctp.CThostFtdcOrderField_LimitPrice_set)
    __swig_setmethods__["VolumeTotalOriginal"] = _pyctp.CThostFtdcOrderField_VolumeTotalOriginal_set
    __swig_getmethods__["VolumeTotalOriginal"] = _pyctp.CThostFtdcOrderField_VolumeTotalOriginal_get
    if _newclass:
        VolumeTotalOriginal = _swig_property(_pyctp.CThostFtdcOrderField_VolumeTotalOriginal_get, _pyctp.CThostFtdcOrderField_VolumeTotalOriginal_set)
    __swig_setmethods__["TimeCondition"] = _pyctp.CThostFtdcOrderField_TimeCondition_set
    __swig_getmethods__["TimeCondition"] = _pyctp.CThostFtdcOrderField_TimeCondition_get
    if _newclass:
        TimeCondition = _swig_property(_pyctp.CThostFtdcOrderField_TimeCondition_get, _pyctp.CThostFtdcOrderField_TimeCondition_set)
    __swig_setmethods__["GTDDate"] = _pyctp.CThostFtdcOrderField_GTDDate_set
    __swig_getmethods__["GTDDate"] = _pyctp.CThostFtdcOrderField_GTDDate_get
    if _newclass:
        GTDDate = _swig_property(_pyctp.CThostFtdcOrderField_GTDDate_get, _pyctp.CThostFtdcOrderField_GTDDate_set)
    __swig_setmethods__["VolumeCondition"] = _pyctp.CThostFtdcOrderField_VolumeCondition_set
    __swig_getmethods__["VolumeCondition"] = _pyctp.CThostFtdcOrderField_VolumeCondition_get
    if _newclass:
        VolumeCondition = _swig_property(_pyctp.CThostFtdcOrderField_VolumeCondition_get, _pyctp.CThostFtdcOrderField_VolumeCondition_set)
    __swig_setmethods__["MinVolume"] = _pyctp.CThostFtdcOrderField_MinVolume_set
    __swig_getmethods__["MinVolume"] = _pyctp.CThostFtdcOrderField_MinVolume_get
    if _newclass:
        MinVolume = _swig_property(_pyctp.CThostFtdcOrderField_MinVolume_get, _pyctp.CThostFtdcOrderField_MinVolume_set)
    __swig_setmethods__["ContingentCondition"] = _pyctp.CThostFtdcOrderField_ContingentCondition_set
    __swig_getmethods__["ContingentCondition"] = _pyctp.CThostFtdcOrderField_ContingentCondition_get
    if _newclass:
        ContingentCondition = _swig_property(_pyctp.CThostFtdcOrderField_ContingentCondition_get, _pyctp.CThostFtdcOrderField_ContingentCondition_set)
    __swig_setmethods__["StopPrice"] = _pyctp.CThostFtdcOrderField_StopPrice_set
    __swig_getmethods__["StopPrice"] = _pyctp.CThostFtdcOrderField_StopPrice_get
    if _newclass:
        StopPrice = _swig_property(_pyctp.CThostFtdcOrderField_StopPrice_get, _pyctp.CThostFtdcOrderField_StopPrice_set)
    __swig_setmethods__["ForceCloseReason"] = _pyctp.CThostFtdcOrderField_ForceCloseReason_set
    __swig_getmethods__["ForceCloseReason"] = _pyctp.CThostFtdcOrderField_ForceCloseReason_get
    if _newclass:
        ForceCloseReason = _swig_property(_pyctp.CThostFtdcOrderField_ForceCloseReason_get, _pyctp.CThostFtdcOrderField_ForceCloseReason_set)
    __swig_setmethods__["IsAutoSuspend"] = _pyctp.CThostFtdcOrderField_IsAutoSuspend_set
    __swig_getmethods__["IsAutoSuspend"] = _pyctp.CThostFtdcOrderField_IsAutoSuspend_get
    if _newclass:
        IsAutoSuspend = _swig_property(_pyctp.CThostFtdcOrderField_IsAutoSuspend_get, _pyctp.CThostFtdcOrderField_IsAutoSuspend_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CThostFtdcOrderField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CThostFtdcOrderField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CThostFtdcOrderField_BusinessUnit_get, _pyctp.CThostFtdcOrderField_BusinessUnit_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcOrderField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcOrderField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcOrderField_RequestID_get, _pyctp.CThostFtdcOrderField_RequestID_set)
    __swig_setmethods__["OrderLocalID"] = _pyctp.CThostFtdcOrderField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _pyctp.CThostFtdcOrderField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_pyctp.CThostFtdcOrderField_OrderLocalID_get, _pyctp.CThostFtdcOrderField_OrderLocalID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcOrderField_ExchangeID_get, _pyctp.CThostFtdcOrderField_ExchangeID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcOrderField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcOrderField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcOrderField_ParticipantID_get, _pyctp.CThostFtdcOrderField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcOrderField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcOrderField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcOrderField_ClientID_get, _pyctp.CThostFtdcOrderField_ClientID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CThostFtdcOrderField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CThostFtdcOrderField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CThostFtdcOrderField_ExchangeInstID_get, _pyctp.CThostFtdcOrderField_ExchangeInstID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcOrderField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcOrderField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcOrderField_TraderID_get, _pyctp.CThostFtdcOrderField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcOrderField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcOrderField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcOrderField_InstallID_get, _pyctp.CThostFtdcOrderField_InstallID_set)
    __swig_setmethods__["OrderSubmitStatus"] = _pyctp.CThostFtdcOrderField_OrderSubmitStatus_set
    __swig_getmethods__["OrderSubmitStatus"] = _pyctp.CThostFtdcOrderField_OrderSubmitStatus_get
    if _newclass:
        OrderSubmitStatus = _swig_property(_pyctp.CThostFtdcOrderField_OrderSubmitStatus_get, _pyctp.CThostFtdcOrderField_OrderSubmitStatus_set)
    __swig_setmethods__["NotifySequence"] = _pyctp.CThostFtdcOrderField_NotifySequence_set
    __swig_getmethods__["NotifySequence"] = _pyctp.CThostFtdcOrderField_NotifySequence_get
    if _newclass:
        NotifySequence = _swig_property(_pyctp.CThostFtdcOrderField_NotifySequence_get, _pyctp.CThostFtdcOrderField_NotifySequence_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcOrderField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcOrderField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcOrderField_TradingDay_get, _pyctp.CThostFtdcOrderField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CThostFtdcOrderField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CThostFtdcOrderField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CThostFtdcOrderField_SettlementID_get, _pyctp.CThostFtdcOrderField_SettlementID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CThostFtdcOrderField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CThostFtdcOrderField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CThostFtdcOrderField_OrderSysID_get, _pyctp.CThostFtdcOrderField_OrderSysID_set)
    __swig_setmethods__["OrderSource"] = _pyctp.CThostFtdcOrderField_OrderSource_set
    __swig_getmethods__["OrderSource"] = _pyctp.CThostFtdcOrderField_OrderSource_get
    if _newclass:
        OrderSource = _swig_property(_pyctp.CThostFtdcOrderField_OrderSource_get, _pyctp.CThostFtdcOrderField_OrderSource_set)
    __swig_setmethods__["OrderStatus"] = _pyctp.CThostFtdcOrderField_OrderStatus_set
    __swig_getmethods__["OrderStatus"] = _pyctp.CThostFtdcOrderField_OrderStatus_get
    if _newclass:
        OrderStatus = _swig_property(_pyctp.CThostFtdcOrderField_OrderStatus_get, _pyctp.CThostFtdcOrderField_OrderStatus_set)
    __swig_setmethods__["OrderType"] = _pyctp.CThostFtdcOrderField_OrderType_set
    __swig_getmethods__["OrderType"] = _pyctp.CThostFtdcOrderField_OrderType_get
    if _newclass:
        OrderType = _swig_property(_pyctp.CThostFtdcOrderField_OrderType_get, _pyctp.CThostFtdcOrderField_OrderType_set)
    __swig_setmethods__["VolumeTraded"] = _pyctp.CThostFtdcOrderField_VolumeTraded_set
    __swig_getmethods__["VolumeTraded"] = _pyctp.CThostFtdcOrderField_VolumeTraded_get
    if _newclass:
        VolumeTraded = _swig_property(_pyctp.CThostFtdcOrderField_VolumeTraded_get, _pyctp.CThostFtdcOrderField_VolumeTraded_set)
    __swig_setmethods__["VolumeTotal"] = _pyctp.CThostFtdcOrderField_VolumeTotal_set
    __swig_getmethods__["VolumeTotal"] = _pyctp.CThostFtdcOrderField_VolumeTotal_get
    if _newclass:
        VolumeTotal = _swig_property(_pyctp.CThostFtdcOrderField_VolumeTotal_get, _pyctp.CThostFtdcOrderField_VolumeTotal_set)
    __swig_setmethods__["InsertDate"] = _pyctp.CThostFtdcOrderField_InsertDate_set
    __swig_getmethods__["InsertDate"] = _pyctp.CThostFtdcOrderField_InsertDate_get
    if _newclass:
        InsertDate = _swig_property(_pyctp.CThostFtdcOrderField_InsertDate_get, _pyctp.CThostFtdcOrderField_InsertDate_set)
    __swig_setmethods__["InsertTime"] = _pyctp.CThostFtdcOrderField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _pyctp.CThostFtdcOrderField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_pyctp.CThostFtdcOrderField_InsertTime_get, _pyctp.CThostFtdcOrderField_InsertTime_set)
    __swig_setmethods__["ActiveTime"] = _pyctp.CThostFtdcOrderField_ActiveTime_set
    __swig_getmethods__["ActiveTime"] = _pyctp.CThostFtdcOrderField_ActiveTime_get
    if _newclass:
        ActiveTime = _swig_property(_pyctp.CThostFtdcOrderField_ActiveTime_get, _pyctp.CThostFtdcOrderField_ActiveTime_set)
    __swig_setmethods__["SuspendTime"] = _pyctp.CThostFtdcOrderField_SuspendTime_set
    __swig_getmethods__["SuspendTime"] = _pyctp.CThostFtdcOrderField_SuspendTime_get
    if _newclass:
        SuspendTime = _swig_property(_pyctp.CThostFtdcOrderField_SuspendTime_get, _pyctp.CThostFtdcOrderField_SuspendTime_set)
    __swig_setmethods__["UpdateTime"] = _pyctp.CThostFtdcOrderField_UpdateTime_set
    __swig_getmethods__["UpdateTime"] = _pyctp.CThostFtdcOrderField_UpdateTime_get
    if _newclass:
        UpdateTime = _swig_property(_pyctp.CThostFtdcOrderField_UpdateTime_get, _pyctp.CThostFtdcOrderField_UpdateTime_set)
    __swig_setmethods__["CancelTime"] = _pyctp.CThostFtdcOrderField_CancelTime_set
    __swig_getmethods__["CancelTime"] = _pyctp.CThostFtdcOrderField_CancelTime_get
    if _newclass:
        CancelTime = _swig_property(_pyctp.CThostFtdcOrderField_CancelTime_get, _pyctp.CThostFtdcOrderField_CancelTime_set)
    __swig_setmethods__["ActiveTraderID"] = _pyctp.CThostFtdcOrderField_ActiveTraderID_set
    __swig_getmethods__["ActiveTraderID"] = _pyctp.CThostFtdcOrderField_ActiveTraderID_get
    if _newclass:
        ActiveTraderID = _swig_property(_pyctp.CThostFtdcOrderField_ActiveTraderID_get, _pyctp.CThostFtdcOrderField_ActiveTraderID_set)
    __swig_setmethods__["ClearingPartID"] = _pyctp.CThostFtdcOrderField_ClearingPartID_set
    __swig_getmethods__["ClearingPartID"] = _pyctp.CThostFtdcOrderField_ClearingPartID_get
    if _newclass:
        ClearingPartID = _swig_property(_pyctp.CThostFtdcOrderField_ClearingPartID_get, _pyctp.CThostFtdcOrderField_ClearingPartID_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CThostFtdcOrderField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CThostFtdcOrderField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CThostFtdcOrderField_SequenceNo_get, _pyctp.CThostFtdcOrderField_SequenceNo_set)
    __swig_setmethods__["FrontID"] = _pyctp.CThostFtdcOrderField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CThostFtdcOrderField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CThostFtdcOrderField_FrontID_get, _pyctp.CThostFtdcOrderField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcOrderField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcOrderField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcOrderField_SessionID_get, _pyctp.CThostFtdcOrderField_SessionID_set)
    __swig_setmethods__["UserProductInfo"] = _pyctp.CThostFtdcOrderField_UserProductInfo_set
    __swig_getmethods__["UserProductInfo"] = _pyctp.CThostFtdcOrderField_UserProductInfo_get
    if _newclass:
        UserProductInfo = _swig_property(_pyctp.CThostFtdcOrderField_UserProductInfo_get, _pyctp.CThostFtdcOrderField_UserProductInfo_set)
    __swig_setmethods__["StatusMsg"] = _pyctp.CThostFtdcOrderField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _pyctp.CThostFtdcOrderField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_pyctp.CThostFtdcOrderField_StatusMsg_get, _pyctp.CThostFtdcOrderField_StatusMsg_set)
    __swig_setmethods__["UserForceClose"] = _pyctp.CThostFtdcOrderField_UserForceClose_set
    __swig_getmethods__["UserForceClose"] = _pyctp.CThostFtdcOrderField_UserForceClose_get
    if _newclass:
        UserForceClose = _swig_property(_pyctp.CThostFtdcOrderField_UserForceClose_get, _pyctp.CThostFtdcOrderField_UserForceClose_set)
    __swig_setmethods__["ActiveUserID"] = _pyctp.CThostFtdcOrderField_ActiveUserID_set
    __swig_getmethods__["ActiveUserID"] = _pyctp.CThostFtdcOrderField_ActiveUserID_get
    if _newclass:
        ActiveUserID = _swig_property(_pyctp.CThostFtdcOrderField_ActiveUserID_get, _pyctp.CThostFtdcOrderField_ActiveUserID_set)
    __swig_setmethods__["BrokerOrderSeq"] = _pyctp.CThostFtdcOrderField_BrokerOrderSeq_set
    __swig_getmethods__["BrokerOrderSeq"] = _pyctp.CThostFtdcOrderField_BrokerOrderSeq_get
    if _newclass:
        BrokerOrderSeq = _swig_property(_pyctp.CThostFtdcOrderField_BrokerOrderSeq_get, _pyctp.CThostFtdcOrderField_BrokerOrderSeq_set)
    __swig_setmethods__["RelativeOrderSysID"] = _pyctp.CThostFtdcOrderField_RelativeOrderSysID_set
    __swig_getmethods__["RelativeOrderSysID"] = _pyctp.CThostFtdcOrderField_RelativeOrderSysID_get
    if _newclass:
        RelativeOrderSysID = _swig_property(_pyctp.CThostFtdcOrderField_RelativeOrderSysID_get, _pyctp.CThostFtdcOrderField_RelativeOrderSysID_set)
    __swig_setmethods__["ZCETotalTradedVolume"] = _pyctp.CThostFtdcOrderField_ZCETotalTradedVolume_set
    __swig_getmethods__["ZCETotalTradedVolume"] = _pyctp.CThostFtdcOrderField_ZCETotalTradedVolume_get
    if _newclass:
        ZCETotalTradedVolume = _swig_property(_pyctp.CThostFtdcOrderField_ZCETotalTradedVolume_get, _pyctp.CThostFtdcOrderField_ZCETotalTradedVolume_set)
    __swig_setmethods__["IsSwapOrder"] = _pyctp.CThostFtdcOrderField_IsSwapOrder_set
    __swig_getmethods__["IsSwapOrder"] = _pyctp.CThostFtdcOrderField_IsSwapOrder_get
    if _newclass:
        IsSwapOrder = _swig_property(_pyctp.CThostFtdcOrderField_IsSwapOrder_get, _pyctp.CThostFtdcOrderField_IsSwapOrder_set)
    __swig_setmethods__["BranchID"] = _pyctp.CThostFtdcOrderField_BranchID_set
    __swig_getmethods__["BranchID"] = _pyctp.CThostFtdcOrderField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_pyctp.CThostFtdcOrderField_BranchID_get, _pyctp.CThostFtdcOrderField_BranchID_set)
    __swig_setmethods__["InvestUnitID"] = _pyctp.CThostFtdcOrderField_InvestUnitID_set
    __swig_getmethods__["InvestUnitID"] = _pyctp.CThostFtdcOrderField_InvestUnitID_get
    if _newclass:
        InvestUnitID = _swig_property(_pyctp.CThostFtdcOrderField_InvestUnitID_get, _pyctp.CThostFtdcOrderField_InvestUnitID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcOrderField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcOrderField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcOrderField_AccountID_get, _pyctp.CThostFtdcOrderField_AccountID_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcOrderField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcOrderField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcOrderField_CurrencyID_get, _pyctp.CThostFtdcOrderField_CurrencyID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcOrderField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcOrderField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcOrderField_IPAddress_get, _pyctp.CThostFtdcOrderField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcOrderField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcOrderField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcOrderField_MacAddress_get, _pyctp.CThostFtdcOrderField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcOrderField
    __del__ = lambda self: None
CThostFtdcOrderField_swigregister = _pyctp.CThostFtdcOrderField_swigregister
CThostFtdcOrderField_swigregister(CThostFtdcOrderField)

class CThostFtdcExchangeOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcExchangeOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcExchangeOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["OrderPriceType"] = _pyctp.CThostFtdcExchangeOrderField_OrderPriceType_set
    __swig_getmethods__["OrderPriceType"] = _pyctp.CThostFtdcExchangeOrderField_OrderPriceType_get
    if _newclass:
        OrderPriceType = _swig_property(_pyctp.CThostFtdcExchangeOrderField_OrderPriceType_get, _pyctp.CThostFtdcExchangeOrderField_OrderPriceType_set)
    __swig_setmethods__["Direction"] = _pyctp.CThostFtdcExchangeOrderField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CThostFtdcExchangeOrderField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CThostFtdcExchangeOrderField_Direction_get, _pyctp.CThostFtdcExchangeOrderField_Direction_set)
    __swig_setmethods__["CombOffsetFlag"] = _pyctp.CThostFtdcExchangeOrderField_CombOffsetFlag_set
    __swig_getmethods__["CombOffsetFlag"] = _pyctp.CThostFtdcExchangeOrderField_CombOffsetFlag_get
    if _newclass:
        CombOffsetFlag = _swig_property(_pyctp.CThostFtdcExchangeOrderField_CombOffsetFlag_get, _pyctp.CThostFtdcExchangeOrderField_CombOffsetFlag_set)
    __swig_setmethods__["CombHedgeFlag"] = _pyctp.CThostFtdcExchangeOrderField_CombHedgeFlag_set
    __swig_getmethods__["CombHedgeFlag"] = _pyctp.CThostFtdcExchangeOrderField_CombHedgeFlag_get
    if _newclass:
        CombHedgeFlag = _swig_property(_pyctp.CThostFtdcExchangeOrderField_CombHedgeFlag_get, _pyctp.CThostFtdcExchangeOrderField_CombHedgeFlag_set)
    __swig_setmethods__["LimitPrice"] = _pyctp.CThostFtdcExchangeOrderField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _pyctp.CThostFtdcExchangeOrderField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_pyctp.CThostFtdcExchangeOrderField_LimitPrice_get, _pyctp.CThostFtdcExchangeOrderField_LimitPrice_set)
    __swig_setmethods__["VolumeTotalOriginal"] = _pyctp.CThostFtdcExchangeOrderField_VolumeTotalOriginal_set
    __swig_getmethods__["VolumeTotalOriginal"] = _pyctp.CThostFtdcExchangeOrderField_VolumeTotalOriginal_get
    if _newclass:
        VolumeTotalOriginal = _swig_property(_pyctp.CThostFtdcExchangeOrderField_VolumeTotalOriginal_get, _pyctp.CThostFtdcExchangeOrderField_VolumeTotalOriginal_set)
    __swig_setmethods__["TimeCondition"] = _pyctp.CThostFtdcExchangeOrderField_TimeCondition_set
    __swig_getmethods__["TimeCondition"] = _pyctp.CThostFtdcExchangeOrderField_TimeCondition_get
    if _newclass:
        TimeCondition = _swig_property(_pyctp.CThostFtdcExchangeOrderField_TimeCondition_get, _pyctp.CThostFtdcExchangeOrderField_TimeCondition_set)
    __swig_setmethods__["GTDDate"] = _pyctp.CThostFtdcExchangeOrderField_GTDDate_set
    __swig_getmethods__["GTDDate"] = _pyctp.CThostFtdcExchangeOrderField_GTDDate_get
    if _newclass:
        GTDDate = _swig_property(_pyctp.CThostFtdcExchangeOrderField_GTDDate_get, _pyctp.CThostFtdcExchangeOrderField_GTDDate_set)
    __swig_setmethods__["VolumeCondition"] = _pyctp.CThostFtdcExchangeOrderField_VolumeCondition_set
    __swig_getmethods__["VolumeCondition"] = _pyctp.CThostFtdcExchangeOrderField_VolumeCondition_get
    if _newclass:
        VolumeCondition = _swig_property(_pyctp.CThostFtdcExchangeOrderField_VolumeCondition_get, _pyctp.CThostFtdcExchangeOrderField_VolumeCondition_set)
    __swig_setmethods__["MinVolume"] = _pyctp.CThostFtdcExchangeOrderField_MinVolume_set
    __swig_getmethods__["MinVolume"] = _pyctp.CThostFtdcExchangeOrderField_MinVolume_get
    if _newclass:
        MinVolume = _swig_property(_pyctp.CThostFtdcExchangeOrderField_MinVolume_get, _pyctp.CThostFtdcExchangeOrderField_MinVolume_set)
    __swig_setmethods__["ContingentCondition"] = _pyctp.CThostFtdcExchangeOrderField_ContingentCondition_set
    __swig_getmethods__["ContingentCondition"] = _pyctp.CThostFtdcExchangeOrderField_ContingentCondition_get
    if _newclass:
        ContingentCondition = _swig_property(_pyctp.CThostFtdcExchangeOrderField_ContingentCondition_get, _pyctp.CThostFtdcExchangeOrderField_ContingentCondition_set)
    __swig_setmethods__["StopPrice"] = _pyctp.CThostFtdcExchangeOrderField_StopPrice_set
    __swig_getmethods__["StopPrice"] = _pyctp.CThostFtdcExchangeOrderField_StopPrice_get
    if _newclass:
        StopPrice = _swig_property(_pyctp.CThostFtdcExchangeOrderField_StopPrice_get, _pyctp.CThostFtdcExchangeOrderField_StopPrice_set)
    __swig_setmethods__["ForceCloseReason"] = _pyctp.CThostFtdcExchangeOrderField_ForceCloseReason_set
    __swig_getmethods__["ForceCloseReason"] = _pyctp.CThostFtdcExchangeOrderField_ForceCloseReason_get
    if _newclass:
        ForceCloseReason = _swig_property(_pyctp.CThostFtdcExchangeOrderField_ForceCloseReason_get, _pyctp.CThostFtdcExchangeOrderField_ForceCloseReason_set)
    __swig_setmethods__["IsAutoSuspend"] = _pyctp.CThostFtdcExchangeOrderField_IsAutoSuspend_set
    __swig_getmethods__["IsAutoSuspend"] = _pyctp.CThostFtdcExchangeOrderField_IsAutoSuspend_get
    if _newclass:
        IsAutoSuspend = _swig_property(_pyctp.CThostFtdcExchangeOrderField_IsAutoSuspend_get, _pyctp.CThostFtdcExchangeOrderField_IsAutoSuspend_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CThostFtdcExchangeOrderField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CThostFtdcExchangeOrderField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CThostFtdcExchangeOrderField_BusinessUnit_get, _pyctp.CThostFtdcExchangeOrderField_BusinessUnit_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcExchangeOrderField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcExchangeOrderField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcExchangeOrderField_RequestID_get, _pyctp.CThostFtdcExchangeOrderField_RequestID_set)
    __swig_setmethods__["OrderLocalID"] = _pyctp.CThostFtdcExchangeOrderField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _pyctp.CThostFtdcExchangeOrderField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_pyctp.CThostFtdcExchangeOrderField_OrderLocalID_get, _pyctp.CThostFtdcExchangeOrderField_OrderLocalID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcExchangeOrderField_ExchangeID_get, _pyctp.CThostFtdcExchangeOrderField_ExchangeID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcExchangeOrderField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcExchangeOrderField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcExchangeOrderField_ParticipantID_get, _pyctp.CThostFtdcExchangeOrderField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcExchangeOrderField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcExchangeOrderField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcExchangeOrderField_ClientID_get, _pyctp.CThostFtdcExchangeOrderField_ClientID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CThostFtdcExchangeOrderField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CThostFtdcExchangeOrderField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CThostFtdcExchangeOrderField_ExchangeInstID_get, _pyctp.CThostFtdcExchangeOrderField_ExchangeInstID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcExchangeOrderField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcExchangeOrderField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcExchangeOrderField_TraderID_get, _pyctp.CThostFtdcExchangeOrderField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcExchangeOrderField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcExchangeOrderField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcExchangeOrderField_InstallID_get, _pyctp.CThostFtdcExchangeOrderField_InstallID_set)
    __swig_setmethods__["OrderSubmitStatus"] = _pyctp.CThostFtdcExchangeOrderField_OrderSubmitStatus_set
    __swig_getmethods__["OrderSubmitStatus"] = _pyctp.CThostFtdcExchangeOrderField_OrderSubmitStatus_get
    if _newclass:
        OrderSubmitStatus = _swig_property(_pyctp.CThostFtdcExchangeOrderField_OrderSubmitStatus_get, _pyctp.CThostFtdcExchangeOrderField_OrderSubmitStatus_set)
    __swig_setmethods__["NotifySequence"] = _pyctp.CThostFtdcExchangeOrderField_NotifySequence_set
    __swig_getmethods__["NotifySequence"] = _pyctp.CThostFtdcExchangeOrderField_NotifySequence_get
    if _newclass:
        NotifySequence = _swig_property(_pyctp.CThostFtdcExchangeOrderField_NotifySequence_get, _pyctp.CThostFtdcExchangeOrderField_NotifySequence_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcExchangeOrderField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcExchangeOrderField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcExchangeOrderField_TradingDay_get, _pyctp.CThostFtdcExchangeOrderField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CThostFtdcExchangeOrderField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CThostFtdcExchangeOrderField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CThostFtdcExchangeOrderField_SettlementID_get, _pyctp.CThostFtdcExchangeOrderField_SettlementID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CThostFtdcExchangeOrderField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CThostFtdcExchangeOrderField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CThostFtdcExchangeOrderField_OrderSysID_get, _pyctp.CThostFtdcExchangeOrderField_OrderSysID_set)
    __swig_setmethods__["OrderSource"] = _pyctp.CThostFtdcExchangeOrderField_OrderSource_set
    __swig_getmethods__["OrderSource"] = _pyctp.CThostFtdcExchangeOrderField_OrderSource_get
    if _newclass:
        OrderSource = _swig_property(_pyctp.CThostFtdcExchangeOrderField_OrderSource_get, _pyctp.CThostFtdcExchangeOrderField_OrderSource_set)
    __swig_setmethods__["OrderStatus"] = _pyctp.CThostFtdcExchangeOrderField_OrderStatus_set
    __swig_getmethods__["OrderStatus"] = _pyctp.CThostFtdcExchangeOrderField_OrderStatus_get
    if _newclass:
        OrderStatus = _swig_property(_pyctp.CThostFtdcExchangeOrderField_OrderStatus_get, _pyctp.CThostFtdcExchangeOrderField_OrderStatus_set)
    __swig_setmethods__["OrderType"] = _pyctp.CThostFtdcExchangeOrderField_OrderType_set
    __swig_getmethods__["OrderType"] = _pyctp.CThostFtdcExchangeOrderField_OrderType_get
    if _newclass:
        OrderType = _swig_property(_pyctp.CThostFtdcExchangeOrderField_OrderType_get, _pyctp.CThostFtdcExchangeOrderField_OrderType_set)
    __swig_setmethods__["VolumeTraded"] = _pyctp.CThostFtdcExchangeOrderField_VolumeTraded_set
    __swig_getmethods__["VolumeTraded"] = _pyctp.CThostFtdcExchangeOrderField_VolumeTraded_get
    if _newclass:
        VolumeTraded = _swig_property(_pyctp.CThostFtdcExchangeOrderField_VolumeTraded_get, _pyctp.CThostFtdcExchangeOrderField_VolumeTraded_set)
    __swig_setmethods__["VolumeTotal"] = _pyctp.CThostFtdcExchangeOrderField_VolumeTotal_set
    __swig_getmethods__["VolumeTotal"] = _pyctp.CThostFtdcExchangeOrderField_VolumeTotal_get
    if _newclass:
        VolumeTotal = _swig_property(_pyctp.CThostFtdcExchangeOrderField_VolumeTotal_get, _pyctp.CThostFtdcExchangeOrderField_VolumeTotal_set)
    __swig_setmethods__["InsertDate"] = _pyctp.CThostFtdcExchangeOrderField_InsertDate_set
    __swig_getmethods__["InsertDate"] = _pyctp.CThostFtdcExchangeOrderField_InsertDate_get
    if _newclass:
        InsertDate = _swig_property(_pyctp.CThostFtdcExchangeOrderField_InsertDate_get, _pyctp.CThostFtdcExchangeOrderField_InsertDate_set)
    __swig_setmethods__["InsertTime"] = _pyctp.CThostFtdcExchangeOrderField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _pyctp.CThostFtdcExchangeOrderField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_pyctp.CThostFtdcExchangeOrderField_InsertTime_get, _pyctp.CThostFtdcExchangeOrderField_InsertTime_set)
    __swig_setmethods__["ActiveTime"] = _pyctp.CThostFtdcExchangeOrderField_ActiveTime_set
    __swig_getmethods__["ActiveTime"] = _pyctp.CThostFtdcExchangeOrderField_ActiveTime_get
    if _newclass:
        ActiveTime = _swig_property(_pyctp.CThostFtdcExchangeOrderField_ActiveTime_get, _pyctp.CThostFtdcExchangeOrderField_ActiveTime_set)
    __swig_setmethods__["SuspendTime"] = _pyctp.CThostFtdcExchangeOrderField_SuspendTime_set
    __swig_getmethods__["SuspendTime"] = _pyctp.CThostFtdcExchangeOrderField_SuspendTime_get
    if _newclass:
        SuspendTime = _swig_property(_pyctp.CThostFtdcExchangeOrderField_SuspendTime_get, _pyctp.CThostFtdcExchangeOrderField_SuspendTime_set)
    __swig_setmethods__["UpdateTime"] = _pyctp.CThostFtdcExchangeOrderField_UpdateTime_set
    __swig_getmethods__["UpdateTime"] = _pyctp.CThostFtdcExchangeOrderField_UpdateTime_get
    if _newclass:
        UpdateTime = _swig_property(_pyctp.CThostFtdcExchangeOrderField_UpdateTime_get, _pyctp.CThostFtdcExchangeOrderField_UpdateTime_set)
    __swig_setmethods__["CancelTime"] = _pyctp.CThostFtdcExchangeOrderField_CancelTime_set
    __swig_getmethods__["CancelTime"] = _pyctp.CThostFtdcExchangeOrderField_CancelTime_get
    if _newclass:
        CancelTime = _swig_property(_pyctp.CThostFtdcExchangeOrderField_CancelTime_get, _pyctp.CThostFtdcExchangeOrderField_CancelTime_set)
    __swig_setmethods__["ActiveTraderID"] = _pyctp.CThostFtdcExchangeOrderField_ActiveTraderID_set
    __swig_getmethods__["ActiveTraderID"] = _pyctp.CThostFtdcExchangeOrderField_ActiveTraderID_get
    if _newclass:
        ActiveTraderID = _swig_property(_pyctp.CThostFtdcExchangeOrderField_ActiveTraderID_get, _pyctp.CThostFtdcExchangeOrderField_ActiveTraderID_set)
    __swig_setmethods__["ClearingPartID"] = _pyctp.CThostFtdcExchangeOrderField_ClearingPartID_set
    __swig_getmethods__["ClearingPartID"] = _pyctp.CThostFtdcExchangeOrderField_ClearingPartID_get
    if _newclass:
        ClearingPartID = _swig_property(_pyctp.CThostFtdcExchangeOrderField_ClearingPartID_get, _pyctp.CThostFtdcExchangeOrderField_ClearingPartID_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CThostFtdcExchangeOrderField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CThostFtdcExchangeOrderField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CThostFtdcExchangeOrderField_SequenceNo_get, _pyctp.CThostFtdcExchangeOrderField_SequenceNo_set)
    __swig_setmethods__["BranchID"] = _pyctp.CThostFtdcExchangeOrderField_BranchID_set
    __swig_getmethods__["BranchID"] = _pyctp.CThostFtdcExchangeOrderField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_pyctp.CThostFtdcExchangeOrderField_BranchID_get, _pyctp.CThostFtdcExchangeOrderField_BranchID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcExchangeOrderField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcExchangeOrderField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcExchangeOrderField_IPAddress_get, _pyctp.CThostFtdcExchangeOrderField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcExchangeOrderField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcExchangeOrderField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcExchangeOrderField_MacAddress_get, _pyctp.CThostFtdcExchangeOrderField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcExchangeOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcExchangeOrderField
    __del__ = lambda self: None
CThostFtdcExchangeOrderField_swigregister = _pyctp.CThostFtdcExchangeOrderField_swigregister
CThostFtdcExchangeOrderField_swigregister(CThostFtdcExchangeOrderField)

class CThostFtdcExchangeOrderInsertErrorField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcExchangeOrderInsertErrorField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcExchangeOrderInsertErrorField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeOrderInsertErrorField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeOrderInsertErrorField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcExchangeOrderInsertErrorField_ExchangeID_get, _pyctp.CThostFtdcExchangeOrderInsertErrorField_ExchangeID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcExchangeOrderInsertErrorField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcExchangeOrderInsertErrorField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcExchangeOrderInsertErrorField_ParticipantID_get, _pyctp.CThostFtdcExchangeOrderInsertErrorField_ParticipantID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcExchangeOrderInsertErrorField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcExchangeOrderInsertErrorField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcExchangeOrderInsertErrorField_TraderID_get, _pyctp.CThostFtdcExchangeOrderInsertErrorField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcExchangeOrderInsertErrorField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcExchangeOrderInsertErrorField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcExchangeOrderInsertErrorField_InstallID_get, _pyctp.CThostFtdcExchangeOrderInsertErrorField_InstallID_set)
    __swig_setmethods__["OrderLocalID"] = _pyctp.CThostFtdcExchangeOrderInsertErrorField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _pyctp.CThostFtdcExchangeOrderInsertErrorField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_pyctp.CThostFtdcExchangeOrderInsertErrorField_OrderLocalID_get, _pyctp.CThostFtdcExchangeOrderInsertErrorField_OrderLocalID_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CThostFtdcExchangeOrderInsertErrorField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CThostFtdcExchangeOrderInsertErrorField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CThostFtdcExchangeOrderInsertErrorField_ErrorID_get, _pyctp.CThostFtdcExchangeOrderInsertErrorField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CThostFtdcExchangeOrderInsertErrorField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CThostFtdcExchangeOrderInsertErrorField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CThostFtdcExchangeOrderInsertErrorField_ErrorMsg_get, _pyctp.CThostFtdcExchangeOrderInsertErrorField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcExchangeOrderInsertErrorField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcExchangeOrderInsertErrorField
    __del__ = lambda self: None
CThostFtdcExchangeOrderInsertErrorField_swigregister = _pyctp.CThostFtdcExchangeOrderInsertErrorField_swigregister
CThostFtdcExchangeOrderInsertErrorField_swigregister(CThostFtdcExchangeOrderInsertErrorField)

class CThostFtdcInputOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcInputOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcInputOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcInputOrderActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcInputOrderActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcInputOrderActionField_BrokerID_get, _pyctp.CThostFtdcInputOrderActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcInputOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcInputOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcInputOrderActionField_InvestorID_get, _pyctp.CThostFtdcInputOrderActionField_InvestorID_set)
    __swig_setmethods__["OrderActionRef"] = _pyctp.CThostFtdcInputOrderActionField_OrderActionRef_set
    __swig_getmethods__["OrderActionRef"] = _pyctp.CThostFtdcInputOrderActionField_OrderActionRef_get
    if _newclass:
        OrderActionRef = _swig_property(_pyctp.CThostFtdcInputOrderActionField_OrderActionRef_get, _pyctp.CThostFtdcInputOrderActionField_OrderActionRef_set)
    __swig_setmethods__["OrderRef"] = _pyctp.CThostFtdcInputOrderActionField_OrderRef_set
    __swig_getmethods__["OrderRef"] = _pyctp.CThostFtdcInputOrderActionField_OrderRef_get
    if _newclass:
        OrderRef = _swig_property(_pyctp.CThostFtdcInputOrderActionField_OrderRef_get, _pyctp.CThostFtdcInputOrderActionField_OrderRef_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcInputOrderActionField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcInputOrderActionField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcInputOrderActionField_RequestID_get, _pyctp.CThostFtdcInputOrderActionField_RequestID_set)
    __swig_setmethods__["FrontID"] = _pyctp.CThostFtdcInputOrderActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CThostFtdcInputOrderActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CThostFtdcInputOrderActionField_FrontID_get, _pyctp.CThostFtdcInputOrderActionField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcInputOrderActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcInputOrderActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcInputOrderActionField_SessionID_get, _pyctp.CThostFtdcInputOrderActionField_SessionID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcInputOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcInputOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcInputOrderActionField_ExchangeID_get, _pyctp.CThostFtdcInputOrderActionField_ExchangeID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CThostFtdcInputOrderActionField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CThostFtdcInputOrderActionField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CThostFtdcInputOrderActionField_OrderSysID_get, _pyctp.CThostFtdcInputOrderActionField_OrderSysID_set)
    __swig_setmethods__["ActionFlag"] = _pyctp.CThostFtdcInputOrderActionField_ActionFlag_set
    __swig_getmethods__["ActionFlag"] = _pyctp.CThostFtdcInputOrderActionField_ActionFlag_get
    if _newclass:
        ActionFlag = _swig_property(_pyctp.CThostFtdcInputOrderActionField_ActionFlag_get, _pyctp.CThostFtdcInputOrderActionField_ActionFlag_set)
    __swig_setmethods__["LimitPrice"] = _pyctp.CThostFtdcInputOrderActionField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _pyctp.CThostFtdcInputOrderActionField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_pyctp.CThostFtdcInputOrderActionField_LimitPrice_get, _pyctp.CThostFtdcInputOrderActionField_LimitPrice_set)
    __swig_setmethods__["VolumeChange"] = _pyctp.CThostFtdcInputOrderActionField_VolumeChange_set
    __swig_getmethods__["VolumeChange"] = _pyctp.CThostFtdcInputOrderActionField_VolumeChange_get
    if _newclass:
        VolumeChange = _swig_property(_pyctp.CThostFtdcInputOrderActionField_VolumeChange_get, _pyctp.CThostFtdcInputOrderActionField_VolumeChange_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcInputOrderActionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcInputOrderActionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcInputOrderActionField_UserID_get, _pyctp.CThostFtdcInputOrderActionField_UserID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcInputOrderActionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcInputOrderActionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcInputOrderActionField_InstrumentID_get, _pyctp.CThostFtdcInputOrderActionField_InstrumentID_set)
    __swig_setmethods__["InvestUnitID"] = _pyctp.CThostFtdcInputOrderActionField_InvestUnitID_set
    __swig_getmethods__["InvestUnitID"] = _pyctp.CThostFtdcInputOrderActionField_InvestUnitID_get
    if _newclass:
        InvestUnitID = _swig_property(_pyctp.CThostFtdcInputOrderActionField_InvestUnitID_get, _pyctp.CThostFtdcInputOrderActionField_InvestUnitID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcInputOrderActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcInputOrderActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcInputOrderActionField_IPAddress_get, _pyctp.CThostFtdcInputOrderActionField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcInputOrderActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcInputOrderActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcInputOrderActionField_MacAddress_get, _pyctp.CThostFtdcInputOrderActionField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcInputOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcInputOrderActionField
    __del__ = lambda self: None
CThostFtdcInputOrderActionField_swigregister = _pyctp.CThostFtdcInputOrderActionField_swigregister
CThostFtdcInputOrderActionField_swigregister(CThostFtdcInputOrderActionField)

class CThostFtdcOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcOrderActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcOrderActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcOrderActionField_BrokerID_get, _pyctp.CThostFtdcOrderActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcOrderActionField_InvestorID_get, _pyctp.CThostFtdcOrderActionField_InvestorID_set)
    __swig_setmethods__["OrderActionRef"] = _pyctp.CThostFtdcOrderActionField_OrderActionRef_set
    __swig_getmethods__["OrderActionRef"] = _pyctp.CThostFtdcOrderActionField_OrderActionRef_get
    if _newclass:
        OrderActionRef = _swig_property(_pyctp.CThostFtdcOrderActionField_OrderActionRef_get, _pyctp.CThostFtdcOrderActionField_OrderActionRef_set)
    __swig_setmethods__["OrderRef"] = _pyctp.CThostFtdcOrderActionField_OrderRef_set
    __swig_getmethods__["OrderRef"] = _pyctp.CThostFtdcOrderActionField_OrderRef_get
    if _newclass:
        OrderRef = _swig_property(_pyctp.CThostFtdcOrderActionField_OrderRef_get, _pyctp.CThostFtdcOrderActionField_OrderRef_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcOrderActionField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcOrderActionField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcOrderActionField_RequestID_get, _pyctp.CThostFtdcOrderActionField_RequestID_set)
    __swig_setmethods__["FrontID"] = _pyctp.CThostFtdcOrderActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CThostFtdcOrderActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CThostFtdcOrderActionField_FrontID_get, _pyctp.CThostFtdcOrderActionField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcOrderActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcOrderActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcOrderActionField_SessionID_get, _pyctp.CThostFtdcOrderActionField_SessionID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcOrderActionField_ExchangeID_get, _pyctp.CThostFtdcOrderActionField_ExchangeID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CThostFtdcOrderActionField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CThostFtdcOrderActionField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CThostFtdcOrderActionField_OrderSysID_get, _pyctp.CThostFtdcOrderActionField_OrderSysID_set)
    __swig_setmethods__["ActionFlag"] = _pyctp.CThostFtdcOrderActionField_ActionFlag_set
    __swig_getmethods__["ActionFlag"] = _pyctp.CThostFtdcOrderActionField_ActionFlag_get
    if _newclass:
        ActionFlag = _swig_property(_pyctp.CThostFtdcOrderActionField_ActionFlag_get, _pyctp.CThostFtdcOrderActionField_ActionFlag_set)
    __swig_setmethods__["LimitPrice"] = _pyctp.CThostFtdcOrderActionField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _pyctp.CThostFtdcOrderActionField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_pyctp.CThostFtdcOrderActionField_LimitPrice_get, _pyctp.CThostFtdcOrderActionField_LimitPrice_set)
    __swig_setmethods__["VolumeChange"] = _pyctp.CThostFtdcOrderActionField_VolumeChange_set
    __swig_getmethods__["VolumeChange"] = _pyctp.CThostFtdcOrderActionField_VolumeChange_get
    if _newclass:
        VolumeChange = _swig_property(_pyctp.CThostFtdcOrderActionField_VolumeChange_get, _pyctp.CThostFtdcOrderActionField_VolumeChange_set)
    __swig_setmethods__["ActionDate"] = _pyctp.CThostFtdcOrderActionField_ActionDate_set
    __swig_getmethods__["ActionDate"] = _pyctp.CThostFtdcOrderActionField_ActionDate_get
    if _newclass:
        ActionDate = _swig_property(_pyctp.CThostFtdcOrderActionField_ActionDate_get, _pyctp.CThostFtdcOrderActionField_ActionDate_set)
    __swig_setmethods__["ActionTime"] = _pyctp.CThostFtdcOrderActionField_ActionTime_set
    __swig_getmethods__["ActionTime"] = _pyctp.CThostFtdcOrderActionField_ActionTime_get
    if _newclass:
        ActionTime = _swig_property(_pyctp.CThostFtdcOrderActionField_ActionTime_get, _pyctp.CThostFtdcOrderActionField_ActionTime_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcOrderActionField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcOrderActionField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcOrderActionField_TraderID_get, _pyctp.CThostFtdcOrderActionField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcOrderActionField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcOrderActionField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcOrderActionField_InstallID_get, _pyctp.CThostFtdcOrderActionField_InstallID_set)
    __swig_setmethods__["OrderLocalID"] = _pyctp.CThostFtdcOrderActionField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _pyctp.CThostFtdcOrderActionField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_pyctp.CThostFtdcOrderActionField_OrderLocalID_get, _pyctp.CThostFtdcOrderActionField_OrderLocalID_set)
    __swig_setmethods__["ActionLocalID"] = _pyctp.CThostFtdcOrderActionField_ActionLocalID_set
    __swig_getmethods__["ActionLocalID"] = _pyctp.CThostFtdcOrderActionField_ActionLocalID_get
    if _newclass:
        ActionLocalID = _swig_property(_pyctp.CThostFtdcOrderActionField_ActionLocalID_get, _pyctp.CThostFtdcOrderActionField_ActionLocalID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcOrderActionField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcOrderActionField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcOrderActionField_ParticipantID_get, _pyctp.CThostFtdcOrderActionField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcOrderActionField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcOrderActionField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcOrderActionField_ClientID_get, _pyctp.CThostFtdcOrderActionField_ClientID_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CThostFtdcOrderActionField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CThostFtdcOrderActionField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CThostFtdcOrderActionField_BusinessUnit_get, _pyctp.CThostFtdcOrderActionField_BusinessUnit_set)
    __swig_setmethods__["OrderActionStatus"] = _pyctp.CThostFtdcOrderActionField_OrderActionStatus_set
    __swig_getmethods__["OrderActionStatus"] = _pyctp.CThostFtdcOrderActionField_OrderActionStatus_get
    if _newclass:
        OrderActionStatus = _swig_property(_pyctp.CThostFtdcOrderActionField_OrderActionStatus_get, _pyctp.CThostFtdcOrderActionField_OrderActionStatus_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcOrderActionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcOrderActionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcOrderActionField_UserID_get, _pyctp.CThostFtdcOrderActionField_UserID_set)
    __swig_setmethods__["StatusMsg"] = _pyctp.CThostFtdcOrderActionField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _pyctp.CThostFtdcOrderActionField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_pyctp.CThostFtdcOrderActionField_StatusMsg_get, _pyctp.CThostFtdcOrderActionField_StatusMsg_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcOrderActionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcOrderActionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcOrderActionField_InstrumentID_get, _pyctp.CThostFtdcOrderActionField_InstrumentID_set)
    __swig_setmethods__["BranchID"] = _pyctp.CThostFtdcOrderActionField_BranchID_set
    __swig_getmethods__["BranchID"] = _pyctp.CThostFtdcOrderActionField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_pyctp.CThostFtdcOrderActionField_BranchID_get, _pyctp.CThostFtdcOrderActionField_BranchID_set)
    __swig_setmethods__["InvestUnitID"] = _pyctp.CThostFtdcOrderActionField_InvestUnitID_set
    __swig_getmethods__["InvestUnitID"] = _pyctp.CThostFtdcOrderActionField_InvestUnitID_get
    if _newclass:
        InvestUnitID = _swig_property(_pyctp.CThostFtdcOrderActionField_InvestUnitID_get, _pyctp.CThostFtdcOrderActionField_InvestUnitID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcOrderActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcOrderActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcOrderActionField_IPAddress_get, _pyctp.CThostFtdcOrderActionField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcOrderActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcOrderActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcOrderActionField_MacAddress_get, _pyctp.CThostFtdcOrderActionField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcOrderActionField
    __del__ = lambda self: None
CThostFtdcOrderActionField_swigregister = _pyctp.CThostFtdcOrderActionField_swigregister
CThostFtdcOrderActionField_swigregister(CThostFtdcOrderActionField)

class CThostFtdcExchangeOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcExchangeOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcExchangeOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcExchangeOrderActionField_ExchangeID_get, _pyctp.CThostFtdcExchangeOrderActionField_ExchangeID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CThostFtdcExchangeOrderActionField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CThostFtdcExchangeOrderActionField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CThostFtdcExchangeOrderActionField_OrderSysID_get, _pyctp.CThostFtdcExchangeOrderActionField_OrderSysID_set)
    __swig_setmethods__["ActionFlag"] = _pyctp.CThostFtdcExchangeOrderActionField_ActionFlag_set
    __swig_getmethods__["ActionFlag"] = _pyctp.CThostFtdcExchangeOrderActionField_ActionFlag_get
    if _newclass:
        ActionFlag = _swig_property(_pyctp.CThostFtdcExchangeOrderActionField_ActionFlag_get, _pyctp.CThostFtdcExchangeOrderActionField_ActionFlag_set)
    __swig_setmethods__["LimitPrice"] = _pyctp.CThostFtdcExchangeOrderActionField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _pyctp.CThostFtdcExchangeOrderActionField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_pyctp.CThostFtdcExchangeOrderActionField_LimitPrice_get, _pyctp.CThostFtdcExchangeOrderActionField_LimitPrice_set)
    __swig_setmethods__["VolumeChange"] = _pyctp.CThostFtdcExchangeOrderActionField_VolumeChange_set
    __swig_getmethods__["VolumeChange"] = _pyctp.CThostFtdcExchangeOrderActionField_VolumeChange_get
    if _newclass:
        VolumeChange = _swig_property(_pyctp.CThostFtdcExchangeOrderActionField_VolumeChange_get, _pyctp.CThostFtdcExchangeOrderActionField_VolumeChange_set)
    __swig_setmethods__["ActionDate"] = _pyctp.CThostFtdcExchangeOrderActionField_ActionDate_set
    __swig_getmethods__["ActionDate"] = _pyctp.CThostFtdcExchangeOrderActionField_ActionDate_get
    if _newclass:
        ActionDate = _swig_property(_pyctp.CThostFtdcExchangeOrderActionField_ActionDate_get, _pyctp.CThostFtdcExchangeOrderActionField_ActionDate_set)
    __swig_setmethods__["ActionTime"] = _pyctp.CThostFtdcExchangeOrderActionField_ActionTime_set
    __swig_getmethods__["ActionTime"] = _pyctp.CThostFtdcExchangeOrderActionField_ActionTime_get
    if _newclass:
        ActionTime = _swig_property(_pyctp.CThostFtdcExchangeOrderActionField_ActionTime_get, _pyctp.CThostFtdcExchangeOrderActionField_ActionTime_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcExchangeOrderActionField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcExchangeOrderActionField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcExchangeOrderActionField_TraderID_get, _pyctp.CThostFtdcExchangeOrderActionField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcExchangeOrderActionField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcExchangeOrderActionField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcExchangeOrderActionField_InstallID_get, _pyctp.CThostFtdcExchangeOrderActionField_InstallID_set)
    __swig_setmethods__["OrderLocalID"] = _pyctp.CThostFtdcExchangeOrderActionField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _pyctp.CThostFtdcExchangeOrderActionField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_pyctp.CThostFtdcExchangeOrderActionField_OrderLocalID_get, _pyctp.CThostFtdcExchangeOrderActionField_OrderLocalID_set)
    __swig_setmethods__["ActionLocalID"] = _pyctp.CThostFtdcExchangeOrderActionField_ActionLocalID_set
    __swig_getmethods__["ActionLocalID"] = _pyctp.CThostFtdcExchangeOrderActionField_ActionLocalID_get
    if _newclass:
        ActionLocalID = _swig_property(_pyctp.CThostFtdcExchangeOrderActionField_ActionLocalID_get, _pyctp.CThostFtdcExchangeOrderActionField_ActionLocalID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcExchangeOrderActionField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcExchangeOrderActionField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcExchangeOrderActionField_ParticipantID_get, _pyctp.CThostFtdcExchangeOrderActionField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcExchangeOrderActionField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcExchangeOrderActionField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcExchangeOrderActionField_ClientID_get, _pyctp.CThostFtdcExchangeOrderActionField_ClientID_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CThostFtdcExchangeOrderActionField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CThostFtdcExchangeOrderActionField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CThostFtdcExchangeOrderActionField_BusinessUnit_get, _pyctp.CThostFtdcExchangeOrderActionField_BusinessUnit_set)
    __swig_setmethods__["OrderActionStatus"] = _pyctp.CThostFtdcExchangeOrderActionField_OrderActionStatus_set
    __swig_getmethods__["OrderActionStatus"] = _pyctp.CThostFtdcExchangeOrderActionField_OrderActionStatus_get
    if _newclass:
        OrderActionStatus = _swig_property(_pyctp.CThostFtdcExchangeOrderActionField_OrderActionStatus_get, _pyctp.CThostFtdcExchangeOrderActionField_OrderActionStatus_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcExchangeOrderActionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcExchangeOrderActionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcExchangeOrderActionField_UserID_get, _pyctp.CThostFtdcExchangeOrderActionField_UserID_set)
    __swig_setmethods__["BranchID"] = _pyctp.CThostFtdcExchangeOrderActionField_BranchID_set
    __swig_getmethods__["BranchID"] = _pyctp.CThostFtdcExchangeOrderActionField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_pyctp.CThostFtdcExchangeOrderActionField_BranchID_get, _pyctp.CThostFtdcExchangeOrderActionField_BranchID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcExchangeOrderActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcExchangeOrderActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcExchangeOrderActionField_IPAddress_get, _pyctp.CThostFtdcExchangeOrderActionField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcExchangeOrderActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcExchangeOrderActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcExchangeOrderActionField_MacAddress_get, _pyctp.CThostFtdcExchangeOrderActionField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcExchangeOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcExchangeOrderActionField
    __del__ = lambda self: None
CThostFtdcExchangeOrderActionField_swigregister = _pyctp.CThostFtdcExchangeOrderActionField_swigregister
CThostFtdcExchangeOrderActionField_swigregister(CThostFtdcExchangeOrderActionField)

class CThostFtdcExchangeOrderActionErrorField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcExchangeOrderActionErrorField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcExchangeOrderActionErrorField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeOrderActionErrorField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeOrderActionErrorField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcExchangeOrderActionErrorField_ExchangeID_get, _pyctp.CThostFtdcExchangeOrderActionErrorField_ExchangeID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CThostFtdcExchangeOrderActionErrorField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CThostFtdcExchangeOrderActionErrorField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CThostFtdcExchangeOrderActionErrorField_OrderSysID_get, _pyctp.CThostFtdcExchangeOrderActionErrorField_OrderSysID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcExchangeOrderActionErrorField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcExchangeOrderActionErrorField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcExchangeOrderActionErrorField_TraderID_get, _pyctp.CThostFtdcExchangeOrderActionErrorField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcExchangeOrderActionErrorField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcExchangeOrderActionErrorField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcExchangeOrderActionErrorField_InstallID_get, _pyctp.CThostFtdcExchangeOrderActionErrorField_InstallID_set)
    __swig_setmethods__["OrderLocalID"] = _pyctp.CThostFtdcExchangeOrderActionErrorField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _pyctp.CThostFtdcExchangeOrderActionErrorField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_pyctp.CThostFtdcExchangeOrderActionErrorField_OrderLocalID_get, _pyctp.CThostFtdcExchangeOrderActionErrorField_OrderLocalID_set)
    __swig_setmethods__["ActionLocalID"] = _pyctp.CThostFtdcExchangeOrderActionErrorField_ActionLocalID_set
    __swig_getmethods__["ActionLocalID"] = _pyctp.CThostFtdcExchangeOrderActionErrorField_ActionLocalID_get
    if _newclass:
        ActionLocalID = _swig_property(_pyctp.CThostFtdcExchangeOrderActionErrorField_ActionLocalID_get, _pyctp.CThostFtdcExchangeOrderActionErrorField_ActionLocalID_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CThostFtdcExchangeOrderActionErrorField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CThostFtdcExchangeOrderActionErrorField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CThostFtdcExchangeOrderActionErrorField_ErrorID_get, _pyctp.CThostFtdcExchangeOrderActionErrorField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CThostFtdcExchangeOrderActionErrorField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CThostFtdcExchangeOrderActionErrorField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CThostFtdcExchangeOrderActionErrorField_ErrorMsg_get, _pyctp.CThostFtdcExchangeOrderActionErrorField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcExchangeOrderActionErrorField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcExchangeOrderActionErrorField
    __del__ = lambda self: None
CThostFtdcExchangeOrderActionErrorField_swigregister = _pyctp.CThostFtdcExchangeOrderActionErrorField_swigregister
CThostFtdcExchangeOrderActionErrorField_swigregister(CThostFtdcExchangeOrderActionErrorField)

class CThostFtdcExchangeTradeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcExchangeTradeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcExchangeTradeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeTradeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeTradeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcExchangeTradeField_ExchangeID_get, _pyctp.CThostFtdcExchangeTradeField_ExchangeID_set)
    __swig_setmethods__["TradeID"] = _pyctp.CThostFtdcExchangeTradeField_TradeID_set
    __swig_getmethods__["TradeID"] = _pyctp.CThostFtdcExchangeTradeField_TradeID_get
    if _newclass:
        TradeID = _swig_property(_pyctp.CThostFtdcExchangeTradeField_TradeID_get, _pyctp.CThostFtdcExchangeTradeField_TradeID_set)
    __swig_setmethods__["Direction"] = _pyctp.CThostFtdcExchangeTradeField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CThostFtdcExchangeTradeField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CThostFtdcExchangeTradeField_Direction_get, _pyctp.CThostFtdcExchangeTradeField_Direction_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CThostFtdcExchangeTradeField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CThostFtdcExchangeTradeField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CThostFtdcExchangeTradeField_OrderSysID_get, _pyctp.CThostFtdcExchangeTradeField_OrderSysID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcExchangeTradeField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcExchangeTradeField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcExchangeTradeField_ParticipantID_get, _pyctp.CThostFtdcExchangeTradeField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcExchangeTradeField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcExchangeTradeField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcExchangeTradeField_ClientID_get, _pyctp.CThostFtdcExchangeTradeField_ClientID_set)
    __swig_setmethods__["TradingRole"] = _pyctp.CThostFtdcExchangeTradeField_TradingRole_set
    __swig_getmethods__["TradingRole"] = _pyctp.CThostFtdcExchangeTradeField_TradingRole_get
    if _newclass:
        TradingRole = _swig_property(_pyctp.CThostFtdcExchangeTradeField_TradingRole_get, _pyctp.CThostFtdcExchangeTradeField_TradingRole_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CThostFtdcExchangeTradeField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CThostFtdcExchangeTradeField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CThostFtdcExchangeTradeField_ExchangeInstID_get, _pyctp.CThostFtdcExchangeTradeField_ExchangeInstID_set)
    __swig_setmethods__["OffsetFlag"] = _pyctp.CThostFtdcExchangeTradeField_OffsetFlag_set
    __swig_getmethods__["OffsetFlag"] = _pyctp.CThostFtdcExchangeTradeField_OffsetFlag_get
    if _newclass:
        OffsetFlag = _swig_property(_pyctp.CThostFtdcExchangeTradeField_OffsetFlag_get, _pyctp.CThostFtdcExchangeTradeField_OffsetFlag_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcExchangeTradeField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcExchangeTradeField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcExchangeTradeField_HedgeFlag_get, _pyctp.CThostFtdcExchangeTradeField_HedgeFlag_set)
    __swig_setmethods__["Price"] = _pyctp.CThostFtdcExchangeTradeField_Price_set
    __swig_getmethods__["Price"] = _pyctp.CThostFtdcExchangeTradeField_Price_get
    if _newclass:
        Price = _swig_property(_pyctp.CThostFtdcExchangeTradeField_Price_get, _pyctp.CThostFtdcExchangeTradeField_Price_set)
    __swig_setmethods__["Volume"] = _pyctp.CThostFtdcExchangeTradeField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CThostFtdcExchangeTradeField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CThostFtdcExchangeTradeField_Volume_get, _pyctp.CThostFtdcExchangeTradeField_Volume_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcExchangeTradeField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcExchangeTradeField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcExchangeTradeField_TradeDate_get, _pyctp.CThostFtdcExchangeTradeField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcExchangeTradeField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcExchangeTradeField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcExchangeTradeField_TradeTime_get, _pyctp.CThostFtdcExchangeTradeField_TradeTime_set)
    __swig_setmethods__["TradeType"] = _pyctp.CThostFtdcExchangeTradeField_TradeType_set
    __swig_getmethods__["TradeType"] = _pyctp.CThostFtdcExchangeTradeField_TradeType_get
    if _newclass:
        TradeType = _swig_property(_pyctp.CThostFtdcExchangeTradeField_TradeType_get, _pyctp.CThostFtdcExchangeTradeField_TradeType_set)
    __swig_setmethods__["PriceSource"] = _pyctp.CThostFtdcExchangeTradeField_PriceSource_set
    __swig_getmethods__["PriceSource"] = _pyctp.CThostFtdcExchangeTradeField_PriceSource_get
    if _newclass:
        PriceSource = _swig_property(_pyctp.CThostFtdcExchangeTradeField_PriceSource_get, _pyctp.CThostFtdcExchangeTradeField_PriceSource_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcExchangeTradeField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcExchangeTradeField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcExchangeTradeField_TraderID_get, _pyctp.CThostFtdcExchangeTradeField_TraderID_set)
    __swig_setmethods__["OrderLocalID"] = _pyctp.CThostFtdcExchangeTradeField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _pyctp.CThostFtdcExchangeTradeField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_pyctp.CThostFtdcExchangeTradeField_OrderLocalID_get, _pyctp.CThostFtdcExchangeTradeField_OrderLocalID_set)
    __swig_setmethods__["ClearingPartID"] = _pyctp.CThostFtdcExchangeTradeField_ClearingPartID_set
    __swig_getmethods__["ClearingPartID"] = _pyctp.CThostFtdcExchangeTradeField_ClearingPartID_get
    if _newclass:
        ClearingPartID = _swig_property(_pyctp.CThostFtdcExchangeTradeField_ClearingPartID_get, _pyctp.CThostFtdcExchangeTradeField_ClearingPartID_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CThostFtdcExchangeTradeField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CThostFtdcExchangeTradeField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CThostFtdcExchangeTradeField_BusinessUnit_get, _pyctp.CThostFtdcExchangeTradeField_BusinessUnit_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CThostFtdcExchangeTradeField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CThostFtdcExchangeTradeField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CThostFtdcExchangeTradeField_SequenceNo_get, _pyctp.CThostFtdcExchangeTradeField_SequenceNo_set)
    __swig_setmethods__["TradeSource"] = _pyctp.CThostFtdcExchangeTradeField_TradeSource_set
    __swig_getmethods__["TradeSource"] = _pyctp.CThostFtdcExchangeTradeField_TradeSource_get
    if _newclass:
        TradeSource = _swig_property(_pyctp.CThostFtdcExchangeTradeField_TradeSource_get, _pyctp.CThostFtdcExchangeTradeField_TradeSource_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcExchangeTradeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcExchangeTradeField
    __del__ = lambda self: None
CThostFtdcExchangeTradeField_swigregister = _pyctp.CThostFtdcExchangeTradeField_swigregister
CThostFtdcExchangeTradeField_swigregister(CThostFtdcExchangeTradeField)

class CThostFtdcTradeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcTradeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcTradeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcTradeField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcTradeField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcTradeField_BrokerID_get, _pyctp.CThostFtdcTradeField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcTradeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcTradeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcTradeField_InvestorID_get, _pyctp.CThostFtdcTradeField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcTradeField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcTradeField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcTradeField_InstrumentID_get, _pyctp.CThostFtdcTradeField_InstrumentID_set)
    __swig_setmethods__["OrderRef"] = _pyctp.CThostFtdcTradeField_OrderRef_set
    __swig_getmethods__["OrderRef"] = _pyctp.CThostFtdcTradeField_OrderRef_get
    if _newclass:
        OrderRef = _swig_property(_pyctp.CThostFtdcTradeField_OrderRef_get, _pyctp.CThostFtdcTradeField_OrderRef_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcTradeField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcTradeField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcTradeField_UserID_get, _pyctp.CThostFtdcTradeField_UserID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcTradeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcTradeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcTradeField_ExchangeID_get, _pyctp.CThostFtdcTradeField_ExchangeID_set)
    __swig_setmethods__["TradeID"] = _pyctp.CThostFtdcTradeField_TradeID_set
    __swig_getmethods__["TradeID"] = _pyctp.CThostFtdcTradeField_TradeID_get
    if _newclass:
        TradeID = _swig_property(_pyctp.CThostFtdcTradeField_TradeID_get, _pyctp.CThostFtdcTradeField_TradeID_set)
    __swig_setmethods__["Direction"] = _pyctp.CThostFtdcTradeField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CThostFtdcTradeField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CThostFtdcTradeField_Direction_get, _pyctp.CThostFtdcTradeField_Direction_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CThostFtdcTradeField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CThostFtdcTradeField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CThostFtdcTradeField_OrderSysID_get, _pyctp.CThostFtdcTradeField_OrderSysID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcTradeField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcTradeField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcTradeField_ParticipantID_get, _pyctp.CThostFtdcTradeField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcTradeField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcTradeField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcTradeField_ClientID_get, _pyctp.CThostFtdcTradeField_ClientID_set)
    __swig_setmethods__["TradingRole"] = _pyctp.CThostFtdcTradeField_TradingRole_set
    __swig_getmethods__["TradingRole"] = _pyctp.CThostFtdcTradeField_TradingRole_get
    if _newclass:
        TradingRole = _swig_property(_pyctp.CThostFtdcTradeField_TradingRole_get, _pyctp.CThostFtdcTradeField_TradingRole_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CThostFtdcTradeField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CThostFtdcTradeField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CThostFtdcTradeField_ExchangeInstID_get, _pyctp.CThostFtdcTradeField_ExchangeInstID_set)
    __swig_setmethods__["OffsetFlag"] = _pyctp.CThostFtdcTradeField_OffsetFlag_set
    __swig_getmethods__["OffsetFlag"] = _pyctp.CThostFtdcTradeField_OffsetFlag_get
    if _newclass:
        OffsetFlag = _swig_property(_pyctp.CThostFtdcTradeField_OffsetFlag_get, _pyctp.CThostFtdcTradeField_OffsetFlag_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcTradeField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcTradeField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcTradeField_HedgeFlag_get, _pyctp.CThostFtdcTradeField_HedgeFlag_set)
    __swig_setmethods__["Price"] = _pyctp.CThostFtdcTradeField_Price_set
    __swig_getmethods__["Price"] = _pyctp.CThostFtdcTradeField_Price_get
    if _newclass:
        Price = _swig_property(_pyctp.CThostFtdcTradeField_Price_get, _pyctp.CThostFtdcTradeField_Price_set)
    __swig_setmethods__["Volume"] = _pyctp.CThostFtdcTradeField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CThostFtdcTradeField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CThostFtdcTradeField_Volume_get, _pyctp.CThostFtdcTradeField_Volume_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcTradeField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcTradeField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcTradeField_TradeDate_get, _pyctp.CThostFtdcTradeField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcTradeField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcTradeField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcTradeField_TradeTime_get, _pyctp.CThostFtdcTradeField_TradeTime_set)
    __swig_setmethods__["TradeType"] = _pyctp.CThostFtdcTradeField_TradeType_set
    __swig_getmethods__["TradeType"] = _pyctp.CThostFtdcTradeField_TradeType_get
    if _newclass:
        TradeType = _swig_property(_pyctp.CThostFtdcTradeField_TradeType_get, _pyctp.CThostFtdcTradeField_TradeType_set)
    __swig_setmethods__["PriceSource"] = _pyctp.CThostFtdcTradeField_PriceSource_set
    __swig_getmethods__["PriceSource"] = _pyctp.CThostFtdcTradeField_PriceSource_get
    if _newclass:
        PriceSource = _swig_property(_pyctp.CThostFtdcTradeField_PriceSource_get, _pyctp.CThostFtdcTradeField_PriceSource_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcTradeField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcTradeField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcTradeField_TraderID_get, _pyctp.CThostFtdcTradeField_TraderID_set)
    __swig_setmethods__["OrderLocalID"] = _pyctp.CThostFtdcTradeField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _pyctp.CThostFtdcTradeField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_pyctp.CThostFtdcTradeField_OrderLocalID_get, _pyctp.CThostFtdcTradeField_OrderLocalID_set)
    __swig_setmethods__["ClearingPartID"] = _pyctp.CThostFtdcTradeField_ClearingPartID_set
    __swig_getmethods__["ClearingPartID"] = _pyctp.CThostFtdcTradeField_ClearingPartID_get
    if _newclass:
        ClearingPartID = _swig_property(_pyctp.CThostFtdcTradeField_ClearingPartID_get, _pyctp.CThostFtdcTradeField_ClearingPartID_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CThostFtdcTradeField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CThostFtdcTradeField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CThostFtdcTradeField_BusinessUnit_get, _pyctp.CThostFtdcTradeField_BusinessUnit_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CThostFtdcTradeField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CThostFtdcTradeField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CThostFtdcTradeField_SequenceNo_get, _pyctp.CThostFtdcTradeField_SequenceNo_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcTradeField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcTradeField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcTradeField_TradingDay_get, _pyctp.CThostFtdcTradeField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CThostFtdcTradeField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CThostFtdcTradeField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CThostFtdcTradeField_SettlementID_get, _pyctp.CThostFtdcTradeField_SettlementID_set)
    __swig_setmethods__["BrokerOrderSeq"] = _pyctp.CThostFtdcTradeField_BrokerOrderSeq_set
    __swig_getmethods__["BrokerOrderSeq"] = _pyctp.CThostFtdcTradeField_BrokerOrderSeq_get
    if _newclass:
        BrokerOrderSeq = _swig_property(_pyctp.CThostFtdcTradeField_BrokerOrderSeq_get, _pyctp.CThostFtdcTradeField_BrokerOrderSeq_set)
    __swig_setmethods__["TradeSource"] = _pyctp.CThostFtdcTradeField_TradeSource_set
    __swig_getmethods__["TradeSource"] = _pyctp.CThostFtdcTradeField_TradeSource_get
    if _newclass:
        TradeSource = _swig_property(_pyctp.CThostFtdcTradeField_TradeSource_get, _pyctp.CThostFtdcTradeField_TradeSource_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcTradeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcTradeField
    __del__ = lambda self: None
CThostFtdcTradeField_swigregister = _pyctp.CThostFtdcTradeField_swigregister
CThostFtdcTradeField_swigregister(CThostFtdcTradeField)

class CThostFtdcUserSessionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcUserSessionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcUserSessionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["FrontID"] = _pyctp.CThostFtdcUserSessionField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CThostFtdcUserSessionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CThostFtdcUserSessionField_FrontID_get, _pyctp.CThostFtdcUserSessionField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcUserSessionField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcUserSessionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcUserSessionField_SessionID_get, _pyctp.CThostFtdcUserSessionField_SessionID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcUserSessionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcUserSessionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcUserSessionField_BrokerID_get, _pyctp.CThostFtdcUserSessionField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcUserSessionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcUserSessionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcUserSessionField_UserID_get, _pyctp.CThostFtdcUserSessionField_UserID_set)
    __swig_setmethods__["LoginDate"] = _pyctp.CThostFtdcUserSessionField_LoginDate_set
    __swig_getmethods__["LoginDate"] = _pyctp.CThostFtdcUserSessionField_LoginDate_get
    if _newclass:
        LoginDate = _swig_property(_pyctp.CThostFtdcUserSessionField_LoginDate_get, _pyctp.CThostFtdcUserSessionField_LoginDate_set)
    __swig_setmethods__["LoginTime"] = _pyctp.CThostFtdcUserSessionField_LoginTime_set
    __swig_getmethods__["LoginTime"] = _pyctp.CThostFtdcUserSessionField_LoginTime_get
    if _newclass:
        LoginTime = _swig_property(_pyctp.CThostFtdcUserSessionField_LoginTime_get, _pyctp.CThostFtdcUserSessionField_LoginTime_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcUserSessionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcUserSessionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcUserSessionField_IPAddress_get, _pyctp.CThostFtdcUserSessionField_IPAddress_set)
    __swig_setmethods__["UserProductInfo"] = _pyctp.CThostFtdcUserSessionField_UserProductInfo_set
    __swig_getmethods__["UserProductInfo"] = _pyctp.CThostFtdcUserSessionField_UserProductInfo_get
    if _newclass:
        UserProductInfo = _swig_property(_pyctp.CThostFtdcUserSessionField_UserProductInfo_get, _pyctp.CThostFtdcUserSessionField_UserProductInfo_set)
    __swig_setmethods__["InterfaceProductInfo"] = _pyctp.CThostFtdcUserSessionField_InterfaceProductInfo_set
    __swig_getmethods__["InterfaceProductInfo"] = _pyctp.CThostFtdcUserSessionField_InterfaceProductInfo_get
    if _newclass:
        InterfaceProductInfo = _swig_property(_pyctp.CThostFtdcUserSessionField_InterfaceProductInfo_get, _pyctp.CThostFtdcUserSessionField_InterfaceProductInfo_set)
    __swig_setmethods__["ProtocolInfo"] = _pyctp.CThostFtdcUserSessionField_ProtocolInfo_set
    __swig_getmethods__["ProtocolInfo"] = _pyctp.CThostFtdcUserSessionField_ProtocolInfo_get
    if _newclass:
        ProtocolInfo = _swig_property(_pyctp.CThostFtdcUserSessionField_ProtocolInfo_get, _pyctp.CThostFtdcUserSessionField_ProtocolInfo_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcUserSessionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcUserSessionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcUserSessionField_MacAddress_get, _pyctp.CThostFtdcUserSessionField_MacAddress_set)
    __swig_setmethods__["LoginRemark"] = _pyctp.CThostFtdcUserSessionField_LoginRemark_set
    __swig_getmethods__["LoginRemark"] = _pyctp.CThostFtdcUserSessionField_LoginRemark_get
    if _newclass:
        LoginRemark = _swig_property(_pyctp.CThostFtdcUserSessionField_LoginRemark_get, _pyctp.CThostFtdcUserSessionField_LoginRemark_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcUserSessionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcUserSessionField
    __del__ = lambda self: None
CThostFtdcUserSessionField_swigregister = _pyctp.CThostFtdcUserSessionField_swigregister
CThostFtdcUserSessionField_swigregister(CThostFtdcUserSessionField)

class CThostFtdcQueryMaxOrderVolumeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQueryMaxOrderVolumeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQueryMaxOrderVolumeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQueryMaxOrderVolumeField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQueryMaxOrderVolumeField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQueryMaxOrderVolumeField_BrokerID_get, _pyctp.CThostFtdcQueryMaxOrderVolumeField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQueryMaxOrderVolumeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQueryMaxOrderVolumeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQueryMaxOrderVolumeField_InvestorID_get, _pyctp.CThostFtdcQueryMaxOrderVolumeField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQueryMaxOrderVolumeField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQueryMaxOrderVolumeField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQueryMaxOrderVolumeField_InstrumentID_get, _pyctp.CThostFtdcQueryMaxOrderVolumeField_InstrumentID_set)
    __swig_setmethods__["Direction"] = _pyctp.CThostFtdcQueryMaxOrderVolumeField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CThostFtdcQueryMaxOrderVolumeField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CThostFtdcQueryMaxOrderVolumeField_Direction_get, _pyctp.CThostFtdcQueryMaxOrderVolumeField_Direction_set)
    __swig_setmethods__["OffsetFlag"] = _pyctp.CThostFtdcQueryMaxOrderVolumeField_OffsetFlag_set
    __swig_getmethods__["OffsetFlag"] = _pyctp.CThostFtdcQueryMaxOrderVolumeField_OffsetFlag_get
    if _newclass:
        OffsetFlag = _swig_property(_pyctp.CThostFtdcQueryMaxOrderVolumeField_OffsetFlag_get, _pyctp.CThostFtdcQueryMaxOrderVolumeField_OffsetFlag_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcQueryMaxOrderVolumeField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcQueryMaxOrderVolumeField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcQueryMaxOrderVolumeField_HedgeFlag_get, _pyctp.CThostFtdcQueryMaxOrderVolumeField_HedgeFlag_set)
    __swig_setmethods__["MaxVolume"] = _pyctp.CThostFtdcQueryMaxOrderVolumeField_MaxVolume_set
    __swig_getmethods__["MaxVolume"] = _pyctp.CThostFtdcQueryMaxOrderVolumeField_MaxVolume_get
    if _newclass:
        MaxVolume = _swig_property(_pyctp.CThostFtdcQueryMaxOrderVolumeField_MaxVolume_get, _pyctp.CThostFtdcQueryMaxOrderVolumeField_MaxVolume_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQueryMaxOrderVolumeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQueryMaxOrderVolumeField
    __del__ = lambda self: None
CThostFtdcQueryMaxOrderVolumeField_swigregister = _pyctp.CThostFtdcQueryMaxOrderVolumeField_swigregister
CThostFtdcQueryMaxOrderVolumeField_swigregister(CThostFtdcQueryMaxOrderVolumeField)

class CThostFtdcSettlementInfoConfirmField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcSettlementInfoConfirmField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcSettlementInfoConfirmField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcSettlementInfoConfirmField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcSettlementInfoConfirmField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcSettlementInfoConfirmField_BrokerID_get, _pyctp.CThostFtdcSettlementInfoConfirmField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcSettlementInfoConfirmField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcSettlementInfoConfirmField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcSettlementInfoConfirmField_InvestorID_get, _pyctp.CThostFtdcSettlementInfoConfirmField_InvestorID_set)
    __swig_setmethods__["ConfirmDate"] = _pyctp.CThostFtdcSettlementInfoConfirmField_ConfirmDate_set
    __swig_getmethods__["ConfirmDate"] = _pyctp.CThostFtdcSettlementInfoConfirmField_ConfirmDate_get
    if _newclass:
        ConfirmDate = _swig_property(_pyctp.CThostFtdcSettlementInfoConfirmField_ConfirmDate_get, _pyctp.CThostFtdcSettlementInfoConfirmField_ConfirmDate_set)
    __swig_setmethods__["ConfirmTime"] = _pyctp.CThostFtdcSettlementInfoConfirmField_ConfirmTime_set
    __swig_getmethods__["ConfirmTime"] = _pyctp.CThostFtdcSettlementInfoConfirmField_ConfirmTime_get
    if _newclass:
        ConfirmTime = _swig_property(_pyctp.CThostFtdcSettlementInfoConfirmField_ConfirmTime_get, _pyctp.CThostFtdcSettlementInfoConfirmField_ConfirmTime_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcSettlementInfoConfirmField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcSettlementInfoConfirmField
    __del__ = lambda self: None
CThostFtdcSettlementInfoConfirmField_swigregister = _pyctp.CThostFtdcSettlementInfoConfirmField_swigregister
CThostFtdcSettlementInfoConfirmField_swigregister(CThostFtdcSettlementInfoConfirmField)

class CThostFtdcSyncDepositField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcSyncDepositField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcSyncDepositField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["DepositSeqNo"] = _pyctp.CThostFtdcSyncDepositField_DepositSeqNo_set
    __swig_getmethods__["DepositSeqNo"] = _pyctp.CThostFtdcSyncDepositField_DepositSeqNo_get
    if _newclass:
        DepositSeqNo = _swig_property(_pyctp.CThostFtdcSyncDepositField_DepositSeqNo_get, _pyctp.CThostFtdcSyncDepositField_DepositSeqNo_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcSyncDepositField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcSyncDepositField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcSyncDepositField_BrokerID_get, _pyctp.CThostFtdcSyncDepositField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcSyncDepositField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcSyncDepositField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcSyncDepositField_InvestorID_get, _pyctp.CThostFtdcSyncDepositField_InvestorID_set)
    __swig_setmethods__["Deposit"] = _pyctp.CThostFtdcSyncDepositField_Deposit_set
    __swig_getmethods__["Deposit"] = _pyctp.CThostFtdcSyncDepositField_Deposit_get
    if _newclass:
        Deposit = _swig_property(_pyctp.CThostFtdcSyncDepositField_Deposit_get, _pyctp.CThostFtdcSyncDepositField_Deposit_set)
    __swig_setmethods__["IsForce"] = _pyctp.CThostFtdcSyncDepositField_IsForce_set
    __swig_getmethods__["IsForce"] = _pyctp.CThostFtdcSyncDepositField_IsForce_get
    if _newclass:
        IsForce = _swig_property(_pyctp.CThostFtdcSyncDepositField_IsForce_get, _pyctp.CThostFtdcSyncDepositField_IsForce_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcSyncDepositField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcSyncDepositField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcSyncDepositField_CurrencyID_get, _pyctp.CThostFtdcSyncDepositField_CurrencyID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcSyncDepositField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcSyncDepositField
    __del__ = lambda self: None
CThostFtdcSyncDepositField_swigregister = _pyctp.CThostFtdcSyncDepositField_swigregister
CThostFtdcSyncDepositField_swigregister(CThostFtdcSyncDepositField)

class CThostFtdcSyncFundMortgageField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcSyncFundMortgageField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcSyncFundMortgageField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["MortgageSeqNo"] = _pyctp.CThostFtdcSyncFundMortgageField_MortgageSeqNo_set
    __swig_getmethods__["MortgageSeqNo"] = _pyctp.CThostFtdcSyncFundMortgageField_MortgageSeqNo_get
    if _newclass:
        MortgageSeqNo = _swig_property(_pyctp.CThostFtdcSyncFundMortgageField_MortgageSeqNo_get, _pyctp.CThostFtdcSyncFundMortgageField_MortgageSeqNo_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcSyncFundMortgageField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcSyncFundMortgageField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcSyncFundMortgageField_BrokerID_get, _pyctp.CThostFtdcSyncFundMortgageField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcSyncFundMortgageField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcSyncFundMortgageField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcSyncFundMortgageField_InvestorID_get, _pyctp.CThostFtdcSyncFundMortgageField_InvestorID_set)
    __swig_setmethods__["FromCurrencyID"] = _pyctp.CThostFtdcSyncFundMortgageField_FromCurrencyID_set
    __swig_getmethods__["FromCurrencyID"] = _pyctp.CThostFtdcSyncFundMortgageField_FromCurrencyID_get
    if _newclass:
        FromCurrencyID = _swig_property(_pyctp.CThostFtdcSyncFundMortgageField_FromCurrencyID_get, _pyctp.CThostFtdcSyncFundMortgageField_FromCurrencyID_set)
    __swig_setmethods__["MortgageAmount"] = _pyctp.CThostFtdcSyncFundMortgageField_MortgageAmount_set
    __swig_getmethods__["MortgageAmount"] = _pyctp.CThostFtdcSyncFundMortgageField_MortgageAmount_get
    if _newclass:
        MortgageAmount = _swig_property(_pyctp.CThostFtdcSyncFundMortgageField_MortgageAmount_get, _pyctp.CThostFtdcSyncFundMortgageField_MortgageAmount_set)
    __swig_setmethods__["ToCurrencyID"] = _pyctp.CThostFtdcSyncFundMortgageField_ToCurrencyID_set
    __swig_getmethods__["ToCurrencyID"] = _pyctp.CThostFtdcSyncFundMortgageField_ToCurrencyID_get
    if _newclass:
        ToCurrencyID = _swig_property(_pyctp.CThostFtdcSyncFundMortgageField_ToCurrencyID_get, _pyctp.CThostFtdcSyncFundMortgageField_ToCurrencyID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcSyncFundMortgageField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcSyncFundMortgageField
    __del__ = lambda self: None
CThostFtdcSyncFundMortgageField_swigregister = _pyctp.CThostFtdcSyncFundMortgageField_swigregister
CThostFtdcSyncFundMortgageField_swigregister(CThostFtdcSyncFundMortgageField)

class CThostFtdcBrokerSyncField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcBrokerSyncField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcBrokerSyncField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcBrokerSyncField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcBrokerSyncField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcBrokerSyncField_BrokerID_get, _pyctp.CThostFtdcBrokerSyncField_BrokerID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcBrokerSyncField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcBrokerSyncField
    __del__ = lambda self: None
CThostFtdcBrokerSyncField_swigregister = _pyctp.CThostFtdcBrokerSyncField_swigregister
CThostFtdcBrokerSyncField_swigregister(CThostFtdcBrokerSyncField)

class CThostFtdcSyncingInvestorField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcSyncingInvestorField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcSyncingInvestorField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcSyncingInvestorField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcSyncingInvestorField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcSyncingInvestorField_InvestorID_get, _pyctp.CThostFtdcSyncingInvestorField_InvestorID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcSyncingInvestorField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcSyncingInvestorField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcSyncingInvestorField_BrokerID_get, _pyctp.CThostFtdcSyncingInvestorField_BrokerID_set)
    __swig_setmethods__["InvestorGroupID"] = _pyctp.CThostFtdcSyncingInvestorField_InvestorGroupID_set
    __swig_getmethods__["InvestorGroupID"] = _pyctp.CThostFtdcSyncingInvestorField_InvestorGroupID_get
    if _newclass:
        InvestorGroupID = _swig_property(_pyctp.CThostFtdcSyncingInvestorField_InvestorGroupID_get, _pyctp.CThostFtdcSyncingInvestorField_InvestorGroupID_set)
    __swig_setmethods__["InvestorName"] = _pyctp.CThostFtdcSyncingInvestorField_InvestorName_set
    __swig_getmethods__["InvestorName"] = _pyctp.CThostFtdcSyncingInvestorField_InvestorName_get
    if _newclass:
        InvestorName = _swig_property(_pyctp.CThostFtdcSyncingInvestorField_InvestorName_get, _pyctp.CThostFtdcSyncingInvestorField_InvestorName_set)
    __swig_setmethods__["IdentifiedCardType"] = _pyctp.CThostFtdcSyncingInvestorField_IdentifiedCardType_set
    __swig_getmethods__["IdentifiedCardType"] = _pyctp.CThostFtdcSyncingInvestorField_IdentifiedCardType_get
    if _newclass:
        IdentifiedCardType = _swig_property(_pyctp.CThostFtdcSyncingInvestorField_IdentifiedCardType_get, _pyctp.CThostFtdcSyncingInvestorField_IdentifiedCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcSyncingInvestorField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcSyncingInvestorField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CThostFtdcSyncingInvestorField_IdentifiedCardNo_get, _pyctp.CThostFtdcSyncingInvestorField_IdentifiedCardNo_set)
    __swig_setmethods__["IsActive"] = _pyctp.CThostFtdcSyncingInvestorField_IsActive_set
    __swig_getmethods__["IsActive"] = _pyctp.CThostFtdcSyncingInvestorField_IsActive_get
    if _newclass:
        IsActive = _swig_property(_pyctp.CThostFtdcSyncingInvestorField_IsActive_get, _pyctp.CThostFtdcSyncingInvestorField_IsActive_set)
    __swig_setmethods__["Telephone"] = _pyctp.CThostFtdcSyncingInvestorField_Telephone_set
    __swig_getmethods__["Telephone"] = _pyctp.CThostFtdcSyncingInvestorField_Telephone_get
    if _newclass:
        Telephone = _swig_property(_pyctp.CThostFtdcSyncingInvestorField_Telephone_get, _pyctp.CThostFtdcSyncingInvestorField_Telephone_set)
    __swig_setmethods__["Address"] = _pyctp.CThostFtdcSyncingInvestorField_Address_set
    __swig_getmethods__["Address"] = _pyctp.CThostFtdcSyncingInvestorField_Address_get
    if _newclass:
        Address = _swig_property(_pyctp.CThostFtdcSyncingInvestorField_Address_get, _pyctp.CThostFtdcSyncingInvestorField_Address_set)
    __swig_setmethods__["OpenDate"] = _pyctp.CThostFtdcSyncingInvestorField_OpenDate_set
    __swig_getmethods__["OpenDate"] = _pyctp.CThostFtdcSyncingInvestorField_OpenDate_get
    if _newclass:
        OpenDate = _swig_property(_pyctp.CThostFtdcSyncingInvestorField_OpenDate_get, _pyctp.CThostFtdcSyncingInvestorField_OpenDate_set)
    __swig_setmethods__["Mobile"] = _pyctp.CThostFtdcSyncingInvestorField_Mobile_set
    __swig_getmethods__["Mobile"] = _pyctp.CThostFtdcSyncingInvestorField_Mobile_get
    if _newclass:
        Mobile = _swig_property(_pyctp.CThostFtdcSyncingInvestorField_Mobile_get, _pyctp.CThostFtdcSyncingInvestorField_Mobile_set)
    __swig_setmethods__["CommModelID"] = _pyctp.CThostFtdcSyncingInvestorField_CommModelID_set
    __swig_getmethods__["CommModelID"] = _pyctp.CThostFtdcSyncingInvestorField_CommModelID_get
    if _newclass:
        CommModelID = _swig_property(_pyctp.CThostFtdcSyncingInvestorField_CommModelID_get, _pyctp.CThostFtdcSyncingInvestorField_CommModelID_set)
    __swig_setmethods__["MarginModelID"] = _pyctp.CThostFtdcSyncingInvestorField_MarginModelID_set
    __swig_getmethods__["MarginModelID"] = _pyctp.CThostFtdcSyncingInvestorField_MarginModelID_get
    if _newclass:
        MarginModelID = _swig_property(_pyctp.CThostFtdcSyncingInvestorField_MarginModelID_get, _pyctp.CThostFtdcSyncingInvestorField_MarginModelID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcSyncingInvestorField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcSyncingInvestorField
    __del__ = lambda self: None
CThostFtdcSyncingInvestorField_swigregister = _pyctp.CThostFtdcSyncingInvestorField_swigregister
CThostFtdcSyncingInvestorField_swigregister(CThostFtdcSyncingInvestorField)

class CThostFtdcSyncingTradingCodeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcSyncingTradingCodeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcSyncingTradingCodeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcSyncingTradingCodeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcSyncingTradingCodeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcSyncingTradingCodeField_InvestorID_get, _pyctp.CThostFtdcSyncingTradingCodeField_InvestorID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcSyncingTradingCodeField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcSyncingTradingCodeField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcSyncingTradingCodeField_BrokerID_get, _pyctp.CThostFtdcSyncingTradingCodeField_BrokerID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcSyncingTradingCodeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcSyncingTradingCodeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcSyncingTradingCodeField_ExchangeID_get, _pyctp.CThostFtdcSyncingTradingCodeField_ExchangeID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcSyncingTradingCodeField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcSyncingTradingCodeField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcSyncingTradingCodeField_ClientID_get, _pyctp.CThostFtdcSyncingTradingCodeField_ClientID_set)
    __swig_setmethods__["IsActive"] = _pyctp.CThostFtdcSyncingTradingCodeField_IsActive_set
    __swig_getmethods__["IsActive"] = _pyctp.CThostFtdcSyncingTradingCodeField_IsActive_get
    if _newclass:
        IsActive = _swig_property(_pyctp.CThostFtdcSyncingTradingCodeField_IsActive_get, _pyctp.CThostFtdcSyncingTradingCodeField_IsActive_set)
    __swig_setmethods__["ClientIDType"] = _pyctp.CThostFtdcSyncingTradingCodeField_ClientIDType_set
    __swig_getmethods__["ClientIDType"] = _pyctp.CThostFtdcSyncingTradingCodeField_ClientIDType_get
    if _newclass:
        ClientIDType = _swig_property(_pyctp.CThostFtdcSyncingTradingCodeField_ClientIDType_get, _pyctp.CThostFtdcSyncingTradingCodeField_ClientIDType_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcSyncingTradingCodeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcSyncingTradingCodeField
    __del__ = lambda self: None
CThostFtdcSyncingTradingCodeField_swigregister = _pyctp.CThostFtdcSyncingTradingCodeField_swigregister
CThostFtdcSyncingTradingCodeField_swigregister(CThostFtdcSyncingTradingCodeField)

class CThostFtdcSyncingInvestorGroupField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcSyncingInvestorGroupField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcSyncingInvestorGroupField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcSyncingInvestorGroupField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcSyncingInvestorGroupField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcSyncingInvestorGroupField_BrokerID_get, _pyctp.CThostFtdcSyncingInvestorGroupField_BrokerID_set)
    __swig_setmethods__["InvestorGroupID"] = _pyctp.CThostFtdcSyncingInvestorGroupField_InvestorGroupID_set
    __swig_getmethods__["InvestorGroupID"] = _pyctp.CThostFtdcSyncingInvestorGroupField_InvestorGroupID_get
    if _newclass:
        InvestorGroupID = _swig_property(_pyctp.CThostFtdcSyncingInvestorGroupField_InvestorGroupID_get, _pyctp.CThostFtdcSyncingInvestorGroupField_InvestorGroupID_set)
    __swig_setmethods__["InvestorGroupName"] = _pyctp.CThostFtdcSyncingInvestorGroupField_InvestorGroupName_set
    __swig_getmethods__["InvestorGroupName"] = _pyctp.CThostFtdcSyncingInvestorGroupField_InvestorGroupName_get
    if _newclass:
        InvestorGroupName = _swig_property(_pyctp.CThostFtdcSyncingInvestorGroupField_InvestorGroupName_get, _pyctp.CThostFtdcSyncingInvestorGroupField_InvestorGroupName_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcSyncingInvestorGroupField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcSyncingInvestorGroupField
    __del__ = lambda self: None
CThostFtdcSyncingInvestorGroupField_swigregister = _pyctp.CThostFtdcSyncingInvestorGroupField_swigregister
CThostFtdcSyncingInvestorGroupField_swigregister(CThostFtdcSyncingInvestorGroupField)

class CThostFtdcSyncingTradingAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcSyncingTradingAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcSyncingTradingAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcSyncingTradingAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcSyncingTradingAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_BrokerID_get, _pyctp.CThostFtdcSyncingTradingAccountField_BrokerID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcSyncingTradingAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcSyncingTradingAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_AccountID_get, _pyctp.CThostFtdcSyncingTradingAccountField_AccountID_set)
    __swig_setmethods__["PreMortgage"] = _pyctp.CThostFtdcSyncingTradingAccountField_PreMortgage_set
    __swig_getmethods__["PreMortgage"] = _pyctp.CThostFtdcSyncingTradingAccountField_PreMortgage_get
    if _newclass:
        PreMortgage = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_PreMortgage_get, _pyctp.CThostFtdcSyncingTradingAccountField_PreMortgage_set)
    __swig_setmethods__["PreCredit"] = _pyctp.CThostFtdcSyncingTradingAccountField_PreCredit_set
    __swig_getmethods__["PreCredit"] = _pyctp.CThostFtdcSyncingTradingAccountField_PreCredit_get
    if _newclass:
        PreCredit = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_PreCredit_get, _pyctp.CThostFtdcSyncingTradingAccountField_PreCredit_set)
    __swig_setmethods__["PreDeposit"] = _pyctp.CThostFtdcSyncingTradingAccountField_PreDeposit_set
    __swig_getmethods__["PreDeposit"] = _pyctp.CThostFtdcSyncingTradingAccountField_PreDeposit_get
    if _newclass:
        PreDeposit = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_PreDeposit_get, _pyctp.CThostFtdcSyncingTradingAccountField_PreDeposit_set)
    __swig_setmethods__["PreBalance"] = _pyctp.CThostFtdcSyncingTradingAccountField_PreBalance_set
    __swig_getmethods__["PreBalance"] = _pyctp.CThostFtdcSyncingTradingAccountField_PreBalance_get
    if _newclass:
        PreBalance = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_PreBalance_get, _pyctp.CThostFtdcSyncingTradingAccountField_PreBalance_set)
    __swig_setmethods__["PreMargin"] = _pyctp.CThostFtdcSyncingTradingAccountField_PreMargin_set
    __swig_getmethods__["PreMargin"] = _pyctp.CThostFtdcSyncingTradingAccountField_PreMargin_get
    if _newclass:
        PreMargin = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_PreMargin_get, _pyctp.CThostFtdcSyncingTradingAccountField_PreMargin_set)
    __swig_setmethods__["InterestBase"] = _pyctp.CThostFtdcSyncingTradingAccountField_InterestBase_set
    __swig_getmethods__["InterestBase"] = _pyctp.CThostFtdcSyncingTradingAccountField_InterestBase_get
    if _newclass:
        InterestBase = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_InterestBase_get, _pyctp.CThostFtdcSyncingTradingAccountField_InterestBase_set)
    __swig_setmethods__["Interest"] = _pyctp.CThostFtdcSyncingTradingAccountField_Interest_set
    __swig_getmethods__["Interest"] = _pyctp.CThostFtdcSyncingTradingAccountField_Interest_get
    if _newclass:
        Interest = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_Interest_get, _pyctp.CThostFtdcSyncingTradingAccountField_Interest_set)
    __swig_setmethods__["Deposit"] = _pyctp.CThostFtdcSyncingTradingAccountField_Deposit_set
    __swig_getmethods__["Deposit"] = _pyctp.CThostFtdcSyncingTradingAccountField_Deposit_get
    if _newclass:
        Deposit = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_Deposit_get, _pyctp.CThostFtdcSyncingTradingAccountField_Deposit_set)
    __swig_setmethods__["Withdraw"] = _pyctp.CThostFtdcSyncingTradingAccountField_Withdraw_set
    __swig_getmethods__["Withdraw"] = _pyctp.CThostFtdcSyncingTradingAccountField_Withdraw_get
    if _newclass:
        Withdraw = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_Withdraw_get, _pyctp.CThostFtdcSyncingTradingAccountField_Withdraw_set)
    __swig_setmethods__["FrozenMargin"] = _pyctp.CThostFtdcSyncingTradingAccountField_FrozenMargin_set
    __swig_getmethods__["FrozenMargin"] = _pyctp.CThostFtdcSyncingTradingAccountField_FrozenMargin_get
    if _newclass:
        FrozenMargin = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_FrozenMargin_get, _pyctp.CThostFtdcSyncingTradingAccountField_FrozenMargin_set)
    __swig_setmethods__["FrozenCash"] = _pyctp.CThostFtdcSyncingTradingAccountField_FrozenCash_set
    __swig_getmethods__["FrozenCash"] = _pyctp.CThostFtdcSyncingTradingAccountField_FrozenCash_get
    if _newclass:
        FrozenCash = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_FrozenCash_get, _pyctp.CThostFtdcSyncingTradingAccountField_FrozenCash_set)
    __swig_setmethods__["FrozenCommission"] = _pyctp.CThostFtdcSyncingTradingAccountField_FrozenCommission_set
    __swig_getmethods__["FrozenCommission"] = _pyctp.CThostFtdcSyncingTradingAccountField_FrozenCommission_get
    if _newclass:
        FrozenCommission = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_FrozenCommission_get, _pyctp.CThostFtdcSyncingTradingAccountField_FrozenCommission_set)
    __swig_setmethods__["CurrMargin"] = _pyctp.CThostFtdcSyncingTradingAccountField_CurrMargin_set
    __swig_getmethods__["CurrMargin"] = _pyctp.CThostFtdcSyncingTradingAccountField_CurrMargin_get
    if _newclass:
        CurrMargin = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_CurrMargin_get, _pyctp.CThostFtdcSyncingTradingAccountField_CurrMargin_set)
    __swig_setmethods__["CashIn"] = _pyctp.CThostFtdcSyncingTradingAccountField_CashIn_set
    __swig_getmethods__["CashIn"] = _pyctp.CThostFtdcSyncingTradingAccountField_CashIn_get
    if _newclass:
        CashIn = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_CashIn_get, _pyctp.CThostFtdcSyncingTradingAccountField_CashIn_set)
    __swig_setmethods__["Commission"] = _pyctp.CThostFtdcSyncingTradingAccountField_Commission_set
    __swig_getmethods__["Commission"] = _pyctp.CThostFtdcSyncingTradingAccountField_Commission_get
    if _newclass:
        Commission = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_Commission_get, _pyctp.CThostFtdcSyncingTradingAccountField_Commission_set)
    __swig_setmethods__["CloseProfit"] = _pyctp.CThostFtdcSyncingTradingAccountField_CloseProfit_set
    __swig_getmethods__["CloseProfit"] = _pyctp.CThostFtdcSyncingTradingAccountField_CloseProfit_get
    if _newclass:
        CloseProfit = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_CloseProfit_get, _pyctp.CThostFtdcSyncingTradingAccountField_CloseProfit_set)
    __swig_setmethods__["PositionProfit"] = _pyctp.CThostFtdcSyncingTradingAccountField_PositionProfit_set
    __swig_getmethods__["PositionProfit"] = _pyctp.CThostFtdcSyncingTradingAccountField_PositionProfit_get
    if _newclass:
        PositionProfit = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_PositionProfit_get, _pyctp.CThostFtdcSyncingTradingAccountField_PositionProfit_set)
    __swig_setmethods__["Balance"] = _pyctp.CThostFtdcSyncingTradingAccountField_Balance_set
    __swig_getmethods__["Balance"] = _pyctp.CThostFtdcSyncingTradingAccountField_Balance_get
    if _newclass:
        Balance = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_Balance_get, _pyctp.CThostFtdcSyncingTradingAccountField_Balance_set)
    __swig_setmethods__["Available"] = _pyctp.CThostFtdcSyncingTradingAccountField_Available_set
    __swig_getmethods__["Available"] = _pyctp.CThostFtdcSyncingTradingAccountField_Available_get
    if _newclass:
        Available = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_Available_get, _pyctp.CThostFtdcSyncingTradingAccountField_Available_set)
    __swig_setmethods__["WithdrawQuota"] = _pyctp.CThostFtdcSyncingTradingAccountField_WithdrawQuota_set
    __swig_getmethods__["WithdrawQuota"] = _pyctp.CThostFtdcSyncingTradingAccountField_WithdrawQuota_get
    if _newclass:
        WithdrawQuota = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_WithdrawQuota_get, _pyctp.CThostFtdcSyncingTradingAccountField_WithdrawQuota_set)
    __swig_setmethods__["Reserve"] = _pyctp.CThostFtdcSyncingTradingAccountField_Reserve_set
    __swig_getmethods__["Reserve"] = _pyctp.CThostFtdcSyncingTradingAccountField_Reserve_get
    if _newclass:
        Reserve = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_Reserve_get, _pyctp.CThostFtdcSyncingTradingAccountField_Reserve_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcSyncingTradingAccountField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcSyncingTradingAccountField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_TradingDay_get, _pyctp.CThostFtdcSyncingTradingAccountField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CThostFtdcSyncingTradingAccountField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CThostFtdcSyncingTradingAccountField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_SettlementID_get, _pyctp.CThostFtdcSyncingTradingAccountField_SettlementID_set)
    __swig_setmethods__["Credit"] = _pyctp.CThostFtdcSyncingTradingAccountField_Credit_set
    __swig_getmethods__["Credit"] = _pyctp.CThostFtdcSyncingTradingAccountField_Credit_get
    if _newclass:
        Credit = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_Credit_get, _pyctp.CThostFtdcSyncingTradingAccountField_Credit_set)
    __swig_setmethods__["Mortgage"] = _pyctp.CThostFtdcSyncingTradingAccountField_Mortgage_set
    __swig_getmethods__["Mortgage"] = _pyctp.CThostFtdcSyncingTradingAccountField_Mortgage_get
    if _newclass:
        Mortgage = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_Mortgage_get, _pyctp.CThostFtdcSyncingTradingAccountField_Mortgage_set)
    __swig_setmethods__["ExchangeMargin"] = _pyctp.CThostFtdcSyncingTradingAccountField_ExchangeMargin_set
    __swig_getmethods__["ExchangeMargin"] = _pyctp.CThostFtdcSyncingTradingAccountField_ExchangeMargin_get
    if _newclass:
        ExchangeMargin = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_ExchangeMargin_get, _pyctp.CThostFtdcSyncingTradingAccountField_ExchangeMargin_set)
    __swig_setmethods__["DeliveryMargin"] = _pyctp.CThostFtdcSyncingTradingAccountField_DeliveryMargin_set
    __swig_getmethods__["DeliveryMargin"] = _pyctp.CThostFtdcSyncingTradingAccountField_DeliveryMargin_get
    if _newclass:
        DeliveryMargin = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_DeliveryMargin_get, _pyctp.CThostFtdcSyncingTradingAccountField_DeliveryMargin_set)
    __swig_setmethods__["ExchangeDeliveryMargin"] = _pyctp.CThostFtdcSyncingTradingAccountField_ExchangeDeliveryMargin_set
    __swig_getmethods__["ExchangeDeliveryMargin"] = _pyctp.CThostFtdcSyncingTradingAccountField_ExchangeDeliveryMargin_get
    if _newclass:
        ExchangeDeliveryMargin = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_ExchangeDeliveryMargin_get, _pyctp.CThostFtdcSyncingTradingAccountField_ExchangeDeliveryMargin_set)
    __swig_setmethods__["ReserveBalance"] = _pyctp.CThostFtdcSyncingTradingAccountField_ReserveBalance_set
    __swig_getmethods__["ReserveBalance"] = _pyctp.CThostFtdcSyncingTradingAccountField_ReserveBalance_get
    if _newclass:
        ReserveBalance = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_ReserveBalance_get, _pyctp.CThostFtdcSyncingTradingAccountField_ReserveBalance_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcSyncingTradingAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcSyncingTradingAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_CurrencyID_get, _pyctp.CThostFtdcSyncingTradingAccountField_CurrencyID_set)
    __swig_setmethods__["PreFundMortgageIn"] = _pyctp.CThostFtdcSyncingTradingAccountField_PreFundMortgageIn_set
    __swig_getmethods__["PreFundMortgageIn"] = _pyctp.CThostFtdcSyncingTradingAccountField_PreFundMortgageIn_get
    if _newclass:
        PreFundMortgageIn = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_PreFundMortgageIn_get, _pyctp.CThostFtdcSyncingTradingAccountField_PreFundMortgageIn_set)
    __swig_setmethods__["PreFundMortgageOut"] = _pyctp.CThostFtdcSyncingTradingAccountField_PreFundMortgageOut_set
    __swig_getmethods__["PreFundMortgageOut"] = _pyctp.CThostFtdcSyncingTradingAccountField_PreFundMortgageOut_get
    if _newclass:
        PreFundMortgageOut = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_PreFundMortgageOut_get, _pyctp.CThostFtdcSyncingTradingAccountField_PreFundMortgageOut_set)
    __swig_setmethods__["FundMortgageIn"] = _pyctp.CThostFtdcSyncingTradingAccountField_FundMortgageIn_set
    __swig_getmethods__["FundMortgageIn"] = _pyctp.CThostFtdcSyncingTradingAccountField_FundMortgageIn_get
    if _newclass:
        FundMortgageIn = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_FundMortgageIn_get, _pyctp.CThostFtdcSyncingTradingAccountField_FundMortgageIn_set)
    __swig_setmethods__["FundMortgageOut"] = _pyctp.CThostFtdcSyncingTradingAccountField_FundMortgageOut_set
    __swig_getmethods__["FundMortgageOut"] = _pyctp.CThostFtdcSyncingTradingAccountField_FundMortgageOut_get
    if _newclass:
        FundMortgageOut = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_FundMortgageOut_get, _pyctp.CThostFtdcSyncingTradingAccountField_FundMortgageOut_set)
    __swig_setmethods__["FundMortgageAvailable"] = _pyctp.CThostFtdcSyncingTradingAccountField_FundMortgageAvailable_set
    __swig_getmethods__["FundMortgageAvailable"] = _pyctp.CThostFtdcSyncingTradingAccountField_FundMortgageAvailable_get
    if _newclass:
        FundMortgageAvailable = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_FundMortgageAvailable_get, _pyctp.CThostFtdcSyncingTradingAccountField_FundMortgageAvailable_set)
    __swig_setmethods__["MortgageableFund"] = _pyctp.CThostFtdcSyncingTradingAccountField_MortgageableFund_set
    __swig_getmethods__["MortgageableFund"] = _pyctp.CThostFtdcSyncingTradingAccountField_MortgageableFund_get
    if _newclass:
        MortgageableFund = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_MortgageableFund_get, _pyctp.CThostFtdcSyncingTradingAccountField_MortgageableFund_set)
    __swig_setmethods__["SpecProductMargin"] = _pyctp.CThostFtdcSyncingTradingAccountField_SpecProductMargin_set
    __swig_getmethods__["SpecProductMargin"] = _pyctp.CThostFtdcSyncingTradingAccountField_SpecProductMargin_get
    if _newclass:
        SpecProductMargin = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_SpecProductMargin_get, _pyctp.CThostFtdcSyncingTradingAccountField_SpecProductMargin_set)
    __swig_setmethods__["SpecProductFrozenMargin"] = _pyctp.CThostFtdcSyncingTradingAccountField_SpecProductFrozenMargin_set
    __swig_getmethods__["SpecProductFrozenMargin"] = _pyctp.CThostFtdcSyncingTradingAccountField_SpecProductFrozenMargin_get
    if _newclass:
        SpecProductFrozenMargin = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_SpecProductFrozenMargin_get, _pyctp.CThostFtdcSyncingTradingAccountField_SpecProductFrozenMargin_set)
    __swig_setmethods__["SpecProductCommission"] = _pyctp.CThostFtdcSyncingTradingAccountField_SpecProductCommission_set
    __swig_getmethods__["SpecProductCommission"] = _pyctp.CThostFtdcSyncingTradingAccountField_SpecProductCommission_get
    if _newclass:
        SpecProductCommission = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_SpecProductCommission_get, _pyctp.CThostFtdcSyncingTradingAccountField_SpecProductCommission_set)
    __swig_setmethods__["SpecProductFrozenCommission"] = _pyctp.CThostFtdcSyncingTradingAccountField_SpecProductFrozenCommission_set
    __swig_getmethods__["SpecProductFrozenCommission"] = _pyctp.CThostFtdcSyncingTradingAccountField_SpecProductFrozenCommission_get
    if _newclass:
        SpecProductFrozenCommission = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_SpecProductFrozenCommission_get, _pyctp.CThostFtdcSyncingTradingAccountField_SpecProductFrozenCommission_set)
    __swig_setmethods__["SpecProductPositionProfit"] = _pyctp.CThostFtdcSyncingTradingAccountField_SpecProductPositionProfit_set
    __swig_getmethods__["SpecProductPositionProfit"] = _pyctp.CThostFtdcSyncingTradingAccountField_SpecProductPositionProfit_get
    if _newclass:
        SpecProductPositionProfit = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_SpecProductPositionProfit_get, _pyctp.CThostFtdcSyncingTradingAccountField_SpecProductPositionProfit_set)
    __swig_setmethods__["SpecProductCloseProfit"] = _pyctp.CThostFtdcSyncingTradingAccountField_SpecProductCloseProfit_set
    __swig_getmethods__["SpecProductCloseProfit"] = _pyctp.CThostFtdcSyncingTradingAccountField_SpecProductCloseProfit_get
    if _newclass:
        SpecProductCloseProfit = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_SpecProductCloseProfit_get, _pyctp.CThostFtdcSyncingTradingAccountField_SpecProductCloseProfit_set)
    __swig_setmethods__["SpecProductPositionProfitByAlg"] = _pyctp.CThostFtdcSyncingTradingAccountField_SpecProductPositionProfitByAlg_set
    __swig_getmethods__["SpecProductPositionProfitByAlg"] = _pyctp.CThostFtdcSyncingTradingAccountField_SpecProductPositionProfitByAlg_get
    if _newclass:
        SpecProductPositionProfitByAlg = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_SpecProductPositionProfitByAlg_get, _pyctp.CThostFtdcSyncingTradingAccountField_SpecProductPositionProfitByAlg_set)
    __swig_setmethods__["SpecProductExchangeMargin"] = _pyctp.CThostFtdcSyncingTradingAccountField_SpecProductExchangeMargin_set
    __swig_getmethods__["SpecProductExchangeMargin"] = _pyctp.CThostFtdcSyncingTradingAccountField_SpecProductExchangeMargin_get
    if _newclass:
        SpecProductExchangeMargin = _swig_property(_pyctp.CThostFtdcSyncingTradingAccountField_SpecProductExchangeMargin_get, _pyctp.CThostFtdcSyncingTradingAccountField_SpecProductExchangeMargin_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcSyncingTradingAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcSyncingTradingAccountField
    __del__ = lambda self: None
CThostFtdcSyncingTradingAccountField_swigregister = _pyctp.CThostFtdcSyncingTradingAccountField_swigregister
CThostFtdcSyncingTradingAccountField_swigregister(CThostFtdcSyncingTradingAccountField)

class CThostFtdcSyncingInvestorPositionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcSyncingInvestorPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcSyncingInvestorPositionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcSyncingInvestorPositionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcSyncingInvestorPositionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_InstrumentID_get, _pyctp.CThostFtdcSyncingInvestorPositionField_InstrumentID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcSyncingInvestorPositionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcSyncingInvestorPositionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_BrokerID_get, _pyctp.CThostFtdcSyncingInvestorPositionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcSyncingInvestorPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcSyncingInvestorPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_InvestorID_get, _pyctp.CThostFtdcSyncingInvestorPositionField_InvestorID_set)
    __swig_setmethods__["PosiDirection"] = _pyctp.CThostFtdcSyncingInvestorPositionField_PosiDirection_set
    __swig_getmethods__["PosiDirection"] = _pyctp.CThostFtdcSyncingInvestorPositionField_PosiDirection_get
    if _newclass:
        PosiDirection = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_PosiDirection_get, _pyctp.CThostFtdcSyncingInvestorPositionField_PosiDirection_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcSyncingInvestorPositionField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcSyncingInvestorPositionField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_HedgeFlag_get, _pyctp.CThostFtdcSyncingInvestorPositionField_HedgeFlag_set)
    __swig_setmethods__["PositionDate"] = _pyctp.CThostFtdcSyncingInvestorPositionField_PositionDate_set
    __swig_getmethods__["PositionDate"] = _pyctp.CThostFtdcSyncingInvestorPositionField_PositionDate_get
    if _newclass:
        PositionDate = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_PositionDate_get, _pyctp.CThostFtdcSyncingInvestorPositionField_PositionDate_set)
    __swig_setmethods__["YdPosition"] = _pyctp.CThostFtdcSyncingInvestorPositionField_YdPosition_set
    __swig_getmethods__["YdPosition"] = _pyctp.CThostFtdcSyncingInvestorPositionField_YdPosition_get
    if _newclass:
        YdPosition = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_YdPosition_get, _pyctp.CThostFtdcSyncingInvestorPositionField_YdPosition_set)
    __swig_setmethods__["Position"] = _pyctp.CThostFtdcSyncingInvestorPositionField_Position_set
    __swig_getmethods__["Position"] = _pyctp.CThostFtdcSyncingInvestorPositionField_Position_get
    if _newclass:
        Position = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_Position_get, _pyctp.CThostFtdcSyncingInvestorPositionField_Position_set)
    __swig_setmethods__["LongFrozen"] = _pyctp.CThostFtdcSyncingInvestorPositionField_LongFrozen_set
    __swig_getmethods__["LongFrozen"] = _pyctp.CThostFtdcSyncingInvestorPositionField_LongFrozen_get
    if _newclass:
        LongFrozen = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_LongFrozen_get, _pyctp.CThostFtdcSyncingInvestorPositionField_LongFrozen_set)
    __swig_setmethods__["ShortFrozen"] = _pyctp.CThostFtdcSyncingInvestorPositionField_ShortFrozen_set
    __swig_getmethods__["ShortFrozen"] = _pyctp.CThostFtdcSyncingInvestorPositionField_ShortFrozen_get
    if _newclass:
        ShortFrozen = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_ShortFrozen_get, _pyctp.CThostFtdcSyncingInvestorPositionField_ShortFrozen_set)
    __swig_setmethods__["LongFrozenAmount"] = _pyctp.CThostFtdcSyncingInvestorPositionField_LongFrozenAmount_set
    __swig_getmethods__["LongFrozenAmount"] = _pyctp.CThostFtdcSyncingInvestorPositionField_LongFrozenAmount_get
    if _newclass:
        LongFrozenAmount = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_LongFrozenAmount_get, _pyctp.CThostFtdcSyncingInvestorPositionField_LongFrozenAmount_set)
    __swig_setmethods__["ShortFrozenAmount"] = _pyctp.CThostFtdcSyncingInvestorPositionField_ShortFrozenAmount_set
    __swig_getmethods__["ShortFrozenAmount"] = _pyctp.CThostFtdcSyncingInvestorPositionField_ShortFrozenAmount_get
    if _newclass:
        ShortFrozenAmount = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_ShortFrozenAmount_get, _pyctp.CThostFtdcSyncingInvestorPositionField_ShortFrozenAmount_set)
    __swig_setmethods__["OpenVolume"] = _pyctp.CThostFtdcSyncingInvestorPositionField_OpenVolume_set
    __swig_getmethods__["OpenVolume"] = _pyctp.CThostFtdcSyncingInvestorPositionField_OpenVolume_get
    if _newclass:
        OpenVolume = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_OpenVolume_get, _pyctp.CThostFtdcSyncingInvestorPositionField_OpenVolume_set)
    __swig_setmethods__["CloseVolume"] = _pyctp.CThostFtdcSyncingInvestorPositionField_CloseVolume_set
    __swig_getmethods__["CloseVolume"] = _pyctp.CThostFtdcSyncingInvestorPositionField_CloseVolume_get
    if _newclass:
        CloseVolume = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_CloseVolume_get, _pyctp.CThostFtdcSyncingInvestorPositionField_CloseVolume_set)
    __swig_setmethods__["OpenAmount"] = _pyctp.CThostFtdcSyncingInvestorPositionField_OpenAmount_set
    __swig_getmethods__["OpenAmount"] = _pyctp.CThostFtdcSyncingInvestorPositionField_OpenAmount_get
    if _newclass:
        OpenAmount = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_OpenAmount_get, _pyctp.CThostFtdcSyncingInvestorPositionField_OpenAmount_set)
    __swig_setmethods__["CloseAmount"] = _pyctp.CThostFtdcSyncingInvestorPositionField_CloseAmount_set
    __swig_getmethods__["CloseAmount"] = _pyctp.CThostFtdcSyncingInvestorPositionField_CloseAmount_get
    if _newclass:
        CloseAmount = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_CloseAmount_get, _pyctp.CThostFtdcSyncingInvestorPositionField_CloseAmount_set)
    __swig_setmethods__["PositionCost"] = _pyctp.CThostFtdcSyncingInvestorPositionField_PositionCost_set
    __swig_getmethods__["PositionCost"] = _pyctp.CThostFtdcSyncingInvestorPositionField_PositionCost_get
    if _newclass:
        PositionCost = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_PositionCost_get, _pyctp.CThostFtdcSyncingInvestorPositionField_PositionCost_set)
    __swig_setmethods__["PreMargin"] = _pyctp.CThostFtdcSyncingInvestorPositionField_PreMargin_set
    __swig_getmethods__["PreMargin"] = _pyctp.CThostFtdcSyncingInvestorPositionField_PreMargin_get
    if _newclass:
        PreMargin = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_PreMargin_get, _pyctp.CThostFtdcSyncingInvestorPositionField_PreMargin_set)
    __swig_setmethods__["UseMargin"] = _pyctp.CThostFtdcSyncingInvestorPositionField_UseMargin_set
    __swig_getmethods__["UseMargin"] = _pyctp.CThostFtdcSyncingInvestorPositionField_UseMargin_get
    if _newclass:
        UseMargin = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_UseMargin_get, _pyctp.CThostFtdcSyncingInvestorPositionField_UseMargin_set)
    __swig_setmethods__["FrozenMargin"] = _pyctp.CThostFtdcSyncingInvestorPositionField_FrozenMargin_set
    __swig_getmethods__["FrozenMargin"] = _pyctp.CThostFtdcSyncingInvestorPositionField_FrozenMargin_get
    if _newclass:
        FrozenMargin = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_FrozenMargin_get, _pyctp.CThostFtdcSyncingInvestorPositionField_FrozenMargin_set)
    __swig_setmethods__["FrozenCash"] = _pyctp.CThostFtdcSyncingInvestorPositionField_FrozenCash_set
    __swig_getmethods__["FrozenCash"] = _pyctp.CThostFtdcSyncingInvestorPositionField_FrozenCash_get
    if _newclass:
        FrozenCash = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_FrozenCash_get, _pyctp.CThostFtdcSyncingInvestorPositionField_FrozenCash_set)
    __swig_setmethods__["FrozenCommission"] = _pyctp.CThostFtdcSyncingInvestorPositionField_FrozenCommission_set
    __swig_getmethods__["FrozenCommission"] = _pyctp.CThostFtdcSyncingInvestorPositionField_FrozenCommission_get
    if _newclass:
        FrozenCommission = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_FrozenCommission_get, _pyctp.CThostFtdcSyncingInvestorPositionField_FrozenCommission_set)
    __swig_setmethods__["CashIn"] = _pyctp.CThostFtdcSyncingInvestorPositionField_CashIn_set
    __swig_getmethods__["CashIn"] = _pyctp.CThostFtdcSyncingInvestorPositionField_CashIn_get
    if _newclass:
        CashIn = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_CashIn_get, _pyctp.CThostFtdcSyncingInvestorPositionField_CashIn_set)
    __swig_setmethods__["Commission"] = _pyctp.CThostFtdcSyncingInvestorPositionField_Commission_set
    __swig_getmethods__["Commission"] = _pyctp.CThostFtdcSyncingInvestorPositionField_Commission_get
    if _newclass:
        Commission = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_Commission_get, _pyctp.CThostFtdcSyncingInvestorPositionField_Commission_set)
    __swig_setmethods__["CloseProfit"] = _pyctp.CThostFtdcSyncingInvestorPositionField_CloseProfit_set
    __swig_getmethods__["CloseProfit"] = _pyctp.CThostFtdcSyncingInvestorPositionField_CloseProfit_get
    if _newclass:
        CloseProfit = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_CloseProfit_get, _pyctp.CThostFtdcSyncingInvestorPositionField_CloseProfit_set)
    __swig_setmethods__["PositionProfit"] = _pyctp.CThostFtdcSyncingInvestorPositionField_PositionProfit_set
    __swig_getmethods__["PositionProfit"] = _pyctp.CThostFtdcSyncingInvestorPositionField_PositionProfit_get
    if _newclass:
        PositionProfit = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_PositionProfit_get, _pyctp.CThostFtdcSyncingInvestorPositionField_PositionProfit_set)
    __swig_setmethods__["PreSettlementPrice"] = _pyctp.CThostFtdcSyncingInvestorPositionField_PreSettlementPrice_set
    __swig_getmethods__["PreSettlementPrice"] = _pyctp.CThostFtdcSyncingInvestorPositionField_PreSettlementPrice_get
    if _newclass:
        PreSettlementPrice = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_PreSettlementPrice_get, _pyctp.CThostFtdcSyncingInvestorPositionField_PreSettlementPrice_set)
    __swig_setmethods__["SettlementPrice"] = _pyctp.CThostFtdcSyncingInvestorPositionField_SettlementPrice_set
    __swig_getmethods__["SettlementPrice"] = _pyctp.CThostFtdcSyncingInvestorPositionField_SettlementPrice_get
    if _newclass:
        SettlementPrice = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_SettlementPrice_get, _pyctp.CThostFtdcSyncingInvestorPositionField_SettlementPrice_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcSyncingInvestorPositionField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcSyncingInvestorPositionField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_TradingDay_get, _pyctp.CThostFtdcSyncingInvestorPositionField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CThostFtdcSyncingInvestorPositionField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CThostFtdcSyncingInvestorPositionField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_SettlementID_get, _pyctp.CThostFtdcSyncingInvestorPositionField_SettlementID_set)
    __swig_setmethods__["OpenCost"] = _pyctp.CThostFtdcSyncingInvestorPositionField_OpenCost_set
    __swig_getmethods__["OpenCost"] = _pyctp.CThostFtdcSyncingInvestorPositionField_OpenCost_get
    if _newclass:
        OpenCost = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_OpenCost_get, _pyctp.CThostFtdcSyncingInvestorPositionField_OpenCost_set)
    __swig_setmethods__["ExchangeMargin"] = _pyctp.CThostFtdcSyncingInvestorPositionField_ExchangeMargin_set
    __swig_getmethods__["ExchangeMargin"] = _pyctp.CThostFtdcSyncingInvestorPositionField_ExchangeMargin_get
    if _newclass:
        ExchangeMargin = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_ExchangeMargin_get, _pyctp.CThostFtdcSyncingInvestorPositionField_ExchangeMargin_set)
    __swig_setmethods__["CombPosition"] = _pyctp.CThostFtdcSyncingInvestorPositionField_CombPosition_set
    __swig_getmethods__["CombPosition"] = _pyctp.CThostFtdcSyncingInvestorPositionField_CombPosition_get
    if _newclass:
        CombPosition = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_CombPosition_get, _pyctp.CThostFtdcSyncingInvestorPositionField_CombPosition_set)
    __swig_setmethods__["CombLongFrozen"] = _pyctp.CThostFtdcSyncingInvestorPositionField_CombLongFrozen_set
    __swig_getmethods__["CombLongFrozen"] = _pyctp.CThostFtdcSyncingInvestorPositionField_CombLongFrozen_get
    if _newclass:
        CombLongFrozen = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_CombLongFrozen_get, _pyctp.CThostFtdcSyncingInvestorPositionField_CombLongFrozen_set)
    __swig_setmethods__["CombShortFrozen"] = _pyctp.CThostFtdcSyncingInvestorPositionField_CombShortFrozen_set
    __swig_getmethods__["CombShortFrozen"] = _pyctp.CThostFtdcSyncingInvestorPositionField_CombShortFrozen_get
    if _newclass:
        CombShortFrozen = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_CombShortFrozen_get, _pyctp.CThostFtdcSyncingInvestorPositionField_CombShortFrozen_set)
    __swig_setmethods__["CloseProfitByDate"] = _pyctp.CThostFtdcSyncingInvestorPositionField_CloseProfitByDate_set
    __swig_getmethods__["CloseProfitByDate"] = _pyctp.CThostFtdcSyncingInvestorPositionField_CloseProfitByDate_get
    if _newclass:
        CloseProfitByDate = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_CloseProfitByDate_get, _pyctp.CThostFtdcSyncingInvestorPositionField_CloseProfitByDate_set)
    __swig_setmethods__["CloseProfitByTrade"] = _pyctp.CThostFtdcSyncingInvestorPositionField_CloseProfitByTrade_set
    __swig_getmethods__["CloseProfitByTrade"] = _pyctp.CThostFtdcSyncingInvestorPositionField_CloseProfitByTrade_get
    if _newclass:
        CloseProfitByTrade = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_CloseProfitByTrade_get, _pyctp.CThostFtdcSyncingInvestorPositionField_CloseProfitByTrade_set)
    __swig_setmethods__["TodayPosition"] = _pyctp.CThostFtdcSyncingInvestorPositionField_TodayPosition_set
    __swig_getmethods__["TodayPosition"] = _pyctp.CThostFtdcSyncingInvestorPositionField_TodayPosition_get
    if _newclass:
        TodayPosition = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_TodayPosition_get, _pyctp.CThostFtdcSyncingInvestorPositionField_TodayPosition_set)
    __swig_setmethods__["MarginRateByMoney"] = _pyctp.CThostFtdcSyncingInvestorPositionField_MarginRateByMoney_set
    __swig_getmethods__["MarginRateByMoney"] = _pyctp.CThostFtdcSyncingInvestorPositionField_MarginRateByMoney_get
    if _newclass:
        MarginRateByMoney = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_MarginRateByMoney_get, _pyctp.CThostFtdcSyncingInvestorPositionField_MarginRateByMoney_set)
    __swig_setmethods__["MarginRateByVolume"] = _pyctp.CThostFtdcSyncingInvestorPositionField_MarginRateByVolume_set
    __swig_getmethods__["MarginRateByVolume"] = _pyctp.CThostFtdcSyncingInvestorPositionField_MarginRateByVolume_get
    if _newclass:
        MarginRateByVolume = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_MarginRateByVolume_get, _pyctp.CThostFtdcSyncingInvestorPositionField_MarginRateByVolume_set)
    __swig_setmethods__["StrikeFrozen"] = _pyctp.CThostFtdcSyncingInvestorPositionField_StrikeFrozen_set
    __swig_getmethods__["StrikeFrozen"] = _pyctp.CThostFtdcSyncingInvestorPositionField_StrikeFrozen_get
    if _newclass:
        StrikeFrozen = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_StrikeFrozen_get, _pyctp.CThostFtdcSyncingInvestorPositionField_StrikeFrozen_set)
    __swig_setmethods__["StrikeFrozenAmount"] = _pyctp.CThostFtdcSyncingInvestorPositionField_StrikeFrozenAmount_set
    __swig_getmethods__["StrikeFrozenAmount"] = _pyctp.CThostFtdcSyncingInvestorPositionField_StrikeFrozenAmount_get
    if _newclass:
        StrikeFrozenAmount = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_StrikeFrozenAmount_get, _pyctp.CThostFtdcSyncingInvestorPositionField_StrikeFrozenAmount_set)
    __swig_setmethods__["AbandonFrozen"] = _pyctp.CThostFtdcSyncingInvestorPositionField_AbandonFrozen_set
    __swig_getmethods__["AbandonFrozen"] = _pyctp.CThostFtdcSyncingInvestorPositionField_AbandonFrozen_get
    if _newclass:
        AbandonFrozen = _swig_property(_pyctp.CThostFtdcSyncingInvestorPositionField_AbandonFrozen_get, _pyctp.CThostFtdcSyncingInvestorPositionField_AbandonFrozen_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcSyncingInvestorPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcSyncingInvestorPositionField
    __del__ = lambda self: None
CThostFtdcSyncingInvestorPositionField_swigregister = _pyctp.CThostFtdcSyncingInvestorPositionField_swigregister
CThostFtdcSyncingInvestorPositionField_swigregister(CThostFtdcSyncingInvestorPositionField)

class CThostFtdcSyncingInstrumentMarginRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcSyncingInstrumentMarginRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcSyncingInstrumentMarginRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcSyncingInstrumentMarginRateField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcSyncingInstrumentMarginRateField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcSyncingInstrumentMarginRateField_InstrumentID_get, _pyctp.CThostFtdcSyncingInstrumentMarginRateField_InstrumentID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CThostFtdcSyncingInstrumentMarginRateField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CThostFtdcSyncingInstrumentMarginRateField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CThostFtdcSyncingInstrumentMarginRateField_InvestorRange_get, _pyctp.CThostFtdcSyncingInstrumentMarginRateField_InvestorRange_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcSyncingInstrumentMarginRateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcSyncingInstrumentMarginRateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcSyncingInstrumentMarginRateField_BrokerID_get, _pyctp.CThostFtdcSyncingInstrumentMarginRateField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcSyncingInstrumentMarginRateField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcSyncingInstrumentMarginRateField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcSyncingInstrumentMarginRateField_InvestorID_get, _pyctp.CThostFtdcSyncingInstrumentMarginRateField_InvestorID_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcSyncingInstrumentMarginRateField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcSyncingInstrumentMarginRateField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcSyncingInstrumentMarginRateField_HedgeFlag_get, _pyctp.CThostFtdcSyncingInstrumentMarginRateField_HedgeFlag_set)
    __swig_setmethods__["LongMarginRatioByMoney"] = _pyctp.CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByMoney_set
    __swig_getmethods__["LongMarginRatioByMoney"] = _pyctp.CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByMoney_get
    if _newclass:
        LongMarginRatioByMoney = _swig_property(_pyctp.CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByMoney_get, _pyctp.CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByMoney_set)
    __swig_setmethods__["LongMarginRatioByVolume"] = _pyctp.CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByVolume_set
    __swig_getmethods__["LongMarginRatioByVolume"] = _pyctp.CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByVolume_get
    if _newclass:
        LongMarginRatioByVolume = _swig_property(_pyctp.CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByVolume_get, _pyctp.CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByVolume_set)
    __swig_setmethods__["ShortMarginRatioByMoney"] = _pyctp.CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByMoney_set
    __swig_getmethods__["ShortMarginRatioByMoney"] = _pyctp.CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByMoney_get
    if _newclass:
        ShortMarginRatioByMoney = _swig_property(_pyctp.CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByMoney_get, _pyctp.CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByMoney_set)
    __swig_setmethods__["ShortMarginRatioByVolume"] = _pyctp.CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByVolume_set
    __swig_getmethods__["ShortMarginRatioByVolume"] = _pyctp.CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByVolume_get
    if _newclass:
        ShortMarginRatioByVolume = _swig_property(_pyctp.CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByVolume_get, _pyctp.CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByVolume_set)
    __swig_setmethods__["IsRelative"] = _pyctp.CThostFtdcSyncingInstrumentMarginRateField_IsRelative_set
    __swig_getmethods__["IsRelative"] = _pyctp.CThostFtdcSyncingInstrumentMarginRateField_IsRelative_get
    if _newclass:
        IsRelative = _swig_property(_pyctp.CThostFtdcSyncingInstrumentMarginRateField_IsRelative_get, _pyctp.CThostFtdcSyncingInstrumentMarginRateField_IsRelative_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcSyncingInstrumentMarginRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcSyncingInstrumentMarginRateField
    __del__ = lambda self: None
CThostFtdcSyncingInstrumentMarginRateField_swigregister = _pyctp.CThostFtdcSyncingInstrumentMarginRateField_swigregister
CThostFtdcSyncingInstrumentMarginRateField_swigregister(CThostFtdcSyncingInstrumentMarginRateField)

class CThostFtdcSyncingInstrumentCommissionRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcSyncingInstrumentCommissionRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcSyncingInstrumentCommissionRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcSyncingInstrumentCommissionRateField_InstrumentID_get, _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_InstrumentID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CThostFtdcSyncingInstrumentCommissionRateField_InvestorRange_get, _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_InvestorRange_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcSyncingInstrumentCommissionRateField_BrokerID_get, _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcSyncingInstrumentCommissionRateField_InvestorID_get, _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_InvestorID_set)
    __swig_setmethods__["OpenRatioByMoney"] = _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByMoney_set
    __swig_getmethods__["OpenRatioByMoney"] = _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByMoney_get
    if _newclass:
        OpenRatioByMoney = _swig_property(_pyctp.CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByMoney_get, _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByMoney_set)
    __swig_setmethods__["OpenRatioByVolume"] = _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByVolume_set
    __swig_getmethods__["OpenRatioByVolume"] = _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByVolume_get
    if _newclass:
        OpenRatioByVolume = _swig_property(_pyctp.CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByVolume_get, _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByVolume_set)
    __swig_setmethods__["CloseRatioByMoney"] = _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByMoney_set
    __swig_getmethods__["CloseRatioByMoney"] = _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByMoney_get
    if _newclass:
        CloseRatioByMoney = _swig_property(_pyctp.CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByMoney_get, _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByMoney_set)
    __swig_setmethods__["CloseRatioByVolume"] = _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByVolume_set
    __swig_getmethods__["CloseRatioByVolume"] = _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByVolume_get
    if _newclass:
        CloseRatioByVolume = _swig_property(_pyctp.CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByVolume_get, _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByVolume_set)
    __swig_setmethods__["CloseTodayRatioByMoney"] = _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByMoney_set
    __swig_getmethods__["CloseTodayRatioByMoney"] = _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByMoney_get
    if _newclass:
        CloseTodayRatioByMoney = _swig_property(_pyctp.CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByMoney_get, _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByMoney_set)
    __swig_setmethods__["CloseTodayRatioByVolume"] = _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByVolume_set
    __swig_getmethods__["CloseTodayRatioByVolume"] = _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByVolume_get
    if _newclass:
        CloseTodayRatioByVolume = _swig_property(_pyctp.CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByVolume_get, _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByVolume_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcSyncingInstrumentCommissionRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcSyncingInstrumentCommissionRateField
    __del__ = lambda self: None
CThostFtdcSyncingInstrumentCommissionRateField_swigregister = _pyctp.CThostFtdcSyncingInstrumentCommissionRateField_swigregister
CThostFtdcSyncingInstrumentCommissionRateField_swigregister(CThostFtdcSyncingInstrumentCommissionRateField)

class CThostFtdcSyncingInstrumentTradingRightField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcSyncingInstrumentTradingRightField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcSyncingInstrumentTradingRightField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcSyncingInstrumentTradingRightField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcSyncingInstrumentTradingRightField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcSyncingInstrumentTradingRightField_InstrumentID_get, _pyctp.CThostFtdcSyncingInstrumentTradingRightField_InstrumentID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CThostFtdcSyncingInstrumentTradingRightField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CThostFtdcSyncingInstrumentTradingRightField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CThostFtdcSyncingInstrumentTradingRightField_InvestorRange_get, _pyctp.CThostFtdcSyncingInstrumentTradingRightField_InvestorRange_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcSyncingInstrumentTradingRightField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcSyncingInstrumentTradingRightField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcSyncingInstrumentTradingRightField_BrokerID_get, _pyctp.CThostFtdcSyncingInstrumentTradingRightField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcSyncingInstrumentTradingRightField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcSyncingInstrumentTradingRightField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcSyncingInstrumentTradingRightField_InvestorID_get, _pyctp.CThostFtdcSyncingInstrumentTradingRightField_InvestorID_set)
    __swig_setmethods__["TradingRight"] = _pyctp.CThostFtdcSyncingInstrumentTradingRightField_TradingRight_set
    __swig_getmethods__["TradingRight"] = _pyctp.CThostFtdcSyncingInstrumentTradingRightField_TradingRight_get
    if _newclass:
        TradingRight = _swig_property(_pyctp.CThostFtdcSyncingInstrumentTradingRightField_TradingRight_get, _pyctp.CThostFtdcSyncingInstrumentTradingRightField_TradingRight_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcSyncingInstrumentTradingRightField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcSyncingInstrumentTradingRightField
    __del__ = lambda self: None
CThostFtdcSyncingInstrumentTradingRightField_swigregister = _pyctp.CThostFtdcSyncingInstrumentTradingRightField_swigregister
CThostFtdcSyncingInstrumentTradingRightField_swigregister(CThostFtdcSyncingInstrumentTradingRightField)

class CThostFtdcQryOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryOrderField_BrokerID_get, _pyctp.CThostFtdcQryOrderField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryOrderField_InvestorID_get, _pyctp.CThostFtdcQryOrderField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryOrderField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryOrderField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryOrderField_InstrumentID_get, _pyctp.CThostFtdcQryOrderField_InstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryOrderField_ExchangeID_get, _pyctp.CThostFtdcQryOrderField_ExchangeID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CThostFtdcQryOrderField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CThostFtdcQryOrderField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CThostFtdcQryOrderField_OrderSysID_get, _pyctp.CThostFtdcQryOrderField_OrderSysID_set)
    __swig_setmethods__["InsertTimeStart"] = _pyctp.CThostFtdcQryOrderField_InsertTimeStart_set
    __swig_getmethods__["InsertTimeStart"] = _pyctp.CThostFtdcQryOrderField_InsertTimeStart_get
    if _newclass:
        InsertTimeStart = _swig_property(_pyctp.CThostFtdcQryOrderField_InsertTimeStart_get, _pyctp.CThostFtdcQryOrderField_InsertTimeStart_set)
    __swig_setmethods__["InsertTimeEnd"] = _pyctp.CThostFtdcQryOrderField_InsertTimeEnd_set
    __swig_getmethods__["InsertTimeEnd"] = _pyctp.CThostFtdcQryOrderField_InsertTimeEnd_get
    if _newclass:
        InsertTimeEnd = _swig_property(_pyctp.CThostFtdcQryOrderField_InsertTimeEnd_get, _pyctp.CThostFtdcQryOrderField_InsertTimeEnd_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryOrderField
    __del__ = lambda self: None
CThostFtdcQryOrderField_swigregister = _pyctp.CThostFtdcQryOrderField_swigregister
CThostFtdcQryOrderField_swigregister(CThostFtdcQryOrderField)

class CThostFtdcQryTradeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryTradeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryTradeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryTradeField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryTradeField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryTradeField_BrokerID_get, _pyctp.CThostFtdcQryTradeField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryTradeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryTradeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryTradeField_InvestorID_get, _pyctp.CThostFtdcQryTradeField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryTradeField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryTradeField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryTradeField_InstrumentID_get, _pyctp.CThostFtdcQryTradeField_InstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryTradeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryTradeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryTradeField_ExchangeID_get, _pyctp.CThostFtdcQryTradeField_ExchangeID_set)
    __swig_setmethods__["TradeID"] = _pyctp.CThostFtdcQryTradeField_TradeID_set
    __swig_getmethods__["TradeID"] = _pyctp.CThostFtdcQryTradeField_TradeID_get
    if _newclass:
        TradeID = _swig_property(_pyctp.CThostFtdcQryTradeField_TradeID_get, _pyctp.CThostFtdcQryTradeField_TradeID_set)
    __swig_setmethods__["TradeTimeStart"] = _pyctp.CThostFtdcQryTradeField_TradeTimeStart_set
    __swig_getmethods__["TradeTimeStart"] = _pyctp.CThostFtdcQryTradeField_TradeTimeStart_get
    if _newclass:
        TradeTimeStart = _swig_property(_pyctp.CThostFtdcQryTradeField_TradeTimeStart_get, _pyctp.CThostFtdcQryTradeField_TradeTimeStart_set)
    __swig_setmethods__["TradeTimeEnd"] = _pyctp.CThostFtdcQryTradeField_TradeTimeEnd_set
    __swig_getmethods__["TradeTimeEnd"] = _pyctp.CThostFtdcQryTradeField_TradeTimeEnd_get
    if _newclass:
        TradeTimeEnd = _swig_property(_pyctp.CThostFtdcQryTradeField_TradeTimeEnd_get, _pyctp.CThostFtdcQryTradeField_TradeTimeEnd_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryTradeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryTradeField
    __del__ = lambda self: None
CThostFtdcQryTradeField_swigregister = _pyctp.CThostFtdcQryTradeField_swigregister
CThostFtdcQryTradeField_swigregister(CThostFtdcQryTradeField)

class CThostFtdcQryInvestorPositionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryInvestorPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryInvestorPositionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryInvestorPositionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryInvestorPositionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryInvestorPositionField_BrokerID_get, _pyctp.CThostFtdcQryInvestorPositionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryInvestorPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryInvestorPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryInvestorPositionField_InvestorID_get, _pyctp.CThostFtdcQryInvestorPositionField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryInvestorPositionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryInvestorPositionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryInvestorPositionField_InstrumentID_get, _pyctp.CThostFtdcQryInvestorPositionField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryInvestorPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryInvestorPositionField
    __del__ = lambda self: None
CThostFtdcQryInvestorPositionField_swigregister = _pyctp.CThostFtdcQryInvestorPositionField_swigregister
CThostFtdcQryInvestorPositionField_swigregister(CThostFtdcQryInvestorPositionField)

class CThostFtdcQryTradingAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryTradingAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryTradingAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryTradingAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryTradingAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryTradingAccountField_BrokerID_get, _pyctp.CThostFtdcQryTradingAccountField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryTradingAccountField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryTradingAccountField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryTradingAccountField_InvestorID_get, _pyctp.CThostFtdcQryTradingAccountField_InvestorID_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcQryTradingAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcQryTradingAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcQryTradingAccountField_CurrencyID_get, _pyctp.CThostFtdcQryTradingAccountField_CurrencyID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryTradingAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryTradingAccountField
    __del__ = lambda self: None
CThostFtdcQryTradingAccountField_swigregister = _pyctp.CThostFtdcQryTradingAccountField_swigregister
CThostFtdcQryTradingAccountField_swigregister(CThostFtdcQryTradingAccountField)

class CThostFtdcQryInvestorField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryInvestorField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryInvestorField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryInvestorField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryInvestorField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryInvestorField_BrokerID_get, _pyctp.CThostFtdcQryInvestorField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryInvestorField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryInvestorField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryInvestorField_InvestorID_get, _pyctp.CThostFtdcQryInvestorField_InvestorID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryInvestorField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryInvestorField
    __del__ = lambda self: None
CThostFtdcQryInvestorField_swigregister = _pyctp.CThostFtdcQryInvestorField_swigregister
CThostFtdcQryInvestorField_swigregister(CThostFtdcQryInvestorField)

class CThostFtdcQryTradingCodeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryTradingCodeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryTradingCodeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryTradingCodeField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryTradingCodeField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryTradingCodeField_BrokerID_get, _pyctp.CThostFtdcQryTradingCodeField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryTradingCodeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryTradingCodeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryTradingCodeField_InvestorID_get, _pyctp.CThostFtdcQryTradingCodeField_InvestorID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryTradingCodeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryTradingCodeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryTradingCodeField_ExchangeID_get, _pyctp.CThostFtdcQryTradingCodeField_ExchangeID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcQryTradingCodeField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcQryTradingCodeField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcQryTradingCodeField_ClientID_get, _pyctp.CThostFtdcQryTradingCodeField_ClientID_set)
    __swig_setmethods__["ClientIDType"] = _pyctp.CThostFtdcQryTradingCodeField_ClientIDType_set
    __swig_getmethods__["ClientIDType"] = _pyctp.CThostFtdcQryTradingCodeField_ClientIDType_get
    if _newclass:
        ClientIDType = _swig_property(_pyctp.CThostFtdcQryTradingCodeField_ClientIDType_get, _pyctp.CThostFtdcQryTradingCodeField_ClientIDType_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryTradingCodeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryTradingCodeField
    __del__ = lambda self: None
CThostFtdcQryTradingCodeField_swigregister = _pyctp.CThostFtdcQryTradingCodeField_swigregister
CThostFtdcQryTradingCodeField_swigregister(CThostFtdcQryTradingCodeField)

class CThostFtdcQryInvestorGroupField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryInvestorGroupField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryInvestorGroupField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryInvestorGroupField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryInvestorGroupField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryInvestorGroupField_BrokerID_get, _pyctp.CThostFtdcQryInvestorGroupField_BrokerID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryInvestorGroupField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryInvestorGroupField
    __del__ = lambda self: None
CThostFtdcQryInvestorGroupField_swigregister = _pyctp.CThostFtdcQryInvestorGroupField_swigregister
CThostFtdcQryInvestorGroupField_swigregister(CThostFtdcQryInvestorGroupField)

class CThostFtdcQryInstrumentMarginRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryInstrumentMarginRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryInstrumentMarginRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryInstrumentMarginRateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryInstrumentMarginRateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryInstrumentMarginRateField_BrokerID_get, _pyctp.CThostFtdcQryInstrumentMarginRateField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryInstrumentMarginRateField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryInstrumentMarginRateField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryInstrumentMarginRateField_InvestorID_get, _pyctp.CThostFtdcQryInstrumentMarginRateField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryInstrumentMarginRateField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryInstrumentMarginRateField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryInstrumentMarginRateField_InstrumentID_get, _pyctp.CThostFtdcQryInstrumentMarginRateField_InstrumentID_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcQryInstrumentMarginRateField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcQryInstrumentMarginRateField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcQryInstrumentMarginRateField_HedgeFlag_get, _pyctp.CThostFtdcQryInstrumentMarginRateField_HedgeFlag_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryInstrumentMarginRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryInstrumentMarginRateField
    __del__ = lambda self: None
CThostFtdcQryInstrumentMarginRateField_swigregister = _pyctp.CThostFtdcQryInstrumentMarginRateField_swigregister
CThostFtdcQryInstrumentMarginRateField_swigregister(CThostFtdcQryInstrumentMarginRateField)

class CThostFtdcQryInstrumentCommissionRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryInstrumentCommissionRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryInstrumentCommissionRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryInstrumentCommissionRateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryInstrumentCommissionRateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryInstrumentCommissionRateField_BrokerID_get, _pyctp.CThostFtdcQryInstrumentCommissionRateField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryInstrumentCommissionRateField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryInstrumentCommissionRateField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryInstrumentCommissionRateField_InvestorID_get, _pyctp.CThostFtdcQryInstrumentCommissionRateField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryInstrumentCommissionRateField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryInstrumentCommissionRateField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryInstrumentCommissionRateField_InstrumentID_get, _pyctp.CThostFtdcQryInstrumentCommissionRateField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryInstrumentCommissionRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryInstrumentCommissionRateField
    __del__ = lambda self: None
CThostFtdcQryInstrumentCommissionRateField_swigregister = _pyctp.CThostFtdcQryInstrumentCommissionRateField_swigregister
CThostFtdcQryInstrumentCommissionRateField_swigregister(CThostFtdcQryInstrumentCommissionRateField)

class CThostFtdcQryInstrumentTradingRightField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryInstrumentTradingRightField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryInstrumentTradingRightField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryInstrumentTradingRightField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryInstrumentTradingRightField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryInstrumentTradingRightField_BrokerID_get, _pyctp.CThostFtdcQryInstrumentTradingRightField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryInstrumentTradingRightField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryInstrumentTradingRightField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryInstrumentTradingRightField_InvestorID_get, _pyctp.CThostFtdcQryInstrumentTradingRightField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryInstrumentTradingRightField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryInstrumentTradingRightField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryInstrumentTradingRightField_InstrumentID_get, _pyctp.CThostFtdcQryInstrumentTradingRightField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryInstrumentTradingRightField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryInstrumentTradingRightField
    __del__ = lambda self: None
CThostFtdcQryInstrumentTradingRightField_swigregister = _pyctp.CThostFtdcQryInstrumentTradingRightField_swigregister
CThostFtdcQryInstrumentTradingRightField_swigregister(CThostFtdcQryInstrumentTradingRightField)

class CThostFtdcQryBrokerField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryBrokerField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryBrokerField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryBrokerField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryBrokerField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryBrokerField_BrokerID_get, _pyctp.CThostFtdcQryBrokerField_BrokerID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryBrokerField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryBrokerField
    __del__ = lambda self: None
CThostFtdcQryBrokerField_swigregister = _pyctp.CThostFtdcQryBrokerField_swigregister
CThostFtdcQryBrokerField_swigregister(CThostFtdcQryBrokerField)

class CThostFtdcQryTraderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryTraderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryTraderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryTraderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryTraderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryTraderField_ExchangeID_get, _pyctp.CThostFtdcQryTraderField_ExchangeID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcQryTraderField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcQryTraderField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcQryTraderField_ParticipantID_get, _pyctp.CThostFtdcQryTraderField_ParticipantID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcQryTraderField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcQryTraderField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcQryTraderField_TraderID_get, _pyctp.CThostFtdcQryTraderField_TraderID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryTraderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryTraderField
    __del__ = lambda self: None
CThostFtdcQryTraderField_swigregister = _pyctp.CThostFtdcQryTraderField_swigregister
CThostFtdcQryTraderField_swigregister(CThostFtdcQryTraderField)

class CThostFtdcQrySuperUserFunctionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQrySuperUserFunctionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQrySuperUserFunctionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcQrySuperUserFunctionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcQrySuperUserFunctionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcQrySuperUserFunctionField_UserID_get, _pyctp.CThostFtdcQrySuperUserFunctionField_UserID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQrySuperUserFunctionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQrySuperUserFunctionField
    __del__ = lambda self: None
CThostFtdcQrySuperUserFunctionField_swigregister = _pyctp.CThostFtdcQrySuperUserFunctionField_swigregister
CThostFtdcQrySuperUserFunctionField_swigregister(CThostFtdcQrySuperUserFunctionField)

class CThostFtdcQryUserSessionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryUserSessionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryUserSessionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["FrontID"] = _pyctp.CThostFtdcQryUserSessionField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CThostFtdcQryUserSessionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CThostFtdcQryUserSessionField_FrontID_get, _pyctp.CThostFtdcQryUserSessionField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcQryUserSessionField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcQryUserSessionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcQryUserSessionField_SessionID_get, _pyctp.CThostFtdcQryUserSessionField_SessionID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryUserSessionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryUserSessionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryUserSessionField_BrokerID_get, _pyctp.CThostFtdcQryUserSessionField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcQryUserSessionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcQryUserSessionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcQryUserSessionField_UserID_get, _pyctp.CThostFtdcQryUserSessionField_UserID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryUserSessionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryUserSessionField
    __del__ = lambda self: None
CThostFtdcQryUserSessionField_swigregister = _pyctp.CThostFtdcQryUserSessionField_swigregister
CThostFtdcQryUserSessionField_swigregister(CThostFtdcQryUserSessionField)

class CThostFtdcQryPartBrokerField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryPartBrokerField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryPartBrokerField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryPartBrokerField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryPartBrokerField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryPartBrokerField_ExchangeID_get, _pyctp.CThostFtdcQryPartBrokerField_ExchangeID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryPartBrokerField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryPartBrokerField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryPartBrokerField_BrokerID_get, _pyctp.CThostFtdcQryPartBrokerField_BrokerID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcQryPartBrokerField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcQryPartBrokerField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcQryPartBrokerField_ParticipantID_get, _pyctp.CThostFtdcQryPartBrokerField_ParticipantID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryPartBrokerField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryPartBrokerField
    __del__ = lambda self: None
CThostFtdcQryPartBrokerField_swigregister = _pyctp.CThostFtdcQryPartBrokerField_swigregister
CThostFtdcQryPartBrokerField_swigregister(CThostFtdcQryPartBrokerField)

class CThostFtdcQryFrontStatusField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryFrontStatusField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryFrontStatusField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["FrontID"] = _pyctp.CThostFtdcQryFrontStatusField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CThostFtdcQryFrontStatusField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CThostFtdcQryFrontStatusField_FrontID_get, _pyctp.CThostFtdcQryFrontStatusField_FrontID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryFrontStatusField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryFrontStatusField
    __del__ = lambda self: None
CThostFtdcQryFrontStatusField_swigregister = _pyctp.CThostFtdcQryFrontStatusField_swigregister
CThostFtdcQryFrontStatusField_swigregister(CThostFtdcQryFrontStatusField)

class CThostFtdcQryExchangeOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryExchangeOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryExchangeOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcQryExchangeOrderField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcQryExchangeOrderField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcQryExchangeOrderField_ParticipantID_get, _pyctp.CThostFtdcQryExchangeOrderField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcQryExchangeOrderField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcQryExchangeOrderField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcQryExchangeOrderField_ClientID_get, _pyctp.CThostFtdcQryExchangeOrderField_ClientID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CThostFtdcQryExchangeOrderField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CThostFtdcQryExchangeOrderField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CThostFtdcQryExchangeOrderField_ExchangeInstID_get, _pyctp.CThostFtdcQryExchangeOrderField_ExchangeInstID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryExchangeOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryExchangeOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryExchangeOrderField_ExchangeID_get, _pyctp.CThostFtdcQryExchangeOrderField_ExchangeID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcQryExchangeOrderField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcQryExchangeOrderField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcQryExchangeOrderField_TraderID_get, _pyctp.CThostFtdcQryExchangeOrderField_TraderID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryExchangeOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryExchangeOrderField
    __del__ = lambda self: None
CThostFtdcQryExchangeOrderField_swigregister = _pyctp.CThostFtdcQryExchangeOrderField_swigregister
CThostFtdcQryExchangeOrderField_swigregister(CThostFtdcQryExchangeOrderField)

class CThostFtdcQryOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryOrderActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryOrderActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryOrderActionField_BrokerID_get, _pyctp.CThostFtdcQryOrderActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryOrderActionField_InvestorID_get, _pyctp.CThostFtdcQryOrderActionField_InvestorID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryOrderActionField_ExchangeID_get, _pyctp.CThostFtdcQryOrderActionField_ExchangeID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryOrderActionField
    __del__ = lambda self: None
CThostFtdcQryOrderActionField_swigregister = _pyctp.CThostFtdcQryOrderActionField_swigregister
CThostFtdcQryOrderActionField_swigregister(CThostFtdcQryOrderActionField)

class CThostFtdcQryExchangeOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryExchangeOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryExchangeOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcQryExchangeOrderActionField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcQryExchangeOrderActionField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcQryExchangeOrderActionField_ParticipantID_get, _pyctp.CThostFtdcQryExchangeOrderActionField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcQryExchangeOrderActionField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcQryExchangeOrderActionField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcQryExchangeOrderActionField_ClientID_get, _pyctp.CThostFtdcQryExchangeOrderActionField_ClientID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryExchangeOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryExchangeOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryExchangeOrderActionField_ExchangeID_get, _pyctp.CThostFtdcQryExchangeOrderActionField_ExchangeID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcQryExchangeOrderActionField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcQryExchangeOrderActionField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcQryExchangeOrderActionField_TraderID_get, _pyctp.CThostFtdcQryExchangeOrderActionField_TraderID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryExchangeOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryExchangeOrderActionField
    __del__ = lambda self: None
CThostFtdcQryExchangeOrderActionField_swigregister = _pyctp.CThostFtdcQryExchangeOrderActionField_swigregister
CThostFtdcQryExchangeOrderActionField_swigregister(CThostFtdcQryExchangeOrderActionField)

class CThostFtdcQrySuperUserField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQrySuperUserField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQrySuperUserField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcQrySuperUserField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcQrySuperUserField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcQrySuperUserField_UserID_get, _pyctp.CThostFtdcQrySuperUserField_UserID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQrySuperUserField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQrySuperUserField
    __del__ = lambda self: None
CThostFtdcQrySuperUserField_swigregister = _pyctp.CThostFtdcQrySuperUserField_swigregister
CThostFtdcQrySuperUserField_swigregister(CThostFtdcQrySuperUserField)

class CThostFtdcQryExchangeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryExchangeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryExchangeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryExchangeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryExchangeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryExchangeField_ExchangeID_get, _pyctp.CThostFtdcQryExchangeField_ExchangeID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryExchangeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryExchangeField
    __del__ = lambda self: None
CThostFtdcQryExchangeField_swigregister = _pyctp.CThostFtdcQryExchangeField_swigregister
CThostFtdcQryExchangeField_swigregister(CThostFtdcQryExchangeField)

class CThostFtdcQryProductField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryProductField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryProductField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ProductID"] = _pyctp.CThostFtdcQryProductField_ProductID_set
    __swig_getmethods__["ProductID"] = _pyctp.CThostFtdcQryProductField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_pyctp.CThostFtdcQryProductField_ProductID_get, _pyctp.CThostFtdcQryProductField_ProductID_set)
    __swig_setmethods__["ProductClass"] = _pyctp.CThostFtdcQryProductField_ProductClass_set
    __swig_getmethods__["ProductClass"] = _pyctp.CThostFtdcQryProductField_ProductClass_get
    if _newclass:
        ProductClass = _swig_property(_pyctp.CThostFtdcQryProductField_ProductClass_get, _pyctp.CThostFtdcQryProductField_ProductClass_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryProductField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryProductField
    __del__ = lambda self: None
CThostFtdcQryProductField_swigregister = _pyctp.CThostFtdcQryProductField_swigregister
CThostFtdcQryProductField_swigregister(CThostFtdcQryProductField)

class CThostFtdcQryInstrumentField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryInstrumentField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryInstrumentField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryInstrumentField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryInstrumentField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryInstrumentField_InstrumentID_get, _pyctp.CThostFtdcQryInstrumentField_InstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryInstrumentField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryInstrumentField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryInstrumentField_ExchangeID_get, _pyctp.CThostFtdcQryInstrumentField_ExchangeID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CThostFtdcQryInstrumentField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CThostFtdcQryInstrumentField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CThostFtdcQryInstrumentField_ExchangeInstID_get, _pyctp.CThostFtdcQryInstrumentField_ExchangeInstID_set)
    __swig_setmethods__["ProductID"] = _pyctp.CThostFtdcQryInstrumentField_ProductID_set
    __swig_getmethods__["ProductID"] = _pyctp.CThostFtdcQryInstrumentField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_pyctp.CThostFtdcQryInstrumentField_ProductID_get, _pyctp.CThostFtdcQryInstrumentField_ProductID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryInstrumentField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryInstrumentField
    __del__ = lambda self: None
CThostFtdcQryInstrumentField_swigregister = _pyctp.CThostFtdcQryInstrumentField_swigregister
CThostFtdcQryInstrumentField_swigregister(CThostFtdcQryInstrumentField)

class CThostFtdcQryDepthMarketDataField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryDepthMarketDataField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryDepthMarketDataField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryDepthMarketDataField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryDepthMarketDataField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryDepthMarketDataField_InstrumentID_get, _pyctp.CThostFtdcQryDepthMarketDataField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryDepthMarketDataField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryDepthMarketDataField
    __del__ = lambda self: None
CThostFtdcQryDepthMarketDataField_swigregister = _pyctp.CThostFtdcQryDepthMarketDataField_swigregister
CThostFtdcQryDepthMarketDataField_swigregister(CThostFtdcQryDepthMarketDataField)

class CThostFtdcQryBrokerUserField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryBrokerUserField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryBrokerUserField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryBrokerUserField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryBrokerUserField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryBrokerUserField_BrokerID_get, _pyctp.CThostFtdcQryBrokerUserField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcQryBrokerUserField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcQryBrokerUserField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcQryBrokerUserField_UserID_get, _pyctp.CThostFtdcQryBrokerUserField_UserID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryBrokerUserField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryBrokerUserField
    __del__ = lambda self: None
CThostFtdcQryBrokerUserField_swigregister = _pyctp.CThostFtdcQryBrokerUserField_swigregister
CThostFtdcQryBrokerUserField_swigregister(CThostFtdcQryBrokerUserField)

class CThostFtdcQryBrokerUserFunctionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryBrokerUserFunctionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryBrokerUserFunctionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryBrokerUserFunctionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryBrokerUserFunctionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryBrokerUserFunctionField_BrokerID_get, _pyctp.CThostFtdcQryBrokerUserFunctionField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcQryBrokerUserFunctionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcQryBrokerUserFunctionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcQryBrokerUserFunctionField_UserID_get, _pyctp.CThostFtdcQryBrokerUserFunctionField_UserID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryBrokerUserFunctionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryBrokerUserFunctionField
    __del__ = lambda self: None
CThostFtdcQryBrokerUserFunctionField_swigregister = _pyctp.CThostFtdcQryBrokerUserFunctionField_swigregister
CThostFtdcQryBrokerUserFunctionField_swigregister(CThostFtdcQryBrokerUserFunctionField)

class CThostFtdcQryTraderOfferField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryTraderOfferField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryTraderOfferField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryTraderOfferField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryTraderOfferField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryTraderOfferField_ExchangeID_get, _pyctp.CThostFtdcQryTraderOfferField_ExchangeID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcQryTraderOfferField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcQryTraderOfferField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcQryTraderOfferField_ParticipantID_get, _pyctp.CThostFtdcQryTraderOfferField_ParticipantID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcQryTraderOfferField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcQryTraderOfferField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcQryTraderOfferField_TraderID_get, _pyctp.CThostFtdcQryTraderOfferField_TraderID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryTraderOfferField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryTraderOfferField
    __del__ = lambda self: None
CThostFtdcQryTraderOfferField_swigregister = _pyctp.CThostFtdcQryTraderOfferField_swigregister
CThostFtdcQryTraderOfferField_swigregister(CThostFtdcQryTraderOfferField)

class CThostFtdcQrySyncDepositField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQrySyncDepositField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQrySyncDepositField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQrySyncDepositField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQrySyncDepositField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQrySyncDepositField_BrokerID_get, _pyctp.CThostFtdcQrySyncDepositField_BrokerID_set)
    __swig_setmethods__["DepositSeqNo"] = _pyctp.CThostFtdcQrySyncDepositField_DepositSeqNo_set
    __swig_getmethods__["DepositSeqNo"] = _pyctp.CThostFtdcQrySyncDepositField_DepositSeqNo_get
    if _newclass:
        DepositSeqNo = _swig_property(_pyctp.CThostFtdcQrySyncDepositField_DepositSeqNo_get, _pyctp.CThostFtdcQrySyncDepositField_DepositSeqNo_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQrySyncDepositField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQrySyncDepositField
    __del__ = lambda self: None
CThostFtdcQrySyncDepositField_swigregister = _pyctp.CThostFtdcQrySyncDepositField_swigregister
CThostFtdcQrySyncDepositField_swigregister(CThostFtdcQrySyncDepositField)

class CThostFtdcQrySettlementInfoField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQrySettlementInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQrySettlementInfoField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQrySettlementInfoField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQrySettlementInfoField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQrySettlementInfoField_BrokerID_get, _pyctp.CThostFtdcQrySettlementInfoField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQrySettlementInfoField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQrySettlementInfoField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQrySettlementInfoField_InvestorID_get, _pyctp.CThostFtdcQrySettlementInfoField_InvestorID_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcQrySettlementInfoField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcQrySettlementInfoField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcQrySettlementInfoField_TradingDay_get, _pyctp.CThostFtdcQrySettlementInfoField_TradingDay_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQrySettlementInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQrySettlementInfoField
    __del__ = lambda self: None
CThostFtdcQrySettlementInfoField_swigregister = _pyctp.CThostFtdcQrySettlementInfoField_swigregister
CThostFtdcQrySettlementInfoField_swigregister(CThostFtdcQrySettlementInfoField)

class CThostFtdcQryExchangeMarginRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryExchangeMarginRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryExchangeMarginRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryExchangeMarginRateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryExchangeMarginRateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryExchangeMarginRateField_BrokerID_get, _pyctp.CThostFtdcQryExchangeMarginRateField_BrokerID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryExchangeMarginRateField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryExchangeMarginRateField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryExchangeMarginRateField_InstrumentID_get, _pyctp.CThostFtdcQryExchangeMarginRateField_InstrumentID_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcQryExchangeMarginRateField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcQryExchangeMarginRateField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcQryExchangeMarginRateField_HedgeFlag_get, _pyctp.CThostFtdcQryExchangeMarginRateField_HedgeFlag_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryExchangeMarginRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryExchangeMarginRateField
    __del__ = lambda self: None
CThostFtdcQryExchangeMarginRateField_swigregister = _pyctp.CThostFtdcQryExchangeMarginRateField_swigregister
CThostFtdcQryExchangeMarginRateField_swigregister(CThostFtdcQryExchangeMarginRateField)

class CThostFtdcQryExchangeMarginRateAdjustField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryExchangeMarginRateAdjustField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryExchangeMarginRateAdjustField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryExchangeMarginRateAdjustField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryExchangeMarginRateAdjustField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryExchangeMarginRateAdjustField_BrokerID_get, _pyctp.CThostFtdcQryExchangeMarginRateAdjustField_BrokerID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryExchangeMarginRateAdjustField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryExchangeMarginRateAdjustField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryExchangeMarginRateAdjustField_InstrumentID_get, _pyctp.CThostFtdcQryExchangeMarginRateAdjustField_InstrumentID_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcQryExchangeMarginRateAdjustField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcQryExchangeMarginRateAdjustField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcQryExchangeMarginRateAdjustField_HedgeFlag_get, _pyctp.CThostFtdcQryExchangeMarginRateAdjustField_HedgeFlag_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryExchangeMarginRateAdjustField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryExchangeMarginRateAdjustField
    __del__ = lambda self: None
CThostFtdcQryExchangeMarginRateAdjustField_swigregister = _pyctp.CThostFtdcQryExchangeMarginRateAdjustField_swigregister
CThostFtdcQryExchangeMarginRateAdjustField_swigregister(CThostFtdcQryExchangeMarginRateAdjustField)

class CThostFtdcQryExchangeRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryExchangeRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryExchangeRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryExchangeRateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryExchangeRateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryExchangeRateField_BrokerID_get, _pyctp.CThostFtdcQryExchangeRateField_BrokerID_set)
    __swig_setmethods__["FromCurrencyID"] = _pyctp.CThostFtdcQryExchangeRateField_FromCurrencyID_set
    __swig_getmethods__["FromCurrencyID"] = _pyctp.CThostFtdcQryExchangeRateField_FromCurrencyID_get
    if _newclass:
        FromCurrencyID = _swig_property(_pyctp.CThostFtdcQryExchangeRateField_FromCurrencyID_get, _pyctp.CThostFtdcQryExchangeRateField_FromCurrencyID_set)
    __swig_setmethods__["ToCurrencyID"] = _pyctp.CThostFtdcQryExchangeRateField_ToCurrencyID_set
    __swig_getmethods__["ToCurrencyID"] = _pyctp.CThostFtdcQryExchangeRateField_ToCurrencyID_get
    if _newclass:
        ToCurrencyID = _swig_property(_pyctp.CThostFtdcQryExchangeRateField_ToCurrencyID_get, _pyctp.CThostFtdcQryExchangeRateField_ToCurrencyID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryExchangeRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryExchangeRateField
    __del__ = lambda self: None
CThostFtdcQryExchangeRateField_swigregister = _pyctp.CThostFtdcQryExchangeRateField_swigregister
CThostFtdcQryExchangeRateField_swigregister(CThostFtdcQryExchangeRateField)

class CThostFtdcQrySyncFundMortgageField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQrySyncFundMortgageField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQrySyncFundMortgageField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQrySyncFundMortgageField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQrySyncFundMortgageField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQrySyncFundMortgageField_BrokerID_get, _pyctp.CThostFtdcQrySyncFundMortgageField_BrokerID_set)
    __swig_setmethods__["MortgageSeqNo"] = _pyctp.CThostFtdcQrySyncFundMortgageField_MortgageSeqNo_set
    __swig_getmethods__["MortgageSeqNo"] = _pyctp.CThostFtdcQrySyncFundMortgageField_MortgageSeqNo_get
    if _newclass:
        MortgageSeqNo = _swig_property(_pyctp.CThostFtdcQrySyncFundMortgageField_MortgageSeqNo_get, _pyctp.CThostFtdcQrySyncFundMortgageField_MortgageSeqNo_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQrySyncFundMortgageField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQrySyncFundMortgageField
    __del__ = lambda self: None
CThostFtdcQrySyncFundMortgageField_swigregister = _pyctp.CThostFtdcQrySyncFundMortgageField_swigregister
CThostFtdcQrySyncFundMortgageField_swigregister(CThostFtdcQrySyncFundMortgageField)

class CThostFtdcQryHisOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryHisOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryHisOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryHisOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryHisOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryHisOrderField_BrokerID_get, _pyctp.CThostFtdcQryHisOrderField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryHisOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryHisOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryHisOrderField_InvestorID_get, _pyctp.CThostFtdcQryHisOrderField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryHisOrderField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryHisOrderField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryHisOrderField_InstrumentID_get, _pyctp.CThostFtdcQryHisOrderField_InstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryHisOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryHisOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryHisOrderField_ExchangeID_get, _pyctp.CThostFtdcQryHisOrderField_ExchangeID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CThostFtdcQryHisOrderField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CThostFtdcQryHisOrderField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CThostFtdcQryHisOrderField_OrderSysID_get, _pyctp.CThostFtdcQryHisOrderField_OrderSysID_set)
    __swig_setmethods__["InsertTimeStart"] = _pyctp.CThostFtdcQryHisOrderField_InsertTimeStart_set
    __swig_getmethods__["InsertTimeStart"] = _pyctp.CThostFtdcQryHisOrderField_InsertTimeStart_get
    if _newclass:
        InsertTimeStart = _swig_property(_pyctp.CThostFtdcQryHisOrderField_InsertTimeStart_get, _pyctp.CThostFtdcQryHisOrderField_InsertTimeStart_set)
    __swig_setmethods__["InsertTimeEnd"] = _pyctp.CThostFtdcQryHisOrderField_InsertTimeEnd_set
    __swig_getmethods__["InsertTimeEnd"] = _pyctp.CThostFtdcQryHisOrderField_InsertTimeEnd_get
    if _newclass:
        InsertTimeEnd = _swig_property(_pyctp.CThostFtdcQryHisOrderField_InsertTimeEnd_get, _pyctp.CThostFtdcQryHisOrderField_InsertTimeEnd_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcQryHisOrderField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcQryHisOrderField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcQryHisOrderField_TradingDay_get, _pyctp.CThostFtdcQryHisOrderField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CThostFtdcQryHisOrderField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CThostFtdcQryHisOrderField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CThostFtdcQryHisOrderField_SettlementID_get, _pyctp.CThostFtdcQryHisOrderField_SettlementID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryHisOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryHisOrderField
    __del__ = lambda self: None
CThostFtdcQryHisOrderField_swigregister = _pyctp.CThostFtdcQryHisOrderField_swigregister
CThostFtdcQryHisOrderField_swigregister(CThostFtdcQryHisOrderField)

class CThostFtdcOptionInstrMiniMarginField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcOptionInstrMiniMarginField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcOptionInstrMiniMarginField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcOptionInstrMiniMarginField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcOptionInstrMiniMarginField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcOptionInstrMiniMarginField_InstrumentID_get, _pyctp.CThostFtdcOptionInstrMiniMarginField_InstrumentID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CThostFtdcOptionInstrMiniMarginField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CThostFtdcOptionInstrMiniMarginField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CThostFtdcOptionInstrMiniMarginField_InvestorRange_get, _pyctp.CThostFtdcOptionInstrMiniMarginField_InvestorRange_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcOptionInstrMiniMarginField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcOptionInstrMiniMarginField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcOptionInstrMiniMarginField_BrokerID_get, _pyctp.CThostFtdcOptionInstrMiniMarginField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcOptionInstrMiniMarginField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcOptionInstrMiniMarginField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcOptionInstrMiniMarginField_InvestorID_get, _pyctp.CThostFtdcOptionInstrMiniMarginField_InvestorID_set)
    __swig_setmethods__["MinMargin"] = _pyctp.CThostFtdcOptionInstrMiniMarginField_MinMargin_set
    __swig_getmethods__["MinMargin"] = _pyctp.CThostFtdcOptionInstrMiniMarginField_MinMargin_get
    if _newclass:
        MinMargin = _swig_property(_pyctp.CThostFtdcOptionInstrMiniMarginField_MinMargin_get, _pyctp.CThostFtdcOptionInstrMiniMarginField_MinMargin_set)
    __swig_setmethods__["ValueMethod"] = _pyctp.CThostFtdcOptionInstrMiniMarginField_ValueMethod_set
    __swig_getmethods__["ValueMethod"] = _pyctp.CThostFtdcOptionInstrMiniMarginField_ValueMethod_get
    if _newclass:
        ValueMethod = _swig_property(_pyctp.CThostFtdcOptionInstrMiniMarginField_ValueMethod_get, _pyctp.CThostFtdcOptionInstrMiniMarginField_ValueMethod_set)
    __swig_setmethods__["IsRelative"] = _pyctp.CThostFtdcOptionInstrMiniMarginField_IsRelative_set
    __swig_getmethods__["IsRelative"] = _pyctp.CThostFtdcOptionInstrMiniMarginField_IsRelative_get
    if _newclass:
        IsRelative = _swig_property(_pyctp.CThostFtdcOptionInstrMiniMarginField_IsRelative_get, _pyctp.CThostFtdcOptionInstrMiniMarginField_IsRelative_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcOptionInstrMiniMarginField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcOptionInstrMiniMarginField
    __del__ = lambda self: None
CThostFtdcOptionInstrMiniMarginField_swigregister = _pyctp.CThostFtdcOptionInstrMiniMarginField_swigregister
CThostFtdcOptionInstrMiniMarginField_swigregister(CThostFtdcOptionInstrMiniMarginField)

class CThostFtdcOptionInstrMarginAdjustField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcOptionInstrMarginAdjustField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcOptionInstrMarginAdjustField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcOptionInstrMarginAdjustField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcOptionInstrMarginAdjustField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcOptionInstrMarginAdjustField_InstrumentID_get, _pyctp.CThostFtdcOptionInstrMarginAdjustField_InstrumentID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CThostFtdcOptionInstrMarginAdjustField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CThostFtdcOptionInstrMarginAdjustField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CThostFtdcOptionInstrMarginAdjustField_InvestorRange_get, _pyctp.CThostFtdcOptionInstrMarginAdjustField_InvestorRange_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcOptionInstrMarginAdjustField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcOptionInstrMarginAdjustField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcOptionInstrMarginAdjustField_BrokerID_get, _pyctp.CThostFtdcOptionInstrMarginAdjustField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcOptionInstrMarginAdjustField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcOptionInstrMarginAdjustField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcOptionInstrMarginAdjustField_InvestorID_get, _pyctp.CThostFtdcOptionInstrMarginAdjustField_InvestorID_set)
    __swig_setmethods__["SShortMarginRatioByMoney"] = _pyctp.CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByMoney_set
    __swig_getmethods__["SShortMarginRatioByMoney"] = _pyctp.CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByMoney_get
    if _newclass:
        SShortMarginRatioByMoney = _swig_property(_pyctp.CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByMoney_get, _pyctp.CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByMoney_set)
    __swig_setmethods__["SShortMarginRatioByVolume"] = _pyctp.CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByVolume_set
    __swig_getmethods__["SShortMarginRatioByVolume"] = _pyctp.CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByVolume_get
    if _newclass:
        SShortMarginRatioByVolume = _swig_property(_pyctp.CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByVolume_get, _pyctp.CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByVolume_set)
    __swig_setmethods__["HShortMarginRatioByMoney"] = _pyctp.CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByMoney_set
    __swig_getmethods__["HShortMarginRatioByMoney"] = _pyctp.CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByMoney_get
    if _newclass:
        HShortMarginRatioByMoney = _swig_property(_pyctp.CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByMoney_get, _pyctp.CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByMoney_set)
    __swig_setmethods__["HShortMarginRatioByVolume"] = _pyctp.CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByVolume_set
    __swig_getmethods__["HShortMarginRatioByVolume"] = _pyctp.CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByVolume_get
    if _newclass:
        HShortMarginRatioByVolume = _swig_property(_pyctp.CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByVolume_get, _pyctp.CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByVolume_set)
    __swig_setmethods__["AShortMarginRatioByMoney"] = _pyctp.CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByMoney_set
    __swig_getmethods__["AShortMarginRatioByMoney"] = _pyctp.CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByMoney_get
    if _newclass:
        AShortMarginRatioByMoney = _swig_property(_pyctp.CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByMoney_get, _pyctp.CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByMoney_set)
    __swig_setmethods__["AShortMarginRatioByVolume"] = _pyctp.CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByVolume_set
    __swig_getmethods__["AShortMarginRatioByVolume"] = _pyctp.CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByVolume_get
    if _newclass:
        AShortMarginRatioByVolume = _swig_property(_pyctp.CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByVolume_get, _pyctp.CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByVolume_set)
    __swig_setmethods__["IsRelative"] = _pyctp.CThostFtdcOptionInstrMarginAdjustField_IsRelative_set
    __swig_getmethods__["IsRelative"] = _pyctp.CThostFtdcOptionInstrMarginAdjustField_IsRelative_get
    if _newclass:
        IsRelative = _swig_property(_pyctp.CThostFtdcOptionInstrMarginAdjustField_IsRelative_get, _pyctp.CThostFtdcOptionInstrMarginAdjustField_IsRelative_set)
    __swig_setmethods__["MShortMarginRatioByMoney"] = _pyctp.CThostFtdcOptionInstrMarginAdjustField_MShortMarginRatioByMoney_set
    __swig_getmethods__["MShortMarginRatioByMoney"] = _pyctp.CThostFtdcOptionInstrMarginAdjustField_MShortMarginRatioByMoney_get
    if _newclass:
        MShortMarginRatioByMoney = _swig_property(_pyctp.CThostFtdcOptionInstrMarginAdjustField_MShortMarginRatioByMoney_get, _pyctp.CThostFtdcOptionInstrMarginAdjustField_MShortMarginRatioByMoney_set)
    __swig_setmethods__["MShortMarginRatioByVolume"] = _pyctp.CThostFtdcOptionInstrMarginAdjustField_MShortMarginRatioByVolume_set
    __swig_getmethods__["MShortMarginRatioByVolume"] = _pyctp.CThostFtdcOptionInstrMarginAdjustField_MShortMarginRatioByVolume_get
    if _newclass:
        MShortMarginRatioByVolume = _swig_property(_pyctp.CThostFtdcOptionInstrMarginAdjustField_MShortMarginRatioByVolume_get, _pyctp.CThostFtdcOptionInstrMarginAdjustField_MShortMarginRatioByVolume_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcOptionInstrMarginAdjustField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcOptionInstrMarginAdjustField
    __del__ = lambda self: None
CThostFtdcOptionInstrMarginAdjustField_swigregister = _pyctp.CThostFtdcOptionInstrMarginAdjustField_swigregister
CThostFtdcOptionInstrMarginAdjustField_swigregister(CThostFtdcOptionInstrMarginAdjustField)

class CThostFtdcOptionInstrCommRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcOptionInstrCommRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcOptionInstrCommRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcOptionInstrCommRateField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcOptionInstrCommRateField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcOptionInstrCommRateField_InstrumentID_get, _pyctp.CThostFtdcOptionInstrCommRateField_InstrumentID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CThostFtdcOptionInstrCommRateField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CThostFtdcOptionInstrCommRateField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CThostFtdcOptionInstrCommRateField_InvestorRange_get, _pyctp.CThostFtdcOptionInstrCommRateField_InvestorRange_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcOptionInstrCommRateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcOptionInstrCommRateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcOptionInstrCommRateField_BrokerID_get, _pyctp.CThostFtdcOptionInstrCommRateField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcOptionInstrCommRateField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcOptionInstrCommRateField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcOptionInstrCommRateField_InvestorID_get, _pyctp.CThostFtdcOptionInstrCommRateField_InvestorID_set)
    __swig_setmethods__["OpenRatioByMoney"] = _pyctp.CThostFtdcOptionInstrCommRateField_OpenRatioByMoney_set
    __swig_getmethods__["OpenRatioByMoney"] = _pyctp.CThostFtdcOptionInstrCommRateField_OpenRatioByMoney_get
    if _newclass:
        OpenRatioByMoney = _swig_property(_pyctp.CThostFtdcOptionInstrCommRateField_OpenRatioByMoney_get, _pyctp.CThostFtdcOptionInstrCommRateField_OpenRatioByMoney_set)
    __swig_setmethods__["OpenRatioByVolume"] = _pyctp.CThostFtdcOptionInstrCommRateField_OpenRatioByVolume_set
    __swig_getmethods__["OpenRatioByVolume"] = _pyctp.CThostFtdcOptionInstrCommRateField_OpenRatioByVolume_get
    if _newclass:
        OpenRatioByVolume = _swig_property(_pyctp.CThostFtdcOptionInstrCommRateField_OpenRatioByVolume_get, _pyctp.CThostFtdcOptionInstrCommRateField_OpenRatioByVolume_set)
    __swig_setmethods__["CloseRatioByMoney"] = _pyctp.CThostFtdcOptionInstrCommRateField_CloseRatioByMoney_set
    __swig_getmethods__["CloseRatioByMoney"] = _pyctp.CThostFtdcOptionInstrCommRateField_CloseRatioByMoney_get
    if _newclass:
        CloseRatioByMoney = _swig_property(_pyctp.CThostFtdcOptionInstrCommRateField_CloseRatioByMoney_get, _pyctp.CThostFtdcOptionInstrCommRateField_CloseRatioByMoney_set)
    __swig_setmethods__["CloseRatioByVolume"] = _pyctp.CThostFtdcOptionInstrCommRateField_CloseRatioByVolume_set
    __swig_getmethods__["CloseRatioByVolume"] = _pyctp.CThostFtdcOptionInstrCommRateField_CloseRatioByVolume_get
    if _newclass:
        CloseRatioByVolume = _swig_property(_pyctp.CThostFtdcOptionInstrCommRateField_CloseRatioByVolume_get, _pyctp.CThostFtdcOptionInstrCommRateField_CloseRatioByVolume_set)
    __swig_setmethods__["CloseTodayRatioByMoney"] = _pyctp.CThostFtdcOptionInstrCommRateField_CloseTodayRatioByMoney_set
    __swig_getmethods__["CloseTodayRatioByMoney"] = _pyctp.CThostFtdcOptionInstrCommRateField_CloseTodayRatioByMoney_get
    if _newclass:
        CloseTodayRatioByMoney = _swig_property(_pyctp.CThostFtdcOptionInstrCommRateField_CloseTodayRatioByMoney_get, _pyctp.CThostFtdcOptionInstrCommRateField_CloseTodayRatioByMoney_set)
    __swig_setmethods__["CloseTodayRatioByVolume"] = _pyctp.CThostFtdcOptionInstrCommRateField_CloseTodayRatioByVolume_set
    __swig_getmethods__["CloseTodayRatioByVolume"] = _pyctp.CThostFtdcOptionInstrCommRateField_CloseTodayRatioByVolume_get
    if _newclass:
        CloseTodayRatioByVolume = _swig_property(_pyctp.CThostFtdcOptionInstrCommRateField_CloseTodayRatioByVolume_get, _pyctp.CThostFtdcOptionInstrCommRateField_CloseTodayRatioByVolume_set)
    __swig_setmethods__["StrikeRatioByMoney"] = _pyctp.CThostFtdcOptionInstrCommRateField_StrikeRatioByMoney_set
    __swig_getmethods__["StrikeRatioByMoney"] = _pyctp.CThostFtdcOptionInstrCommRateField_StrikeRatioByMoney_get
    if _newclass:
        StrikeRatioByMoney = _swig_property(_pyctp.CThostFtdcOptionInstrCommRateField_StrikeRatioByMoney_get, _pyctp.CThostFtdcOptionInstrCommRateField_StrikeRatioByMoney_set)
    __swig_setmethods__["StrikeRatioByVolume"] = _pyctp.CThostFtdcOptionInstrCommRateField_StrikeRatioByVolume_set
    __swig_getmethods__["StrikeRatioByVolume"] = _pyctp.CThostFtdcOptionInstrCommRateField_StrikeRatioByVolume_get
    if _newclass:
        StrikeRatioByVolume = _swig_property(_pyctp.CThostFtdcOptionInstrCommRateField_StrikeRatioByVolume_get, _pyctp.CThostFtdcOptionInstrCommRateField_StrikeRatioByVolume_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcOptionInstrCommRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcOptionInstrCommRateField
    __del__ = lambda self: None
CThostFtdcOptionInstrCommRateField_swigregister = _pyctp.CThostFtdcOptionInstrCommRateField_swigregister
CThostFtdcOptionInstrCommRateField_swigregister(CThostFtdcOptionInstrCommRateField)

class CThostFtdcOptionInstrTradeCostField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcOptionInstrTradeCostField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcOptionInstrTradeCostField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcOptionInstrTradeCostField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcOptionInstrTradeCostField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcOptionInstrTradeCostField_BrokerID_get, _pyctp.CThostFtdcOptionInstrTradeCostField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcOptionInstrTradeCostField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcOptionInstrTradeCostField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcOptionInstrTradeCostField_InvestorID_get, _pyctp.CThostFtdcOptionInstrTradeCostField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcOptionInstrTradeCostField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcOptionInstrTradeCostField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcOptionInstrTradeCostField_InstrumentID_get, _pyctp.CThostFtdcOptionInstrTradeCostField_InstrumentID_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcOptionInstrTradeCostField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcOptionInstrTradeCostField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcOptionInstrTradeCostField_HedgeFlag_get, _pyctp.CThostFtdcOptionInstrTradeCostField_HedgeFlag_set)
    __swig_setmethods__["FixedMargin"] = _pyctp.CThostFtdcOptionInstrTradeCostField_FixedMargin_set
    __swig_getmethods__["FixedMargin"] = _pyctp.CThostFtdcOptionInstrTradeCostField_FixedMargin_get
    if _newclass:
        FixedMargin = _swig_property(_pyctp.CThostFtdcOptionInstrTradeCostField_FixedMargin_get, _pyctp.CThostFtdcOptionInstrTradeCostField_FixedMargin_set)
    __swig_setmethods__["MiniMargin"] = _pyctp.CThostFtdcOptionInstrTradeCostField_MiniMargin_set
    __swig_getmethods__["MiniMargin"] = _pyctp.CThostFtdcOptionInstrTradeCostField_MiniMargin_get
    if _newclass:
        MiniMargin = _swig_property(_pyctp.CThostFtdcOptionInstrTradeCostField_MiniMargin_get, _pyctp.CThostFtdcOptionInstrTradeCostField_MiniMargin_set)
    __swig_setmethods__["Royalty"] = _pyctp.CThostFtdcOptionInstrTradeCostField_Royalty_set
    __swig_getmethods__["Royalty"] = _pyctp.CThostFtdcOptionInstrTradeCostField_Royalty_get
    if _newclass:
        Royalty = _swig_property(_pyctp.CThostFtdcOptionInstrTradeCostField_Royalty_get, _pyctp.CThostFtdcOptionInstrTradeCostField_Royalty_set)
    __swig_setmethods__["ExchFixedMargin"] = _pyctp.CThostFtdcOptionInstrTradeCostField_ExchFixedMargin_set
    __swig_getmethods__["ExchFixedMargin"] = _pyctp.CThostFtdcOptionInstrTradeCostField_ExchFixedMargin_get
    if _newclass:
        ExchFixedMargin = _swig_property(_pyctp.CThostFtdcOptionInstrTradeCostField_ExchFixedMargin_get, _pyctp.CThostFtdcOptionInstrTradeCostField_ExchFixedMargin_set)
    __swig_setmethods__["ExchMiniMargin"] = _pyctp.CThostFtdcOptionInstrTradeCostField_ExchMiniMargin_set
    __swig_getmethods__["ExchMiniMargin"] = _pyctp.CThostFtdcOptionInstrTradeCostField_ExchMiniMargin_get
    if _newclass:
        ExchMiniMargin = _swig_property(_pyctp.CThostFtdcOptionInstrTradeCostField_ExchMiniMargin_get, _pyctp.CThostFtdcOptionInstrTradeCostField_ExchMiniMargin_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcOptionInstrTradeCostField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcOptionInstrTradeCostField
    __del__ = lambda self: None
CThostFtdcOptionInstrTradeCostField_swigregister = _pyctp.CThostFtdcOptionInstrTradeCostField_swigregister
CThostFtdcOptionInstrTradeCostField_swigregister(CThostFtdcOptionInstrTradeCostField)

class CThostFtdcQryOptionInstrTradeCostField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryOptionInstrTradeCostField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryOptionInstrTradeCostField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryOptionInstrTradeCostField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryOptionInstrTradeCostField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryOptionInstrTradeCostField_BrokerID_get, _pyctp.CThostFtdcQryOptionInstrTradeCostField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryOptionInstrTradeCostField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryOptionInstrTradeCostField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryOptionInstrTradeCostField_InvestorID_get, _pyctp.CThostFtdcQryOptionInstrTradeCostField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryOptionInstrTradeCostField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryOptionInstrTradeCostField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryOptionInstrTradeCostField_InstrumentID_get, _pyctp.CThostFtdcQryOptionInstrTradeCostField_InstrumentID_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcQryOptionInstrTradeCostField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcQryOptionInstrTradeCostField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcQryOptionInstrTradeCostField_HedgeFlag_get, _pyctp.CThostFtdcQryOptionInstrTradeCostField_HedgeFlag_set)
    __swig_setmethods__["InputPrice"] = _pyctp.CThostFtdcQryOptionInstrTradeCostField_InputPrice_set
    __swig_getmethods__["InputPrice"] = _pyctp.CThostFtdcQryOptionInstrTradeCostField_InputPrice_get
    if _newclass:
        InputPrice = _swig_property(_pyctp.CThostFtdcQryOptionInstrTradeCostField_InputPrice_get, _pyctp.CThostFtdcQryOptionInstrTradeCostField_InputPrice_set)
    __swig_setmethods__["UnderlyingPrice"] = _pyctp.CThostFtdcQryOptionInstrTradeCostField_UnderlyingPrice_set
    __swig_getmethods__["UnderlyingPrice"] = _pyctp.CThostFtdcQryOptionInstrTradeCostField_UnderlyingPrice_get
    if _newclass:
        UnderlyingPrice = _swig_property(_pyctp.CThostFtdcQryOptionInstrTradeCostField_UnderlyingPrice_get, _pyctp.CThostFtdcQryOptionInstrTradeCostField_UnderlyingPrice_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryOptionInstrTradeCostField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryOptionInstrTradeCostField
    __del__ = lambda self: None
CThostFtdcQryOptionInstrTradeCostField_swigregister = _pyctp.CThostFtdcQryOptionInstrTradeCostField_swigregister
CThostFtdcQryOptionInstrTradeCostField_swigregister(CThostFtdcQryOptionInstrTradeCostField)

class CThostFtdcQryOptionInstrCommRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryOptionInstrCommRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryOptionInstrCommRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryOptionInstrCommRateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryOptionInstrCommRateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryOptionInstrCommRateField_BrokerID_get, _pyctp.CThostFtdcQryOptionInstrCommRateField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryOptionInstrCommRateField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryOptionInstrCommRateField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryOptionInstrCommRateField_InvestorID_get, _pyctp.CThostFtdcQryOptionInstrCommRateField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryOptionInstrCommRateField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryOptionInstrCommRateField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryOptionInstrCommRateField_InstrumentID_get, _pyctp.CThostFtdcQryOptionInstrCommRateField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryOptionInstrCommRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryOptionInstrCommRateField
    __del__ = lambda self: None
CThostFtdcQryOptionInstrCommRateField_swigregister = _pyctp.CThostFtdcQryOptionInstrCommRateField_swigregister
CThostFtdcQryOptionInstrCommRateField_swigregister(CThostFtdcQryOptionInstrCommRateField)

class CThostFtdcIndexPriceField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcIndexPriceField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcIndexPriceField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcIndexPriceField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcIndexPriceField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcIndexPriceField_BrokerID_get, _pyctp.CThostFtdcIndexPriceField_BrokerID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcIndexPriceField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcIndexPriceField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcIndexPriceField_InstrumentID_get, _pyctp.CThostFtdcIndexPriceField_InstrumentID_set)
    __swig_setmethods__["ClosePrice"] = _pyctp.CThostFtdcIndexPriceField_ClosePrice_set
    __swig_getmethods__["ClosePrice"] = _pyctp.CThostFtdcIndexPriceField_ClosePrice_get
    if _newclass:
        ClosePrice = _swig_property(_pyctp.CThostFtdcIndexPriceField_ClosePrice_get, _pyctp.CThostFtdcIndexPriceField_ClosePrice_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcIndexPriceField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcIndexPriceField
    __del__ = lambda self: None
CThostFtdcIndexPriceField_swigregister = _pyctp.CThostFtdcIndexPriceField_swigregister
CThostFtdcIndexPriceField_swigregister(CThostFtdcIndexPriceField)

class CThostFtdcInputExecOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcInputExecOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcInputExecOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcInputExecOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcInputExecOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcInputExecOrderField_BrokerID_get, _pyctp.CThostFtdcInputExecOrderField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcInputExecOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcInputExecOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcInputExecOrderField_InvestorID_get, _pyctp.CThostFtdcInputExecOrderField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcInputExecOrderField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcInputExecOrderField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcInputExecOrderField_InstrumentID_get, _pyctp.CThostFtdcInputExecOrderField_InstrumentID_set)
    __swig_setmethods__["ExecOrderRef"] = _pyctp.CThostFtdcInputExecOrderField_ExecOrderRef_set
    __swig_getmethods__["ExecOrderRef"] = _pyctp.CThostFtdcInputExecOrderField_ExecOrderRef_get
    if _newclass:
        ExecOrderRef = _swig_property(_pyctp.CThostFtdcInputExecOrderField_ExecOrderRef_get, _pyctp.CThostFtdcInputExecOrderField_ExecOrderRef_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcInputExecOrderField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcInputExecOrderField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcInputExecOrderField_UserID_get, _pyctp.CThostFtdcInputExecOrderField_UserID_set)
    __swig_setmethods__["Volume"] = _pyctp.CThostFtdcInputExecOrderField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CThostFtdcInputExecOrderField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CThostFtdcInputExecOrderField_Volume_get, _pyctp.CThostFtdcInputExecOrderField_Volume_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcInputExecOrderField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcInputExecOrderField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcInputExecOrderField_RequestID_get, _pyctp.CThostFtdcInputExecOrderField_RequestID_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CThostFtdcInputExecOrderField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CThostFtdcInputExecOrderField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CThostFtdcInputExecOrderField_BusinessUnit_get, _pyctp.CThostFtdcInputExecOrderField_BusinessUnit_set)
    __swig_setmethods__["OffsetFlag"] = _pyctp.CThostFtdcInputExecOrderField_OffsetFlag_set
    __swig_getmethods__["OffsetFlag"] = _pyctp.CThostFtdcInputExecOrderField_OffsetFlag_get
    if _newclass:
        OffsetFlag = _swig_property(_pyctp.CThostFtdcInputExecOrderField_OffsetFlag_get, _pyctp.CThostFtdcInputExecOrderField_OffsetFlag_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcInputExecOrderField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcInputExecOrderField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcInputExecOrderField_HedgeFlag_get, _pyctp.CThostFtdcInputExecOrderField_HedgeFlag_set)
    __swig_setmethods__["ActionType"] = _pyctp.CThostFtdcInputExecOrderField_ActionType_set
    __swig_getmethods__["ActionType"] = _pyctp.CThostFtdcInputExecOrderField_ActionType_get
    if _newclass:
        ActionType = _swig_property(_pyctp.CThostFtdcInputExecOrderField_ActionType_get, _pyctp.CThostFtdcInputExecOrderField_ActionType_set)
    __swig_setmethods__["PosiDirection"] = _pyctp.CThostFtdcInputExecOrderField_PosiDirection_set
    __swig_getmethods__["PosiDirection"] = _pyctp.CThostFtdcInputExecOrderField_PosiDirection_get
    if _newclass:
        PosiDirection = _swig_property(_pyctp.CThostFtdcInputExecOrderField_PosiDirection_get, _pyctp.CThostFtdcInputExecOrderField_PosiDirection_set)
    __swig_setmethods__["ReservePositionFlag"] = _pyctp.CThostFtdcInputExecOrderField_ReservePositionFlag_set
    __swig_getmethods__["ReservePositionFlag"] = _pyctp.CThostFtdcInputExecOrderField_ReservePositionFlag_get
    if _newclass:
        ReservePositionFlag = _swig_property(_pyctp.CThostFtdcInputExecOrderField_ReservePositionFlag_get, _pyctp.CThostFtdcInputExecOrderField_ReservePositionFlag_set)
    __swig_setmethods__["CloseFlag"] = _pyctp.CThostFtdcInputExecOrderField_CloseFlag_set
    __swig_getmethods__["CloseFlag"] = _pyctp.CThostFtdcInputExecOrderField_CloseFlag_get
    if _newclass:
        CloseFlag = _swig_property(_pyctp.CThostFtdcInputExecOrderField_CloseFlag_get, _pyctp.CThostFtdcInputExecOrderField_CloseFlag_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcInputExecOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcInputExecOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcInputExecOrderField_ExchangeID_get, _pyctp.CThostFtdcInputExecOrderField_ExchangeID_set)
    __swig_setmethods__["InvestUnitID"] = _pyctp.CThostFtdcInputExecOrderField_InvestUnitID_set
    __swig_getmethods__["InvestUnitID"] = _pyctp.CThostFtdcInputExecOrderField_InvestUnitID_get
    if _newclass:
        InvestUnitID = _swig_property(_pyctp.CThostFtdcInputExecOrderField_InvestUnitID_get, _pyctp.CThostFtdcInputExecOrderField_InvestUnitID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcInputExecOrderField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcInputExecOrderField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcInputExecOrderField_AccountID_get, _pyctp.CThostFtdcInputExecOrderField_AccountID_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcInputExecOrderField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcInputExecOrderField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcInputExecOrderField_CurrencyID_get, _pyctp.CThostFtdcInputExecOrderField_CurrencyID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcInputExecOrderField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcInputExecOrderField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcInputExecOrderField_ClientID_get, _pyctp.CThostFtdcInputExecOrderField_ClientID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcInputExecOrderField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcInputExecOrderField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcInputExecOrderField_IPAddress_get, _pyctp.CThostFtdcInputExecOrderField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcInputExecOrderField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcInputExecOrderField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcInputExecOrderField_MacAddress_get, _pyctp.CThostFtdcInputExecOrderField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcInputExecOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcInputExecOrderField
    __del__ = lambda self: None
CThostFtdcInputExecOrderField_swigregister = _pyctp.CThostFtdcInputExecOrderField_swigregister
CThostFtdcInputExecOrderField_swigregister(CThostFtdcInputExecOrderField)

class CThostFtdcInputExecOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcInputExecOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcInputExecOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcInputExecOrderActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcInputExecOrderActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcInputExecOrderActionField_BrokerID_get, _pyctp.CThostFtdcInputExecOrderActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcInputExecOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcInputExecOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcInputExecOrderActionField_InvestorID_get, _pyctp.CThostFtdcInputExecOrderActionField_InvestorID_set)
    __swig_setmethods__["ExecOrderActionRef"] = _pyctp.CThostFtdcInputExecOrderActionField_ExecOrderActionRef_set
    __swig_getmethods__["ExecOrderActionRef"] = _pyctp.CThostFtdcInputExecOrderActionField_ExecOrderActionRef_get
    if _newclass:
        ExecOrderActionRef = _swig_property(_pyctp.CThostFtdcInputExecOrderActionField_ExecOrderActionRef_get, _pyctp.CThostFtdcInputExecOrderActionField_ExecOrderActionRef_set)
    __swig_setmethods__["ExecOrderRef"] = _pyctp.CThostFtdcInputExecOrderActionField_ExecOrderRef_set
    __swig_getmethods__["ExecOrderRef"] = _pyctp.CThostFtdcInputExecOrderActionField_ExecOrderRef_get
    if _newclass:
        ExecOrderRef = _swig_property(_pyctp.CThostFtdcInputExecOrderActionField_ExecOrderRef_get, _pyctp.CThostFtdcInputExecOrderActionField_ExecOrderRef_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcInputExecOrderActionField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcInputExecOrderActionField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcInputExecOrderActionField_RequestID_get, _pyctp.CThostFtdcInputExecOrderActionField_RequestID_set)
    __swig_setmethods__["FrontID"] = _pyctp.CThostFtdcInputExecOrderActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CThostFtdcInputExecOrderActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CThostFtdcInputExecOrderActionField_FrontID_get, _pyctp.CThostFtdcInputExecOrderActionField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcInputExecOrderActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcInputExecOrderActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcInputExecOrderActionField_SessionID_get, _pyctp.CThostFtdcInputExecOrderActionField_SessionID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcInputExecOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcInputExecOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcInputExecOrderActionField_ExchangeID_get, _pyctp.CThostFtdcInputExecOrderActionField_ExchangeID_set)
    __swig_setmethods__["ExecOrderSysID"] = _pyctp.CThostFtdcInputExecOrderActionField_ExecOrderSysID_set
    __swig_getmethods__["ExecOrderSysID"] = _pyctp.CThostFtdcInputExecOrderActionField_ExecOrderSysID_get
    if _newclass:
        ExecOrderSysID = _swig_property(_pyctp.CThostFtdcInputExecOrderActionField_ExecOrderSysID_get, _pyctp.CThostFtdcInputExecOrderActionField_ExecOrderSysID_set)
    __swig_setmethods__["ActionFlag"] = _pyctp.CThostFtdcInputExecOrderActionField_ActionFlag_set
    __swig_getmethods__["ActionFlag"] = _pyctp.CThostFtdcInputExecOrderActionField_ActionFlag_get
    if _newclass:
        ActionFlag = _swig_property(_pyctp.CThostFtdcInputExecOrderActionField_ActionFlag_get, _pyctp.CThostFtdcInputExecOrderActionField_ActionFlag_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcInputExecOrderActionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcInputExecOrderActionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcInputExecOrderActionField_UserID_get, _pyctp.CThostFtdcInputExecOrderActionField_UserID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcInputExecOrderActionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcInputExecOrderActionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcInputExecOrderActionField_InstrumentID_get, _pyctp.CThostFtdcInputExecOrderActionField_InstrumentID_set)
    __swig_setmethods__["InvestUnitID"] = _pyctp.CThostFtdcInputExecOrderActionField_InvestUnitID_set
    __swig_getmethods__["InvestUnitID"] = _pyctp.CThostFtdcInputExecOrderActionField_InvestUnitID_get
    if _newclass:
        InvestUnitID = _swig_property(_pyctp.CThostFtdcInputExecOrderActionField_InvestUnitID_get, _pyctp.CThostFtdcInputExecOrderActionField_InvestUnitID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcInputExecOrderActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcInputExecOrderActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcInputExecOrderActionField_IPAddress_get, _pyctp.CThostFtdcInputExecOrderActionField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcInputExecOrderActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcInputExecOrderActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcInputExecOrderActionField_MacAddress_get, _pyctp.CThostFtdcInputExecOrderActionField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcInputExecOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcInputExecOrderActionField
    __del__ = lambda self: None
CThostFtdcInputExecOrderActionField_swigregister = _pyctp.CThostFtdcInputExecOrderActionField_swigregister
CThostFtdcInputExecOrderActionField_swigregister(CThostFtdcInputExecOrderActionField)

class CThostFtdcExecOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcExecOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcExecOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcExecOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcExecOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcExecOrderField_BrokerID_get, _pyctp.CThostFtdcExecOrderField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcExecOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcExecOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcExecOrderField_InvestorID_get, _pyctp.CThostFtdcExecOrderField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcExecOrderField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcExecOrderField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcExecOrderField_InstrumentID_get, _pyctp.CThostFtdcExecOrderField_InstrumentID_set)
    __swig_setmethods__["ExecOrderRef"] = _pyctp.CThostFtdcExecOrderField_ExecOrderRef_set
    __swig_getmethods__["ExecOrderRef"] = _pyctp.CThostFtdcExecOrderField_ExecOrderRef_get
    if _newclass:
        ExecOrderRef = _swig_property(_pyctp.CThostFtdcExecOrderField_ExecOrderRef_get, _pyctp.CThostFtdcExecOrderField_ExecOrderRef_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcExecOrderField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcExecOrderField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcExecOrderField_UserID_get, _pyctp.CThostFtdcExecOrderField_UserID_set)
    __swig_setmethods__["Volume"] = _pyctp.CThostFtdcExecOrderField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CThostFtdcExecOrderField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CThostFtdcExecOrderField_Volume_get, _pyctp.CThostFtdcExecOrderField_Volume_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcExecOrderField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcExecOrderField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcExecOrderField_RequestID_get, _pyctp.CThostFtdcExecOrderField_RequestID_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CThostFtdcExecOrderField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CThostFtdcExecOrderField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CThostFtdcExecOrderField_BusinessUnit_get, _pyctp.CThostFtdcExecOrderField_BusinessUnit_set)
    __swig_setmethods__["OffsetFlag"] = _pyctp.CThostFtdcExecOrderField_OffsetFlag_set
    __swig_getmethods__["OffsetFlag"] = _pyctp.CThostFtdcExecOrderField_OffsetFlag_get
    if _newclass:
        OffsetFlag = _swig_property(_pyctp.CThostFtdcExecOrderField_OffsetFlag_get, _pyctp.CThostFtdcExecOrderField_OffsetFlag_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcExecOrderField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcExecOrderField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcExecOrderField_HedgeFlag_get, _pyctp.CThostFtdcExecOrderField_HedgeFlag_set)
    __swig_setmethods__["ActionType"] = _pyctp.CThostFtdcExecOrderField_ActionType_set
    __swig_getmethods__["ActionType"] = _pyctp.CThostFtdcExecOrderField_ActionType_get
    if _newclass:
        ActionType = _swig_property(_pyctp.CThostFtdcExecOrderField_ActionType_get, _pyctp.CThostFtdcExecOrderField_ActionType_set)
    __swig_setmethods__["PosiDirection"] = _pyctp.CThostFtdcExecOrderField_PosiDirection_set
    __swig_getmethods__["PosiDirection"] = _pyctp.CThostFtdcExecOrderField_PosiDirection_get
    if _newclass:
        PosiDirection = _swig_property(_pyctp.CThostFtdcExecOrderField_PosiDirection_get, _pyctp.CThostFtdcExecOrderField_PosiDirection_set)
    __swig_setmethods__["ReservePositionFlag"] = _pyctp.CThostFtdcExecOrderField_ReservePositionFlag_set
    __swig_getmethods__["ReservePositionFlag"] = _pyctp.CThostFtdcExecOrderField_ReservePositionFlag_get
    if _newclass:
        ReservePositionFlag = _swig_property(_pyctp.CThostFtdcExecOrderField_ReservePositionFlag_get, _pyctp.CThostFtdcExecOrderField_ReservePositionFlag_set)
    __swig_setmethods__["CloseFlag"] = _pyctp.CThostFtdcExecOrderField_CloseFlag_set
    __swig_getmethods__["CloseFlag"] = _pyctp.CThostFtdcExecOrderField_CloseFlag_get
    if _newclass:
        CloseFlag = _swig_property(_pyctp.CThostFtdcExecOrderField_CloseFlag_get, _pyctp.CThostFtdcExecOrderField_CloseFlag_set)
    __swig_setmethods__["ExecOrderLocalID"] = _pyctp.CThostFtdcExecOrderField_ExecOrderLocalID_set
    __swig_getmethods__["ExecOrderLocalID"] = _pyctp.CThostFtdcExecOrderField_ExecOrderLocalID_get
    if _newclass:
        ExecOrderLocalID = _swig_property(_pyctp.CThostFtdcExecOrderField_ExecOrderLocalID_get, _pyctp.CThostFtdcExecOrderField_ExecOrderLocalID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcExecOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcExecOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcExecOrderField_ExchangeID_get, _pyctp.CThostFtdcExecOrderField_ExchangeID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcExecOrderField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcExecOrderField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcExecOrderField_ParticipantID_get, _pyctp.CThostFtdcExecOrderField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcExecOrderField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcExecOrderField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcExecOrderField_ClientID_get, _pyctp.CThostFtdcExecOrderField_ClientID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CThostFtdcExecOrderField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CThostFtdcExecOrderField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CThostFtdcExecOrderField_ExchangeInstID_get, _pyctp.CThostFtdcExecOrderField_ExchangeInstID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcExecOrderField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcExecOrderField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcExecOrderField_TraderID_get, _pyctp.CThostFtdcExecOrderField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcExecOrderField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcExecOrderField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcExecOrderField_InstallID_get, _pyctp.CThostFtdcExecOrderField_InstallID_set)
    __swig_setmethods__["OrderSubmitStatus"] = _pyctp.CThostFtdcExecOrderField_OrderSubmitStatus_set
    __swig_getmethods__["OrderSubmitStatus"] = _pyctp.CThostFtdcExecOrderField_OrderSubmitStatus_get
    if _newclass:
        OrderSubmitStatus = _swig_property(_pyctp.CThostFtdcExecOrderField_OrderSubmitStatus_get, _pyctp.CThostFtdcExecOrderField_OrderSubmitStatus_set)
    __swig_setmethods__["NotifySequence"] = _pyctp.CThostFtdcExecOrderField_NotifySequence_set
    __swig_getmethods__["NotifySequence"] = _pyctp.CThostFtdcExecOrderField_NotifySequence_get
    if _newclass:
        NotifySequence = _swig_property(_pyctp.CThostFtdcExecOrderField_NotifySequence_get, _pyctp.CThostFtdcExecOrderField_NotifySequence_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcExecOrderField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcExecOrderField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcExecOrderField_TradingDay_get, _pyctp.CThostFtdcExecOrderField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CThostFtdcExecOrderField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CThostFtdcExecOrderField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CThostFtdcExecOrderField_SettlementID_get, _pyctp.CThostFtdcExecOrderField_SettlementID_set)
    __swig_setmethods__["ExecOrderSysID"] = _pyctp.CThostFtdcExecOrderField_ExecOrderSysID_set
    __swig_getmethods__["ExecOrderSysID"] = _pyctp.CThostFtdcExecOrderField_ExecOrderSysID_get
    if _newclass:
        ExecOrderSysID = _swig_property(_pyctp.CThostFtdcExecOrderField_ExecOrderSysID_get, _pyctp.CThostFtdcExecOrderField_ExecOrderSysID_set)
    __swig_setmethods__["InsertDate"] = _pyctp.CThostFtdcExecOrderField_InsertDate_set
    __swig_getmethods__["InsertDate"] = _pyctp.CThostFtdcExecOrderField_InsertDate_get
    if _newclass:
        InsertDate = _swig_property(_pyctp.CThostFtdcExecOrderField_InsertDate_get, _pyctp.CThostFtdcExecOrderField_InsertDate_set)
    __swig_setmethods__["InsertTime"] = _pyctp.CThostFtdcExecOrderField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _pyctp.CThostFtdcExecOrderField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_pyctp.CThostFtdcExecOrderField_InsertTime_get, _pyctp.CThostFtdcExecOrderField_InsertTime_set)
    __swig_setmethods__["CancelTime"] = _pyctp.CThostFtdcExecOrderField_CancelTime_set
    __swig_getmethods__["CancelTime"] = _pyctp.CThostFtdcExecOrderField_CancelTime_get
    if _newclass:
        CancelTime = _swig_property(_pyctp.CThostFtdcExecOrderField_CancelTime_get, _pyctp.CThostFtdcExecOrderField_CancelTime_set)
    __swig_setmethods__["ExecResult"] = _pyctp.CThostFtdcExecOrderField_ExecResult_set
    __swig_getmethods__["ExecResult"] = _pyctp.CThostFtdcExecOrderField_ExecResult_get
    if _newclass:
        ExecResult = _swig_property(_pyctp.CThostFtdcExecOrderField_ExecResult_get, _pyctp.CThostFtdcExecOrderField_ExecResult_set)
    __swig_setmethods__["ClearingPartID"] = _pyctp.CThostFtdcExecOrderField_ClearingPartID_set
    __swig_getmethods__["ClearingPartID"] = _pyctp.CThostFtdcExecOrderField_ClearingPartID_get
    if _newclass:
        ClearingPartID = _swig_property(_pyctp.CThostFtdcExecOrderField_ClearingPartID_get, _pyctp.CThostFtdcExecOrderField_ClearingPartID_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CThostFtdcExecOrderField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CThostFtdcExecOrderField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CThostFtdcExecOrderField_SequenceNo_get, _pyctp.CThostFtdcExecOrderField_SequenceNo_set)
    __swig_setmethods__["FrontID"] = _pyctp.CThostFtdcExecOrderField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CThostFtdcExecOrderField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CThostFtdcExecOrderField_FrontID_get, _pyctp.CThostFtdcExecOrderField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcExecOrderField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcExecOrderField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcExecOrderField_SessionID_get, _pyctp.CThostFtdcExecOrderField_SessionID_set)
    __swig_setmethods__["UserProductInfo"] = _pyctp.CThostFtdcExecOrderField_UserProductInfo_set
    __swig_getmethods__["UserProductInfo"] = _pyctp.CThostFtdcExecOrderField_UserProductInfo_get
    if _newclass:
        UserProductInfo = _swig_property(_pyctp.CThostFtdcExecOrderField_UserProductInfo_get, _pyctp.CThostFtdcExecOrderField_UserProductInfo_set)
    __swig_setmethods__["StatusMsg"] = _pyctp.CThostFtdcExecOrderField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _pyctp.CThostFtdcExecOrderField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_pyctp.CThostFtdcExecOrderField_StatusMsg_get, _pyctp.CThostFtdcExecOrderField_StatusMsg_set)
    __swig_setmethods__["ActiveUserID"] = _pyctp.CThostFtdcExecOrderField_ActiveUserID_set
    __swig_getmethods__["ActiveUserID"] = _pyctp.CThostFtdcExecOrderField_ActiveUserID_get
    if _newclass:
        ActiveUserID = _swig_property(_pyctp.CThostFtdcExecOrderField_ActiveUserID_get, _pyctp.CThostFtdcExecOrderField_ActiveUserID_set)
    __swig_setmethods__["BrokerExecOrderSeq"] = _pyctp.CThostFtdcExecOrderField_BrokerExecOrderSeq_set
    __swig_getmethods__["BrokerExecOrderSeq"] = _pyctp.CThostFtdcExecOrderField_BrokerExecOrderSeq_get
    if _newclass:
        BrokerExecOrderSeq = _swig_property(_pyctp.CThostFtdcExecOrderField_BrokerExecOrderSeq_get, _pyctp.CThostFtdcExecOrderField_BrokerExecOrderSeq_set)
    __swig_setmethods__["BranchID"] = _pyctp.CThostFtdcExecOrderField_BranchID_set
    __swig_getmethods__["BranchID"] = _pyctp.CThostFtdcExecOrderField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_pyctp.CThostFtdcExecOrderField_BranchID_get, _pyctp.CThostFtdcExecOrderField_BranchID_set)
    __swig_setmethods__["InvestUnitID"] = _pyctp.CThostFtdcExecOrderField_InvestUnitID_set
    __swig_getmethods__["InvestUnitID"] = _pyctp.CThostFtdcExecOrderField_InvestUnitID_get
    if _newclass:
        InvestUnitID = _swig_property(_pyctp.CThostFtdcExecOrderField_InvestUnitID_get, _pyctp.CThostFtdcExecOrderField_InvestUnitID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcExecOrderField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcExecOrderField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcExecOrderField_AccountID_get, _pyctp.CThostFtdcExecOrderField_AccountID_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcExecOrderField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcExecOrderField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcExecOrderField_CurrencyID_get, _pyctp.CThostFtdcExecOrderField_CurrencyID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcExecOrderField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcExecOrderField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcExecOrderField_IPAddress_get, _pyctp.CThostFtdcExecOrderField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcExecOrderField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcExecOrderField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcExecOrderField_MacAddress_get, _pyctp.CThostFtdcExecOrderField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcExecOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcExecOrderField
    __del__ = lambda self: None
CThostFtdcExecOrderField_swigregister = _pyctp.CThostFtdcExecOrderField_swigregister
CThostFtdcExecOrderField_swigregister(CThostFtdcExecOrderField)

class CThostFtdcExecOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcExecOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcExecOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcExecOrderActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcExecOrderActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcExecOrderActionField_BrokerID_get, _pyctp.CThostFtdcExecOrderActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcExecOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcExecOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcExecOrderActionField_InvestorID_get, _pyctp.CThostFtdcExecOrderActionField_InvestorID_set)
    __swig_setmethods__["ExecOrderActionRef"] = _pyctp.CThostFtdcExecOrderActionField_ExecOrderActionRef_set
    __swig_getmethods__["ExecOrderActionRef"] = _pyctp.CThostFtdcExecOrderActionField_ExecOrderActionRef_get
    if _newclass:
        ExecOrderActionRef = _swig_property(_pyctp.CThostFtdcExecOrderActionField_ExecOrderActionRef_get, _pyctp.CThostFtdcExecOrderActionField_ExecOrderActionRef_set)
    __swig_setmethods__["ExecOrderRef"] = _pyctp.CThostFtdcExecOrderActionField_ExecOrderRef_set
    __swig_getmethods__["ExecOrderRef"] = _pyctp.CThostFtdcExecOrderActionField_ExecOrderRef_get
    if _newclass:
        ExecOrderRef = _swig_property(_pyctp.CThostFtdcExecOrderActionField_ExecOrderRef_get, _pyctp.CThostFtdcExecOrderActionField_ExecOrderRef_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcExecOrderActionField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcExecOrderActionField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcExecOrderActionField_RequestID_get, _pyctp.CThostFtdcExecOrderActionField_RequestID_set)
    __swig_setmethods__["FrontID"] = _pyctp.CThostFtdcExecOrderActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CThostFtdcExecOrderActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CThostFtdcExecOrderActionField_FrontID_get, _pyctp.CThostFtdcExecOrderActionField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcExecOrderActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcExecOrderActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcExecOrderActionField_SessionID_get, _pyctp.CThostFtdcExecOrderActionField_SessionID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcExecOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcExecOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcExecOrderActionField_ExchangeID_get, _pyctp.CThostFtdcExecOrderActionField_ExchangeID_set)
    __swig_setmethods__["ExecOrderSysID"] = _pyctp.CThostFtdcExecOrderActionField_ExecOrderSysID_set
    __swig_getmethods__["ExecOrderSysID"] = _pyctp.CThostFtdcExecOrderActionField_ExecOrderSysID_get
    if _newclass:
        ExecOrderSysID = _swig_property(_pyctp.CThostFtdcExecOrderActionField_ExecOrderSysID_get, _pyctp.CThostFtdcExecOrderActionField_ExecOrderSysID_set)
    __swig_setmethods__["ActionFlag"] = _pyctp.CThostFtdcExecOrderActionField_ActionFlag_set
    __swig_getmethods__["ActionFlag"] = _pyctp.CThostFtdcExecOrderActionField_ActionFlag_get
    if _newclass:
        ActionFlag = _swig_property(_pyctp.CThostFtdcExecOrderActionField_ActionFlag_get, _pyctp.CThostFtdcExecOrderActionField_ActionFlag_set)
    __swig_setmethods__["ActionDate"] = _pyctp.CThostFtdcExecOrderActionField_ActionDate_set
    __swig_getmethods__["ActionDate"] = _pyctp.CThostFtdcExecOrderActionField_ActionDate_get
    if _newclass:
        ActionDate = _swig_property(_pyctp.CThostFtdcExecOrderActionField_ActionDate_get, _pyctp.CThostFtdcExecOrderActionField_ActionDate_set)
    __swig_setmethods__["ActionTime"] = _pyctp.CThostFtdcExecOrderActionField_ActionTime_set
    __swig_getmethods__["ActionTime"] = _pyctp.CThostFtdcExecOrderActionField_ActionTime_get
    if _newclass:
        ActionTime = _swig_property(_pyctp.CThostFtdcExecOrderActionField_ActionTime_get, _pyctp.CThostFtdcExecOrderActionField_ActionTime_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcExecOrderActionField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcExecOrderActionField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcExecOrderActionField_TraderID_get, _pyctp.CThostFtdcExecOrderActionField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcExecOrderActionField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcExecOrderActionField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcExecOrderActionField_InstallID_get, _pyctp.CThostFtdcExecOrderActionField_InstallID_set)
    __swig_setmethods__["ExecOrderLocalID"] = _pyctp.CThostFtdcExecOrderActionField_ExecOrderLocalID_set
    __swig_getmethods__["ExecOrderLocalID"] = _pyctp.CThostFtdcExecOrderActionField_ExecOrderLocalID_get
    if _newclass:
        ExecOrderLocalID = _swig_property(_pyctp.CThostFtdcExecOrderActionField_ExecOrderLocalID_get, _pyctp.CThostFtdcExecOrderActionField_ExecOrderLocalID_set)
    __swig_setmethods__["ActionLocalID"] = _pyctp.CThostFtdcExecOrderActionField_ActionLocalID_set
    __swig_getmethods__["ActionLocalID"] = _pyctp.CThostFtdcExecOrderActionField_ActionLocalID_get
    if _newclass:
        ActionLocalID = _swig_property(_pyctp.CThostFtdcExecOrderActionField_ActionLocalID_get, _pyctp.CThostFtdcExecOrderActionField_ActionLocalID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcExecOrderActionField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcExecOrderActionField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcExecOrderActionField_ParticipantID_get, _pyctp.CThostFtdcExecOrderActionField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcExecOrderActionField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcExecOrderActionField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcExecOrderActionField_ClientID_get, _pyctp.CThostFtdcExecOrderActionField_ClientID_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CThostFtdcExecOrderActionField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CThostFtdcExecOrderActionField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CThostFtdcExecOrderActionField_BusinessUnit_get, _pyctp.CThostFtdcExecOrderActionField_BusinessUnit_set)
    __swig_setmethods__["OrderActionStatus"] = _pyctp.CThostFtdcExecOrderActionField_OrderActionStatus_set
    __swig_getmethods__["OrderActionStatus"] = _pyctp.CThostFtdcExecOrderActionField_OrderActionStatus_get
    if _newclass:
        OrderActionStatus = _swig_property(_pyctp.CThostFtdcExecOrderActionField_OrderActionStatus_get, _pyctp.CThostFtdcExecOrderActionField_OrderActionStatus_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcExecOrderActionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcExecOrderActionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcExecOrderActionField_UserID_get, _pyctp.CThostFtdcExecOrderActionField_UserID_set)
    __swig_setmethods__["ActionType"] = _pyctp.CThostFtdcExecOrderActionField_ActionType_set
    __swig_getmethods__["ActionType"] = _pyctp.CThostFtdcExecOrderActionField_ActionType_get
    if _newclass:
        ActionType = _swig_property(_pyctp.CThostFtdcExecOrderActionField_ActionType_get, _pyctp.CThostFtdcExecOrderActionField_ActionType_set)
    __swig_setmethods__["StatusMsg"] = _pyctp.CThostFtdcExecOrderActionField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _pyctp.CThostFtdcExecOrderActionField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_pyctp.CThostFtdcExecOrderActionField_StatusMsg_get, _pyctp.CThostFtdcExecOrderActionField_StatusMsg_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcExecOrderActionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcExecOrderActionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcExecOrderActionField_InstrumentID_get, _pyctp.CThostFtdcExecOrderActionField_InstrumentID_set)
    __swig_setmethods__["BranchID"] = _pyctp.CThostFtdcExecOrderActionField_BranchID_set
    __swig_getmethods__["BranchID"] = _pyctp.CThostFtdcExecOrderActionField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_pyctp.CThostFtdcExecOrderActionField_BranchID_get, _pyctp.CThostFtdcExecOrderActionField_BranchID_set)
    __swig_setmethods__["InvestUnitID"] = _pyctp.CThostFtdcExecOrderActionField_InvestUnitID_set
    __swig_getmethods__["InvestUnitID"] = _pyctp.CThostFtdcExecOrderActionField_InvestUnitID_get
    if _newclass:
        InvestUnitID = _swig_property(_pyctp.CThostFtdcExecOrderActionField_InvestUnitID_get, _pyctp.CThostFtdcExecOrderActionField_InvestUnitID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcExecOrderActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcExecOrderActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcExecOrderActionField_IPAddress_get, _pyctp.CThostFtdcExecOrderActionField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcExecOrderActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcExecOrderActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcExecOrderActionField_MacAddress_get, _pyctp.CThostFtdcExecOrderActionField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcExecOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcExecOrderActionField
    __del__ = lambda self: None
CThostFtdcExecOrderActionField_swigregister = _pyctp.CThostFtdcExecOrderActionField_swigregister
CThostFtdcExecOrderActionField_swigregister(CThostFtdcExecOrderActionField)

class CThostFtdcQryExecOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryExecOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryExecOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryExecOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryExecOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryExecOrderField_BrokerID_get, _pyctp.CThostFtdcQryExecOrderField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryExecOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryExecOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryExecOrderField_InvestorID_get, _pyctp.CThostFtdcQryExecOrderField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryExecOrderField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryExecOrderField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryExecOrderField_InstrumentID_get, _pyctp.CThostFtdcQryExecOrderField_InstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryExecOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryExecOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryExecOrderField_ExchangeID_get, _pyctp.CThostFtdcQryExecOrderField_ExchangeID_set)
    __swig_setmethods__["ExecOrderSysID"] = _pyctp.CThostFtdcQryExecOrderField_ExecOrderSysID_set
    __swig_getmethods__["ExecOrderSysID"] = _pyctp.CThostFtdcQryExecOrderField_ExecOrderSysID_get
    if _newclass:
        ExecOrderSysID = _swig_property(_pyctp.CThostFtdcQryExecOrderField_ExecOrderSysID_get, _pyctp.CThostFtdcQryExecOrderField_ExecOrderSysID_set)
    __swig_setmethods__["InsertTimeStart"] = _pyctp.CThostFtdcQryExecOrderField_InsertTimeStart_set
    __swig_getmethods__["InsertTimeStart"] = _pyctp.CThostFtdcQryExecOrderField_InsertTimeStart_get
    if _newclass:
        InsertTimeStart = _swig_property(_pyctp.CThostFtdcQryExecOrderField_InsertTimeStart_get, _pyctp.CThostFtdcQryExecOrderField_InsertTimeStart_set)
    __swig_setmethods__["InsertTimeEnd"] = _pyctp.CThostFtdcQryExecOrderField_InsertTimeEnd_set
    __swig_getmethods__["InsertTimeEnd"] = _pyctp.CThostFtdcQryExecOrderField_InsertTimeEnd_get
    if _newclass:
        InsertTimeEnd = _swig_property(_pyctp.CThostFtdcQryExecOrderField_InsertTimeEnd_get, _pyctp.CThostFtdcQryExecOrderField_InsertTimeEnd_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryExecOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryExecOrderField
    __del__ = lambda self: None
CThostFtdcQryExecOrderField_swigregister = _pyctp.CThostFtdcQryExecOrderField_swigregister
CThostFtdcQryExecOrderField_swigregister(CThostFtdcQryExecOrderField)

class CThostFtdcExchangeExecOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcExchangeExecOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcExchangeExecOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["Volume"] = _pyctp.CThostFtdcExchangeExecOrderField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CThostFtdcExchangeExecOrderField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_Volume_get, _pyctp.CThostFtdcExchangeExecOrderField_Volume_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcExchangeExecOrderField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcExchangeExecOrderField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_RequestID_get, _pyctp.CThostFtdcExchangeExecOrderField_RequestID_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CThostFtdcExchangeExecOrderField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CThostFtdcExchangeExecOrderField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_BusinessUnit_get, _pyctp.CThostFtdcExchangeExecOrderField_BusinessUnit_set)
    __swig_setmethods__["OffsetFlag"] = _pyctp.CThostFtdcExchangeExecOrderField_OffsetFlag_set
    __swig_getmethods__["OffsetFlag"] = _pyctp.CThostFtdcExchangeExecOrderField_OffsetFlag_get
    if _newclass:
        OffsetFlag = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_OffsetFlag_get, _pyctp.CThostFtdcExchangeExecOrderField_OffsetFlag_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcExchangeExecOrderField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcExchangeExecOrderField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_HedgeFlag_get, _pyctp.CThostFtdcExchangeExecOrderField_HedgeFlag_set)
    __swig_setmethods__["ActionType"] = _pyctp.CThostFtdcExchangeExecOrderField_ActionType_set
    __swig_getmethods__["ActionType"] = _pyctp.CThostFtdcExchangeExecOrderField_ActionType_get
    if _newclass:
        ActionType = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_ActionType_get, _pyctp.CThostFtdcExchangeExecOrderField_ActionType_set)
    __swig_setmethods__["PosiDirection"] = _pyctp.CThostFtdcExchangeExecOrderField_PosiDirection_set
    __swig_getmethods__["PosiDirection"] = _pyctp.CThostFtdcExchangeExecOrderField_PosiDirection_get
    if _newclass:
        PosiDirection = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_PosiDirection_get, _pyctp.CThostFtdcExchangeExecOrderField_PosiDirection_set)
    __swig_setmethods__["ReservePositionFlag"] = _pyctp.CThostFtdcExchangeExecOrderField_ReservePositionFlag_set
    __swig_getmethods__["ReservePositionFlag"] = _pyctp.CThostFtdcExchangeExecOrderField_ReservePositionFlag_get
    if _newclass:
        ReservePositionFlag = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_ReservePositionFlag_get, _pyctp.CThostFtdcExchangeExecOrderField_ReservePositionFlag_set)
    __swig_setmethods__["CloseFlag"] = _pyctp.CThostFtdcExchangeExecOrderField_CloseFlag_set
    __swig_getmethods__["CloseFlag"] = _pyctp.CThostFtdcExchangeExecOrderField_CloseFlag_get
    if _newclass:
        CloseFlag = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_CloseFlag_get, _pyctp.CThostFtdcExchangeExecOrderField_CloseFlag_set)
    __swig_setmethods__["ExecOrderLocalID"] = _pyctp.CThostFtdcExchangeExecOrderField_ExecOrderLocalID_set
    __swig_getmethods__["ExecOrderLocalID"] = _pyctp.CThostFtdcExchangeExecOrderField_ExecOrderLocalID_get
    if _newclass:
        ExecOrderLocalID = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_ExecOrderLocalID_get, _pyctp.CThostFtdcExchangeExecOrderField_ExecOrderLocalID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeExecOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeExecOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_ExchangeID_get, _pyctp.CThostFtdcExchangeExecOrderField_ExchangeID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcExchangeExecOrderField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcExchangeExecOrderField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_ParticipantID_get, _pyctp.CThostFtdcExchangeExecOrderField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcExchangeExecOrderField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcExchangeExecOrderField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_ClientID_get, _pyctp.CThostFtdcExchangeExecOrderField_ClientID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CThostFtdcExchangeExecOrderField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CThostFtdcExchangeExecOrderField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_ExchangeInstID_get, _pyctp.CThostFtdcExchangeExecOrderField_ExchangeInstID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcExchangeExecOrderField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcExchangeExecOrderField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_TraderID_get, _pyctp.CThostFtdcExchangeExecOrderField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcExchangeExecOrderField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcExchangeExecOrderField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_InstallID_get, _pyctp.CThostFtdcExchangeExecOrderField_InstallID_set)
    __swig_setmethods__["OrderSubmitStatus"] = _pyctp.CThostFtdcExchangeExecOrderField_OrderSubmitStatus_set
    __swig_getmethods__["OrderSubmitStatus"] = _pyctp.CThostFtdcExchangeExecOrderField_OrderSubmitStatus_get
    if _newclass:
        OrderSubmitStatus = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_OrderSubmitStatus_get, _pyctp.CThostFtdcExchangeExecOrderField_OrderSubmitStatus_set)
    __swig_setmethods__["NotifySequence"] = _pyctp.CThostFtdcExchangeExecOrderField_NotifySequence_set
    __swig_getmethods__["NotifySequence"] = _pyctp.CThostFtdcExchangeExecOrderField_NotifySequence_get
    if _newclass:
        NotifySequence = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_NotifySequence_get, _pyctp.CThostFtdcExchangeExecOrderField_NotifySequence_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcExchangeExecOrderField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcExchangeExecOrderField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_TradingDay_get, _pyctp.CThostFtdcExchangeExecOrderField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CThostFtdcExchangeExecOrderField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CThostFtdcExchangeExecOrderField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_SettlementID_get, _pyctp.CThostFtdcExchangeExecOrderField_SettlementID_set)
    __swig_setmethods__["ExecOrderSysID"] = _pyctp.CThostFtdcExchangeExecOrderField_ExecOrderSysID_set
    __swig_getmethods__["ExecOrderSysID"] = _pyctp.CThostFtdcExchangeExecOrderField_ExecOrderSysID_get
    if _newclass:
        ExecOrderSysID = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_ExecOrderSysID_get, _pyctp.CThostFtdcExchangeExecOrderField_ExecOrderSysID_set)
    __swig_setmethods__["InsertDate"] = _pyctp.CThostFtdcExchangeExecOrderField_InsertDate_set
    __swig_getmethods__["InsertDate"] = _pyctp.CThostFtdcExchangeExecOrderField_InsertDate_get
    if _newclass:
        InsertDate = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_InsertDate_get, _pyctp.CThostFtdcExchangeExecOrderField_InsertDate_set)
    __swig_setmethods__["InsertTime"] = _pyctp.CThostFtdcExchangeExecOrderField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _pyctp.CThostFtdcExchangeExecOrderField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_InsertTime_get, _pyctp.CThostFtdcExchangeExecOrderField_InsertTime_set)
    __swig_setmethods__["CancelTime"] = _pyctp.CThostFtdcExchangeExecOrderField_CancelTime_set
    __swig_getmethods__["CancelTime"] = _pyctp.CThostFtdcExchangeExecOrderField_CancelTime_get
    if _newclass:
        CancelTime = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_CancelTime_get, _pyctp.CThostFtdcExchangeExecOrderField_CancelTime_set)
    __swig_setmethods__["ExecResult"] = _pyctp.CThostFtdcExchangeExecOrderField_ExecResult_set
    __swig_getmethods__["ExecResult"] = _pyctp.CThostFtdcExchangeExecOrderField_ExecResult_get
    if _newclass:
        ExecResult = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_ExecResult_get, _pyctp.CThostFtdcExchangeExecOrderField_ExecResult_set)
    __swig_setmethods__["ClearingPartID"] = _pyctp.CThostFtdcExchangeExecOrderField_ClearingPartID_set
    __swig_getmethods__["ClearingPartID"] = _pyctp.CThostFtdcExchangeExecOrderField_ClearingPartID_get
    if _newclass:
        ClearingPartID = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_ClearingPartID_get, _pyctp.CThostFtdcExchangeExecOrderField_ClearingPartID_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CThostFtdcExchangeExecOrderField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CThostFtdcExchangeExecOrderField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_SequenceNo_get, _pyctp.CThostFtdcExchangeExecOrderField_SequenceNo_set)
    __swig_setmethods__["BranchID"] = _pyctp.CThostFtdcExchangeExecOrderField_BranchID_set
    __swig_getmethods__["BranchID"] = _pyctp.CThostFtdcExchangeExecOrderField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_BranchID_get, _pyctp.CThostFtdcExchangeExecOrderField_BranchID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcExchangeExecOrderField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcExchangeExecOrderField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_IPAddress_get, _pyctp.CThostFtdcExchangeExecOrderField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcExchangeExecOrderField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcExchangeExecOrderField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcExchangeExecOrderField_MacAddress_get, _pyctp.CThostFtdcExchangeExecOrderField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcExchangeExecOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcExchangeExecOrderField
    __del__ = lambda self: None
CThostFtdcExchangeExecOrderField_swigregister = _pyctp.CThostFtdcExchangeExecOrderField_swigregister
CThostFtdcExchangeExecOrderField_swigregister(CThostFtdcExchangeExecOrderField)

class CThostFtdcQryExchangeExecOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryExchangeExecOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryExchangeExecOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcQryExchangeExecOrderField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcQryExchangeExecOrderField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcQryExchangeExecOrderField_ParticipantID_get, _pyctp.CThostFtdcQryExchangeExecOrderField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcQryExchangeExecOrderField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcQryExchangeExecOrderField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcQryExchangeExecOrderField_ClientID_get, _pyctp.CThostFtdcQryExchangeExecOrderField_ClientID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CThostFtdcQryExchangeExecOrderField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CThostFtdcQryExchangeExecOrderField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CThostFtdcQryExchangeExecOrderField_ExchangeInstID_get, _pyctp.CThostFtdcQryExchangeExecOrderField_ExchangeInstID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryExchangeExecOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryExchangeExecOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryExchangeExecOrderField_ExchangeID_get, _pyctp.CThostFtdcQryExchangeExecOrderField_ExchangeID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcQryExchangeExecOrderField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcQryExchangeExecOrderField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcQryExchangeExecOrderField_TraderID_get, _pyctp.CThostFtdcQryExchangeExecOrderField_TraderID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryExchangeExecOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryExchangeExecOrderField
    __del__ = lambda self: None
CThostFtdcQryExchangeExecOrderField_swigregister = _pyctp.CThostFtdcQryExchangeExecOrderField_swigregister
CThostFtdcQryExchangeExecOrderField_swigregister(CThostFtdcQryExchangeExecOrderField)

class CThostFtdcQryExecOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryExecOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryExecOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryExecOrderActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryExecOrderActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryExecOrderActionField_BrokerID_get, _pyctp.CThostFtdcQryExecOrderActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryExecOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryExecOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryExecOrderActionField_InvestorID_get, _pyctp.CThostFtdcQryExecOrderActionField_InvestorID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryExecOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryExecOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryExecOrderActionField_ExchangeID_get, _pyctp.CThostFtdcQryExecOrderActionField_ExchangeID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryExecOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryExecOrderActionField
    __del__ = lambda self: None
CThostFtdcQryExecOrderActionField_swigregister = _pyctp.CThostFtdcQryExecOrderActionField_swigregister
CThostFtdcQryExecOrderActionField_swigregister(CThostFtdcQryExecOrderActionField)

class CThostFtdcExchangeExecOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcExchangeExecOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcExchangeExecOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeExecOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeExecOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcExchangeExecOrderActionField_ExchangeID_get, _pyctp.CThostFtdcExchangeExecOrderActionField_ExchangeID_set)
    __swig_setmethods__["ExecOrderSysID"] = _pyctp.CThostFtdcExchangeExecOrderActionField_ExecOrderSysID_set
    __swig_getmethods__["ExecOrderSysID"] = _pyctp.CThostFtdcExchangeExecOrderActionField_ExecOrderSysID_get
    if _newclass:
        ExecOrderSysID = _swig_property(_pyctp.CThostFtdcExchangeExecOrderActionField_ExecOrderSysID_get, _pyctp.CThostFtdcExchangeExecOrderActionField_ExecOrderSysID_set)
    __swig_setmethods__["ActionFlag"] = _pyctp.CThostFtdcExchangeExecOrderActionField_ActionFlag_set
    __swig_getmethods__["ActionFlag"] = _pyctp.CThostFtdcExchangeExecOrderActionField_ActionFlag_get
    if _newclass:
        ActionFlag = _swig_property(_pyctp.CThostFtdcExchangeExecOrderActionField_ActionFlag_get, _pyctp.CThostFtdcExchangeExecOrderActionField_ActionFlag_set)
    __swig_setmethods__["ActionDate"] = _pyctp.CThostFtdcExchangeExecOrderActionField_ActionDate_set
    __swig_getmethods__["ActionDate"] = _pyctp.CThostFtdcExchangeExecOrderActionField_ActionDate_get
    if _newclass:
        ActionDate = _swig_property(_pyctp.CThostFtdcExchangeExecOrderActionField_ActionDate_get, _pyctp.CThostFtdcExchangeExecOrderActionField_ActionDate_set)
    __swig_setmethods__["ActionTime"] = _pyctp.CThostFtdcExchangeExecOrderActionField_ActionTime_set
    __swig_getmethods__["ActionTime"] = _pyctp.CThostFtdcExchangeExecOrderActionField_ActionTime_get
    if _newclass:
        ActionTime = _swig_property(_pyctp.CThostFtdcExchangeExecOrderActionField_ActionTime_get, _pyctp.CThostFtdcExchangeExecOrderActionField_ActionTime_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcExchangeExecOrderActionField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcExchangeExecOrderActionField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcExchangeExecOrderActionField_TraderID_get, _pyctp.CThostFtdcExchangeExecOrderActionField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcExchangeExecOrderActionField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcExchangeExecOrderActionField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcExchangeExecOrderActionField_InstallID_get, _pyctp.CThostFtdcExchangeExecOrderActionField_InstallID_set)
    __swig_setmethods__["ExecOrderLocalID"] = _pyctp.CThostFtdcExchangeExecOrderActionField_ExecOrderLocalID_set
    __swig_getmethods__["ExecOrderLocalID"] = _pyctp.CThostFtdcExchangeExecOrderActionField_ExecOrderLocalID_get
    if _newclass:
        ExecOrderLocalID = _swig_property(_pyctp.CThostFtdcExchangeExecOrderActionField_ExecOrderLocalID_get, _pyctp.CThostFtdcExchangeExecOrderActionField_ExecOrderLocalID_set)
    __swig_setmethods__["ActionLocalID"] = _pyctp.CThostFtdcExchangeExecOrderActionField_ActionLocalID_set
    __swig_getmethods__["ActionLocalID"] = _pyctp.CThostFtdcExchangeExecOrderActionField_ActionLocalID_get
    if _newclass:
        ActionLocalID = _swig_property(_pyctp.CThostFtdcExchangeExecOrderActionField_ActionLocalID_get, _pyctp.CThostFtdcExchangeExecOrderActionField_ActionLocalID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcExchangeExecOrderActionField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcExchangeExecOrderActionField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcExchangeExecOrderActionField_ParticipantID_get, _pyctp.CThostFtdcExchangeExecOrderActionField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcExchangeExecOrderActionField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcExchangeExecOrderActionField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcExchangeExecOrderActionField_ClientID_get, _pyctp.CThostFtdcExchangeExecOrderActionField_ClientID_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CThostFtdcExchangeExecOrderActionField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CThostFtdcExchangeExecOrderActionField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CThostFtdcExchangeExecOrderActionField_BusinessUnit_get, _pyctp.CThostFtdcExchangeExecOrderActionField_BusinessUnit_set)
    __swig_setmethods__["OrderActionStatus"] = _pyctp.CThostFtdcExchangeExecOrderActionField_OrderActionStatus_set
    __swig_getmethods__["OrderActionStatus"] = _pyctp.CThostFtdcExchangeExecOrderActionField_OrderActionStatus_get
    if _newclass:
        OrderActionStatus = _swig_property(_pyctp.CThostFtdcExchangeExecOrderActionField_OrderActionStatus_get, _pyctp.CThostFtdcExchangeExecOrderActionField_OrderActionStatus_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcExchangeExecOrderActionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcExchangeExecOrderActionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcExchangeExecOrderActionField_UserID_get, _pyctp.CThostFtdcExchangeExecOrderActionField_UserID_set)
    __swig_setmethods__["ActionType"] = _pyctp.CThostFtdcExchangeExecOrderActionField_ActionType_set
    __swig_getmethods__["ActionType"] = _pyctp.CThostFtdcExchangeExecOrderActionField_ActionType_get
    if _newclass:
        ActionType = _swig_property(_pyctp.CThostFtdcExchangeExecOrderActionField_ActionType_get, _pyctp.CThostFtdcExchangeExecOrderActionField_ActionType_set)
    __swig_setmethods__["BranchID"] = _pyctp.CThostFtdcExchangeExecOrderActionField_BranchID_set
    __swig_getmethods__["BranchID"] = _pyctp.CThostFtdcExchangeExecOrderActionField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_pyctp.CThostFtdcExchangeExecOrderActionField_BranchID_get, _pyctp.CThostFtdcExchangeExecOrderActionField_BranchID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcExchangeExecOrderActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcExchangeExecOrderActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcExchangeExecOrderActionField_IPAddress_get, _pyctp.CThostFtdcExchangeExecOrderActionField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcExchangeExecOrderActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcExchangeExecOrderActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcExchangeExecOrderActionField_MacAddress_get, _pyctp.CThostFtdcExchangeExecOrderActionField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcExchangeExecOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcExchangeExecOrderActionField
    __del__ = lambda self: None
CThostFtdcExchangeExecOrderActionField_swigregister = _pyctp.CThostFtdcExchangeExecOrderActionField_swigregister
CThostFtdcExchangeExecOrderActionField_swigregister(CThostFtdcExchangeExecOrderActionField)

class CThostFtdcQryExchangeExecOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryExchangeExecOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryExchangeExecOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcQryExchangeExecOrderActionField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcQryExchangeExecOrderActionField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcQryExchangeExecOrderActionField_ParticipantID_get, _pyctp.CThostFtdcQryExchangeExecOrderActionField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcQryExchangeExecOrderActionField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcQryExchangeExecOrderActionField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcQryExchangeExecOrderActionField_ClientID_get, _pyctp.CThostFtdcQryExchangeExecOrderActionField_ClientID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryExchangeExecOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryExchangeExecOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryExchangeExecOrderActionField_ExchangeID_get, _pyctp.CThostFtdcQryExchangeExecOrderActionField_ExchangeID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcQryExchangeExecOrderActionField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcQryExchangeExecOrderActionField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcQryExchangeExecOrderActionField_TraderID_get, _pyctp.CThostFtdcQryExchangeExecOrderActionField_TraderID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryExchangeExecOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryExchangeExecOrderActionField
    __del__ = lambda self: None
CThostFtdcQryExchangeExecOrderActionField_swigregister = _pyctp.CThostFtdcQryExchangeExecOrderActionField_swigregister
CThostFtdcQryExchangeExecOrderActionField_swigregister(CThostFtdcQryExchangeExecOrderActionField)

class CThostFtdcErrExecOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcErrExecOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcErrExecOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcErrExecOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcErrExecOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcErrExecOrderField_BrokerID_get, _pyctp.CThostFtdcErrExecOrderField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcErrExecOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcErrExecOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcErrExecOrderField_InvestorID_get, _pyctp.CThostFtdcErrExecOrderField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcErrExecOrderField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcErrExecOrderField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcErrExecOrderField_InstrumentID_get, _pyctp.CThostFtdcErrExecOrderField_InstrumentID_set)
    __swig_setmethods__["ExecOrderRef"] = _pyctp.CThostFtdcErrExecOrderField_ExecOrderRef_set
    __swig_getmethods__["ExecOrderRef"] = _pyctp.CThostFtdcErrExecOrderField_ExecOrderRef_get
    if _newclass:
        ExecOrderRef = _swig_property(_pyctp.CThostFtdcErrExecOrderField_ExecOrderRef_get, _pyctp.CThostFtdcErrExecOrderField_ExecOrderRef_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcErrExecOrderField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcErrExecOrderField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcErrExecOrderField_UserID_get, _pyctp.CThostFtdcErrExecOrderField_UserID_set)
    __swig_setmethods__["Volume"] = _pyctp.CThostFtdcErrExecOrderField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CThostFtdcErrExecOrderField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CThostFtdcErrExecOrderField_Volume_get, _pyctp.CThostFtdcErrExecOrderField_Volume_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcErrExecOrderField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcErrExecOrderField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcErrExecOrderField_RequestID_get, _pyctp.CThostFtdcErrExecOrderField_RequestID_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CThostFtdcErrExecOrderField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CThostFtdcErrExecOrderField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CThostFtdcErrExecOrderField_BusinessUnit_get, _pyctp.CThostFtdcErrExecOrderField_BusinessUnit_set)
    __swig_setmethods__["OffsetFlag"] = _pyctp.CThostFtdcErrExecOrderField_OffsetFlag_set
    __swig_getmethods__["OffsetFlag"] = _pyctp.CThostFtdcErrExecOrderField_OffsetFlag_get
    if _newclass:
        OffsetFlag = _swig_property(_pyctp.CThostFtdcErrExecOrderField_OffsetFlag_get, _pyctp.CThostFtdcErrExecOrderField_OffsetFlag_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcErrExecOrderField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcErrExecOrderField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcErrExecOrderField_HedgeFlag_get, _pyctp.CThostFtdcErrExecOrderField_HedgeFlag_set)
    __swig_setmethods__["ActionType"] = _pyctp.CThostFtdcErrExecOrderField_ActionType_set
    __swig_getmethods__["ActionType"] = _pyctp.CThostFtdcErrExecOrderField_ActionType_get
    if _newclass:
        ActionType = _swig_property(_pyctp.CThostFtdcErrExecOrderField_ActionType_get, _pyctp.CThostFtdcErrExecOrderField_ActionType_set)
    __swig_setmethods__["PosiDirection"] = _pyctp.CThostFtdcErrExecOrderField_PosiDirection_set
    __swig_getmethods__["PosiDirection"] = _pyctp.CThostFtdcErrExecOrderField_PosiDirection_get
    if _newclass:
        PosiDirection = _swig_property(_pyctp.CThostFtdcErrExecOrderField_PosiDirection_get, _pyctp.CThostFtdcErrExecOrderField_PosiDirection_set)
    __swig_setmethods__["ReservePositionFlag"] = _pyctp.CThostFtdcErrExecOrderField_ReservePositionFlag_set
    __swig_getmethods__["ReservePositionFlag"] = _pyctp.CThostFtdcErrExecOrderField_ReservePositionFlag_get
    if _newclass:
        ReservePositionFlag = _swig_property(_pyctp.CThostFtdcErrExecOrderField_ReservePositionFlag_get, _pyctp.CThostFtdcErrExecOrderField_ReservePositionFlag_set)
    __swig_setmethods__["CloseFlag"] = _pyctp.CThostFtdcErrExecOrderField_CloseFlag_set
    __swig_getmethods__["CloseFlag"] = _pyctp.CThostFtdcErrExecOrderField_CloseFlag_get
    if _newclass:
        CloseFlag = _swig_property(_pyctp.CThostFtdcErrExecOrderField_CloseFlag_get, _pyctp.CThostFtdcErrExecOrderField_CloseFlag_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcErrExecOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcErrExecOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcErrExecOrderField_ExchangeID_get, _pyctp.CThostFtdcErrExecOrderField_ExchangeID_set)
    __swig_setmethods__["InvestUnitID"] = _pyctp.CThostFtdcErrExecOrderField_InvestUnitID_set
    __swig_getmethods__["InvestUnitID"] = _pyctp.CThostFtdcErrExecOrderField_InvestUnitID_get
    if _newclass:
        InvestUnitID = _swig_property(_pyctp.CThostFtdcErrExecOrderField_InvestUnitID_get, _pyctp.CThostFtdcErrExecOrderField_InvestUnitID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcErrExecOrderField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcErrExecOrderField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcErrExecOrderField_AccountID_get, _pyctp.CThostFtdcErrExecOrderField_AccountID_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcErrExecOrderField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcErrExecOrderField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcErrExecOrderField_CurrencyID_get, _pyctp.CThostFtdcErrExecOrderField_CurrencyID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcErrExecOrderField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcErrExecOrderField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcErrExecOrderField_ClientID_get, _pyctp.CThostFtdcErrExecOrderField_ClientID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcErrExecOrderField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcErrExecOrderField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcErrExecOrderField_IPAddress_get, _pyctp.CThostFtdcErrExecOrderField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcErrExecOrderField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcErrExecOrderField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcErrExecOrderField_MacAddress_get, _pyctp.CThostFtdcErrExecOrderField_MacAddress_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CThostFtdcErrExecOrderField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CThostFtdcErrExecOrderField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CThostFtdcErrExecOrderField_ErrorID_get, _pyctp.CThostFtdcErrExecOrderField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CThostFtdcErrExecOrderField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CThostFtdcErrExecOrderField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CThostFtdcErrExecOrderField_ErrorMsg_get, _pyctp.CThostFtdcErrExecOrderField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcErrExecOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcErrExecOrderField
    __del__ = lambda self: None
CThostFtdcErrExecOrderField_swigregister = _pyctp.CThostFtdcErrExecOrderField_swigregister
CThostFtdcErrExecOrderField_swigregister(CThostFtdcErrExecOrderField)

class CThostFtdcQryErrExecOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryErrExecOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryErrExecOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryErrExecOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryErrExecOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryErrExecOrderField_BrokerID_get, _pyctp.CThostFtdcQryErrExecOrderField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryErrExecOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryErrExecOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryErrExecOrderField_InvestorID_get, _pyctp.CThostFtdcQryErrExecOrderField_InvestorID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryErrExecOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryErrExecOrderField
    __del__ = lambda self: None
CThostFtdcQryErrExecOrderField_swigregister = _pyctp.CThostFtdcQryErrExecOrderField_swigregister
CThostFtdcQryErrExecOrderField_swigregister(CThostFtdcQryErrExecOrderField)

class CThostFtdcErrExecOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcErrExecOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcErrExecOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcErrExecOrderActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcErrExecOrderActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcErrExecOrderActionField_BrokerID_get, _pyctp.CThostFtdcErrExecOrderActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcErrExecOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcErrExecOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcErrExecOrderActionField_InvestorID_get, _pyctp.CThostFtdcErrExecOrderActionField_InvestorID_set)
    __swig_setmethods__["ExecOrderActionRef"] = _pyctp.CThostFtdcErrExecOrderActionField_ExecOrderActionRef_set
    __swig_getmethods__["ExecOrderActionRef"] = _pyctp.CThostFtdcErrExecOrderActionField_ExecOrderActionRef_get
    if _newclass:
        ExecOrderActionRef = _swig_property(_pyctp.CThostFtdcErrExecOrderActionField_ExecOrderActionRef_get, _pyctp.CThostFtdcErrExecOrderActionField_ExecOrderActionRef_set)
    __swig_setmethods__["ExecOrderRef"] = _pyctp.CThostFtdcErrExecOrderActionField_ExecOrderRef_set
    __swig_getmethods__["ExecOrderRef"] = _pyctp.CThostFtdcErrExecOrderActionField_ExecOrderRef_get
    if _newclass:
        ExecOrderRef = _swig_property(_pyctp.CThostFtdcErrExecOrderActionField_ExecOrderRef_get, _pyctp.CThostFtdcErrExecOrderActionField_ExecOrderRef_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcErrExecOrderActionField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcErrExecOrderActionField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcErrExecOrderActionField_RequestID_get, _pyctp.CThostFtdcErrExecOrderActionField_RequestID_set)
    __swig_setmethods__["FrontID"] = _pyctp.CThostFtdcErrExecOrderActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CThostFtdcErrExecOrderActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CThostFtdcErrExecOrderActionField_FrontID_get, _pyctp.CThostFtdcErrExecOrderActionField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcErrExecOrderActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcErrExecOrderActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcErrExecOrderActionField_SessionID_get, _pyctp.CThostFtdcErrExecOrderActionField_SessionID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcErrExecOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcErrExecOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcErrExecOrderActionField_ExchangeID_get, _pyctp.CThostFtdcErrExecOrderActionField_ExchangeID_set)
    __swig_setmethods__["ExecOrderSysID"] = _pyctp.CThostFtdcErrExecOrderActionField_ExecOrderSysID_set
    __swig_getmethods__["ExecOrderSysID"] = _pyctp.CThostFtdcErrExecOrderActionField_ExecOrderSysID_get
    if _newclass:
        ExecOrderSysID = _swig_property(_pyctp.CThostFtdcErrExecOrderActionField_ExecOrderSysID_get, _pyctp.CThostFtdcErrExecOrderActionField_ExecOrderSysID_set)
    __swig_setmethods__["ActionFlag"] = _pyctp.CThostFtdcErrExecOrderActionField_ActionFlag_set
    __swig_getmethods__["ActionFlag"] = _pyctp.CThostFtdcErrExecOrderActionField_ActionFlag_get
    if _newclass:
        ActionFlag = _swig_property(_pyctp.CThostFtdcErrExecOrderActionField_ActionFlag_get, _pyctp.CThostFtdcErrExecOrderActionField_ActionFlag_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcErrExecOrderActionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcErrExecOrderActionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcErrExecOrderActionField_UserID_get, _pyctp.CThostFtdcErrExecOrderActionField_UserID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcErrExecOrderActionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcErrExecOrderActionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcErrExecOrderActionField_InstrumentID_get, _pyctp.CThostFtdcErrExecOrderActionField_InstrumentID_set)
    __swig_setmethods__["InvestUnitID"] = _pyctp.CThostFtdcErrExecOrderActionField_InvestUnitID_set
    __swig_getmethods__["InvestUnitID"] = _pyctp.CThostFtdcErrExecOrderActionField_InvestUnitID_get
    if _newclass:
        InvestUnitID = _swig_property(_pyctp.CThostFtdcErrExecOrderActionField_InvestUnitID_get, _pyctp.CThostFtdcErrExecOrderActionField_InvestUnitID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcErrExecOrderActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcErrExecOrderActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcErrExecOrderActionField_IPAddress_get, _pyctp.CThostFtdcErrExecOrderActionField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcErrExecOrderActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcErrExecOrderActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcErrExecOrderActionField_MacAddress_get, _pyctp.CThostFtdcErrExecOrderActionField_MacAddress_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CThostFtdcErrExecOrderActionField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CThostFtdcErrExecOrderActionField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CThostFtdcErrExecOrderActionField_ErrorID_get, _pyctp.CThostFtdcErrExecOrderActionField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CThostFtdcErrExecOrderActionField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CThostFtdcErrExecOrderActionField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CThostFtdcErrExecOrderActionField_ErrorMsg_get, _pyctp.CThostFtdcErrExecOrderActionField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcErrExecOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcErrExecOrderActionField
    __del__ = lambda self: None
CThostFtdcErrExecOrderActionField_swigregister = _pyctp.CThostFtdcErrExecOrderActionField_swigregister
CThostFtdcErrExecOrderActionField_swigregister(CThostFtdcErrExecOrderActionField)

class CThostFtdcQryErrExecOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryErrExecOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryErrExecOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryErrExecOrderActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryErrExecOrderActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryErrExecOrderActionField_BrokerID_get, _pyctp.CThostFtdcQryErrExecOrderActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryErrExecOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryErrExecOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryErrExecOrderActionField_InvestorID_get, _pyctp.CThostFtdcQryErrExecOrderActionField_InvestorID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryErrExecOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryErrExecOrderActionField
    __del__ = lambda self: None
CThostFtdcQryErrExecOrderActionField_swigregister = _pyctp.CThostFtdcQryErrExecOrderActionField_swigregister
CThostFtdcQryErrExecOrderActionField_swigregister(CThostFtdcQryErrExecOrderActionField)

class CThostFtdcOptionInstrTradingRightField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcOptionInstrTradingRightField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcOptionInstrTradingRightField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcOptionInstrTradingRightField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcOptionInstrTradingRightField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcOptionInstrTradingRightField_InstrumentID_get, _pyctp.CThostFtdcOptionInstrTradingRightField_InstrumentID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CThostFtdcOptionInstrTradingRightField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CThostFtdcOptionInstrTradingRightField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CThostFtdcOptionInstrTradingRightField_InvestorRange_get, _pyctp.CThostFtdcOptionInstrTradingRightField_InvestorRange_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcOptionInstrTradingRightField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcOptionInstrTradingRightField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcOptionInstrTradingRightField_BrokerID_get, _pyctp.CThostFtdcOptionInstrTradingRightField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcOptionInstrTradingRightField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcOptionInstrTradingRightField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcOptionInstrTradingRightField_InvestorID_get, _pyctp.CThostFtdcOptionInstrTradingRightField_InvestorID_set)
    __swig_setmethods__["Direction"] = _pyctp.CThostFtdcOptionInstrTradingRightField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CThostFtdcOptionInstrTradingRightField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CThostFtdcOptionInstrTradingRightField_Direction_get, _pyctp.CThostFtdcOptionInstrTradingRightField_Direction_set)
    __swig_setmethods__["TradingRight"] = _pyctp.CThostFtdcOptionInstrTradingRightField_TradingRight_set
    __swig_getmethods__["TradingRight"] = _pyctp.CThostFtdcOptionInstrTradingRightField_TradingRight_get
    if _newclass:
        TradingRight = _swig_property(_pyctp.CThostFtdcOptionInstrTradingRightField_TradingRight_get, _pyctp.CThostFtdcOptionInstrTradingRightField_TradingRight_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcOptionInstrTradingRightField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcOptionInstrTradingRightField
    __del__ = lambda self: None
CThostFtdcOptionInstrTradingRightField_swigregister = _pyctp.CThostFtdcOptionInstrTradingRightField_swigregister
CThostFtdcOptionInstrTradingRightField_swigregister(CThostFtdcOptionInstrTradingRightField)

class CThostFtdcQryOptionInstrTradingRightField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryOptionInstrTradingRightField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryOptionInstrTradingRightField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryOptionInstrTradingRightField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryOptionInstrTradingRightField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryOptionInstrTradingRightField_BrokerID_get, _pyctp.CThostFtdcQryOptionInstrTradingRightField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryOptionInstrTradingRightField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryOptionInstrTradingRightField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryOptionInstrTradingRightField_InvestorID_get, _pyctp.CThostFtdcQryOptionInstrTradingRightField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryOptionInstrTradingRightField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryOptionInstrTradingRightField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryOptionInstrTradingRightField_InstrumentID_get, _pyctp.CThostFtdcQryOptionInstrTradingRightField_InstrumentID_set)
    __swig_setmethods__["Direction"] = _pyctp.CThostFtdcQryOptionInstrTradingRightField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CThostFtdcQryOptionInstrTradingRightField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CThostFtdcQryOptionInstrTradingRightField_Direction_get, _pyctp.CThostFtdcQryOptionInstrTradingRightField_Direction_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryOptionInstrTradingRightField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryOptionInstrTradingRightField
    __del__ = lambda self: None
CThostFtdcQryOptionInstrTradingRightField_swigregister = _pyctp.CThostFtdcQryOptionInstrTradingRightField_swigregister
CThostFtdcQryOptionInstrTradingRightField_swigregister(CThostFtdcQryOptionInstrTradingRightField)

class CThostFtdcInputForQuoteField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcInputForQuoteField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcInputForQuoteField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcInputForQuoteField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcInputForQuoteField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcInputForQuoteField_BrokerID_get, _pyctp.CThostFtdcInputForQuoteField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcInputForQuoteField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcInputForQuoteField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcInputForQuoteField_InvestorID_get, _pyctp.CThostFtdcInputForQuoteField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcInputForQuoteField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcInputForQuoteField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcInputForQuoteField_InstrumentID_get, _pyctp.CThostFtdcInputForQuoteField_InstrumentID_set)
    __swig_setmethods__["ForQuoteRef"] = _pyctp.CThostFtdcInputForQuoteField_ForQuoteRef_set
    __swig_getmethods__["ForQuoteRef"] = _pyctp.CThostFtdcInputForQuoteField_ForQuoteRef_get
    if _newclass:
        ForQuoteRef = _swig_property(_pyctp.CThostFtdcInputForQuoteField_ForQuoteRef_get, _pyctp.CThostFtdcInputForQuoteField_ForQuoteRef_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcInputForQuoteField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcInputForQuoteField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcInputForQuoteField_UserID_get, _pyctp.CThostFtdcInputForQuoteField_UserID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcInputForQuoteField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcInputForQuoteField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcInputForQuoteField_ExchangeID_get, _pyctp.CThostFtdcInputForQuoteField_ExchangeID_set)
    __swig_setmethods__["InvestUnitID"] = _pyctp.CThostFtdcInputForQuoteField_InvestUnitID_set
    __swig_getmethods__["InvestUnitID"] = _pyctp.CThostFtdcInputForQuoteField_InvestUnitID_get
    if _newclass:
        InvestUnitID = _swig_property(_pyctp.CThostFtdcInputForQuoteField_InvestUnitID_get, _pyctp.CThostFtdcInputForQuoteField_InvestUnitID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcInputForQuoteField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcInputForQuoteField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcInputForQuoteField_IPAddress_get, _pyctp.CThostFtdcInputForQuoteField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcInputForQuoteField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcInputForQuoteField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcInputForQuoteField_MacAddress_get, _pyctp.CThostFtdcInputForQuoteField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcInputForQuoteField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcInputForQuoteField
    __del__ = lambda self: None
CThostFtdcInputForQuoteField_swigregister = _pyctp.CThostFtdcInputForQuoteField_swigregister
CThostFtdcInputForQuoteField_swigregister(CThostFtdcInputForQuoteField)

class CThostFtdcForQuoteField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcForQuoteField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcForQuoteField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcForQuoteField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcForQuoteField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcForQuoteField_BrokerID_get, _pyctp.CThostFtdcForQuoteField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcForQuoteField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcForQuoteField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcForQuoteField_InvestorID_get, _pyctp.CThostFtdcForQuoteField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcForQuoteField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcForQuoteField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcForQuoteField_InstrumentID_get, _pyctp.CThostFtdcForQuoteField_InstrumentID_set)
    __swig_setmethods__["ForQuoteRef"] = _pyctp.CThostFtdcForQuoteField_ForQuoteRef_set
    __swig_getmethods__["ForQuoteRef"] = _pyctp.CThostFtdcForQuoteField_ForQuoteRef_get
    if _newclass:
        ForQuoteRef = _swig_property(_pyctp.CThostFtdcForQuoteField_ForQuoteRef_get, _pyctp.CThostFtdcForQuoteField_ForQuoteRef_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcForQuoteField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcForQuoteField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcForQuoteField_UserID_get, _pyctp.CThostFtdcForQuoteField_UserID_set)
    __swig_setmethods__["ForQuoteLocalID"] = _pyctp.CThostFtdcForQuoteField_ForQuoteLocalID_set
    __swig_getmethods__["ForQuoteLocalID"] = _pyctp.CThostFtdcForQuoteField_ForQuoteLocalID_get
    if _newclass:
        ForQuoteLocalID = _swig_property(_pyctp.CThostFtdcForQuoteField_ForQuoteLocalID_get, _pyctp.CThostFtdcForQuoteField_ForQuoteLocalID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcForQuoteField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcForQuoteField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcForQuoteField_ExchangeID_get, _pyctp.CThostFtdcForQuoteField_ExchangeID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcForQuoteField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcForQuoteField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcForQuoteField_ParticipantID_get, _pyctp.CThostFtdcForQuoteField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcForQuoteField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcForQuoteField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcForQuoteField_ClientID_get, _pyctp.CThostFtdcForQuoteField_ClientID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CThostFtdcForQuoteField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CThostFtdcForQuoteField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CThostFtdcForQuoteField_ExchangeInstID_get, _pyctp.CThostFtdcForQuoteField_ExchangeInstID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcForQuoteField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcForQuoteField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcForQuoteField_TraderID_get, _pyctp.CThostFtdcForQuoteField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcForQuoteField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcForQuoteField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcForQuoteField_InstallID_get, _pyctp.CThostFtdcForQuoteField_InstallID_set)
    __swig_setmethods__["InsertDate"] = _pyctp.CThostFtdcForQuoteField_InsertDate_set
    __swig_getmethods__["InsertDate"] = _pyctp.CThostFtdcForQuoteField_InsertDate_get
    if _newclass:
        InsertDate = _swig_property(_pyctp.CThostFtdcForQuoteField_InsertDate_get, _pyctp.CThostFtdcForQuoteField_InsertDate_set)
    __swig_setmethods__["InsertTime"] = _pyctp.CThostFtdcForQuoteField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _pyctp.CThostFtdcForQuoteField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_pyctp.CThostFtdcForQuoteField_InsertTime_get, _pyctp.CThostFtdcForQuoteField_InsertTime_set)
    __swig_setmethods__["ForQuoteStatus"] = _pyctp.CThostFtdcForQuoteField_ForQuoteStatus_set
    __swig_getmethods__["ForQuoteStatus"] = _pyctp.CThostFtdcForQuoteField_ForQuoteStatus_get
    if _newclass:
        ForQuoteStatus = _swig_property(_pyctp.CThostFtdcForQuoteField_ForQuoteStatus_get, _pyctp.CThostFtdcForQuoteField_ForQuoteStatus_set)
    __swig_setmethods__["FrontID"] = _pyctp.CThostFtdcForQuoteField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CThostFtdcForQuoteField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CThostFtdcForQuoteField_FrontID_get, _pyctp.CThostFtdcForQuoteField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcForQuoteField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcForQuoteField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcForQuoteField_SessionID_get, _pyctp.CThostFtdcForQuoteField_SessionID_set)
    __swig_setmethods__["StatusMsg"] = _pyctp.CThostFtdcForQuoteField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _pyctp.CThostFtdcForQuoteField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_pyctp.CThostFtdcForQuoteField_StatusMsg_get, _pyctp.CThostFtdcForQuoteField_StatusMsg_set)
    __swig_setmethods__["ActiveUserID"] = _pyctp.CThostFtdcForQuoteField_ActiveUserID_set
    __swig_getmethods__["ActiveUserID"] = _pyctp.CThostFtdcForQuoteField_ActiveUserID_get
    if _newclass:
        ActiveUserID = _swig_property(_pyctp.CThostFtdcForQuoteField_ActiveUserID_get, _pyctp.CThostFtdcForQuoteField_ActiveUserID_set)
    __swig_setmethods__["BrokerForQutoSeq"] = _pyctp.CThostFtdcForQuoteField_BrokerForQutoSeq_set
    __swig_getmethods__["BrokerForQutoSeq"] = _pyctp.CThostFtdcForQuoteField_BrokerForQutoSeq_get
    if _newclass:
        BrokerForQutoSeq = _swig_property(_pyctp.CThostFtdcForQuoteField_BrokerForQutoSeq_get, _pyctp.CThostFtdcForQuoteField_BrokerForQutoSeq_set)
    __swig_setmethods__["InvestUnitID"] = _pyctp.CThostFtdcForQuoteField_InvestUnitID_set
    __swig_getmethods__["InvestUnitID"] = _pyctp.CThostFtdcForQuoteField_InvestUnitID_get
    if _newclass:
        InvestUnitID = _swig_property(_pyctp.CThostFtdcForQuoteField_InvestUnitID_get, _pyctp.CThostFtdcForQuoteField_InvestUnitID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcForQuoteField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcForQuoteField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcForQuoteField_IPAddress_get, _pyctp.CThostFtdcForQuoteField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcForQuoteField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcForQuoteField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcForQuoteField_MacAddress_get, _pyctp.CThostFtdcForQuoteField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcForQuoteField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcForQuoteField
    __del__ = lambda self: None
CThostFtdcForQuoteField_swigregister = _pyctp.CThostFtdcForQuoteField_swigregister
CThostFtdcForQuoteField_swigregister(CThostFtdcForQuoteField)

class CThostFtdcQryForQuoteField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryForQuoteField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryForQuoteField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryForQuoteField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryForQuoteField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryForQuoteField_BrokerID_get, _pyctp.CThostFtdcQryForQuoteField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryForQuoteField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryForQuoteField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryForQuoteField_InvestorID_get, _pyctp.CThostFtdcQryForQuoteField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryForQuoteField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryForQuoteField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryForQuoteField_InstrumentID_get, _pyctp.CThostFtdcQryForQuoteField_InstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryForQuoteField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryForQuoteField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryForQuoteField_ExchangeID_get, _pyctp.CThostFtdcQryForQuoteField_ExchangeID_set)
    __swig_setmethods__["InsertTimeStart"] = _pyctp.CThostFtdcQryForQuoteField_InsertTimeStart_set
    __swig_getmethods__["InsertTimeStart"] = _pyctp.CThostFtdcQryForQuoteField_InsertTimeStart_get
    if _newclass:
        InsertTimeStart = _swig_property(_pyctp.CThostFtdcQryForQuoteField_InsertTimeStart_get, _pyctp.CThostFtdcQryForQuoteField_InsertTimeStart_set)
    __swig_setmethods__["InsertTimeEnd"] = _pyctp.CThostFtdcQryForQuoteField_InsertTimeEnd_set
    __swig_getmethods__["InsertTimeEnd"] = _pyctp.CThostFtdcQryForQuoteField_InsertTimeEnd_get
    if _newclass:
        InsertTimeEnd = _swig_property(_pyctp.CThostFtdcQryForQuoteField_InsertTimeEnd_get, _pyctp.CThostFtdcQryForQuoteField_InsertTimeEnd_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryForQuoteField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryForQuoteField
    __del__ = lambda self: None
CThostFtdcQryForQuoteField_swigregister = _pyctp.CThostFtdcQryForQuoteField_swigregister
CThostFtdcQryForQuoteField_swigregister(CThostFtdcQryForQuoteField)

class CThostFtdcExchangeForQuoteField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcExchangeForQuoteField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcExchangeForQuoteField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ForQuoteLocalID"] = _pyctp.CThostFtdcExchangeForQuoteField_ForQuoteLocalID_set
    __swig_getmethods__["ForQuoteLocalID"] = _pyctp.CThostFtdcExchangeForQuoteField_ForQuoteLocalID_get
    if _newclass:
        ForQuoteLocalID = _swig_property(_pyctp.CThostFtdcExchangeForQuoteField_ForQuoteLocalID_get, _pyctp.CThostFtdcExchangeForQuoteField_ForQuoteLocalID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeForQuoteField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeForQuoteField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcExchangeForQuoteField_ExchangeID_get, _pyctp.CThostFtdcExchangeForQuoteField_ExchangeID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcExchangeForQuoteField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcExchangeForQuoteField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcExchangeForQuoteField_ParticipantID_get, _pyctp.CThostFtdcExchangeForQuoteField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcExchangeForQuoteField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcExchangeForQuoteField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcExchangeForQuoteField_ClientID_get, _pyctp.CThostFtdcExchangeForQuoteField_ClientID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CThostFtdcExchangeForQuoteField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CThostFtdcExchangeForQuoteField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CThostFtdcExchangeForQuoteField_ExchangeInstID_get, _pyctp.CThostFtdcExchangeForQuoteField_ExchangeInstID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcExchangeForQuoteField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcExchangeForQuoteField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcExchangeForQuoteField_TraderID_get, _pyctp.CThostFtdcExchangeForQuoteField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcExchangeForQuoteField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcExchangeForQuoteField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcExchangeForQuoteField_InstallID_get, _pyctp.CThostFtdcExchangeForQuoteField_InstallID_set)
    __swig_setmethods__["InsertDate"] = _pyctp.CThostFtdcExchangeForQuoteField_InsertDate_set
    __swig_getmethods__["InsertDate"] = _pyctp.CThostFtdcExchangeForQuoteField_InsertDate_get
    if _newclass:
        InsertDate = _swig_property(_pyctp.CThostFtdcExchangeForQuoteField_InsertDate_get, _pyctp.CThostFtdcExchangeForQuoteField_InsertDate_set)
    __swig_setmethods__["InsertTime"] = _pyctp.CThostFtdcExchangeForQuoteField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _pyctp.CThostFtdcExchangeForQuoteField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_pyctp.CThostFtdcExchangeForQuoteField_InsertTime_get, _pyctp.CThostFtdcExchangeForQuoteField_InsertTime_set)
    __swig_setmethods__["ForQuoteStatus"] = _pyctp.CThostFtdcExchangeForQuoteField_ForQuoteStatus_set
    __swig_getmethods__["ForQuoteStatus"] = _pyctp.CThostFtdcExchangeForQuoteField_ForQuoteStatus_get
    if _newclass:
        ForQuoteStatus = _swig_property(_pyctp.CThostFtdcExchangeForQuoteField_ForQuoteStatus_get, _pyctp.CThostFtdcExchangeForQuoteField_ForQuoteStatus_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcExchangeForQuoteField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcExchangeForQuoteField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcExchangeForQuoteField_IPAddress_get, _pyctp.CThostFtdcExchangeForQuoteField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcExchangeForQuoteField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcExchangeForQuoteField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcExchangeForQuoteField_MacAddress_get, _pyctp.CThostFtdcExchangeForQuoteField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcExchangeForQuoteField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcExchangeForQuoteField
    __del__ = lambda self: None
CThostFtdcExchangeForQuoteField_swigregister = _pyctp.CThostFtdcExchangeForQuoteField_swigregister
CThostFtdcExchangeForQuoteField_swigregister(CThostFtdcExchangeForQuoteField)

class CThostFtdcQryExchangeForQuoteField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryExchangeForQuoteField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryExchangeForQuoteField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcQryExchangeForQuoteField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcQryExchangeForQuoteField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcQryExchangeForQuoteField_ParticipantID_get, _pyctp.CThostFtdcQryExchangeForQuoteField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcQryExchangeForQuoteField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcQryExchangeForQuoteField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcQryExchangeForQuoteField_ClientID_get, _pyctp.CThostFtdcQryExchangeForQuoteField_ClientID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CThostFtdcQryExchangeForQuoteField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CThostFtdcQryExchangeForQuoteField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CThostFtdcQryExchangeForQuoteField_ExchangeInstID_get, _pyctp.CThostFtdcQryExchangeForQuoteField_ExchangeInstID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryExchangeForQuoteField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryExchangeForQuoteField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryExchangeForQuoteField_ExchangeID_get, _pyctp.CThostFtdcQryExchangeForQuoteField_ExchangeID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcQryExchangeForQuoteField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcQryExchangeForQuoteField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcQryExchangeForQuoteField_TraderID_get, _pyctp.CThostFtdcQryExchangeForQuoteField_TraderID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryExchangeForQuoteField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryExchangeForQuoteField
    __del__ = lambda self: None
CThostFtdcQryExchangeForQuoteField_swigregister = _pyctp.CThostFtdcQryExchangeForQuoteField_swigregister
CThostFtdcQryExchangeForQuoteField_swigregister(CThostFtdcQryExchangeForQuoteField)

class CThostFtdcInputQuoteField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcInputQuoteField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcInputQuoteField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcInputQuoteField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcInputQuoteField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcInputQuoteField_BrokerID_get, _pyctp.CThostFtdcInputQuoteField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcInputQuoteField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcInputQuoteField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcInputQuoteField_InvestorID_get, _pyctp.CThostFtdcInputQuoteField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcInputQuoteField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcInputQuoteField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcInputQuoteField_InstrumentID_get, _pyctp.CThostFtdcInputQuoteField_InstrumentID_set)
    __swig_setmethods__["QuoteRef"] = _pyctp.CThostFtdcInputQuoteField_QuoteRef_set
    __swig_getmethods__["QuoteRef"] = _pyctp.CThostFtdcInputQuoteField_QuoteRef_get
    if _newclass:
        QuoteRef = _swig_property(_pyctp.CThostFtdcInputQuoteField_QuoteRef_get, _pyctp.CThostFtdcInputQuoteField_QuoteRef_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcInputQuoteField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcInputQuoteField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcInputQuoteField_UserID_get, _pyctp.CThostFtdcInputQuoteField_UserID_set)
    __swig_setmethods__["AskPrice"] = _pyctp.CThostFtdcInputQuoteField_AskPrice_set
    __swig_getmethods__["AskPrice"] = _pyctp.CThostFtdcInputQuoteField_AskPrice_get
    if _newclass:
        AskPrice = _swig_property(_pyctp.CThostFtdcInputQuoteField_AskPrice_get, _pyctp.CThostFtdcInputQuoteField_AskPrice_set)
    __swig_setmethods__["BidPrice"] = _pyctp.CThostFtdcInputQuoteField_BidPrice_set
    __swig_getmethods__["BidPrice"] = _pyctp.CThostFtdcInputQuoteField_BidPrice_get
    if _newclass:
        BidPrice = _swig_property(_pyctp.CThostFtdcInputQuoteField_BidPrice_get, _pyctp.CThostFtdcInputQuoteField_BidPrice_set)
    __swig_setmethods__["AskVolume"] = _pyctp.CThostFtdcInputQuoteField_AskVolume_set
    __swig_getmethods__["AskVolume"] = _pyctp.CThostFtdcInputQuoteField_AskVolume_get
    if _newclass:
        AskVolume = _swig_property(_pyctp.CThostFtdcInputQuoteField_AskVolume_get, _pyctp.CThostFtdcInputQuoteField_AskVolume_set)
    __swig_setmethods__["BidVolume"] = _pyctp.CThostFtdcInputQuoteField_BidVolume_set
    __swig_getmethods__["BidVolume"] = _pyctp.CThostFtdcInputQuoteField_BidVolume_get
    if _newclass:
        BidVolume = _swig_property(_pyctp.CThostFtdcInputQuoteField_BidVolume_get, _pyctp.CThostFtdcInputQuoteField_BidVolume_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcInputQuoteField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcInputQuoteField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcInputQuoteField_RequestID_get, _pyctp.CThostFtdcInputQuoteField_RequestID_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CThostFtdcInputQuoteField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CThostFtdcInputQuoteField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CThostFtdcInputQuoteField_BusinessUnit_get, _pyctp.CThostFtdcInputQuoteField_BusinessUnit_set)
    __swig_setmethods__["AskOffsetFlag"] = _pyctp.CThostFtdcInputQuoteField_AskOffsetFlag_set
    __swig_getmethods__["AskOffsetFlag"] = _pyctp.CThostFtdcInputQuoteField_AskOffsetFlag_get
    if _newclass:
        AskOffsetFlag = _swig_property(_pyctp.CThostFtdcInputQuoteField_AskOffsetFlag_get, _pyctp.CThostFtdcInputQuoteField_AskOffsetFlag_set)
    __swig_setmethods__["BidOffsetFlag"] = _pyctp.CThostFtdcInputQuoteField_BidOffsetFlag_set
    __swig_getmethods__["BidOffsetFlag"] = _pyctp.CThostFtdcInputQuoteField_BidOffsetFlag_get
    if _newclass:
        BidOffsetFlag = _swig_property(_pyctp.CThostFtdcInputQuoteField_BidOffsetFlag_get, _pyctp.CThostFtdcInputQuoteField_BidOffsetFlag_set)
    __swig_setmethods__["AskHedgeFlag"] = _pyctp.CThostFtdcInputQuoteField_AskHedgeFlag_set
    __swig_getmethods__["AskHedgeFlag"] = _pyctp.CThostFtdcInputQuoteField_AskHedgeFlag_get
    if _newclass:
        AskHedgeFlag = _swig_property(_pyctp.CThostFtdcInputQuoteField_AskHedgeFlag_get, _pyctp.CThostFtdcInputQuoteField_AskHedgeFlag_set)
    __swig_setmethods__["BidHedgeFlag"] = _pyctp.CThostFtdcInputQuoteField_BidHedgeFlag_set
    __swig_getmethods__["BidHedgeFlag"] = _pyctp.CThostFtdcInputQuoteField_BidHedgeFlag_get
    if _newclass:
        BidHedgeFlag = _swig_property(_pyctp.CThostFtdcInputQuoteField_BidHedgeFlag_get, _pyctp.CThostFtdcInputQuoteField_BidHedgeFlag_set)
    __swig_setmethods__["AskOrderRef"] = _pyctp.CThostFtdcInputQuoteField_AskOrderRef_set
    __swig_getmethods__["AskOrderRef"] = _pyctp.CThostFtdcInputQuoteField_AskOrderRef_get
    if _newclass:
        AskOrderRef = _swig_property(_pyctp.CThostFtdcInputQuoteField_AskOrderRef_get, _pyctp.CThostFtdcInputQuoteField_AskOrderRef_set)
    __swig_setmethods__["BidOrderRef"] = _pyctp.CThostFtdcInputQuoteField_BidOrderRef_set
    __swig_getmethods__["BidOrderRef"] = _pyctp.CThostFtdcInputQuoteField_BidOrderRef_get
    if _newclass:
        BidOrderRef = _swig_property(_pyctp.CThostFtdcInputQuoteField_BidOrderRef_get, _pyctp.CThostFtdcInputQuoteField_BidOrderRef_set)
    __swig_setmethods__["ForQuoteSysID"] = _pyctp.CThostFtdcInputQuoteField_ForQuoteSysID_set
    __swig_getmethods__["ForQuoteSysID"] = _pyctp.CThostFtdcInputQuoteField_ForQuoteSysID_get
    if _newclass:
        ForQuoteSysID = _swig_property(_pyctp.CThostFtdcInputQuoteField_ForQuoteSysID_get, _pyctp.CThostFtdcInputQuoteField_ForQuoteSysID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcInputQuoteField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcInputQuoteField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcInputQuoteField_ExchangeID_get, _pyctp.CThostFtdcInputQuoteField_ExchangeID_set)
    __swig_setmethods__["InvestUnitID"] = _pyctp.CThostFtdcInputQuoteField_InvestUnitID_set
    __swig_getmethods__["InvestUnitID"] = _pyctp.CThostFtdcInputQuoteField_InvestUnitID_get
    if _newclass:
        InvestUnitID = _swig_property(_pyctp.CThostFtdcInputQuoteField_InvestUnitID_get, _pyctp.CThostFtdcInputQuoteField_InvestUnitID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcInputQuoteField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcInputQuoteField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcInputQuoteField_ClientID_get, _pyctp.CThostFtdcInputQuoteField_ClientID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcInputQuoteField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcInputQuoteField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcInputQuoteField_IPAddress_get, _pyctp.CThostFtdcInputQuoteField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcInputQuoteField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcInputQuoteField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcInputQuoteField_MacAddress_get, _pyctp.CThostFtdcInputQuoteField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcInputQuoteField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcInputQuoteField
    __del__ = lambda self: None
CThostFtdcInputQuoteField_swigregister = _pyctp.CThostFtdcInputQuoteField_swigregister
CThostFtdcInputQuoteField_swigregister(CThostFtdcInputQuoteField)

class CThostFtdcInputQuoteActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcInputQuoteActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcInputQuoteActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcInputQuoteActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcInputQuoteActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcInputQuoteActionField_BrokerID_get, _pyctp.CThostFtdcInputQuoteActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcInputQuoteActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcInputQuoteActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcInputQuoteActionField_InvestorID_get, _pyctp.CThostFtdcInputQuoteActionField_InvestorID_set)
    __swig_setmethods__["QuoteActionRef"] = _pyctp.CThostFtdcInputQuoteActionField_QuoteActionRef_set
    __swig_getmethods__["QuoteActionRef"] = _pyctp.CThostFtdcInputQuoteActionField_QuoteActionRef_get
    if _newclass:
        QuoteActionRef = _swig_property(_pyctp.CThostFtdcInputQuoteActionField_QuoteActionRef_get, _pyctp.CThostFtdcInputQuoteActionField_QuoteActionRef_set)
    __swig_setmethods__["QuoteRef"] = _pyctp.CThostFtdcInputQuoteActionField_QuoteRef_set
    __swig_getmethods__["QuoteRef"] = _pyctp.CThostFtdcInputQuoteActionField_QuoteRef_get
    if _newclass:
        QuoteRef = _swig_property(_pyctp.CThostFtdcInputQuoteActionField_QuoteRef_get, _pyctp.CThostFtdcInputQuoteActionField_QuoteRef_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcInputQuoteActionField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcInputQuoteActionField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcInputQuoteActionField_RequestID_get, _pyctp.CThostFtdcInputQuoteActionField_RequestID_set)
    __swig_setmethods__["FrontID"] = _pyctp.CThostFtdcInputQuoteActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CThostFtdcInputQuoteActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CThostFtdcInputQuoteActionField_FrontID_get, _pyctp.CThostFtdcInputQuoteActionField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcInputQuoteActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcInputQuoteActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcInputQuoteActionField_SessionID_get, _pyctp.CThostFtdcInputQuoteActionField_SessionID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcInputQuoteActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcInputQuoteActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcInputQuoteActionField_ExchangeID_get, _pyctp.CThostFtdcInputQuoteActionField_ExchangeID_set)
    __swig_setmethods__["QuoteSysID"] = _pyctp.CThostFtdcInputQuoteActionField_QuoteSysID_set
    __swig_getmethods__["QuoteSysID"] = _pyctp.CThostFtdcInputQuoteActionField_QuoteSysID_get
    if _newclass:
        QuoteSysID = _swig_property(_pyctp.CThostFtdcInputQuoteActionField_QuoteSysID_get, _pyctp.CThostFtdcInputQuoteActionField_QuoteSysID_set)
    __swig_setmethods__["ActionFlag"] = _pyctp.CThostFtdcInputQuoteActionField_ActionFlag_set
    __swig_getmethods__["ActionFlag"] = _pyctp.CThostFtdcInputQuoteActionField_ActionFlag_get
    if _newclass:
        ActionFlag = _swig_property(_pyctp.CThostFtdcInputQuoteActionField_ActionFlag_get, _pyctp.CThostFtdcInputQuoteActionField_ActionFlag_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcInputQuoteActionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcInputQuoteActionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcInputQuoteActionField_UserID_get, _pyctp.CThostFtdcInputQuoteActionField_UserID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcInputQuoteActionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcInputQuoteActionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcInputQuoteActionField_InstrumentID_get, _pyctp.CThostFtdcInputQuoteActionField_InstrumentID_set)
    __swig_setmethods__["InvestUnitID"] = _pyctp.CThostFtdcInputQuoteActionField_InvestUnitID_set
    __swig_getmethods__["InvestUnitID"] = _pyctp.CThostFtdcInputQuoteActionField_InvestUnitID_get
    if _newclass:
        InvestUnitID = _swig_property(_pyctp.CThostFtdcInputQuoteActionField_InvestUnitID_get, _pyctp.CThostFtdcInputQuoteActionField_InvestUnitID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcInputQuoteActionField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcInputQuoteActionField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcInputQuoteActionField_ClientID_get, _pyctp.CThostFtdcInputQuoteActionField_ClientID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcInputQuoteActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcInputQuoteActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcInputQuoteActionField_IPAddress_get, _pyctp.CThostFtdcInputQuoteActionField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcInputQuoteActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcInputQuoteActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcInputQuoteActionField_MacAddress_get, _pyctp.CThostFtdcInputQuoteActionField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcInputQuoteActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcInputQuoteActionField
    __del__ = lambda self: None
CThostFtdcInputQuoteActionField_swigregister = _pyctp.CThostFtdcInputQuoteActionField_swigregister
CThostFtdcInputQuoteActionField_swigregister(CThostFtdcInputQuoteActionField)

class CThostFtdcQuoteField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQuoteField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQuoteField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQuoteField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQuoteField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQuoteField_BrokerID_get, _pyctp.CThostFtdcQuoteField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQuoteField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQuoteField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQuoteField_InvestorID_get, _pyctp.CThostFtdcQuoteField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQuoteField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQuoteField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQuoteField_InstrumentID_get, _pyctp.CThostFtdcQuoteField_InstrumentID_set)
    __swig_setmethods__["QuoteRef"] = _pyctp.CThostFtdcQuoteField_QuoteRef_set
    __swig_getmethods__["QuoteRef"] = _pyctp.CThostFtdcQuoteField_QuoteRef_get
    if _newclass:
        QuoteRef = _swig_property(_pyctp.CThostFtdcQuoteField_QuoteRef_get, _pyctp.CThostFtdcQuoteField_QuoteRef_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcQuoteField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcQuoteField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcQuoteField_UserID_get, _pyctp.CThostFtdcQuoteField_UserID_set)
    __swig_setmethods__["AskPrice"] = _pyctp.CThostFtdcQuoteField_AskPrice_set
    __swig_getmethods__["AskPrice"] = _pyctp.CThostFtdcQuoteField_AskPrice_get
    if _newclass:
        AskPrice = _swig_property(_pyctp.CThostFtdcQuoteField_AskPrice_get, _pyctp.CThostFtdcQuoteField_AskPrice_set)
    __swig_setmethods__["BidPrice"] = _pyctp.CThostFtdcQuoteField_BidPrice_set
    __swig_getmethods__["BidPrice"] = _pyctp.CThostFtdcQuoteField_BidPrice_get
    if _newclass:
        BidPrice = _swig_property(_pyctp.CThostFtdcQuoteField_BidPrice_get, _pyctp.CThostFtdcQuoteField_BidPrice_set)
    __swig_setmethods__["AskVolume"] = _pyctp.CThostFtdcQuoteField_AskVolume_set
    __swig_getmethods__["AskVolume"] = _pyctp.CThostFtdcQuoteField_AskVolume_get
    if _newclass:
        AskVolume = _swig_property(_pyctp.CThostFtdcQuoteField_AskVolume_get, _pyctp.CThostFtdcQuoteField_AskVolume_set)
    __swig_setmethods__["BidVolume"] = _pyctp.CThostFtdcQuoteField_BidVolume_set
    __swig_getmethods__["BidVolume"] = _pyctp.CThostFtdcQuoteField_BidVolume_get
    if _newclass:
        BidVolume = _swig_property(_pyctp.CThostFtdcQuoteField_BidVolume_get, _pyctp.CThostFtdcQuoteField_BidVolume_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcQuoteField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcQuoteField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcQuoteField_RequestID_get, _pyctp.CThostFtdcQuoteField_RequestID_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CThostFtdcQuoteField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CThostFtdcQuoteField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CThostFtdcQuoteField_BusinessUnit_get, _pyctp.CThostFtdcQuoteField_BusinessUnit_set)
    __swig_setmethods__["AskOffsetFlag"] = _pyctp.CThostFtdcQuoteField_AskOffsetFlag_set
    __swig_getmethods__["AskOffsetFlag"] = _pyctp.CThostFtdcQuoteField_AskOffsetFlag_get
    if _newclass:
        AskOffsetFlag = _swig_property(_pyctp.CThostFtdcQuoteField_AskOffsetFlag_get, _pyctp.CThostFtdcQuoteField_AskOffsetFlag_set)
    __swig_setmethods__["BidOffsetFlag"] = _pyctp.CThostFtdcQuoteField_BidOffsetFlag_set
    __swig_getmethods__["BidOffsetFlag"] = _pyctp.CThostFtdcQuoteField_BidOffsetFlag_get
    if _newclass:
        BidOffsetFlag = _swig_property(_pyctp.CThostFtdcQuoteField_BidOffsetFlag_get, _pyctp.CThostFtdcQuoteField_BidOffsetFlag_set)
    __swig_setmethods__["AskHedgeFlag"] = _pyctp.CThostFtdcQuoteField_AskHedgeFlag_set
    __swig_getmethods__["AskHedgeFlag"] = _pyctp.CThostFtdcQuoteField_AskHedgeFlag_get
    if _newclass:
        AskHedgeFlag = _swig_property(_pyctp.CThostFtdcQuoteField_AskHedgeFlag_get, _pyctp.CThostFtdcQuoteField_AskHedgeFlag_set)
    __swig_setmethods__["BidHedgeFlag"] = _pyctp.CThostFtdcQuoteField_BidHedgeFlag_set
    __swig_getmethods__["BidHedgeFlag"] = _pyctp.CThostFtdcQuoteField_BidHedgeFlag_get
    if _newclass:
        BidHedgeFlag = _swig_property(_pyctp.CThostFtdcQuoteField_BidHedgeFlag_get, _pyctp.CThostFtdcQuoteField_BidHedgeFlag_set)
    __swig_setmethods__["QuoteLocalID"] = _pyctp.CThostFtdcQuoteField_QuoteLocalID_set
    __swig_getmethods__["QuoteLocalID"] = _pyctp.CThostFtdcQuoteField_QuoteLocalID_get
    if _newclass:
        QuoteLocalID = _swig_property(_pyctp.CThostFtdcQuoteField_QuoteLocalID_get, _pyctp.CThostFtdcQuoteField_QuoteLocalID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQuoteField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQuoteField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQuoteField_ExchangeID_get, _pyctp.CThostFtdcQuoteField_ExchangeID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcQuoteField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcQuoteField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcQuoteField_ParticipantID_get, _pyctp.CThostFtdcQuoteField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcQuoteField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcQuoteField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcQuoteField_ClientID_get, _pyctp.CThostFtdcQuoteField_ClientID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CThostFtdcQuoteField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CThostFtdcQuoteField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CThostFtdcQuoteField_ExchangeInstID_get, _pyctp.CThostFtdcQuoteField_ExchangeInstID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcQuoteField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcQuoteField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcQuoteField_TraderID_get, _pyctp.CThostFtdcQuoteField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcQuoteField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcQuoteField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcQuoteField_InstallID_get, _pyctp.CThostFtdcQuoteField_InstallID_set)
    __swig_setmethods__["NotifySequence"] = _pyctp.CThostFtdcQuoteField_NotifySequence_set
    __swig_getmethods__["NotifySequence"] = _pyctp.CThostFtdcQuoteField_NotifySequence_get
    if _newclass:
        NotifySequence = _swig_property(_pyctp.CThostFtdcQuoteField_NotifySequence_get, _pyctp.CThostFtdcQuoteField_NotifySequence_set)
    __swig_setmethods__["OrderSubmitStatus"] = _pyctp.CThostFtdcQuoteField_OrderSubmitStatus_set
    __swig_getmethods__["OrderSubmitStatus"] = _pyctp.CThostFtdcQuoteField_OrderSubmitStatus_get
    if _newclass:
        OrderSubmitStatus = _swig_property(_pyctp.CThostFtdcQuoteField_OrderSubmitStatus_get, _pyctp.CThostFtdcQuoteField_OrderSubmitStatus_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcQuoteField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcQuoteField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcQuoteField_TradingDay_get, _pyctp.CThostFtdcQuoteField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CThostFtdcQuoteField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CThostFtdcQuoteField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CThostFtdcQuoteField_SettlementID_get, _pyctp.CThostFtdcQuoteField_SettlementID_set)
    __swig_setmethods__["QuoteSysID"] = _pyctp.CThostFtdcQuoteField_QuoteSysID_set
    __swig_getmethods__["QuoteSysID"] = _pyctp.CThostFtdcQuoteField_QuoteSysID_get
    if _newclass:
        QuoteSysID = _swig_property(_pyctp.CThostFtdcQuoteField_QuoteSysID_get, _pyctp.CThostFtdcQuoteField_QuoteSysID_set)
    __swig_setmethods__["InsertDate"] = _pyctp.CThostFtdcQuoteField_InsertDate_set
    __swig_getmethods__["InsertDate"] = _pyctp.CThostFtdcQuoteField_InsertDate_get
    if _newclass:
        InsertDate = _swig_property(_pyctp.CThostFtdcQuoteField_InsertDate_get, _pyctp.CThostFtdcQuoteField_InsertDate_set)
    __swig_setmethods__["InsertTime"] = _pyctp.CThostFtdcQuoteField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _pyctp.CThostFtdcQuoteField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_pyctp.CThostFtdcQuoteField_InsertTime_get, _pyctp.CThostFtdcQuoteField_InsertTime_set)
    __swig_setmethods__["CancelTime"] = _pyctp.CThostFtdcQuoteField_CancelTime_set
    __swig_getmethods__["CancelTime"] = _pyctp.CThostFtdcQuoteField_CancelTime_get
    if _newclass:
        CancelTime = _swig_property(_pyctp.CThostFtdcQuoteField_CancelTime_get, _pyctp.CThostFtdcQuoteField_CancelTime_set)
    __swig_setmethods__["QuoteStatus"] = _pyctp.CThostFtdcQuoteField_QuoteStatus_set
    __swig_getmethods__["QuoteStatus"] = _pyctp.CThostFtdcQuoteField_QuoteStatus_get
    if _newclass:
        QuoteStatus = _swig_property(_pyctp.CThostFtdcQuoteField_QuoteStatus_get, _pyctp.CThostFtdcQuoteField_QuoteStatus_set)
    __swig_setmethods__["ClearingPartID"] = _pyctp.CThostFtdcQuoteField_ClearingPartID_set
    __swig_getmethods__["ClearingPartID"] = _pyctp.CThostFtdcQuoteField_ClearingPartID_get
    if _newclass:
        ClearingPartID = _swig_property(_pyctp.CThostFtdcQuoteField_ClearingPartID_get, _pyctp.CThostFtdcQuoteField_ClearingPartID_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CThostFtdcQuoteField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CThostFtdcQuoteField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CThostFtdcQuoteField_SequenceNo_get, _pyctp.CThostFtdcQuoteField_SequenceNo_set)
    __swig_setmethods__["AskOrderSysID"] = _pyctp.CThostFtdcQuoteField_AskOrderSysID_set
    __swig_getmethods__["AskOrderSysID"] = _pyctp.CThostFtdcQuoteField_AskOrderSysID_get
    if _newclass:
        AskOrderSysID = _swig_property(_pyctp.CThostFtdcQuoteField_AskOrderSysID_get, _pyctp.CThostFtdcQuoteField_AskOrderSysID_set)
    __swig_setmethods__["BidOrderSysID"] = _pyctp.CThostFtdcQuoteField_BidOrderSysID_set
    __swig_getmethods__["BidOrderSysID"] = _pyctp.CThostFtdcQuoteField_BidOrderSysID_get
    if _newclass:
        BidOrderSysID = _swig_property(_pyctp.CThostFtdcQuoteField_BidOrderSysID_get, _pyctp.CThostFtdcQuoteField_BidOrderSysID_set)
    __swig_setmethods__["FrontID"] = _pyctp.CThostFtdcQuoteField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CThostFtdcQuoteField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CThostFtdcQuoteField_FrontID_get, _pyctp.CThostFtdcQuoteField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcQuoteField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcQuoteField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcQuoteField_SessionID_get, _pyctp.CThostFtdcQuoteField_SessionID_set)
    __swig_setmethods__["UserProductInfo"] = _pyctp.CThostFtdcQuoteField_UserProductInfo_set
    __swig_getmethods__["UserProductInfo"] = _pyctp.CThostFtdcQuoteField_UserProductInfo_get
    if _newclass:
        UserProductInfo = _swig_property(_pyctp.CThostFtdcQuoteField_UserProductInfo_get, _pyctp.CThostFtdcQuoteField_UserProductInfo_set)
    __swig_setmethods__["StatusMsg"] = _pyctp.CThostFtdcQuoteField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _pyctp.CThostFtdcQuoteField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_pyctp.CThostFtdcQuoteField_StatusMsg_get, _pyctp.CThostFtdcQuoteField_StatusMsg_set)
    __swig_setmethods__["ActiveUserID"] = _pyctp.CThostFtdcQuoteField_ActiveUserID_set
    __swig_getmethods__["ActiveUserID"] = _pyctp.CThostFtdcQuoteField_ActiveUserID_get
    if _newclass:
        ActiveUserID = _swig_property(_pyctp.CThostFtdcQuoteField_ActiveUserID_get, _pyctp.CThostFtdcQuoteField_ActiveUserID_set)
    __swig_setmethods__["BrokerQuoteSeq"] = _pyctp.CThostFtdcQuoteField_BrokerQuoteSeq_set
    __swig_getmethods__["BrokerQuoteSeq"] = _pyctp.CThostFtdcQuoteField_BrokerQuoteSeq_get
    if _newclass:
        BrokerQuoteSeq = _swig_property(_pyctp.CThostFtdcQuoteField_BrokerQuoteSeq_get, _pyctp.CThostFtdcQuoteField_BrokerQuoteSeq_set)
    __swig_setmethods__["AskOrderRef"] = _pyctp.CThostFtdcQuoteField_AskOrderRef_set
    __swig_getmethods__["AskOrderRef"] = _pyctp.CThostFtdcQuoteField_AskOrderRef_get
    if _newclass:
        AskOrderRef = _swig_property(_pyctp.CThostFtdcQuoteField_AskOrderRef_get, _pyctp.CThostFtdcQuoteField_AskOrderRef_set)
    __swig_setmethods__["BidOrderRef"] = _pyctp.CThostFtdcQuoteField_BidOrderRef_set
    __swig_getmethods__["BidOrderRef"] = _pyctp.CThostFtdcQuoteField_BidOrderRef_get
    if _newclass:
        BidOrderRef = _swig_property(_pyctp.CThostFtdcQuoteField_BidOrderRef_get, _pyctp.CThostFtdcQuoteField_BidOrderRef_set)
    __swig_setmethods__["ForQuoteSysID"] = _pyctp.CThostFtdcQuoteField_ForQuoteSysID_set
    __swig_getmethods__["ForQuoteSysID"] = _pyctp.CThostFtdcQuoteField_ForQuoteSysID_get
    if _newclass:
        ForQuoteSysID = _swig_property(_pyctp.CThostFtdcQuoteField_ForQuoteSysID_get, _pyctp.CThostFtdcQuoteField_ForQuoteSysID_set)
    __swig_setmethods__["BranchID"] = _pyctp.CThostFtdcQuoteField_BranchID_set
    __swig_getmethods__["BranchID"] = _pyctp.CThostFtdcQuoteField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_pyctp.CThostFtdcQuoteField_BranchID_get, _pyctp.CThostFtdcQuoteField_BranchID_set)
    __swig_setmethods__["InvestUnitID"] = _pyctp.CThostFtdcQuoteField_InvestUnitID_set
    __swig_getmethods__["InvestUnitID"] = _pyctp.CThostFtdcQuoteField_InvestUnitID_get
    if _newclass:
        InvestUnitID = _swig_property(_pyctp.CThostFtdcQuoteField_InvestUnitID_get, _pyctp.CThostFtdcQuoteField_InvestUnitID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcQuoteField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcQuoteField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcQuoteField_AccountID_get, _pyctp.CThostFtdcQuoteField_AccountID_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcQuoteField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcQuoteField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcQuoteField_CurrencyID_get, _pyctp.CThostFtdcQuoteField_CurrencyID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcQuoteField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcQuoteField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcQuoteField_IPAddress_get, _pyctp.CThostFtdcQuoteField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcQuoteField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcQuoteField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcQuoteField_MacAddress_get, _pyctp.CThostFtdcQuoteField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQuoteField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQuoteField
    __del__ = lambda self: None
CThostFtdcQuoteField_swigregister = _pyctp.CThostFtdcQuoteField_swigregister
CThostFtdcQuoteField_swigregister(CThostFtdcQuoteField)

class CThostFtdcQuoteActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQuoteActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQuoteActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQuoteActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQuoteActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQuoteActionField_BrokerID_get, _pyctp.CThostFtdcQuoteActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQuoteActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQuoteActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQuoteActionField_InvestorID_get, _pyctp.CThostFtdcQuoteActionField_InvestorID_set)
    __swig_setmethods__["QuoteActionRef"] = _pyctp.CThostFtdcQuoteActionField_QuoteActionRef_set
    __swig_getmethods__["QuoteActionRef"] = _pyctp.CThostFtdcQuoteActionField_QuoteActionRef_get
    if _newclass:
        QuoteActionRef = _swig_property(_pyctp.CThostFtdcQuoteActionField_QuoteActionRef_get, _pyctp.CThostFtdcQuoteActionField_QuoteActionRef_set)
    __swig_setmethods__["QuoteRef"] = _pyctp.CThostFtdcQuoteActionField_QuoteRef_set
    __swig_getmethods__["QuoteRef"] = _pyctp.CThostFtdcQuoteActionField_QuoteRef_get
    if _newclass:
        QuoteRef = _swig_property(_pyctp.CThostFtdcQuoteActionField_QuoteRef_get, _pyctp.CThostFtdcQuoteActionField_QuoteRef_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcQuoteActionField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcQuoteActionField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcQuoteActionField_RequestID_get, _pyctp.CThostFtdcQuoteActionField_RequestID_set)
    __swig_setmethods__["FrontID"] = _pyctp.CThostFtdcQuoteActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CThostFtdcQuoteActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CThostFtdcQuoteActionField_FrontID_get, _pyctp.CThostFtdcQuoteActionField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcQuoteActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcQuoteActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcQuoteActionField_SessionID_get, _pyctp.CThostFtdcQuoteActionField_SessionID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQuoteActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQuoteActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQuoteActionField_ExchangeID_get, _pyctp.CThostFtdcQuoteActionField_ExchangeID_set)
    __swig_setmethods__["QuoteSysID"] = _pyctp.CThostFtdcQuoteActionField_QuoteSysID_set
    __swig_getmethods__["QuoteSysID"] = _pyctp.CThostFtdcQuoteActionField_QuoteSysID_get
    if _newclass:
        QuoteSysID = _swig_property(_pyctp.CThostFtdcQuoteActionField_QuoteSysID_get, _pyctp.CThostFtdcQuoteActionField_QuoteSysID_set)
    __swig_setmethods__["ActionFlag"] = _pyctp.CThostFtdcQuoteActionField_ActionFlag_set
    __swig_getmethods__["ActionFlag"] = _pyctp.CThostFtdcQuoteActionField_ActionFlag_get
    if _newclass:
        ActionFlag = _swig_property(_pyctp.CThostFtdcQuoteActionField_ActionFlag_get, _pyctp.CThostFtdcQuoteActionField_ActionFlag_set)
    __swig_setmethods__["ActionDate"] = _pyctp.CThostFtdcQuoteActionField_ActionDate_set
    __swig_getmethods__["ActionDate"] = _pyctp.CThostFtdcQuoteActionField_ActionDate_get
    if _newclass:
        ActionDate = _swig_property(_pyctp.CThostFtdcQuoteActionField_ActionDate_get, _pyctp.CThostFtdcQuoteActionField_ActionDate_set)
    __swig_setmethods__["ActionTime"] = _pyctp.CThostFtdcQuoteActionField_ActionTime_set
    __swig_getmethods__["ActionTime"] = _pyctp.CThostFtdcQuoteActionField_ActionTime_get
    if _newclass:
        ActionTime = _swig_property(_pyctp.CThostFtdcQuoteActionField_ActionTime_get, _pyctp.CThostFtdcQuoteActionField_ActionTime_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcQuoteActionField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcQuoteActionField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcQuoteActionField_TraderID_get, _pyctp.CThostFtdcQuoteActionField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcQuoteActionField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcQuoteActionField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcQuoteActionField_InstallID_get, _pyctp.CThostFtdcQuoteActionField_InstallID_set)
    __swig_setmethods__["QuoteLocalID"] = _pyctp.CThostFtdcQuoteActionField_QuoteLocalID_set
    __swig_getmethods__["QuoteLocalID"] = _pyctp.CThostFtdcQuoteActionField_QuoteLocalID_get
    if _newclass:
        QuoteLocalID = _swig_property(_pyctp.CThostFtdcQuoteActionField_QuoteLocalID_get, _pyctp.CThostFtdcQuoteActionField_QuoteLocalID_set)
    __swig_setmethods__["ActionLocalID"] = _pyctp.CThostFtdcQuoteActionField_ActionLocalID_set
    __swig_getmethods__["ActionLocalID"] = _pyctp.CThostFtdcQuoteActionField_ActionLocalID_get
    if _newclass:
        ActionLocalID = _swig_property(_pyctp.CThostFtdcQuoteActionField_ActionLocalID_get, _pyctp.CThostFtdcQuoteActionField_ActionLocalID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcQuoteActionField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcQuoteActionField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcQuoteActionField_ParticipantID_get, _pyctp.CThostFtdcQuoteActionField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcQuoteActionField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcQuoteActionField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcQuoteActionField_ClientID_get, _pyctp.CThostFtdcQuoteActionField_ClientID_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CThostFtdcQuoteActionField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CThostFtdcQuoteActionField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CThostFtdcQuoteActionField_BusinessUnit_get, _pyctp.CThostFtdcQuoteActionField_BusinessUnit_set)
    __swig_setmethods__["OrderActionStatus"] = _pyctp.CThostFtdcQuoteActionField_OrderActionStatus_set
    __swig_getmethods__["OrderActionStatus"] = _pyctp.CThostFtdcQuoteActionField_OrderActionStatus_get
    if _newclass:
        OrderActionStatus = _swig_property(_pyctp.CThostFtdcQuoteActionField_OrderActionStatus_get, _pyctp.CThostFtdcQuoteActionField_OrderActionStatus_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcQuoteActionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcQuoteActionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcQuoteActionField_UserID_get, _pyctp.CThostFtdcQuoteActionField_UserID_set)
    __swig_setmethods__["StatusMsg"] = _pyctp.CThostFtdcQuoteActionField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _pyctp.CThostFtdcQuoteActionField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_pyctp.CThostFtdcQuoteActionField_StatusMsg_get, _pyctp.CThostFtdcQuoteActionField_StatusMsg_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQuoteActionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQuoteActionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQuoteActionField_InstrumentID_get, _pyctp.CThostFtdcQuoteActionField_InstrumentID_set)
    __swig_setmethods__["BranchID"] = _pyctp.CThostFtdcQuoteActionField_BranchID_set
    __swig_getmethods__["BranchID"] = _pyctp.CThostFtdcQuoteActionField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_pyctp.CThostFtdcQuoteActionField_BranchID_get, _pyctp.CThostFtdcQuoteActionField_BranchID_set)
    __swig_setmethods__["InvestUnitID"] = _pyctp.CThostFtdcQuoteActionField_InvestUnitID_set
    __swig_getmethods__["InvestUnitID"] = _pyctp.CThostFtdcQuoteActionField_InvestUnitID_get
    if _newclass:
        InvestUnitID = _swig_property(_pyctp.CThostFtdcQuoteActionField_InvestUnitID_get, _pyctp.CThostFtdcQuoteActionField_InvestUnitID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcQuoteActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcQuoteActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcQuoteActionField_IPAddress_get, _pyctp.CThostFtdcQuoteActionField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcQuoteActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcQuoteActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcQuoteActionField_MacAddress_get, _pyctp.CThostFtdcQuoteActionField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQuoteActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQuoteActionField
    __del__ = lambda self: None
CThostFtdcQuoteActionField_swigregister = _pyctp.CThostFtdcQuoteActionField_swigregister
CThostFtdcQuoteActionField_swigregister(CThostFtdcQuoteActionField)

class CThostFtdcQryQuoteField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryQuoteField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryQuoteField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryQuoteField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryQuoteField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryQuoteField_BrokerID_get, _pyctp.CThostFtdcQryQuoteField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryQuoteField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryQuoteField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryQuoteField_InvestorID_get, _pyctp.CThostFtdcQryQuoteField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryQuoteField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryQuoteField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryQuoteField_InstrumentID_get, _pyctp.CThostFtdcQryQuoteField_InstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryQuoteField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryQuoteField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryQuoteField_ExchangeID_get, _pyctp.CThostFtdcQryQuoteField_ExchangeID_set)
    __swig_setmethods__["QuoteSysID"] = _pyctp.CThostFtdcQryQuoteField_QuoteSysID_set
    __swig_getmethods__["QuoteSysID"] = _pyctp.CThostFtdcQryQuoteField_QuoteSysID_get
    if _newclass:
        QuoteSysID = _swig_property(_pyctp.CThostFtdcQryQuoteField_QuoteSysID_get, _pyctp.CThostFtdcQryQuoteField_QuoteSysID_set)
    __swig_setmethods__["InsertTimeStart"] = _pyctp.CThostFtdcQryQuoteField_InsertTimeStart_set
    __swig_getmethods__["InsertTimeStart"] = _pyctp.CThostFtdcQryQuoteField_InsertTimeStart_get
    if _newclass:
        InsertTimeStart = _swig_property(_pyctp.CThostFtdcQryQuoteField_InsertTimeStart_get, _pyctp.CThostFtdcQryQuoteField_InsertTimeStart_set)
    __swig_setmethods__["InsertTimeEnd"] = _pyctp.CThostFtdcQryQuoteField_InsertTimeEnd_set
    __swig_getmethods__["InsertTimeEnd"] = _pyctp.CThostFtdcQryQuoteField_InsertTimeEnd_get
    if _newclass:
        InsertTimeEnd = _swig_property(_pyctp.CThostFtdcQryQuoteField_InsertTimeEnd_get, _pyctp.CThostFtdcQryQuoteField_InsertTimeEnd_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryQuoteField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryQuoteField
    __del__ = lambda self: None
CThostFtdcQryQuoteField_swigregister = _pyctp.CThostFtdcQryQuoteField_swigregister
CThostFtdcQryQuoteField_swigregister(CThostFtdcQryQuoteField)

class CThostFtdcExchangeQuoteField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcExchangeQuoteField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcExchangeQuoteField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["AskPrice"] = _pyctp.CThostFtdcExchangeQuoteField_AskPrice_set
    __swig_getmethods__["AskPrice"] = _pyctp.CThostFtdcExchangeQuoteField_AskPrice_get
    if _newclass:
        AskPrice = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_AskPrice_get, _pyctp.CThostFtdcExchangeQuoteField_AskPrice_set)
    __swig_setmethods__["BidPrice"] = _pyctp.CThostFtdcExchangeQuoteField_BidPrice_set
    __swig_getmethods__["BidPrice"] = _pyctp.CThostFtdcExchangeQuoteField_BidPrice_get
    if _newclass:
        BidPrice = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_BidPrice_get, _pyctp.CThostFtdcExchangeQuoteField_BidPrice_set)
    __swig_setmethods__["AskVolume"] = _pyctp.CThostFtdcExchangeQuoteField_AskVolume_set
    __swig_getmethods__["AskVolume"] = _pyctp.CThostFtdcExchangeQuoteField_AskVolume_get
    if _newclass:
        AskVolume = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_AskVolume_get, _pyctp.CThostFtdcExchangeQuoteField_AskVolume_set)
    __swig_setmethods__["BidVolume"] = _pyctp.CThostFtdcExchangeQuoteField_BidVolume_set
    __swig_getmethods__["BidVolume"] = _pyctp.CThostFtdcExchangeQuoteField_BidVolume_get
    if _newclass:
        BidVolume = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_BidVolume_get, _pyctp.CThostFtdcExchangeQuoteField_BidVolume_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcExchangeQuoteField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcExchangeQuoteField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_RequestID_get, _pyctp.CThostFtdcExchangeQuoteField_RequestID_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CThostFtdcExchangeQuoteField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CThostFtdcExchangeQuoteField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_BusinessUnit_get, _pyctp.CThostFtdcExchangeQuoteField_BusinessUnit_set)
    __swig_setmethods__["AskOffsetFlag"] = _pyctp.CThostFtdcExchangeQuoteField_AskOffsetFlag_set
    __swig_getmethods__["AskOffsetFlag"] = _pyctp.CThostFtdcExchangeQuoteField_AskOffsetFlag_get
    if _newclass:
        AskOffsetFlag = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_AskOffsetFlag_get, _pyctp.CThostFtdcExchangeQuoteField_AskOffsetFlag_set)
    __swig_setmethods__["BidOffsetFlag"] = _pyctp.CThostFtdcExchangeQuoteField_BidOffsetFlag_set
    __swig_getmethods__["BidOffsetFlag"] = _pyctp.CThostFtdcExchangeQuoteField_BidOffsetFlag_get
    if _newclass:
        BidOffsetFlag = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_BidOffsetFlag_get, _pyctp.CThostFtdcExchangeQuoteField_BidOffsetFlag_set)
    __swig_setmethods__["AskHedgeFlag"] = _pyctp.CThostFtdcExchangeQuoteField_AskHedgeFlag_set
    __swig_getmethods__["AskHedgeFlag"] = _pyctp.CThostFtdcExchangeQuoteField_AskHedgeFlag_get
    if _newclass:
        AskHedgeFlag = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_AskHedgeFlag_get, _pyctp.CThostFtdcExchangeQuoteField_AskHedgeFlag_set)
    __swig_setmethods__["BidHedgeFlag"] = _pyctp.CThostFtdcExchangeQuoteField_BidHedgeFlag_set
    __swig_getmethods__["BidHedgeFlag"] = _pyctp.CThostFtdcExchangeQuoteField_BidHedgeFlag_get
    if _newclass:
        BidHedgeFlag = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_BidHedgeFlag_get, _pyctp.CThostFtdcExchangeQuoteField_BidHedgeFlag_set)
    __swig_setmethods__["QuoteLocalID"] = _pyctp.CThostFtdcExchangeQuoteField_QuoteLocalID_set
    __swig_getmethods__["QuoteLocalID"] = _pyctp.CThostFtdcExchangeQuoteField_QuoteLocalID_get
    if _newclass:
        QuoteLocalID = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_QuoteLocalID_get, _pyctp.CThostFtdcExchangeQuoteField_QuoteLocalID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeQuoteField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeQuoteField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_ExchangeID_get, _pyctp.CThostFtdcExchangeQuoteField_ExchangeID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcExchangeQuoteField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcExchangeQuoteField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_ParticipantID_get, _pyctp.CThostFtdcExchangeQuoteField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcExchangeQuoteField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcExchangeQuoteField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_ClientID_get, _pyctp.CThostFtdcExchangeQuoteField_ClientID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CThostFtdcExchangeQuoteField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CThostFtdcExchangeQuoteField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_ExchangeInstID_get, _pyctp.CThostFtdcExchangeQuoteField_ExchangeInstID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcExchangeQuoteField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcExchangeQuoteField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_TraderID_get, _pyctp.CThostFtdcExchangeQuoteField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcExchangeQuoteField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcExchangeQuoteField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_InstallID_get, _pyctp.CThostFtdcExchangeQuoteField_InstallID_set)
    __swig_setmethods__["NotifySequence"] = _pyctp.CThostFtdcExchangeQuoteField_NotifySequence_set
    __swig_getmethods__["NotifySequence"] = _pyctp.CThostFtdcExchangeQuoteField_NotifySequence_get
    if _newclass:
        NotifySequence = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_NotifySequence_get, _pyctp.CThostFtdcExchangeQuoteField_NotifySequence_set)
    __swig_setmethods__["OrderSubmitStatus"] = _pyctp.CThostFtdcExchangeQuoteField_OrderSubmitStatus_set
    __swig_getmethods__["OrderSubmitStatus"] = _pyctp.CThostFtdcExchangeQuoteField_OrderSubmitStatus_get
    if _newclass:
        OrderSubmitStatus = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_OrderSubmitStatus_get, _pyctp.CThostFtdcExchangeQuoteField_OrderSubmitStatus_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcExchangeQuoteField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcExchangeQuoteField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_TradingDay_get, _pyctp.CThostFtdcExchangeQuoteField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CThostFtdcExchangeQuoteField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CThostFtdcExchangeQuoteField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_SettlementID_get, _pyctp.CThostFtdcExchangeQuoteField_SettlementID_set)
    __swig_setmethods__["QuoteSysID"] = _pyctp.CThostFtdcExchangeQuoteField_QuoteSysID_set
    __swig_getmethods__["QuoteSysID"] = _pyctp.CThostFtdcExchangeQuoteField_QuoteSysID_get
    if _newclass:
        QuoteSysID = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_QuoteSysID_get, _pyctp.CThostFtdcExchangeQuoteField_QuoteSysID_set)
    __swig_setmethods__["InsertDate"] = _pyctp.CThostFtdcExchangeQuoteField_InsertDate_set
    __swig_getmethods__["InsertDate"] = _pyctp.CThostFtdcExchangeQuoteField_InsertDate_get
    if _newclass:
        InsertDate = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_InsertDate_get, _pyctp.CThostFtdcExchangeQuoteField_InsertDate_set)
    __swig_setmethods__["InsertTime"] = _pyctp.CThostFtdcExchangeQuoteField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _pyctp.CThostFtdcExchangeQuoteField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_InsertTime_get, _pyctp.CThostFtdcExchangeQuoteField_InsertTime_set)
    __swig_setmethods__["CancelTime"] = _pyctp.CThostFtdcExchangeQuoteField_CancelTime_set
    __swig_getmethods__["CancelTime"] = _pyctp.CThostFtdcExchangeQuoteField_CancelTime_get
    if _newclass:
        CancelTime = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_CancelTime_get, _pyctp.CThostFtdcExchangeQuoteField_CancelTime_set)
    __swig_setmethods__["QuoteStatus"] = _pyctp.CThostFtdcExchangeQuoteField_QuoteStatus_set
    __swig_getmethods__["QuoteStatus"] = _pyctp.CThostFtdcExchangeQuoteField_QuoteStatus_get
    if _newclass:
        QuoteStatus = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_QuoteStatus_get, _pyctp.CThostFtdcExchangeQuoteField_QuoteStatus_set)
    __swig_setmethods__["ClearingPartID"] = _pyctp.CThostFtdcExchangeQuoteField_ClearingPartID_set
    __swig_getmethods__["ClearingPartID"] = _pyctp.CThostFtdcExchangeQuoteField_ClearingPartID_get
    if _newclass:
        ClearingPartID = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_ClearingPartID_get, _pyctp.CThostFtdcExchangeQuoteField_ClearingPartID_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CThostFtdcExchangeQuoteField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CThostFtdcExchangeQuoteField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_SequenceNo_get, _pyctp.CThostFtdcExchangeQuoteField_SequenceNo_set)
    __swig_setmethods__["AskOrderSysID"] = _pyctp.CThostFtdcExchangeQuoteField_AskOrderSysID_set
    __swig_getmethods__["AskOrderSysID"] = _pyctp.CThostFtdcExchangeQuoteField_AskOrderSysID_get
    if _newclass:
        AskOrderSysID = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_AskOrderSysID_get, _pyctp.CThostFtdcExchangeQuoteField_AskOrderSysID_set)
    __swig_setmethods__["BidOrderSysID"] = _pyctp.CThostFtdcExchangeQuoteField_BidOrderSysID_set
    __swig_getmethods__["BidOrderSysID"] = _pyctp.CThostFtdcExchangeQuoteField_BidOrderSysID_get
    if _newclass:
        BidOrderSysID = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_BidOrderSysID_get, _pyctp.CThostFtdcExchangeQuoteField_BidOrderSysID_set)
    __swig_setmethods__["ForQuoteSysID"] = _pyctp.CThostFtdcExchangeQuoteField_ForQuoteSysID_set
    __swig_getmethods__["ForQuoteSysID"] = _pyctp.CThostFtdcExchangeQuoteField_ForQuoteSysID_get
    if _newclass:
        ForQuoteSysID = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_ForQuoteSysID_get, _pyctp.CThostFtdcExchangeQuoteField_ForQuoteSysID_set)
    __swig_setmethods__["BranchID"] = _pyctp.CThostFtdcExchangeQuoteField_BranchID_set
    __swig_getmethods__["BranchID"] = _pyctp.CThostFtdcExchangeQuoteField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_BranchID_get, _pyctp.CThostFtdcExchangeQuoteField_BranchID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcExchangeQuoteField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcExchangeQuoteField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_IPAddress_get, _pyctp.CThostFtdcExchangeQuoteField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcExchangeQuoteField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcExchangeQuoteField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcExchangeQuoteField_MacAddress_get, _pyctp.CThostFtdcExchangeQuoteField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcExchangeQuoteField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcExchangeQuoteField
    __del__ = lambda self: None
CThostFtdcExchangeQuoteField_swigregister = _pyctp.CThostFtdcExchangeQuoteField_swigregister
CThostFtdcExchangeQuoteField_swigregister(CThostFtdcExchangeQuoteField)

class CThostFtdcQryExchangeQuoteField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryExchangeQuoteField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryExchangeQuoteField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcQryExchangeQuoteField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcQryExchangeQuoteField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcQryExchangeQuoteField_ParticipantID_get, _pyctp.CThostFtdcQryExchangeQuoteField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcQryExchangeQuoteField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcQryExchangeQuoteField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcQryExchangeQuoteField_ClientID_get, _pyctp.CThostFtdcQryExchangeQuoteField_ClientID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CThostFtdcQryExchangeQuoteField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CThostFtdcQryExchangeQuoteField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CThostFtdcQryExchangeQuoteField_ExchangeInstID_get, _pyctp.CThostFtdcQryExchangeQuoteField_ExchangeInstID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryExchangeQuoteField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryExchangeQuoteField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryExchangeQuoteField_ExchangeID_get, _pyctp.CThostFtdcQryExchangeQuoteField_ExchangeID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcQryExchangeQuoteField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcQryExchangeQuoteField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcQryExchangeQuoteField_TraderID_get, _pyctp.CThostFtdcQryExchangeQuoteField_TraderID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryExchangeQuoteField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryExchangeQuoteField
    __del__ = lambda self: None
CThostFtdcQryExchangeQuoteField_swigregister = _pyctp.CThostFtdcQryExchangeQuoteField_swigregister
CThostFtdcQryExchangeQuoteField_swigregister(CThostFtdcQryExchangeQuoteField)

class CThostFtdcQryQuoteActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryQuoteActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryQuoteActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryQuoteActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryQuoteActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryQuoteActionField_BrokerID_get, _pyctp.CThostFtdcQryQuoteActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryQuoteActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryQuoteActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryQuoteActionField_InvestorID_get, _pyctp.CThostFtdcQryQuoteActionField_InvestorID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryQuoteActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryQuoteActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryQuoteActionField_ExchangeID_get, _pyctp.CThostFtdcQryQuoteActionField_ExchangeID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryQuoteActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryQuoteActionField
    __del__ = lambda self: None
CThostFtdcQryQuoteActionField_swigregister = _pyctp.CThostFtdcQryQuoteActionField_swigregister
CThostFtdcQryQuoteActionField_swigregister(CThostFtdcQryQuoteActionField)

class CThostFtdcExchangeQuoteActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcExchangeQuoteActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcExchangeQuoteActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeQuoteActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeQuoteActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcExchangeQuoteActionField_ExchangeID_get, _pyctp.CThostFtdcExchangeQuoteActionField_ExchangeID_set)
    __swig_setmethods__["QuoteSysID"] = _pyctp.CThostFtdcExchangeQuoteActionField_QuoteSysID_set
    __swig_getmethods__["QuoteSysID"] = _pyctp.CThostFtdcExchangeQuoteActionField_QuoteSysID_get
    if _newclass:
        QuoteSysID = _swig_property(_pyctp.CThostFtdcExchangeQuoteActionField_QuoteSysID_get, _pyctp.CThostFtdcExchangeQuoteActionField_QuoteSysID_set)
    __swig_setmethods__["ActionFlag"] = _pyctp.CThostFtdcExchangeQuoteActionField_ActionFlag_set
    __swig_getmethods__["ActionFlag"] = _pyctp.CThostFtdcExchangeQuoteActionField_ActionFlag_get
    if _newclass:
        ActionFlag = _swig_property(_pyctp.CThostFtdcExchangeQuoteActionField_ActionFlag_get, _pyctp.CThostFtdcExchangeQuoteActionField_ActionFlag_set)
    __swig_setmethods__["ActionDate"] = _pyctp.CThostFtdcExchangeQuoteActionField_ActionDate_set
    __swig_getmethods__["ActionDate"] = _pyctp.CThostFtdcExchangeQuoteActionField_ActionDate_get
    if _newclass:
        ActionDate = _swig_property(_pyctp.CThostFtdcExchangeQuoteActionField_ActionDate_get, _pyctp.CThostFtdcExchangeQuoteActionField_ActionDate_set)
    __swig_setmethods__["ActionTime"] = _pyctp.CThostFtdcExchangeQuoteActionField_ActionTime_set
    __swig_getmethods__["ActionTime"] = _pyctp.CThostFtdcExchangeQuoteActionField_ActionTime_get
    if _newclass:
        ActionTime = _swig_property(_pyctp.CThostFtdcExchangeQuoteActionField_ActionTime_get, _pyctp.CThostFtdcExchangeQuoteActionField_ActionTime_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcExchangeQuoteActionField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcExchangeQuoteActionField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcExchangeQuoteActionField_TraderID_get, _pyctp.CThostFtdcExchangeQuoteActionField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcExchangeQuoteActionField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcExchangeQuoteActionField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcExchangeQuoteActionField_InstallID_get, _pyctp.CThostFtdcExchangeQuoteActionField_InstallID_set)
    __swig_setmethods__["QuoteLocalID"] = _pyctp.CThostFtdcExchangeQuoteActionField_QuoteLocalID_set
    __swig_getmethods__["QuoteLocalID"] = _pyctp.CThostFtdcExchangeQuoteActionField_QuoteLocalID_get
    if _newclass:
        QuoteLocalID = _swig_property(_pyctp.CThostFtdcExchangeQuoteActionField_QuoteLocalID_get, _pyctp.CThostFtdcExchangeQuoteActionField_QuoteLocalID_set)
    __swig_setmethods__["ActionLocalID"] = _pyctp.CThostFtdcExchangeQuoteActionField_ActionLocalID_set
    __swig_getmethods__["ActionLocalID"] = _pyctp.CThostFtdcExchangeQuoteActionField_ActionLocalID_get
    if _newclass:
        ActionLocalID = _swig_property(_pyctp.CThostFtdcExchangeQuoteActionField_ActionLocalID_get, _pyctp.CThostFtdcExchangeQuoteActionField_ActionLocalID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcExchangeQuoteActionField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcExchangeQuoteActionField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcExchangeQuoteActionField_ParticipantID_get, _pyctp.CThostFtdcExchangeQuoteActionField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcExchangeQuoteActionField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcExchangeQuoteActionField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcExchangeQuoteActionField_ClientID_get, _pyctp.CThostFtdcExchangeQuoteActionField_ClientID_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CThostFtdcExchangeQuoteActionField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CThostFtdcExchangeQuoteActionField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CThostFtdcExchangeQuoteActionField_BusinessUnit_get, _pyctp.CThostFtdcExchangeQuoteActionField_BusinessUnit_set)
    __swig_setmethods__["OrderActionStatus"] = _pyctp.CThostFtdcExchangeQuoteActionField_OrderActionStatus_set
    __swig_getmethods__["OrderActionStatus"] = _pyctp.CThostFtdcExchangeQuoteActionField_OrderActionStatus_get
    if _newclass:
        OrderActionStatus = _swig_property(_pyctp.CThostFtdcExchangeQuoteActionField_OrderActionStatus_get, _pyctp.CThostFtdcExchangeQuoteActionField_OrderActionStatus_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcExchangeQuoteActionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcExchangeQuoteActionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcExchangeQuoteActionField_UserID_get, _pyctp.CThostFtdcExchangeQuoteActionField_UserID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcExchangeQuoteActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcExchangeQuoteActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcExchangeQuoteActionField_IPAddress_get, _pyctp.CThostFtdcExchangeQuoteActionField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcExchangeQuoteActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcExchangeQuoteActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcExchangeQuoteActionField_MacAddress_get, _pyctp.CThostFtdcExchangeQuoteActionField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcExchangeQuoteActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcExchangeQuoteActionField
    __del__ = lambda self: None
CThostFtdcExchangeQuoteActionField_swigregister = _pyctp.CThostFtdcExchangeQuoteActionField_swigregister
CThostFtdcExchangeQuoteActionField_swigregister(CThostFtdcExchangeQuoteActionField)

class CThostFtdcQryExchangeQuoteActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryExchangeQuoteActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryExchangeQuoteActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcQryExchangeQuoteActionField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcQryExchangeQuoteActionField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcQryExchangeQuoteActionField_ParticipantID_get, _pyctp.CThostFtdcQryExchangeQuoteActionField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcQryExchangeQuoteActionField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcQryExchangeQuoteActionField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcQryExchangeQuoteActionField_ClientID_get, _pyctp.CThostFtdcQryExchangeQuoteActionField_ClientID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryExchangeQuoteActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryExchangeQuoteActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryExchangeQuoteActionField_ExchangeID_get, _pyctp.CThostFtdcQryExchangeQuoteActionField_ExchangeID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcQryExchangeQuoteActionField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcQryExchangeQuoteActionField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcQryExchangeQuoteActionField_TraderID_get, _pyctp.CThostFtdcQryExchangeQuoteActionField_TraderID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryExchangeQuoteActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryExchangeQuoteActionField
    __del__ = lambda self: None
CThostFtdcQryExchangeQuoteActionField_swigregister = _pyctp.CThostFtdcQryExchangeQuoteActionField_swigregister
CThostFtdcQryExchangeQuoteActionField_swigregister(CThostFtdcQryExchangeQuoteActionField)

class CThostFtdcOptionInstrDeltaField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcOptionInstrDeltaField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcOptionInstrDeltaField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcOptionInstrDeltaField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcOptionInstrDeltaField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcOptionInstrDeltaField_InstrumentID_get, _pyctp.CThostFtdcOptionInstrDeltaField_InstrumentID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CThostFtdcOptionInstrDeltaField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CThostFtdcOptionInstrDeltaField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CThostFtdcOptionInstrDeltaField_InvestorRange_get, _pyctp.CThostFtdcOptionInstrDeltaField_InvestorRange_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcOptionInstrDeltaField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcOptionInstrDeltaField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcOptionInstrDeltaField_BrokerID_get, _pyctp.CThostFtdcOptionInstrDeltaField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcOptionInstrDeltaField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcOptionInstrDeltaField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcOptionInstrDeltaField_InvestorID_get, _pyctp.CThostFtdcOptionInstrDeltaField_InvestorID_set)
    __swig_setmethods__["Delta"] = _pyctp.CThostFtdcOptionInstrDeltaField_Delta_set
    __swig_getmethods__["Delta"] = _pyctp.CThostFtdcOptionInstrDeltaField_Delta_get
    if _newclass:
        Delta = _swig_property(_pyctp.CThostFtdcOptionInstrDeltaField_Delta_get, _pyctp.CThostFtdcOptionInstrDeltaField_Delta_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcOptionInstrDeltaField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcOptionInstrDeltaField
    __del__ = lambda self: None
CThostFtdcOptionInstrDeltaField_swigregister = _pyctp.CThostFtdcOptionInstrDeltaField_swigregister
CThostFtdcOptionInstrDeltaField_swigregister(CThostFtdcOptionInstrDeltaField)

class CThostFtdcForQuoteRspField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcForQuoteRspField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcForQuoteRspField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcForQuoteRspField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcForQuoteRspField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcForQuoteRspField_TradingDay_get, _pyctp.CThostFtdcForQuoteRspField_TradingDay_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcForQuoteRspField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcForQuoteRspField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcForQuoteRspField_InstrumentID_get, _pyctp.CThostFtdcForQuoteRspField_InstrumentID_set)
    __swig_setmethods__["ForQuoteSysID"] = _pyctp.CThostFtdcForQuoteRspField_ForQuoteSysID_set
    __swig_getmethods__["ForQuoteSysID"] = _pyctp.CThostFtdcForQuoteRspField_ForQuoteSysID_get
    if _newclass:
        ForQuoteSysID = _swig_property(_pyctp.CThostFtdcForQuoteRspField_ForQuoteSysID_get, _pyctp.CThostFtdcForQuoteRspField_ForQuoteSysID_set)
    __swig_setmethods__["ForQuoteTime"] = _pyctp.CThostFtdcForQuoteRspField_ForQuoteTime_set
    __swig_getmethods__["ForQuoteTime"] = _pyctp.CThostFtdcForQuoteRspField_ForQuoteTime_get
    if _newclass:
        ForQuoteTime = _swig_property(_pyctp.CThostFtdcForQuoteRspField_ForQuoteTime_get, _pyctp.CThostFtdcForQuoteRspField_ForQuoteTime_set)
    __swig_setmethods__["ActionDay"] = _pyctp.CThostFtdcForQuoteRspField_ActionDay_set
    __swig_getmethods__["ActionDay"] = _pyctp.CThostFtdcForQuoteRspField_ActionDay_get
    if _newclass:
        ActionDay = _swig_property(_pyctp.CThostFtdcForQuoteRspField_ActionDay_get, _pyctp.CThostFtdcForQuoteRspField_ActionDay_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcForQuoteRspField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcForQuoteRspField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcForQuoteRspField_ExchangeID_get, _pyctp.CThostFtdcForQuoteRspField_ExchangeID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcForQuoteRspField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcForQuoteRspField
    __del__ = lambda self: None
CThostFtdcForQuoteRspField_swigregister = _pyctp.CThostFtdcForQuoteRspField_swigregister
CThostFtdcForQuoteRspField_swigregister(CThostFtdcForQuoteRspField)

class CThostFtdcStrikeOffsetField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcStrikeOffsetField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcStrikeOffsetField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcStrikeOffsetField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcStrikeOffsetField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcStrikeOffsetField_InstrumentID_get, _pyctp.CThostFtdcStrikeOffsetField_InstrumentID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CThostFtdcStrikeOffsetField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CThostFtdcStrikeOffsetField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CThostFtdcStrikeOffsetField_InvestorRange_get, _pyctp.CThostFtdcStrikeOffsetField_InvestorRange_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcStrikeOffsetField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcStrikeOffsetField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcStrikeOffsetField_BrokerID_get, _pyctp.CThostFtdcStrikeOffsetField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcStrikeOffsetField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcStrikeOffsetField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcStrikeOffsetField_InvestorID_get, _pyctp.CThostFtdcStrikeOffsetField_InvestorID_set)
    __swig_setmethods__["Offset"] = _pyctp.CThostFtdcStrikeOffsetField_Offset_set
    __swig_getmethods__["Offset"] = _pyctp.CThostFtdcStrikeOffsetField_Offset_get
    if _newclass:
        Offset = _swig_property(_pyctp.CThostFtdcStrikeOffsetField_Offset_get, _pyctp.CThostFtdcStrikeOffsetField_Offset_set)
    __swig_setmethods__["OffsetType"] = _pyctp.CThostFtdcStrikeOffsetField_OffsetType_set
    __swig_getmethods__["OffsetType"] = _pyctp.CThostFtdcStrikeOffsetField_OffsetType_get
    if _newclass:
        OffsetType = _swig_property(_pyctp.CThostFtdcStrikeOffsetField_OffsetType_get, _pyctp.CThostFtdcStrikeOffsetField_OffsetType_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcStrikeOffsetField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcStrikeOffsetField
    __del__ = lambda self: None
CThostFtdcStrikeOffsetField_swigregister = _pyctp.CThostFtdcStrikeOffsetField_swigregister
CThostFtdcStrikeOffsetField_swigregister(CThostFtdcStrikeOffsetField)

class CThostFtdcQryStrikeOffsetField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryStrikeOffsetField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryStrikeOffsetField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryStrikeOffsetField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryStrikeOffsetField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryStrikeOffsetField_BrokerID_get, _pyctp.CThostFtdcQryStrikeOffsetField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryStrikeOffsetField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryStrikeOffsetField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryStrikeOffsetField_InvestorID_get, _pyctp.CThostFtdcQryStrikeOffsetField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryStrikeOffsetField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryStrikeOffsetField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryStrikeOffsetField_InstrumentID_get, _pyctp.CThostFtdcQryStrikeOffsetField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryStrikeOffsetField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryStrikeOffsetField
    __del__ = lambda self: None
CThostFtdcQryStrikeOffsetField_swigregister = _pyctp.CThostFtdcQryStrikeOffsetField_swigregister
CThostFtdcQryStrikeOffsetField_swigregister(CThostFtdcQryStrikeOffsetField)

class CThostFtdcInputBatchOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcInputBatchOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcInputBatchOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcInputBatchOrderActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcInputBatchOrderActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcInputBatchOrderActionField_BrokerID_get, _pyctp.CThostFtdcInputBatchOrderActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcInputBatchOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcInputBatchOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcInputBatchOrderActionField_InvestorID_get, _pyctp.CThostFtdcInputBatchOrderActionField_InvestorID_set)
    __swig_setmethods__["OrderActionRef"] = _pyctp.CThostFtdcInputBatchOrderActionField_OrderActionRef_set
    __swig_getmethods__["OrderActionRef"] = _pyctp.CThostFtdcInputBatchOrderActionField_OrderActionRef_get
    if _newclass:
        OrderActionRef = _swig_property(_pyctp.CThostFtdcInputBatchOrderActionField_OrderActionRef_get, _pyctp.CThostFtdcInputBatchOrderActionField_OrderActionRef_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcInputBatchOrderActionField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcInputBatchOrderActionField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcInputBatchOrderActionField_RequestID_get, _pyctp.CThostFtdcInputBatchOrderActionField_RequestID_set)
    __swig_setmethods__["FrontID"] = _pyctp.CThostFtdcInputBatchOrderActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CThostFtdcInputBatchOrderActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CThostFtdcInputBatchOrderActionField_FrontID_get, _pyctp.CThostFtdcInputBatchOrderActionField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcInputBatchOrderActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcInputBatchOrderActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcInputBatchOrderActionField_SessionID_get, _pyctp.CThostFtdcInputBatchOrderActionField_SessionID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcInputBatchOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcInputBatchOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcInputBatchOrderActionField_ExchangeID_get, _pyctp.CThostFtdcInputBatchOrderActionField_ExchangeID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcInputBatchOrderActionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcInputBatchOrderActionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcInputBatchOrderActionField_UserID_get, _pyctp.CThostFtdcInputBatchOrderActionField_UserID_set)
    __swig_setmethods__["InvestUnitID"] = _pyctp.CThostFtdcInputBatchOrderActionField_InvestUnitID_set
    __swig_getmethods__["InvestUnitID"] = _pyctp.CThostFtdcInputBatchOrderActionField_InvestUnitID_get
    if _newclass:
        InvestUnitID = _swig_property(_pyctp.CThostFtdcInputBatchOrderActionField_InvestUnitID_get, _pyctp.CThostFtdcInputBatchOrderActionField_InvestUnitID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcInputBatchOrderActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcInputBatchOrderActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcInputBatchOrderActionField_IPAddress_get, _pyctp.CThostFtdcInputBatchOrderActionField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcInputBatchOrderActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcInputBatchOrderActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcInputBatchOrderActionField_MacAddress_get, _pyctp.CThostFtdcInputBatchOrderActionField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcInputBatchOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcInputBatchOrderActionField
    __del__ = lambda self: None
CThostFtdcInputBatchOrderActionField_swigregister = _pyctp.CThostFtdcInputBatchOrderActionField_swigregister
CThostFtdcInputBatchOrderActionField_swigregister(CThostFtdcInputBatchOrderActionField)

class CThostFtdcBatchOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcBatchOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcBatchOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcBatchOrderActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcBatchOrderActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcBatchOrderActionField_BrokerID_get, _pyctp.CThostFtdcBatchOrderActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcBatchOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcBatchOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcBatchOrderActionField_InvestorID_get, _pyctp.CThostFtdcBatchOrderActionField_InvestorID_set)
    __swig_setmethods__["OrderActionRef"] = _pyctp.CThostFtdcBatchOrderActionField_OrderActionRef_set
    __swig_getmethods__["OrderActionRef"] = _pyctp.CThostFtdcBatchOrderActionField_OrderActionRef_get
    if _newclass:
        OrderActionRef = _swig_property(_pyctp.CThostFtdcBatchOrderActionField_OrderActionRef_get, _pyctp.CThostFtdcBatchOrderActionField_OrderActionRef_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcBatchOrderActionField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcBatchOrderActionField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcBatchOrderActionField_RequestID_get, _pyctp.CThostFtdcBatchOrderActionField_RequestID_set)
    __swig_setmethods__["FrontID"] = _pyctp.CThostFtdcBatchOrderActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CThostFtdcBatchOrderActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CThostFtdcBatchOrderActionField_FrontID_get, _pyctp.CThostFtdcBatchOrderActionField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcBatchOrderActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcBatchOrderActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcBatchOrderActionField_SessionID_get, _pyctp.CThostFtdcBatchOrderActionField_SessionID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcBatchOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcBatchOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcBatchOrderActionField_ExchangeID_get, _pyctp.CThostFtdcBatchOrderActionField_ExchangeID_set)
    __swig_setmethods__["ActionDate"] = _pyctp.CThostFtdcBatchOrderActionField_ActionDate_set
    __swig_getmethods__["ActionDate"] = _pyctp.CThostFtdcBatchOrderActionField_ActionDate_get
    if _newclass:
        ActionDate = _swig_property(_pyctp.CThostFtdcBatchOrderActionField_ActionDate_get, _pyctp.CThostFtdcBatchOrderActionField_ActionDate_set)
    __swig_setmethods__["ActionTime"] = _pyctp.CThostFtdcBatchOrderActionField_ActionTime_set
    __swig_getmethods__["ActionTime"] = _pyctp.CThostFtdcBatchOrderActionField_ActionTime_get
    if _newclass:
        ActionTime = _swig_property(_pyctp.CThostFtdcBatchOrderActionField_ActionTime_get, _pyctp.CThostFtdcBatchOrderActionField_ActionTime_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcBatchOrderActionField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcBatchOrderActionField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcBatchOrderActionField_TraderID_get, _pyctp.CThostFtdcBatchOrderActionField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcBatchOrderActionField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcBatchOrderActionField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcBatchOrderActionField_InstallID_get, _pyctp.CThostFtdcBatchOrderActionField_InstallID_set)
    __swig_setmethods__["ActionLocalID"] = _pyctp.CThostFtdcBatchOrderActionField_ActionLocalID_set
    __swig_getmethods__["ActionLocalID"] = _pyctp.CThostFtdcBatchOrderActionField_ActionLocalID_get
    if _newclass:
        ActionLocalID = _swig_property(_pyctp.CThostFtdcBatchOrderActionField_ActionLocalID_get, _pyctp.CThostFtdcBatchOrderActionField_ActionLocalID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcBatchOrderActionField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcBatchOrderActionField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcBatchOrderActionField_ParticipantID_get, _pyctp.CThostFtdcBatchOrderActionField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcBatchOrderActionField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcBatchOrderActionField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcBatchOrderActionField_ClientID_get, _pyctp.CThostFtdcBatchOrderActionField_ClientID_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CThostFtdcBatchOrderActionField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CThostFtdcBatchOrderActionField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CThostFtdcBatchOrderActionField_BusinessUnit_get, _pyctp.CThostFtdcBatchOrderActionField_BusinessUnit_set)
    __swig_setmethods__["OrderActionStatus"] = _pyctp.CThostFtdcBatchOrderActionField_OrderActionStatus_set
    __swig_getmethods__["OrderActionStatus"] = _pyctp.CThostFtdcBatchOrderActionField_OrderActionStatus_get
    if _newclass:
        OrderActionStatus = _swig_property(_pyctp.CThostFtdcBatchOrderActionField_OrderActionStatus_get, _pyctp.CThostFtdcBatchOrderActionField_OrderActionStatus_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcBatchOrderActionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcBatchOrderActionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcBatchOrderActionField_UserID_get, _pyctp.CThostFtdcBatchOrderActionField_UserID_set)
    __swig_setmethods__["StatusMsg"] = _pyctp.CThostFtdcBatchOrderActionField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _pyctp.CThostFtdcBatchOrderActionField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_pyctp.CThostFtdcBatchOrderActionField_StatusMsg_get, _pyctp.CThostFtdcBatchOrderActionField_StatusMsg_set)
    __swig_setmethods__["InvestUnitID"] = _pyctp.CThostFtdcBatchOrderActionField_InvestUnitID_set
    __swig_getmethods__["InvestUnitID"] = _pyctp.CThostFtdcBatchOrderActionField_InvestUnitID_get
    if _newclass:
        InvestUnitID = _swig_property(_pyctp.CThostFtdcBatchOrderActionField_InvestUnitID_get, _pyctp.CThostFtdcBatchOrderActionField_InvestUnitID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcBatchOrderActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcBatchOrderActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcBatchOrderActionField_IPAddress_get, _pyctp.CThostFtdcBatchOrderActionField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcBatchOrderActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcBatchOrderActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcBatchOrderActionField_MacAddress_get, _pyctp.CThostFtdcBatchOrderActionField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcBatchOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcBatchOrderActionField
    __del__ = lambda self: None
CThostFtdcBatchOrderActionField_swigregister = _pyctp.CThostFtdcBatchOrderActionField_swigregister
CThostFtdcBatchOrderActionField_swigregister(CThostFtdcBatchOrderActionField)

class CThostFtdcExchangeBatchOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcExchangeBatchOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcExchangeBatchOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeBatchOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeBatchOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcExchangeBatchOrderActionField_ExchangeID_get, _pyctp.CThostFtdcExchangeBatchOrderActionField_ExchangeID_set)
    __swig_setmethods__["ActionDate"] = _pyctp.CThostFtdcExchangeBatchOrderActionField_ActionDate_set
    __swig_getmethods__["ActionDate"] = _pyctp.CThostFtdcExchangeBatchOrderActionField_ActionDate_get
    if _newclass:
        ActionDate = _swig_property(_pyctp.CThostFtdcExchangeBatchOrderActionField_ActionDate_get, _pyctp.CThostFtdcExchangeBatchOrderActionField_ActionDate_set)
    __swig_setmethods__["ActionTime"] = _pyctp.CThostFtdcExchangeBatchOrderActionField_ActionTime_set
    __swig_getmethods__["ActionTime"] = _pyctp.CThostFtdcExchangeBatchOrderActionField_ActionTime_get
    if _newclass:
        ActionTime = _swig_property(_pyctp.CThostFtdcExchangeBatchOrderActionField_ActionTime_get, _pyctp.CThostFtdcExchangeBatchOrderActionField_ActionTime_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcExchangeBatchOrderActionField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcExchangeBatchOrderActionField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcExchangeBatchOrderActionField_TraderID_get, _pyctp.CThostFtdcExchangeBatchOrderActionField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcExchangeBatchOrderActionField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcExchangeBatchOrderActionField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcExchangeBatchOrderActionField_InstallID_get, _pyctp.CThostFtdcExchangeBatchOrderActionField_InstallID_set)
    __swig_setmethods__["ActionLocalID"] = _pyctp.CThostFtdcExchangeBatchOrderActionField_ActionLocalID_set
    __swig_getmethods__["ActionLocalID"] = _pyctp.CThostFtdcExchangeBatchOrderActionField_ActionLocalID_get
    if _newclass:
        ActionLocalID = _swig_property(_pyctp.CThostFtdcExchangeBatchOrderActionField_ActionLocalID_get, _pyctp.CThostFtdcExchangeBatchOrderActionField_ActionLocalID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcExchangeBatchOrderActionField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcExchangeBatchOrderActionField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcExchangeBatchOrderActionField_ParticipantID_get, _pyctp.CThostFtdcExchangeBatchOrderActionField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcExchangeBatchOrderActionField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcExchangeBatchOrderActionField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcExchangeBatchOrderActionField_ClientID_get, _pyctp.CThostFtdcExchangeBatchOrderActionField_ClientID_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CThostFtdcExchangeBatchOrderActionField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CThostFtdcExchangeBatchOrderActionField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CThostFtdcExchangeBatchOrderActionField_BusinessUnit_get, _pyctp.CThostFtdcExchangeBatchOrderActionField_BusinessUnit_set)
    __swig_setmethods__["OrderActionStatus"] = _pyctp.CThostFtdcExchangeBatchOrderActionField_OrderActionStatus_set
    __swig_getmethods__["OrderActionStatus"] = _pyctp.CThostFtdcExchangeBatchOrderActionField_OrderActionStatus_get
    if _newclass:
        OrderActionStatus = _swig_property(_pyctp.CThostFtdcExchangeBatchOrderActionField_OrderActionStatus_get, _pyctp.CThostFtdcExchangeBatchOrderActionField_OrderActionStatus_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcExchangeBatchOrderActionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcExchangeBatchOrderActionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcExchangeBatchOrderActionField_UserID_get, _pyctp.CThostFtdcExchangeBatchOrderActionField_UserID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcExchangeBatchOrderActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcExchangeBatchOrderActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcExchangeBatchOrderActionField_IPAddress_get, _pyctp.CThostFtdcExchangeBatchOrderActionField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcExchangeBatchOrderActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcExchangeBatchOrderActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcExchangeBatchOrderActionField_MacAddress_get, _pyctp.CThostFtdcExchangeBatchOrderActionField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcExchangeBatchOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcExchangeBatchOrderActionField
    __del__ = lambda self: None
CThostFtdcExchangeBatchOrderActionField_swigregister = _pyctp.CThostFtdcExchangeBatchOrderActionField_swigregister
CThostFtdcExchangeBatchOrderActionField_swigregister(CThostFtdcExchangeBatchOrderActionField)

class CThostFtdcQryBatchOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryBatchOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryBatchOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryBatchOrderActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryBatchOrderActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryBatchOrderActionField_BrokerID_get, _pyctp.CThostFtdcQryBatchOrderActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryBatchOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryBatchOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryBatchOrderActionField_InvestorID_get, _pyctp.CThostFtdcQryBatchOrderActionField_InvestorID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryBatchOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryBatchOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryBatchOrderActionField_ExchangeID_get, _pyctp.CThostFtdcQryBatchOrderActionField_ExchangeID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryBatchOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryBatchOrderActionField
    __del__ = lambda self: None
CThostFtdcQryBatchOrderActionField_swigregister = _pyctp.CThostFtdcQryBatchOrderActionField_swigregister
CThostFtdcQryBatchOrderActionField_swigregister(CThostFtdcQryBatchOrderActionField)

class CThostFtdcCombInstrumentGuardField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcCombInstrumentGuardField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcCombInstrumentGuardField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcCombInstrumentGuardField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcCombInstrumentGuardField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcCombInstrumentGuardField_BrokerID_get, _pyctp.CThostFtdcCombInstrumentGuardField_BrokerID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcCombInstrumentGuardField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcCombInstrumentGuardField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcCombInstrumentGuardField_InstrumentID_get, _pyctp.CThostFtdcCombInstrumentGuardField_InstrumentID_set)
    __swig_setmethods__["GuarantRatio"] = _pyctp.CThostFtdcCombInstrumentGuardField_GuarantRatio_set
    __swig_getmethods__["GuarantRatio"] = _pyctp.CThostFtdcCombInstrumentGuardField_GuarantRatio_get
    if _newclass:
        GuarantRatio = _swig_property(_pyctp.CThostFtdcCombInstrumentGuardField_GuarantRatio_get, _pyctp.CThostFtdcCombInstrumentGuardField_GuarantRatio_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcCombInstrumentGuardField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcCombInstrumentGuardField
    __del__ = lambda self: None
CThostFtdcCombInstrumentGuardField_swigregister = _pyctp.CThostFtdcCombInstrumentGuardField_swigregister
CThostFtdcCombInstrumentGuardField_swigregister(CThostFtdcCombInstrumentGuardField)

class CThostFtdcQryCombInstrumentGuardField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryCombInstrumentGuardField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryCombInstrumentGuardField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryCombInstrumentGuardField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryCombInstrumentGuardField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryCombInstrumentGuardField_BrokerID_get, _pyctp.CThostFtdcQryCombInstrumentGuardField_BrokerID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryCombInstrumentGuardField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryCombInstrumentGuardField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryCombInstrumentGuardField_InstrumentID_get, _pyctp.CThostFtdcQryCombInstrumentGuardField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryCombInstrumentGuardField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryCombInstrumentGuardField
    __del__ = lambda self: None
CThostFtdcQryCombInstrumentGuardField_swigregister = _pyctp.CThostFtdcQryCombInstrumentGuardField_swigregister
CThostFtdcQryCombInstrumentGuardField_swigregister(CThostFtdcQryCombInstrumentGuardField)

class CThostFtdcInputCombActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcInputCombActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcInputCombActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcInputCombActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcInputCombActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcInputCombActionField_BrokerID_get, _pyctp.CThostFtdcInputCombActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcInputCombActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcInputCombActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcInputCombActionField_InvestorID_get, _pyctp.CThostFtdcInputCombActionField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcInputCombActionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcInputCombActionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcInputCombActionField_InstrumentID_get, _pyctp.CThostFtdcInputCombActionField_InstrumentID_set)
    __swig_setmethods__["CombActionRef"] = _pyctp.CThostFtdcInputCombActionField_CombActionRef_set
    __swig_getmethods__["CombActionRef"] = _pyctp.CThostFtdcInputCombActionField_CombActionRef_get
    if _newclass:
        CombActionRef = _swig_property(_pyctp.CThostFtdcInputCombActionField_CombActionRef_get, _pyctp.CThostFtdcInputCombActionField_CombActionRef_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcInputCombActionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcInputCombActionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcInputCombActionField_UserID_get, _pyctp.CThostFtdcInputCombActionField_UserID_set)
    __swig_setmethods__["Direction"] = _pyctp.CThostFtdcInputCombActionField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CThostFtdcInputCombActionField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CThostFtdcInputCombActionField_Direction_get, _pyctp.CThostFtdcInputCombActionField_Direction_set)
    __swig_setmethods__["Volume"] = _pyctp.CThostFtdcInputCombActionField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CThostFtdcInputCombActionField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CThostFtdcInputCombActionField_Volume_get, _pyctp.CThostFtdcInputCombActionField_Volume_set)
    __swig_setmethods__["CombDirection"] = _pyctp.CThostFtdcInputCombActionField_CombDirection_set
    __swig_getmethods__["CombDirection"] = _pyctp.CThostFtdcInputCombActionField_CombDirection_get
    if _newclass:
        CombDirection = _swig_property(_pyctp.CThostFtdcInputCombActionField_CombDirection_get, _pyctp.CThostFtdcInputCombActionField_CombDirection_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcInputCombActionField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcInputCombActionField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcInputCombActionField_HedgeFlag_get, _pyctp.CThostFtdcInputCombActionField_HedgeFlag_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcInputCombActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcInputCombActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcInputCombActionField_ExchangeID_get, _pyctp.CThostFtdcInputCombActionField_ExchangeID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcInputCombActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcInputCombActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcInputCombActionField_IPAddress_get, _pyctp.CThostFtdcInputCombActionField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcInputCombActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcInputCombActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcInputCombActionField_MacAddress_get, _pyctp.CThostFtdcInputCombActionField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcInputCombActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcInputCombActionField
    __del__ = lambda self: None
CThostFtdcInputCombActionField_swigregister = _pyctp.CThostFtdcInputCombActionField_swigregister
CThostFtdcInputCombActionField_swigregister(CThostFtdcInputCombActionField)

class CThostFtdcCombActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcCombActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcCombActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcCombActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcCombActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcCombActionField_BrokerID_get, _pyctp.CThostFtdcCombActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcCombActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcCombActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcCombActionField_InvestorID_get, _pyctp.CThostFtdcCombActionField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcCombActionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcCombActionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcCombActionField_InstrumentID_get, _pyctp.CThostFtdcCombActionField_InstrumentID_set)
    __swig_setmethods__["CombActionRef"] = _pyctp.CThostFtdcCombActionField_CombActionRef_set
    __swig_getmethods__["CombActionRef"] = _pyctp.CThostFtdcCombActionField_CombActionRef_get
    if _newclass:
        CombActionRef = _swig_property(_pyctp.CThostFtdcCombActionField_CombActionRef_get, _pyctp.CThostFtdcCombActionField_CombActionRef_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcCombActionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcCombActionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcCombActionField_UserID_get, _pyctp.CThostFtdcCombActionField_UserID_set)
    __swig_setmethods__["Direction"] = _pyctp.CThostFtdcCombActionField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CThostFtdcCombActionField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CThostFtdcCombActionField_Direction_get, _pyctp.CThostFtdcCombActionField_Direction_set)
    __swig_setmethods__["Volume"] = _pyctp.CThostFtdcCombActionField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CThostFtdcCombActionField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CThostFtdcCombActionField_Volume_get, _pyctp.CThostFtdcCombActionField_Volume_set)
    __swig_setmethods__["CombDirection"] = _pyctp.CThostFtdcCombActionField_CombDirection_set
    __swig_getmethods__["CombDirection"] = _pyctp.CThostFtdcCombActionField_CombDirection_get
    if _newclass:
        CombDirection = _swig_property(_pyctp.CThostFtdcCombActionField_CombDirection_get, _pyctp.CThostFtdcCombActionField_CombDirection_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcCombActionField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcCombActionField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcCombActionField_HedgeFlag_get, _pyctp.CThostFtdcCombActionField_HedgeFlag_set)
    __swig_setmethods__["ActionLocalID"] = _pyctp.CThostFtdcCombActionField_ActionLocalID_set
    __swig_getmethods__["ActionLocalID"] = _pyctp.CThostFtdcCombActionField_ActionLocalID_get
    if _newclass:
        ActionLocalID = _swig_property(_pyctp.CThostFtdcCombActionField_ActionLocalID_get, _pyctp.CThostFtdcCombActionField_ActionLocalID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcCombActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcCombActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcCombActionField_ExchangeID_get, _pyctp.CThostFtdcCombActionField_ExchangeID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcCombActionField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcCombActionField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcCombActionField_ParticipantID_get, _pyctp.CThostFtdcCombActionField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcCombActionField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcCombActionField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcCombActionField_ClientID_get, _pyctp.CThostFtdcCombActionField_ClientID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CThostFtdcCombActionField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CThostFtdcCombActionField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CThostFtdcCombActionField_ExchangeInstID_get, _pyctp.CThostFtdcCombActionField_ExchangeInstID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcCombActionField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcCombActionField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcCombActionField_TraderID_get, _pyctp.CThostFtdcCombActionField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcCombActionField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcCombActionField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcCombActionField_InstallID_get, _pyctp.CThostFtdcCombActionField_InstallID_set)
    __swig_setmethods__["ActionStatus"] = _pyctp.CThostFtdcCombActionField_ActionStatus_set
    __swig_getmethods__["ActionStatus"] = _pyctp.CThostFtdcCombActionField_ActionStatus_get
    if _newclass:
        ActionStatus = _swig_property(_pyctp.CThostFtdcCombActionField_ActionStatus_get, _pyctp.CThostFtdcCombActionField_ActionStatus_set)
    __swig_setmethods__["NotifySequence"] = _pyctp.CThostFtdcCombActionField_NotifySequence_set
    __swig_getmethods__["NotifySequence"] = _pyctp.CThostFtdcCombActionField_NotifySequence_get
    if _newclass:
        NotifySequence = _swig_property(_pyctp.CThostFtdcCombActionField_NotifySequence_get, _pyctp.CThostFtdcCombActionField_NotifySequence_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcCombActionField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcCombActionField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcCombActionField_TradingDay_get, _pyctp.CThostFtdcCombActionField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CThostFtdcCombActionField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CThostFtdcCombActionField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CThostFtdcCombActionField_SettlementID_get, _pyctp.CThostFtdcCombActionField_SettlementID_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CThostFtdcCombActionField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CThostFtdcCombActionField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CThostFtdcCombActionField_SequenceNo_get, _pyctp.CThostFtdcCombActionField_SequenceNo_set)
    __swig_setmethods__["FrontID"] = _pyctp.CThostFtdcCombActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CThostFtdcCombActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CThostFtdcCombActionField_FrontID_get, _pyctp.CThostFtdcCombActionField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcCombActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcCombActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcCombActionField_SessionID_get, _pyctp.CThostFtdcCombActionField_SessionID_set)
    __swig_setmethods__["UserProductInfo"] = _pyctp.CThostFtdcCombActionField_UserProductInfo_set
    __swig_getmethods__["UserProductInfo"] = _pyctp.CThostFtdcCombActionField_UserProductInfo_get
    if _newclass:
        UserProductInfo = _swig_property(_pyctp.CThostFtdcCombActionField_UserProductInfo_get, _pyctp.CThostFtdcCombActionField_UserProductInfo_set)
    __swig_setmethods__["StatusMsg"] = _pyctp.CThostFtdcCombActionField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _pyctp.CThostFtdcCombActionField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_pyctp.CThostFtdcCombActionField_StatusMsg_get, _pyctp.CThostFtdcCombActionField_StatusMsg_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcCombActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcCombActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcCombActionField_IPAddress_get, _pyctp.CThostFtdcCombActionField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcCombActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcCombActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcCombActionField_MacAddress_get, _pyctp.CThostFtdcCombActionField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcCombActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcCombActionField
    __del__ = lambda self: None
CThostFtdcCombActionField_swigregister = _pyctp.CThostFtdcCombActionField_swigregister
CThostFtdcCombActionField_swigregister(CThostFtdcCombActionField)

class CThostFtdcQryCombActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryCombActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryCombActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryCombActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryCombActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryCombActionField_BrokerID_get, _pyctp.CThostFtdcQryCombActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryCombActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryCombActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryCombActionField_InvestorID_get, _pyctp.CThostFtdcQryCombActionField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryCombActionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryCombActionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryCombActionField_InstrumentID_get, _pyctp.CThostFtdcQryCombActionField_InstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryCombActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryCombActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryCombActionField_ExchangeID_get, _pyctp.CThostFtdcQryCombActionField_ExchangeID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryCombActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryCombActionField
    __del__ = lambda self: None
CThostFtdcQryCombActionField_swigregister = _pyctp.CThostFtdcQryCombActionField_swigregister
CThostFtdcQryCombActionField_swigregister(CThostFtdcQryCombActionField)

class CThostFtdcExchangeCombActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcExchangeCombActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcExchangeCombActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["Direction"] = _pyctp.CThostFtdcExchangeCombActionField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CThostFtdcExchangeCombActionField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CThostFtdcExchangeCombActionField_Direction_get, _pyctp.CThostFtdcExchangeCombActionField_Direction_set)
    __swig_setmethods__["Volume"] = _pyctp.CThostFtdcExchangeCombActionField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CThostFtdcExchangeCombActionField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CThostFtdcExchangeCombActionField_Volume_get, _pyctp.CThostFtdcExchangeCombActionField_Volume_set)
    __swig_setmethods__["CombDirection"] = _pyctp.CThostFtdcExchangeCombActionField_CombDirection_set
    __swig_getmethods__["CombDirection"] = _pyctp.CThostFtdcExchangeCombActionField_CombDirection_get
    if _newclass:
        CombDirection = _swig_property(_pyctp.CThostFtdcExchangeCombActionField_CombDirection_get, _pyctp.CThostFtdcExchangeCombActionField_CombDirection_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcExchangeCombActionField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcExchangeCombActionField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcExchangeCombActionField_HedgeFlag_get, _pyctp.CThostFtdcExchangeCombActionField_HedgeFlag_set)
    __swig_setmethods__["ActionLocalID"] = _pyctp.CThostFtdcExchangeCombActionField_ActionLocalID_set
    __swig_getmethods__["ActionLocalID"] = _pyctp.CThostFtdcExchangeCombActionField_ActionLocalID_get
    if _newclass:
        ActionLocalID = _swig_property(_pyctp.CThostFtdcExchangeCombActionField_ActionLocalID_get, _pyctp.CThostFtdcExchangeCombActionField_ActionLocalID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeCombActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeCombActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcExchangeCombActionField_ExchangeID_get, _pyctp.CThostFtdcExchangeCombActionField_ExchangeID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcExchangeCombActionField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcExchangeCombActionField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcExchangeCombActionField_ParticipantID_get, _pyctp.CThostFtdcExchangeCombActionField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcExchangeCombActionField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcExchangeCombActionField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcExchangeCombActionField_ClientID_get, _pyctp.CThostFtdcExchangeCombActionField_ClientID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CThostFtdcExchangeCombActionField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CThostFtdcExchangeCombActionField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CThostFtdcExchangeCombActionField_ExchangeInstID_get, _pyctp.CThostFtdcExchangeCombActionField_ExchangeInstID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcExchangeCombActionField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcExchangeCombActionField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcExchangeCombActionField_TraderID_get, _pyctp.CThostFtdcExchangeCombActionField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcExchangeCombActionField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcExchangeCombActionField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcExchangeCombActionField_InstallID_get, _pyctp.CThostFtdcExchangeCombActionField_InstallID_set)
    __swig_setmethods__["ActionStatus"] = _pyctp.CThostFtdcExchangeCombActionField_ActionStatus_set
    __swig_getmethods__["ActionStatus"] = _pyctp.CThostFtdcExchangeCombActionField_ActionStatus_get
    if _newclass:
        ActionStatus = _swig_property(_pyctp.CThostFtdcExchangeCombActionField_ActionStatus_get, _pyctp.CThostFtdcExchangeCombActionField_ActionStatus_set)
    __swig_setmethods__["NotifySequence"] = _pyctp.CThostFtdcExchangeCombActionField_NotifySequence_set
    __swig_getmethods__["NotifySequence"] = _pyctp.CThostFtdcExchangeCombActionField_NotifySequence_get
    if _newclass:
        NotifySequence = _swig_property(_pyctp.CThostFtdcExchangeCombActionField_NotifySequence_get, _pyctp.CThostFtdcExchangeCombActionField_NotifySequence_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcExchangeCombActionField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcExchangeCombActionField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcExchangeCombActionField_TradingDay_get, _pyctp.CThostFtdcExchangeCombActionField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CThostFtdcExchangeCombActionField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CThostFtdcExchangeCombActionField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CThostFtdcExchangeCombActionField_SettlementID_get, _pyctp.CThostFtdcExchangeCombActionField_SettlementID_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CThostFtdcExchangeCombActionField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CThostFtdcExchangeCombActionField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CThostFtdcExchangeCombActionField_SequenceNo_get, _pyctp.CThostFtdcExchangeCombActionField_SequenceNo_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcExchangeCombActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcExchangeCombActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcExchangeCombActionField_IPAddress_get, _pyctp.CThostFtdcExchangeCombActionField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcExchangeCombActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcExchangeCombActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcExchangeCombActionField_MacAddress_get, _pyctp.CThostFtdcExchangeCombActionField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcExchangeCombActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcExchangeCombActionField
    __del__ = lambda self: None
CThostFtdcExchangeCombActionField_swigregister = _pyctp.CThostFtdcExchangeCombActionField_swigregister
CThostFtdcExchangeCombActionField_swigregister(CThostFtdcExchangeCombActionField)

class CThostFtdcQryExchangeCombActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryExchangeCombActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryExchangeCombActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcQryExchangeCombActionField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcQryExchangeCombActionField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcQryExchangeCombActionField_ParticipantID_get, _pyctp.CThostFtdcQryExchangeCombActionField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcQryExchangeCombActionField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcQryExchangeCombActionField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcQryExchangeCombActionField_ClientID_get, _pyctp.CThostFtdcQryExchangeCombActionField_ClientID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CThostFtdcQryExchangeCombActionField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CThostFtdcQryExchangeCombActionField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CThostFtdcQryExchangeCombActionField_ExchangeInstID_get, _pyctp.CThostFtdcQryExchangeCombActionField_ExchangeInstID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryExchangeCombActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryExchangeCombActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryExchangeCombActionField_ExchangeID_get, _pyctp.CThostFtdcQryExchangeCombActionField_ExchangeID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcQryExchangeCombActionField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcQryExchangeCombActionField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcQryExchangeCombActionField_TraderID_get, _pyctp.CThostFtdcQryExchangeCombActionField_TraderID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryExchangeCombActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryExchangeCombActionField
    __del__ = lambda self: None
CThostFtdcQryExchangeCombActionField_swigregister = _pyctp.CThostFtdcQryExchangeCombActionField_swigregister
CThostFtdcQryExchangeCombActionField_swigregister(CThostFtdcQryExchangeCombActionField)

class CThostFtdcProductExchRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcProductExchRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcProductExchRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ProductID"] = _pyctp.CThostFtdcProductExchRateField_ProductID_set
    __swig_getmethods__["ProductID"] = _pyctp.CThostFtdcProductExchRateField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_pyctp.CThostFtdcProductExchRateField_ProductID_get, _pyctp.CThostFtdcProductExchRateField_ProductID_set)
    __swig_setmethods__["QuoteCurrencyID"] = _pyctp.CThostFtdcProductExchRateField_QuoteCurrencyID_set
    __swig_getmethods__["QuoteCurrencyID"] = _pyctp.CThostFtdcProductExchRateField_QuoteCurrencyID_get
    if _newclass:
        QuoteCurrencyID = _swig_property(_pyctp.CThostFtdcProductExchRateField_QuoteCurrencyID_get, _pyctp.CThostFtdcProductExchRateField_QuoteCurrencyID_set)
    __swig_setmethods__["ExchangeRate"] = _pyctp.CThostFtdcProductExchRateField_ExchangeRate_set
    __swig_getmethods__["ExchangeRate"] = _pyctp.CThostFtdcProductExchRateField_ExchangeRate_get
    if _newclass:
        ExchangeRate = _swig_property(_pyctp.CThostFtdcProductExchRateField_ExchangeRate_get, _pyctp.CThostFtdcProductExchRateField_ExchangeRate_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcProductExchRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcProductExchRateField
    __del__ = lambda self: None
CThostFtdcProductExchRateField_swigregister = _pyctp.CThostFtdcProductExchRateField_swigregister
CThostFtdcProductExchRateField_swigregister(CThostFtdcProductExchRateField)

class CThostFtdcQryProductExchRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryProductExchRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryProductExchRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ProductID"] = _pyctp.CThostFtdcQryProductExchRateField_ProductID_set
    __swig_getmethods__["ProductID"] = _pyctp.CThostFtdcQryProductExchRateField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_pyctp.CThostFtdcQryProductExchRateField_ProductID_get, _pyctp.CThostFtdcQryProductExchRateField_ProductID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryProductExchRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryProductExchRateField
    __del__ = lambda self: None
CThostFtdcQryProductExchRateField_swigregister = _pyctp.CThostFtdcQryProductExchRateField_swigregister
CThostFtdcQryProductExchRateField_swigregister(CThostFtdcQryProductExchRateField)

class CThostFtdcQryForQuoteParamField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryForQuoteParamField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryForQuoteParamField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryForQuoteParamField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryForQuoteParamField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryForQuoteParamField_BrokerID_get, _pyctp.CThostFtdcQryForQuoteParamField_BrokerID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryForQuoteParamField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryForQuoteParamField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryForQuoteParamField_InstrumentID_get, _pyctp.CThostFtdcQryForQuoteParamField_InstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryForQuoteParamField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryForQuoteParamField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryForQuoteParamField_ExchangeID_get, _pyctp.CThostFtdcQryForQuoteParamField_ExchangeID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryForQuoteParamField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryForQuoteParamField
    __del__ = lambda self: None
CThostFtdcQryForQuoteParamField_swigregister = _pyctp.CThostFtdcQryForQuoteParamField_swigregister
CThostFtdcQryForQuoteParamField_swigregister(CThostFtdcQryForQuoteParamField)

class CThostFtdcForQuoteParamField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcForQuoteParamField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcForQuoteParamField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcForQuoteParamField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcForQuoteParamField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcForQuoteParamField_BrokerID_get, _pyctp.CThostFtdcForQuoteParamField_BrokerID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcForQuoteParamField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcForQuoteParamField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcForQuoteParamField_InstrumentID_get, _pyctp.CThostFtdcForQuoteParamField_InstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcForQuoteParamField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcForQuoteParamField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcForQuoteParamField_ExchangeID_get, _pyctp.CThostFtdcForQuoteParamField_ExchangeID_set)
    __swig_setmethods__["LastPrice"] = _pyctp.CThostFtdcForQuoteParamField_LastPrice_set
    __swig_getmethods__["LastPrice"] = _pyctp.CThostFtdcForQuoteParamField_LastPrice_get
    if _newclass:
        LastPrice = _swig_property(_pyctp.CThostFtdcForQuoteParamField_LastPrice_get, _pyctp.CThostFtdcForQuoteParamField_LastPrice_set)
    __swig_setmethods__["PriceInterval"] = _pyctp.CThostFtdcForQuoteParamField_PriceInterval_set
    __swig_getmethods__["PriceInterval"] = _pyctp.CThostFtdcForQuoteParamField_PriceInterval_get
    if _newclass:
        PriceInterval = _swig_property(_pyctp.CThostFtdcForQuoteParamField_PriceInterval_get, _pyctp.CThostFtdcForQuoteParamField_PriceInterval_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcForQuoteParamField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcForQuoteParamField
    __del__ = lambda self: None
CThostFtdcForQuoteParamField_swigregister = _pyctp.CThostFtdcForQuoteParamField_swigregister
CThostFtdcForQuoteParamField_swigregister(CThostFtdcForQuoteParamField)

class CThostFtdcMMOptionInstrCommRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcMMOptionInstrCommRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcMMOptionInstrCommRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcMMOptionInstrCommRateField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcMMOptionInstrCommRateField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcMMOptionInstrCommRateField_InstrumentID_get, _pyctp.CThostFtdcMMOptionInstrCommRateField_InstrumentID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CThostFtdcMMOptionInstrCommRateField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CThostFtdcMMOptionInstrCommRateField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CThostFtdcMMOptionInstrCommRateField_InvestorRange_get, _pyctp.CThostFtdcMMOptionInstrCommRateField_InvestorRange_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcMMOptionInstrCommRateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcMMOptionInstrCommRateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcMMOptionInstrCommRateField_BrokerID_get, _pyctp.CThostFtdcMMOptionInstrCommRateField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcMMOptionInstrCommRateField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcMMOptionInstrCommRateField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcMMOptionInstrCommRateField_InvestorID_get, _pyctp.CThostFtdcMMOptionInstrCommRateField_InvestorID_set)
    __swig_setmethods__["OpenRatioByMoney"] = _pyctp.CThostFtdcMMOptionInstrCommRateField_OpenRatioByMoney_set
    __swig_getmethods__["OpenRatioByMoney"] = _pyctp.CThostFtdcMMOptionInstrCommRateField_OpenRatioByMoney_get
    if _newclass:
        OpenRatioByMoney = _swig_property(_pyctp.CThostFtdcMMOptionInstrCommRateField_OpenRatioByMoney_get, _pyctp.CThostFtdcMMOptionInstrCommRateField_OpenRatioByMoney_set)
    __swig_setmethods__["OpenRatioByVolume"] = _pyctp.CThostFtdcMMOptionInstrCommRateField_OpenRatioByVolume_set
    __swig_getmethods__["OpenRatioByVolume"] = _pyctp.CThostFtdcMMOptionInstrCommRateField_OpenRatioByVolume_get
    if _newclass:
        OpenRatioByVolume = _swig_property(_pyctp.CThostFtdcMMOptionInstrCommRateField_OpenRatioByVolume_get, _pyctp.CThostFtdcMMOptionInstrCommRateField_OpenRatioByVolume_set)
    __swig_setmethods__["CloseRatioByMoney"] = _pyctp.CThostFtdcMMOptionInstrCommRateField_CloseRatioByMoney_set
    __swig_getmethods__["CloseRatioByMoney"] = _pyctp.CThostFtdcMMOptionInstrCommRateField_CloseRatioByMoney_get
    if _newclass:
        CloseRatioByMoney = _swig_property(_pyctp.CThostFtdcMMOptionInstrCommRateField_CloseRatioByMoney_get, _pyctp.CThostFtdcMMOptionInstrCommRateField_CloseRatioByMoney_set)
    __swig_setmethods__["CloseRatioByVolume"] = _pyctp.CThostFtdcMMOptionInstrCommRateField_CloseRatioByVolume_set
    __swig_getmethods__["CloseRatioByVolume"] = _pyctp.CThostFtdcMMOptionInstrCommRateField_CloseRatioByVolume_get
    if _newclass:
        CloseRatioByVolume = _swig_property(_pyctp.CThostFtdcMMOptionInstrCommRateField_CloseRatioByVolume_get, _pyctp.CThostFtdcMMOptionInstrCommRateField_CloseRatioByVolume_set)
    __swig_setmethods__["CloseTodayRatioByMoney"] = _pyctp.CThostFtdcMMOptionInstrCommRateField_CloseTodayRatioByMoney_set
    __swig_getmethods__["CloseTodayRatioByMoney"] = _pyctp.CThostFtdcMMOptionInstrCommRateField_CloseTodayRatioByMoney_get
    if _newclass:
        CloseTodayRatioByMoney = _swig_property(_pyctp.CThostFtdcMMOptionInstrCommRateField_CloseTodayRatioByMoney_get, _pyctp.CThostFtdcMMOptionInstrCommRateField_CloseTodayRatioByMoney_set)
    __swig_setmethods__["CloseTodayRatioByVolume"] = _pyctp.CThostFtdcMMOptionInstrCommRateField_CloseTodayRatioByVolume_set
    __swig_getmethods__["CloseTodayRatioByVolume"] = _pyctp.CThostFtdcMMOptionInstrCommRateField_CloseTodayRatioByVolume_get
    if _newclass:
        CloseTodayRatioByVolume = _swig_property(_pyctp.CThostFtdcMMOptionInstrCommRateField_CloseTodayRatioByVolume_get, _pyctp.CThostFtdcMMOptionInstrCommRateField_CloseTodayRatioByVolume_set)
    __swig_setmethods__["StrikeRatioByMoney"] = _pyctp.CThostFtdcMMOptionInstrCommRateField_StrikeRatioByMoney_set
    __swig_getmethods__["StrikeRatioByMoney"] = _pyctp.CThostFtdcMMOptionInstrCommRateField_StrikeRatioByMoney_get
    if _newclass:
        StrikeRatioByMoney = _swig_property(_pyctp.CThostFtdcMMOptionInstrCommRateField_StrikeRatioByMoney_get, _pyctp.CThostFtdcMMOptionInstrCommRateField_StrikeRatioByMoney_set)
    __swig_setmethods__["StrikeRatioByVolume"] = _pyctp.CThostFtdcMMOptionInstrCommRateField_StrikeRatioByVolume_set
    __swig_getmethods__["StrikeRatioByVolume"] = _pyctp.CThostFtdcMMOptionInstrCommRateField_StrikeRatioByVolume_get
    if _newclass:
        StrikeRatioByVolume = _swig_property(_pyctp.CThostFtdcMMOptionInstrCommRateField_StrikeRatioByVolume_get, _pyctp.CThostFtdcMMOptionInstrCommRateField_StrikeRatioByVolume_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcMMOptionInstrCommRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcMMOptionInstrCommRateField
    __del__ = lambda self: None
CThostFtdcMMOptionInstrCommRateField_swigregister = _pyctp.CThostFtdcMMOptionInstrCommRateField_swigregister
CThostFtdcMMOptionInstrCommRateField_swigregister(CThostFtdcMMOptionInstrCommRateField)

class CThostFtdcQryMMOptionInstrCommRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryMMOptionInstrCommRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryMMOptionInstrCommRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryMMOptionInstrCommRateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryMMOptionInstrCommRateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryMMOptionInstrCommRateField_BrokerID_get, _pyctp.CThostFtdcQryMMOptionInstrCommRateField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryMMOptionInstrCommRateField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryMMOptionInstrCommRateField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryMMOptionInstrCommRateField_InvestorID_get, _pyctp.CThostFtdcQryMMOptionInstrCommRateField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryMMOptionInstrCommRateField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryMMOptionInstrCommRateField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryMMOptionInstrCommRateField_InstrumentID_get, _pyctp.CThostFtdcQryMMOptionInstrCommRateField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryMMOptionInstrCommRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryMMOptionInstrCommRateField
    __del__ = lambda self: None
CThostFtdcQryMMOptionInstrCommRateField_swigregister = _pyctp.CThostFtdcQryMMOptionInstrCommRateField_swigregister
CThostFtdcQryMMOptionInstrCommRateField_swigregister(CThostFtdcQryMMOptionInstrCommRateField)

class CThostFtdcMMInstrumentCommissionRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcMMInstrumentCommissionRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcMMInstrumentCommissionRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcMMInstrumentCommissionRateField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcMMInstrumentCommissionRateField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcMMInstrumentCommissionRateField_InstrumentID_get, _pyctp.CThostFtdcMMInstrumentCommissionRateField_InstrumentID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CThostFtdcMMInstrumentCommissionRateField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CThostFtdcMMInstrumentCommissionRateField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CThostFtdcMMInstrumentCommissionRateField_InvestorRange_get, _pyctp.CThostFtdcMMInstrumentCommissionRateField_InvestorRange_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcMMInstrumentCommissionRateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcMMInstrumentCommissionRateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcMMInstrumentCommissionRateField_BrokerID_get, _pyctp.CThostFtdcMMInstrumentCommissionRateField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcMMInstrumentCommissionRateField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcMMInstrumentCommissionRateField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcMMInstrumentCommissionRateField_InvestorID_get, _pyctp.CThostFtdcMMInstrumentCommissionRateField_InvestorID_set)
    __swig_setmethods__["OpenRatioByMoney"] = _pyctp.CThostFtdcMMInstrumentCommissionRateField_OpenRatioByMoney_set
    __swig_getmethods__["OpenRatioByMoney"] = _pyctp.CThostFtdcMMInstrumentCommissionRateField_OpenRatioByMoney_get
    if _newclass:
        OpenRatioByMoney = _swig_property(_pyctp.CThostFtdcMMInstrumentCommissionRateField_OpenRatioByMoney_get, _pyctp.CThostFtdcMMInstrumentCommissionRateField_OpenRatioByMoney_set)
    __swig_setmethods__["OpenRatioByVolume"] = _pyctp.CThostFtdcMMInstrumentCommissionRateField_OpenRatioByVolume_set
    __swig_getmethods__["OpenRatioByVolume"] = _pyctp.CThostFtdcMMInstrumentCommissionRateField_OpenRatioByVolume_get
    if _newclass:
        OpenRatioByVolume = _swig_property(_pyctp.CThostFtdcMMInstrumentCommissionRateField_OpenRatioByVolume_get, _pyctp.CThostFtdcMMInstrumentCommissionRateField_OpenRatioByVolume_set)
    __swig_setmethods__["CloseRatioByMoney"] = _pyctp.CThostFtdcMMInstrumentCommissionRateField_CloseRatioByMoney_set
    __swig_getmethods__["CloseRatioByMoney"] = _pyctp.CThostFtdcMMInstrumentCommissionRateField_CloseRatioByMoney_get
    if _newclass:
        CloseRatioByMoney = _swig_property(_pyctp.CThostFtdcMMInstrumentCommissionRateField_CloseRatioByMoney_get, _pyctp.CThostFtdcMMInstrumentCommissionRateField_CloseRatioByMoney_set)
    __swig_setmethods__["CloseRatioByVolume"] = _pyctp.CThostFtdcMMInstrumentCommissionRateField_CloseRatioByVolume_set
    __swig_getmethods__["CloseRatioByVolume"] = _pyctp.CThostFtdcMMInstrumentCommissionRateField_CloseRatioByVolume_get
    if _newclass:
        CloseRatioByVolume = _swig_property(_pyctp.CThostFtdcMMInstrumentCommissionRateField_CloseRatioByVolume_get, _pyctp.CThostFtdcMMInstrumentCommissionRateField_CloseRatioByVolume_set)
    __swig_setmethods__["CloseTodayRatioByMoney"] = _pyctp.CThostFtdcMMInstrumentCommissionRateField_CloseTodayRatioByMoney_set
    __swig_getmethods__["CloseTodayRatioByMoney"] = _pyctp.CThostFtdcMMInstrumentCommissionRateField_CloseTodayRatioByMoney_get
    if _newclass:
        CloseTodayRatioByMoney = _swig_property(_pyctp.CThostFtdcMMInstrumentCommissionRateField_CloseTodayRatioByMoney_get, _pyctp.CThostFtdcMMInstrumentCommissionRateField_CloseTodayRatioByMoney_set)
    __swig_setmethods__["CloseTodayRatioByVolume"] = _pyctp.CThostFtdcMMInstrumentCommissionRateField_CloseTodayRatioByVolume_set
    __swig_getmethods__["CloseTodayRatioByVolume"] = _pyctp.CThostFtdcMMInstrumentCommissionRateField_CloseTodayRatioByVolume_get
    if _newclass:
        CloseTodayRatioByVolume = _swig_property(_pyctp.CThostFtdcMMInstrumentCommissionRateField_CloseTodayRatioByVolume_get, _pyctp.CThostFtdcMMInstrumentCommissionRateField_CloseTodayRatioByVolume_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcMMInstrumentCommissionRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcMMInstrumentCommissionRateField
    __del__ = lambda self: None
CThostFtdcMMInstrumentCommissionRateField_swigregister = _pyctp.CThostFtdcMMInstrumentCommissionRateField_swigregister
CThostFtdcMMInstrumentCommissionRateField_swigregister(CThostFtdcMMInstrumentCommissionRateField)

class CThostFtdcQryMMInstrumentCommissionRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryMMInstrumentCommissionRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryMMInstrumentCommissionRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryMMInstrumentCommissionRateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryMMInstrumentCommissionRateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryMMInstrumentCommissionRateField_BrokerID_get, _pyctp.CThostFtdcQryMMInstrumentCommissionRateField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryMMInstrumentCommissionRateField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryMMInstrumentCommissionRateField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryMMInstrumentCommissionRateField_InvestorID_get, _pyctp.CThostFtdcQryMMInstrumentCommissionRateField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryMMInstrumentCommissionRateField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryMMInstrumentCommissionRateField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryMMInstrumentCommissionRateField_InstrumentID_get, _pyctp.CThostFtdcQryMMInstrumentCommissionRateField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryMMInstrumentCommissionRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryMMInstrumentCommissionRateField
    __del__ = lambda self: None
CThostFtdcQryMMInstrumentCommissionRateField_swigregister = _pyctp.CThostFtdcQryMMInstrumentCommissionRateField_swigregister
CThostFtdcQryMMInstrumentCommissionRateField_swigregister(CThostFtdcQryMMInstrumentCommissionRateField)

class CThostFtdcInstrumentOrderCommRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcInstrumentOrderCommRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcInstrumentOrderCommRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcInstrumentOrderCommRateField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcInstrumentOrderCommRateField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcInstrumentOrderCommRateField_InstrumentID_get, _pyctp.CThostFtdcInstrumentOrderCommRateField_InstrumentID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CThostFtdcInstrumentOrderCommRateField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CThostFtdcInstrumentOrderCommRateField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CThostFtdcInstrumentOrderCommRateField_InvestorRange_get, _pyctp.CThostFtdcInstrumentOrderCommRateField_InvestorRange_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcInstrumentOrderCommRateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcInstrumentOrderCommRateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcInstrumentOrderCommRateField_BrokerID_get, _pyctp.CThostFtdcInstrumentOrderCommRateField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcInstrumentOrderCommRateField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcInstrumentOrderCommRateField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcInstrumentOrderCommRateField_InvestorID_get, _pyctp.CThostFtdcInstrumentOrderCommRateField_InvestorID_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcInstrumentOrderCommRateField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcInstrumentOrderCommRateField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcInstrumentOrderCommRateField_HedgeFlag_get, _pyctp.CThostFtdcInstrumentOrderCommRateField_HedgeFlag_set)
    __swig_setmethods__["OrderCommByVolume"] = _pyctp.CThostFtdcInstrumentOrderCommRateField_OrderCommByVolume_set
    __swig_getmethods__["OrderCommByVolume"] = _pyctp.CThostFtdcInstrumentOrderCommRateField_OrderCommByVolume_get
    if _newclass:
        OrderCommByVolume = _swig_property(_pyctp.CThostFtdcInstrumentOrderCommRateField_OrderCommByVolume_get, _pyctp.CThostFtdcInstrumentOrderCommRateField_OrderCommByVolume_set)
    __swig_setmethods__["OrderActionCommByVolume"] = _pyctp.CThostFtdcInstrumentOrderCommRateField_OrderActionCommByVolume_set
    __swig_getmethods__["OrderActionCommByVolume"] = _pyctp.CThostFtdcInstrumentOrderCommRateField_OrderActionCommByVolume_get
    if _newclass:
        OrderActionCommByVolume = _swig_property(_pyctp.CThostFtdcInstrumentOrderCommRateField_OrderActionCommByVolume_get, _pyctp.CThostFtdcInstrumentOrderCommRateField_OrderActionCommByVolume_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcInstrumentOrderCommRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcInstrumentOrderCommRateField
    __del__ = lambda self: None
CThostFtdcInstrumentOrderCommRateField_swigregister = _pyctp.CThostFtdcInstrumentOrderCommRateField_swigregister
CThostFtdcInstrumentOrderCommRateField_swigregister(CThostFtdcInstrumentOrderCommRateField)

class CThostFtdcQryInstrumentOrderCommRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryInstrumentOrderCommRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryInstrumentOrderCommRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryInstrumentOrderCommRateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryInstrumentOrderCommRateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryInstrumentOrderCommRateField_BrokerID_get, _pyctp.CThostFtdcQryInstrumentOrderCommRateField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryInstrumentOrderCommRateField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryInstrumentOrderCommRateField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryInstrumentOrderCommRateField_InvestorID_get, _pyctp.CThostFtdcQryInstrumentOrderCommRateField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryInstrumentOrderCommRateField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryInstrumentOrderCommRateField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryInstrumentOrderCommRateField_InstrumentID_get, _pyctp.CThostFtdcQryInstrumentOrderCommRateField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryInstrumentOrderCommRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryInstrumentOrderCommRateField
    __del__ = lambda self: None
CThostFtdcQryInstrumentOrderCommRateField_swigregister = _pyctp.CThostFtdcQryInstrumentOrderCommRateField_swigregister
CThostFtdcQryInstrumentOrderCommRateField_swigregister(CThostFtdcQryInstrumentOrderCommRateField)

class CThostFtdcMarketDataField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcMarketDataField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcMarketDataField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcMarketDataField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcMarketDataField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcMarketDataField_TradingDay_get, _pyctp.CThostFtdcMarketDataField_TradingDay_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcMarketDataField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcMarketDataField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcMarketDataField_InstrumentID_get, _pyctp.CThostFtdcMarketDataField_InstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcMarketDataField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcMarketDataField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcMarketDataField_ExchangeID_get, _pyctp.CThostFtdcMarketDataField_ExchangeID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CThostFtdcMarketDataField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CThostFtdcMarketDataField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CThostFtdcMarketDataField_ExchangeInstID_get, _pyctp.CThostFtdcMarketDataField_ExchangeInstID_set)
    __swig_setmethods__["LastPrice"] = _pyctp.CThostFtdcMarketDataField_LastPrice_set
    __swig_getmethods__["LastPrice"] = _pyctp.CThostFtdcMarketDataField_LastPrice_get
    if _newclass:
        LastPrice = _swig_property(_pyctp.CThostFtdcMarketDataField_LastPrice_get, _pyctp.CThostFtdcMarketDataField_LastPrice_set)
    __swig_setmethods__["PreSettlementPrice"] = _pyctp.CThostFtdcMarketDataField_PreSettlementPrice_set
    __swig_getmethods__["PreSettlementPrice"] = _pyctp.CThostFtdcMarketDataField_PreSettlementPrice_get
    if _newclass:
        PreSettlementPrice = _swig_property(_pyctp.CThostFtdcMarketDataField_PreSettlementPrice_get, _pyctp.CThostFtdcMarketDataField_PreSettlementPrice_set)
    __swig_setmethods__["PreClosePrice"] = _pyctp.CThostFtdcMarketDataField_PreClosePrice_set
    __swig_getmethods__["PreClosePrice"] = _pyctp.CThostFtdcMarketDataField_PreClosePrice_get
    if _newclass:
        PreClosePrice = _swig_property(_pyctp.CThostFtdcMarketDataField_PreClosePrice_get, _pyctp.CThostFtdcMarketDataField_PreClosePrice_set)
    __swig_setmethods__["PreOpenInterest"] = _pyctp.CThostFtdcMarketDataField_PreOpenInterest_set
    __swig_getmethods__["PreOpenInterest"] = _pyctp.CThostFtdcMarketDataField_PreOpenInterest_get
    if _newclass:
        PreOpenInterest = _swig_property(_pyctp.CThostFtdcMarketDataField_PreOpenInterest_get, _pyctp.CThostFtdcMarketDataField_PreOpenInterest_set)
    __swig_setmethods__["OpenPrice"] = _pyctp.CThostFtdcMarketDataField_OpenPrice_set
    __swig_getmethods__["OpenPrice"] = _pyctp.CThostFtdcMarketDataField_OpenPrice_get
    if _newclass:
        OpenPrice = _swig_property(_pyctp.CThostFtdcMarketDataField_OpenPrice_get, _pyctp.CThostFtdcMarketDataField_OpenPrice_set)
    __swig_setmethods__["HighestPrice"] = _pyctp.CThostFtdcMarketDataField_HighestPrice_set
    __swig_getmethods__["HighestPrice"] = _pyctp.CThostFtdcMarketDataField_HighestPrice_get
    if _newclass:
        HighestPrice = _swig_property(_pyctp.CThostFtdcMarketDataField_HighestPrice_get, _pyctp.CThostFtdcMarketDataField_HighestPrice_set)
    __swig_setmethods__["LowestPrice"] = _pyctp.CThostFtdcMarketDataField_LowestPrice_set
    __swig_getmethods__["LowestPrice"] = _pyctp.CThostFtdcMarketDataField_LowestPrice_get
    if _newclass:
        LowestPrice = _swig_property(_pyctp.CThostFtdcMarketDataField_LowestPrice_get, _pyctp.CThostFtdcMarketDataField_LowestPrice_set)
    __swig_setmethods__["Volume"] = _pyctp.CThostFtdcMarketDataField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CThostFtdcMarketDataField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CThostFtdcMarketDataField_Volume_get, _pyctp.CThostFtdcMarketDataField_Volume_set)
    __swig_setmethods__["Turnover"] = _pyctp.CThostFtdcMarketDataField_Turnover_set
    __swig_getmethods__["Turnover"] = _pyctp.CThostFtdcMarketDataField_Turnover_get
    if _newclass:
        Turnover = _swig_property(_pyctp.CThostFtdcMarketDataField_Turnover_get, _pyctp.CThostFtdcMarketDataField_Turnover_set)
    __swig_setmethods__["OpenInterest"] = _pyctp.CThostFtdcMarketDataField_OpenInterest_set
    __swig_getmethods__["OpenInterest"] = _pyctp.CThostFtdcMarketDataField_OpenInterest_get
    if _newclass:
        OpenInterest = _swig_property(_pyctp.CThostFtdcMarketDataField_OpenInterest_get, _pyctp.CThostFtdcMarketDataField_OpenInterest_set)
    __swig_setmethods__["ClosePrice"] = _pyctp.CThostFtdcMarketDataField_ClosePrice_set
    __swig_getmethods__["ClosePrice"] = _pyctp.CThostFtdcMarketDataField_ClosePrice_get
    if _newclass:
        ClosePrice = _swig_property(_pyctp.CThostFtdcMarketDataField_ClosePrice_get, _pyctp.CThostFtdcMarketDataField_ClosePrice_set)
    __swig_setmethods__["SettlementPrice"] = _pyctp.CThostFtdcMarketDataField_SettlementPrice_set
    __swig_getmethods__["SettlementPrice"] = _pyctp.CThostFtdcMarketDataField_SettlementPrice_get
    if _newclass:
        SettlementPrice = _swig_property(_pyctp.CThostFtdcMarketDataField_SettlementPrice_get, _pyctp.CThostFtdcMarketDataField_SettlementPrice_set)
    __swig_setmethods__["UpperLimitPrice"] = _pyctp.CThostFtdcMarketDataField_UpperLimitPrice_set
    __swig_getmethods__["UpperLimitPrice"] = _pyctp.CThostFtdcMarketDataField_UpperLimitPrice_get
    if _newclass:
        UpperLimitPrice = _swig_property(_pyctp.CThostFtdcMarketDataField_UpperLimitPrice_get, _pyctp.CThostFtdcMarketDataField_UpperLimitPrice_set)
    __swig_setmethods__["LowerLimitPrice"] = _pyctp.CThostFtdcMarketDataField_LowerLimitPrice_set
    __swig_getmethods__["LowerLimitPrice"] = _pyctp.CThostFtdcMarketDataField_LowerLimitPrice_get
    if _newclass:
        LowerLimitPrice = _swig_property(_pyctp.CThostFtdcMarketDataField_LowerLimitPrice_get, _pyctp.CThostFtdcMarketDataField_LowerLimitPrice_set)
    __swig_setmethods__["PreDelta"] = _pyctp.CThostFtdcMarketDataField_PreDelta_set
    __swig_getmethods__["PreDelta"] = _pyctp.CThostFtdcMarketDataField_PreDelta_get
    if _newclass:
        PreDelta = _swig_property(_pyctp.CThostFtdcMarketDataField_PreDelta_get, _pyctp.CThostFtdcMarketDataField_PreDelta_set)
    __swig_setmethods__["CurrDelta"] = _pyctp.CThostFtdcMarketDataField_CurrDelta_set
    __swig_getmethods__["CurrDelta"] = _pyctp.CThostFtdcMarketDataField_CurrDelta_get
    if _newclass:
        CurrDelta = _swig_property(_pyctp.CThostFtdcMarketDataField_CurrDelta_get, _pyctp.CThostFtdcMarketDataField_CurrDelta_set)
    __swig_setmethods__["UpdateTime"] = _pyctp.CThostFtdcMarketDataField_UpdateTime_set
    __swig_getmethods__["UpdateTime"] = _pyctp.CThostFtdcMarketDataField_UpdateTime_get
    if _newclass:
        UpdateTime = _swig_property(_pyctp.CThostFtdcMarketDataField_UpdateTime_get, _pyctp.CThostFtdcMarketDataField_UpdateTime_set)
    __swig_setmethods__["UpdateMillisec"] = _pyctp.CThostFtdcMarketDataField_UpdateMillisec_set
    __swig_getmethods__["UpdateMillisec"] = _pyctp.CThostFtdcMarketDataField_UpdateMillisec_get
    if _newclass:
        UpdateMillisec = _swig_property(_pyctp.CThostFtdcMarketDataField_UpdateMillisec_get, _pyctp.CThostFtdcMarketDataField_UpdateMillisec_set)
    __swig_setmethods__["ActionDay"] = _pyctp.CThostFtdcMarketDataField_ActionDay_set
    __swig_getmethods__["ActionDay"] = _pyctp.CThostFtdcMarketDataField_ActionDay_get
    if _newclass:
        ActionDay = _swig_property(_pyctp.CThostFtdcMarketDataField_ActionDay_get, _pyctp.CThostFtdcMarketDataField_ActionDay_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcMarketDataField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcMarketDataField
    __del__ = lambda self: None
CThostFtdcMarketDataField_swigregister = _pyctp.CThostFtdcMarketDataField_swigregister
CThostFtdcMarketDataField_swigregister(CThostFtdcMarketDataField)

class CThostFtdcMarketDataBaseField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcMarketDataBaseField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcMarketDataBaseField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcMarketDataBaseField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcMarketDataBaseField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcMarketDataBaseField_TradingDay_get, _pyctp.CThostFtdcMarketDataBaseField_TradingDay_set)
    __swig_setmethods__["PreSettlementPrice"] = _pyctp.CThostFtdcMarketDataBaseField_PreSettlementPrice_set
    __swig_getmethods__["PreSettlementPrice"] = _pyctp.CThostFtdcMarketDataBaseField_PreSettlementPrice_get
    if _newclass:
        PreSettlementPrice = _swig_property(_pyctp.CThostFtdcMarketDataBaseField_PreSettlementPrice_get, _pyctp.CThostFtdcMarketDataBaseField_PreSettlementPrice_set)
    __swig_setmethods__["PreClosePrice"] = _pyctp.CThostFtdcMarketDataBaseField_PreClosePrice_set
    __swig_getmethods__["PreClosePrice"] = _pyctp.CThostFtdcMarketDataBaseField_PreClosePrice_get
    if _newclass:
        PreClosePrice = _swig_property(_pyctp.CThostFtdcMarketDataBaseField_PreClosePrice_get, _pyctp.CThostFtdcMarketDataBaseField_PreClosePrice_set)
    __swig_setmethods__["PreOpenInterest"] = _pyctp.CThostFtdcMarketDataBaseField_PreOpenInterest_set
    __swig_getmethods__["PreOpenInterest"] = _pyctp.CThostFtdcMarketDataBaseField_PreOpenInterest_get
    if _newclass:
        PreOpenInterest = _swig_property(_pyctp.CThostFtdcMarketDataBaseField_PreOpenInterest_get, _pyctp.CThostFtdcMarketDataBaseField_PreOpenInterest_set)
    __swig_setmethods__["PreDelta"] = _pyctp.CThostFtdcMarketDataBaseField_PreDelta_set
    __swig_getmethods__["PreDelta"] = _pyctp.CThostFtdcMarketDataBaseField_PreDelta_get
    if _newclass:
        PreDelta = _swig_property(_pyctp.CThostFtdcMarketDataBaseField_PreDelta_get, _pyctp.CThostFtdcMarketDataBaseField_PreDelta_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcMarketDataBaseField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcMarketDataBaseField
    __del__ = lambda self: None
CThostFtdcMarketDataBaseField_swigregister = _pyctp.CThostFtdcMarketDataBaseField_swigregister
CThostFtdcMarketDataBaseField_swigregister(CThostFtdcMarketDataBaseField)

class CThostFtdcMarketDataStaticField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcMarketDataStaticField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcMarketDataStaticField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["OpenPrice"] = _pyctp.CThostFtdcMarketDataStaticField_OpenPrice_set
    __swig_getmethods__["OpenPrice"] = _pyctp.CThostFtdcMarketDataStaticField_OpenPrice_get
    if _newclass:
        OpenPrice = _swig_property(_pyctp.CThostFtdcMarketDataStaticField_OpenPrice_get, _pyctp.CThostFtdcMarketDataStaticField_OpenPrice_set)
    __swig_setmethods__["HighestPrice"] = _pyctp.CThostFtdcMarketDataStaticField_HighestPrice_set
    __swig_getmethods__["HighestPrice"] = _pyctp.CThostFtdcMarketDataStaticField_HighestPrice_get
    if _newclass:
        HighestPrice = _swig_property(_pyctp.CThostFtdcMarketDataStaticField_HighestPrice_get, _pyctp.CThostFtdcMarketDataStaticField_HighestPrice_set)
    __swig_setmethods__["LowestPrice"] = _pyctp.CThostFtdcMarketDataStaticField_LowestPrice_set
    __swig_getmethods__["LowestPrice"] = _pyctp.CThostFtdcMarketDataStaticField_LowestPrice_get
    if _newclass:
        LowestPrice = _swig_property(_pyctp.CThostFtdcMarketDataStaticField_LowestPrice_get, _pyctp.CThostFtdcMarketDataStaticField_LowestPrice_set)
    __swig_setmethods__["ClosePrice"] = _pyctp.CThostFtdcMarketDataStaticField_ClosePrice_set
    __swig_getmethods__["ClosePrice"] = _pyctp.CThostFtdcMarketDataStaticField_ClosePrice_get
    if _newclass:
        ClosePrice = _swig_property(_pyctp.CThostFtdcMarketDataStaticField_ClosePrice_get, _pyctp.CThostFtdcMarketDataStaticField_ClosePrice_set)
    __swig_setmethods__["UpperLimitPrice"] = _pyctp.CThostFtdcMarketDataStaticField_UpperLimitPrice_set
    __swig_getmethods__["UpperLimitPrice"] = _pyctp.CThostFtdcMarketDataStaticField_UpperLimitPrice_get
    if _newclass:
        UpperLimitPrice = _swig_property(_pyctp.CThostFtdcMarketDataStaticField_UpperLimitPrice_get, _pyctp.CThostFtdcMarketDataStaticField_UpperLimitPrice_set)
    __swig_setmethods__["LowerLimitPrice"] = _pyctp.CThostFtdcMarketDataStaticField_LowerLimitPrice_set
    __swig_getmethods__["LowerLimitPrice"] = _pyctp.CThostFtdcMarketDataStaticField_LowerLimitPrice_get
    if _newclass:
        LowerLimitPrice = _swig_property(_pyctp.CThostFtdcMarketDataStaticField_LowerLimitPrice_get, _pyctp.CThostFtdcMarketDataStaticField_LowerLimitPrice_set)
    __swig_setmethods__["SettlementPrice"] = _pyctp.CThostFtdcMarketDataStaticField_SettlementPrice_set
    __swig_getmethods__["SettlementPrice"] = _pyctp.CThostFtdcMarketDataStaticField_SettlementPrice_get
    if _newclass:
        SettlementPrice = _swig_property(_pyctp.CThostFtdcMarketDataStaticField_SettlementPrice_get, _pyctp.CThostFtdcMarketDataStaticField_SettlementPrice_set)
    __swig_setmethods__["CurrDelta"] = _pyctp.CThostFtdcMarketDataStaticField_CurrDelta_set
    __swig_getmethods__["CurrDelta"] = _pyctp.CThostFtdcMarketDataStaticField_CurrDelta_get
    if _newclass:
        CurrDelta = _swig_property(_pyctp.CThostFtdcMarketDataStaticField_CurrDelta_get, _pyctp.CThostFtdcMarketDataStaticField_CurrDelta_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcMarketDataStaticField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcMarketDataStaticField
    __del__ = lambda self: None
CThostFtdcMarketDataStaticField_swigregister = _pyctp.CThostFtdcMarketDataStaticField_swigregister
CThostFtdcMarketDataStaticField_swigregister(CThostFtdcMarketDataStaticField)

class CThostFtdcMarketDataLastMatchField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcMarketDataLastMatchField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcMarketDataLastMatchField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["LastPrice"] = _pyctp.CThostFtdcMarketDataLastMatchField_LastPrice_set
    __swig_getmethods__["LastPrice"] = _pyctp.CThostFtdcMarketDataLastMatchField_LastPrice_get
    if _newclass:
        LastPrice = _swig_property(_pyctp.CThostFtdcMarketDataLastMatchField_LastPrice_get, _pyctp.CThostFtdcMarketDataLastMatchField_LastPrice_set)
    __swig_setmethods__["Volume"] = _pyctp.CThostFtdcMarketDataLastMatchField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CThostFtdcMarketDataLastMatchField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CThostFtdcMarketDataLastMatchField_Volume_get, _pyctp.CThostFtdcMarketDataLastMatchField_Volume_set)
    __swig_setmethods__["Turnover"] = _pyctp.CThostFtdcMarketDataLastMatchField_Turnover_set
    __swig_getmethods__["Turnover"] = _pyctp.CThostFtdcMarketDataLastMatchField_Turnover_get
    if _newclass:
        Turnover = _swig_property(_pyctp.CThostFtdcMarketDataLastMatchField_Turnover_get, _pyctp.CThostFtdcMarketDataLastMatchField_Turnover_set)
    __swig_setmethods__["OpenInterest"] = _pyctp.CThostFtdcMarketDataLastMatchField_OpenInterest_set
    __swig_getmethods__["OpenInterest"] = _pyctp.CThostFtdcMarketDataLastMatchField_OpenInterest_get
    if _newclass:
        OpenInterest = _swig_property(_pyctp.CThostFtdcMarketDataLastMatchField_OpenInterest_get, _pyctp.CThostFtdcMarketDataLastMatchField_OpenInterest_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcMarketDataLastMatchField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcMarketDataLastMatchField
    __del__ = lambda self: None
CThostFtdcMarketDataLastMatchField_swigregister = _pyctp.CThostFtdcMarketDataLastMatchField_swigregister
CThostFtdcMarketDataLastMatchField_swigregister(CThostFtdcMarketDataLastMatchField)

class CThostFtdcMarketDataBestPriceField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcMarketDataBestPriceField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcMarketDataBestPriceField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BidPrice1"] = _pyctp.CThostFtdcMarketDataBestPriceField_BidPrice1_set
    __swig_getmethods__["BidPrice1"] = _pyctp.CThostFtdcMarketDataBestPriceField_BidPrice1_get
    if _newclass:
        BidPrice1 = _swig_property(_pyctp.CThostFtdcMarketDataBestPriceField_BidPrice1_get, _pyctp.CThostFtdcMarketDataBestPriceField_BidPrice1_set)
    __swig_setmethods__["BidVolume1"] = _pyctp.CThostFtdcMarketDataBestPriceField_BidVolume1_set
    __swig_getmethods__["BidVolume1"] = _pyctp.CThostFtdcMarketDataBestPriceField_BidVolume1_get
    if _newclass:
        BidVolume1 = _swig_property(_pyctp.CThostFtdcMarketDataBestPriceField_BidVolume1_get, _pyctp.CThostFtdcMarketDataBestPriceField_BidVolume1_set)
    __swig_setmethods__["AskPrice1"] = _pyctp.CThostFtdcMarketDataBestPriceField_AskPrice1_set
    __swig_getmethods__["AskPrice1"] = _pyctp.CThostFtdcMarketDataBestPriceField_AskPrice1_get
    if _newclass:
        AskPrice1 = _swig_property(_pyctp.CThostFtdcMarketDataBestPriceField_AskPrice1_get, _pyctp.CThostFtdcMarketDataBestPriceField_AskPrice1_set)
    __swig_setmethods__["AskVolume1"] = _pyctp.CThostFtdcMarketDataBestPriceField_AskVolume1_set
    __swig_getmethods__["AskVolume1"] = _pyctp.CThostFtdcMarketDataBestPriceField_AskVolume1_get
    if _newclass:
        AskVolume1 = _swig_property(_pyctp.CThostFtdcMarketDataBestPriceField_AskVolume1_get, _pyctp.CThostFtdcMarketDataBestPriceField_AskVolume1_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcMarketDataBestPriceField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcMarketDataBestPriceField
    __del__ = lambda self: None
CThostFtdcMarketDataBestPriceField_swigregister = _pyctp.CThostFtdcMarketDataBestPriceField_swigregister
CThostFtdcMarketDataBestPriceField_swigregister(CThostFtdcMarketDataBestPriceField)

class CThostFtdcMarketDataBid23Field(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcMarketDataBid23Field, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcMarketDataBid23Field, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BidPrice2"] = _pyctp.CThostFtdcMarketDataBid23Field_BidPrice2_set
    __swig_getmethods__["BidPrice2"] = _pyctp.CThostFtdcMarketDataBid23Field_BidPrice2_get
    if _newclass:
        BidPrice2 = _swig_property(_pyctp.CThostFtdcMarketDataBid23Field_BidPrice2_get, _pyctp.CThostFtdcMarketDataBid23Field_BidPrice2_set)
    __swig_setmethods__["BidVolume2"] = _pyctp.CThostFtdcMarketDataBid23Field_BidVolume2_set
    __swig_getmethods__["BidVolume2"] = _pyctp.CThostFtdcMarketDataBid23Field_BidVolume2_get
    if _newclass:
        BidVolume2 = _swig_property(_pyctp.CThostFtdcMarketDataBid23Field_BidVolume2_get, _pyctp.CThostFtdcMarketDataBid23Field_BidVolume2_set)
    __swig_setmethods__["BidPrice3"] = _pyctp.CThostFtdcMarketDataBid23Field_BidPrice3_set
    __swig_getmethods__["BidPrice3"] = _pyctp.CThostFtdcMarketDataBid23Field_BidPrice3_get
    if _newclass:
        BidPrice3 = _swig_property(_pyctp.CThostFtdcMarketDataBid23Field_BidPrice3_get, _pyctp.CThostFtdcMarketDataBid23Field_BidPrice3_set)
    __swig_setmethods__["BidVolume3"] = _pyctp.CThostFtdcMarketDataBid23Field_BidVolume3_set
    __swig_getmethods__["BidVolume3"] = _pyctp.CThostFtdcMarketDataBid23Field_BidVolume3_get
    if _newclass:
        BidVolume3 = _swig_property(_pyctp.CThostFtdcMarketDataBid23Field_BidVolume3_get, _pyctp.CThostFtdcMarketDataBid23Field_BidVolume3_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcMarketDataBid23Field()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcMarketDataBid23Field
    __del__ = lambda self: None
CThostFtdcMarketDataBid23Field_swigregister = _pyctp.CThostFtdcMarketDataBid23Field_swigregister
CThostFtdcMarketDataBid23Field_swigregister(CThostFtdcMarketDataBid23Field)

class CThostFtdcMarketDataAsk23Field(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcMarketDataAsk23Field, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcMarketDataAsk23Field, name)
    __repr__ = _swig_repr
    __swig_setmethods__["AskPrice2"] = _pyctp.CThostFtdcMarketDataAsk23Field_AskPrice2_set
    __swig_getmethods__["AskPrice2"] = _pyctp.CThostFtdcMarketDataAsk23Field_AskPrice2_get
    if _newclass:
        AskPrice2 = _swig_property(_pyctp.CThostFtdcMarketDataAsk23Field_AskPrice2_get, _pyctp.CThostFtdcMarketDataAsk23Field_AskPrice2_set)
    __swig_setmethods__["AskVolume2"] = _pyctp.CThostFtdcMarketDataAsk23Field_AskVolume2_set
    __swig_getmethods__["AskVolume2"] = _pyctp.CThostFtdcMarketDataAsk23Field_AskVolume2_get
    if _newclass:
        AskVolume2 = _swig_property(_pyctp.CThostFtdcMarketDataAsk23Field_AskVolume2_get, _pyctp.CThostFtdcMarketDataAsk23Field_AskVolume2_set)
    __swig_setmethods__["AskPrice3"] = _pyctp.CThostFtdcMarketDataAsk23Field_AskPrice3_set
    __swig_getmethods__["AskPrice3"] = _pyctp.CThostFtdcMarketDataAsk23Field_AskPrice3_get
    if _newclass:
        AskPrice3 = _swig_property(_pyctp.CThostFtdcMarketDataAsk23Field_AskPrice3_get, _pyctp.CThostFtdcMarketDataAsk23Field_AskPrice3_set)
    __swig_setmethods__["AskVolume3"] = _pyctp.CThostFtdcMarketDataAsk23Field_AskVolume3_set
    __swig_getmethods__["AskVolume3"] = _pyctp.CThostFtdcMarketDataAsk23Field_AskVolume3_get
    if _newclass:
        AskVolume3 = _swig_property(_pyctp.CThostFtdcMarketDataAsk23Field_AskVolume3_get, _pyctp.CThostFtdcMarketDataAsk23Field_AskVolume3_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcMarketDataAsk23Field()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcMarketDataAsk23Field
    __del__ = lambda self: None
CThostFtdcMarketDataAsk23Field_swigregister = _pyctp.CThostFtdcMarketDataAsk23Field_swigregister
CThostFtdcMarketDataAsk23Field_swigregister(CThostFtdcMarketDataAsk23Field)

class CThostFtdcMarketDataBid45Field(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcMarketDataBid45Field, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcMarketDataBid45Field, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BidPrice4"] = _pyctp.CThostFtdcMarketDataBid45Field_BidPrice4_set
    __swig_getmethods__["BidPrice4"] = _pyctp.CThostFtdcMarketDataBid45Field_BidPrice4_get
    if _newclass:
        BidPrice4 = _swig_property(_pyctp.CThostFtdcMarketDataBid45Field_BidPrice4_get, _pyctp.CThostFtdcMarketDataBid45Field_BidPrice4_set)
    __swig_setmethods__["BidVolume4"] = _pyctp.CThostFtdcMarketDataBid45Field_BidVolume4_set
    __swig_getmethods__["BidVolume4"] = _pyctp.CThostFtdcMarketDataBid45Field_BidVolume4_get
    if _newclass:
        BidVolume4 = _swig_property(_pyctp.CThostFtdcMarketDataBid45Field_BidVolume4_get, _pyctp.CThostFtdcMarketDataBid45Field_BidVolume4_set)
    __swig_setmethods__["BidPrice5"] = _pyctp.CThostFtdcMarketDataBid45Field_BidPrice5_set
    __swig_getmethods__["BidPrice5"] = _pyctp.CThostFtdcMarketDataBid45Field_BidPrice5_get
    if _newclass:
        BidPrice5 = _swig_property(_pyctp.CThostFtdcMarketDataBid45Field_BidPrice5_get, _pyctp.CThostFtdcMarketDataBid45Field_BidPrice5_set)
    __swig_setmethods__["BidVolume5"] = _pyctp.CThostFtdcMarketDataBid45Field_BidVolume5_set
    __swig_getmethods__["BidVolume5"] = _pyctp.CThostFtdcMarketDataBid45Field_BidVolume5_get
    if _newclass:
        BidVolume5 = _swig_property(_pyctp.CThostFtdcMarketDataBid45Field_BidVolume5_get, _pyctp.CThostFtdcMarketDataBid45Field_BidVolume5_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcMarketDataBid45Field()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcMarketDataBid45Field
    __del__ = lambda self: None
CThostFtdcMarketDataBid45Field_swigregister = _pyctp.CThostFtdcMarketDataBid45Field_swigregister
CThostFtdcMarketDataBid45Field_swigregister(CThostFtdcMarketDataBid45Field)

class CThostFtdcMarketDataAsk45Field(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcMarketDataAsk45Field, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcMarketDataAsk45Field, name)
    __repr__ = _swig_repr
    __swig_setmethods__["AskPrice4"] = _pyctp.CThostFtdcMarketDataAsk45Field_AskPrice4_set
    __swig_getmethods__["AskPrice4"] = _pyctp.CThostFtdcMarketDataAsk45Field_AskPrice4_get
    if _newclass:
        AskPrice4 = _swig_property(_pyctp.CThostFtdcMarketDataAsk45Field_AskPrice4_get, _pyctp.CThostFtdcMarketDataAsk45Field_AskPrice4_set)
    __swig_setmethods__["AskVolume4"] = _pyctp.CThostFtdcMarketDataAsk45Field_AskVolume4_set
    __swig_getmethods__["AskVolume4"] = _pyctp.CThostFtdcMarketDataAsk45Field_AskVolume4_get
    if _newclass:
        AskVolume4 = _swig_property(_pyctp.CThostFtdcMarketDataAsk45Field_AskVolume4_get, _pyctp.CThostFtdcMarketDataAsk45Field_AskVolume4_set)
    __swig_setmethods__["AskPrice5"] = _pyctp.CThostFtdcMarketDataAsk45Field_AskPrice5_set
    __swig_getmethods__["AskPrice5"] = _pyctp.CThostFtdcMarketDataAsk45Field_AskPrice5_get
    if _newclass:
        AskPrice5 = _swig_property(_pyctp.CThostFtdcMarketDataAsk45Field_AskPrice5_get, _pyctp.CThostFtdcMarketDataAsk45Field_AskPrice5_set)
    __swig_setmethods__["AskVolume5"] = _pyctp.CThostFtdcMarketDataAsk45Field_AskVolume5_set
    __swig_getmethods__["AskVolume5"] = _pyctp.CThostFtdcMarketDataAsk45Field_AskVolume5_get
    if _newclass:
        AskVolume5 = _swig_property(_pyctp.CThostFtdcMarketDataAsk45Field_AskVolume5_get, _pyctp.CThostFtdcMarketDataAsk45Field_AskVolume5_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcMarketDataAsk45Field()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcMarketDataAsk45Field
    __del__ = lambda self: None
CThostFtdcMarketDataAsk45Field_swigregister = _pyctp.CThostFtdcMarketDataAsk45Field_swigregister
CThostFtdcMarketDataAsk45Field_swigregister(CThostFtdcMarketDataAsk45Field)

class CThostFtdcMarketDataUpdateTimeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcMarketDataUpdateTimeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcMarketDataUpdateTimeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcMarketDataUpdateTimeField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcMarketDataUpdateTimeField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcMarketDataUpdateTimeField_InstrumentID_get, _pyctp.CThostFtdcMarketDataUpdateTimeField_InstrumentID_set)
    __swig_setmethods__["UpdateTime"] = _pyctp.CThostFtdcMarketDataUpdateTimeField_UpdateTime_set
    __swig_getmethods__["UpdateTime"] = _pyctp.CThostFtdcMarketDataUpdateTimeField_UpdateTime_get
    if _newclass:
        UpdateTime = _swig_property(_pyctp.CThostFtdcMarketDataUpdateTimeField_UpdateTime_get, _pyctp.CThostFtdcMarketDataUpdateTimeField_UpdateTime_set)
    __swig_setmethods__["UpdateMillisec"] = _pyctp.CThostFtdcMarketDataUpdateTimeField_UpdateMillisec_set
    __swig_getmethods__["UpdateMillisec"] = _pyctp.CThostFtdcMarketDataUpdateTimeField_UpdateMillisec_get
    if _newclass:
        UpdateMillisec = _swig_property(_pyctp.CThostFtdcMarketDataUpdateTimeField_UpdateMillisec_get, _pyctp.CThostFtdcMarketDataUpdateTimeField_UpdateMillisec_set)
    __swig_setmethods__["ActionDay"] = _pyctp.CThostFtdcMarketDataUpdateTimeField_ActionDay_set
    __swig_getmethods__["ActionDay"] = _pyctp.CThostFtdcMarketDataUpdateTimeField_ActionDay_get
    if _newclass:
        ActionDay = _swig_property(_pyctp.CThostFtdcMarketDataUpdateTimeField_ActionDay_get, _pyctp.CThostFtdcMarketDataUpdateTimeField_ActionDay_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcMarketDataUpdateTimeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcMarketDataUpdateTimeField
    __del__ = lambda self: None
CThostFtdcMarketDataUpdateTimeField_swigregister = _pyctp.CThostFtdcMarketDataUpdateTimeField_swigregister
CThostFtdcMarketDataUpdateTimeField_swigregister(CThostFtdcMarketDataUpdateTimeField)

class CThostFtdcMarketDataExchangeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcMarketDataExchangeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcMarketDataExchangeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcMarketDataExchangeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcMarketDataExchangeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcMarketDataExchangeField_ExchangeID_get, _pyctp.CThostFtdcMarketDataExchangeField_ExchangeID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcMarketDataExchangeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcMarketDataExchangeField
    __del__ = lambda self: None
CThostFtdcMarketDataExchangeField_swigregister = _pyctp.CThostFtdcMarketDataExchangeField_swigregister
CThostFtdcMarketDataExchangeField_swigregister(CThostFtdcMarketDataExchangeField)

class CThostFtdcSpecificInstrumentField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcSpecificInstrumentField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcSpecificInstrumentField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcSpecificInstrumentField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcSpecificInstrumentField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcSpecificInstrumentField_InstrumentID_get, _pyctp.CThostFtdcSpecificInstrumentField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcSpecificInstrumentField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcSpecificInstrumentField
    __del__ = lambda self: None
CThostFtdcSpecificInstrumentField_swigregister = _pyctp.CThostFtdcSpecificInstrumentField_swigregister
CThostFtdcSpecificInstrumentField_swigregister(CThostFtdcSpecificInstrumentField)

class CThostFtdcInstrumentStatusField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcInstrumentStatusField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcInstrumentStatusField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcInstrumentStatusField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcInstrumentStatusField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcInstrumentStatusField_ExchangeID_get, _pyctp.CThostFtdcInstrumentStatusField_ExchangeID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CThostFtdcInstrumentStatusField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CThostFtdcInstrumentStatusField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CThostFtdcInstrumentStatusField_ExchangeInstID_get, _pyctp.CThostFtdcInstrumentStatusField_ExchangeInstID_set)
    __swig_setmethods__["SettlementGroupID"] = _pyctp.CThostFtdcInstrumentStatusField_SettlementGroupID_set
    __swig_getmethods__["SettlementGroupID"] = _pyctp.CThostFtdcInstrumentStatusField_SettlementGroupID_get
    if _newclass:
        SettlementGroupID = _swig_property(_pyctp.CThostFtdcInstrumentStatusField_SettlementGroupID_get, _pyctp.CThostFtdcInstrumentStatusField_SettlementGroupID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcInstrumentStatusField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcInstrumentStatusField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcInstrumentStatusField_InstrumentID_get, _pyctp.CThostFtdcInstrumentStatusField_InstrumentID_set)
    __swig_setmethods__["InstrumentStatus"] = _pyctp.CThostFtdcInstrumentStatusField_InstrumentStatus_set
    __swig_getmethods__["InstrumentStatus"] = _pyctp.CThostFtdcInstrumentStatusField_InstrumentStatus_get
    if _newclass:
        InstrumentStatus = _swig_property(_pyctp.CThostFtdcInstrumentStatusField_InstrumentStatus_get, _pyctp.CThostFtdcInstrumentStatusField_InstrumentStatus_set)
    __swig_setmethods__["TradingSegmentSN"] = _pyctp.CThostFtdcInstrumentStatusField_TradingSegmentSN_set
    __swig_getmethods__["TradingSegmentSN"] = _pyctp.CThostFtdcInstrumentStatusField_TradingSegmentSN_get
    if _newclass:
        TradingSegmentSN = _swig_property(_pyctp.CThostFtdcInstrumentStatusField_TradingSegmentSN_get, _pyctp.CThostFtdcInstrumentStatusField_TradingSegmentSN_set)
    __swig_setmethods__["EnterTime"] = _pyctp.CThostFtdcInstrumentStatusField_EnterTime_set
    __swig_getmethods__["EnterTime"] = _pyctp.CThostFtdcInstrumentStatusField_EnterTime_get
    if _newclass:
        EnterTime = _swig_property(_pyctp.CThostFtdcInstrumentStatusField_EnterTime_get, _pyctp.CThostFtdcInstrumentStatusField_EnterTime_set)
    __swig_setmethods__["EnterReason"] = _pyctp.CThostFtdcInstrumentStatusField_EnterReason_set
    __swig_getmethods__["EnterReason"] = _pyctp.CThostFtdcInstrumentStatusField_EnterReason_get
    if _newclass:
        EnterReason = _swig_property(_pyctp.CThostFtdcInstrumentStatusField_EnterReason_get, _pyctp.CThostFtdcInstrumentStatusField_EnterReason_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcInstrumentStatusField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcInstrumentStatusField
    __del__ = lambda self: None
CThostFtdcInstrumentStatusField_swigregister = _pyctp.CThostFtdcInstrumentStatusField_swigregister
CThostFtdcInstrumentStatusField_swigregister(CThostFtdcInstrumentStatusField)

class CThostFtdcQryInstrumentStatusField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryInstrumentStatusField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryInstrumentStatusField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryInstrumentStatusField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryInstrumentStatusField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryInstrumentStatusField_ExchangeID_get, _pyctp.CThostFtdcQryInstrumentStatusField_ExchangeID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CThostFtdcQryInstrumentStatusField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CThostFtdcQryInstrumentStatusField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CThostFtdcQryInstrumentStatusField_ExchangeInstID_get, _pyctp.CThostFtdcQryInstrumentStatusField_ExchangeInstID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryInstrumentStatusField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryInstrumentStatusField
    __del__ = lambda self: None
CThostFtdcQryInstrumentStatusField_swigregister = _pyctp.CThostFtdcQryInstrumentStatusField_swigregister
CThostFtdcQryInstrumentStatusField_swigregister(CThostFtdcQryInstrumentStatusField)

class CThostFtdcInvestorAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcInvestorAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcInvestorAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcInvestorAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcInvestorAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcInvestorAccountField_BrokerID_get, _pyctp.CThostFtdcInvestorAccountField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcInvestorAccountField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcInvestorAccountField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcInvestorAccountField_InvestorID_get, _pyctp.CThostFtdcInvestorAccountField_InvestorID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcInvestorAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcInvestorAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcInvestorAccountField_AccountID_get, _pyctp.CThostFtdcInvestorAccountField_AccountID_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcInvestorAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcInvestorAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcInvestorAccountField_CurrencyID_get, _pyctp.CThostFtdcInvestorAccountField_CurrencyID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcInvestorAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcInvestorAccountField
    __del__ = lambda self: None
CThostFtdcInvestorAccountField_swigregister = _pyctp.CThostFtdcInvestorAccountField_swigregister
CThostFtdcInvestorAccountField_swigregister(CThostFtdcInvestorAccountField)

class CThostFtdcPositionProfitAlgorithmField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcPositionProfitAlgorithmField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcPositionProfitAlgorithmField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcPositionProfitAlgorithmField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcPositionProfitAlgorithmField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcPositionProfitAlgorithmField_BrokerID_get, _pyctp.CThostFtdcPositionProfitAlgorithmField_BrokerID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcPositionProfitAlgorithmField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcPositionProfitAlgorithmField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcPositionProfitAlgorithmField_AccountID_get, _pyctp.CThostFtdcPositionProfitAlgorithmField_AccountID_set)
    __swig_setmethods__["Algorithm"] = _pyctp.CThostFtdcPositionProfitAlgorithmField_Algorithm_set
    __swig_getmethods__["Algorithm"] = _pyctp.CThostFtdcPositionProfitAlgorithmField_Algorithm_get
    if _newclass:
        Algorithm = _swig_property(_pyctp.CThostFtdcPositionProfitAlgorithmField_Algorithm_get, _pyctp.CThostFtdcPositionProfitAlgorithmField_Algorithm_set)
    __swig_setmethods__["Memo"] = _pyctp.CThostFtdcPositionProfitAlgorithmField_Memo_set
    __swig_getmethods__["Memo"] = _pyctp.CThostFtdcPositionProfitAlgorithmField_Memo_get
    if _newclass:
        Memo = _swig_property(_pyctp.CThostFtdcPositionProfitAlgorithmField_Memo_get, _pyctp.CThostFtdcPositionProfitAlgorithmField_Memo_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcPositionProfitAlgorithmField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcPositionProfitAlgorithmField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcPositionProfitAlgorithmField_CurrencyID_get, _pyctp.CThostFtdcPositionProfitAlgorithmField_CurrencyID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcPositionProfitAlgorithmField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcPositionProfitAlgorithmField
    __del__ = lambda self: None
CThostFtdcPositionProfitAlgorithmField_swigregister = _pyctp.CThostFtdcPositionProfitAlgorithmField_swigregister
CThostFtdcPositionProfitAlgorithmField_swigregister(CThostFtdcPositionProfitAlgorithmField)

class CThostFtdcDiscountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcDiscountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcDiscountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcDiscountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcDiscountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcDiscountField_BrokerID_get, _pyctp.CThostFtdcDiscountField_BrokerID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CThostFtdcDiscountField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CThostFtdcDiscountField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CThostFtdcDiscountField_InvestorRange_get, _pyctp.CThostFtdcDiscountField_InvestorRange_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcDiscountField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcDiscountField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcDiscountField_InvestorID_get, _pyctp.CThostFtdcDiscountField_InvestorID_set)
    __swig_setmethods__["Discount"] = _pyctp.CThostFtdcDiscountField_Discount_set
    __swig_getmethods__["Discount"] = _pyctp.CThostFtdcDiscountField_Discount_get
    if _newclass:
        Discount = _swig_property(_pyctp.CThostFtdcDiscountField_Discount_get, _pyctp.CThostFtdcDiscountField_Discount_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcDiscountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcDiscountField
    __del__ = lambda self: None
CThostFtdcDiscountField_swigregister = _pyctp.CThostFtdcDiscountField_swigregister
CThostFtdcDiscountField_swigregister(CThostFtdcDiscountField)

class CThostFtdcQryTransferBankField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryTransferBankField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryTransferBankField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcQryTransferBankField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcQryTransferBankField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcQryTransferBankField_BankID_get, _pyctp.CThostFtdcQryTransferBankField_BankID_set)
    __swig_setmethods__["BankBrchID"] = _pyctp.CThostFtdcQryTransferBankField_BankBrchID_set
    __swig_getmethods__["BankBrchID"] = _pyctp.CThostFtdcQryTransferBankField_BankBrchID_get
    if _newclass:
        BankBrchID = _swig_property(_pyctp.CThostFtdcQryTransferBankField_BankBrchID_get, _pyctp.CThostFtdcQryTransferBankField_BankBrchID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryTransferBankField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryTransferBankField
    __del__ = lambda self: None
CThostFtdcQryTransferBankField_swigregister = _pyctp.CThostFtdcQryTransferBankField_swigregister
CThostFtdcQryTransferBankField_swigregister(CThostFtdcQryTransferBankField)

class CThostFtdcTransferBankField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcTransferBankField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcTransferBankField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcTransferBankField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcTransferBankField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcTransferBankField_BankID_get, _pyctp.CThostFtdcTransferBankField_BankID_set)
    __swig_setmethods__["BankBrchID"] = _pyctp.CThostFtdcTransferBankField_BankBrchID_set
    __swig_getmethods__["BankBrchID"] = _pyctp.CThostFtdcTransferBankField_BankBrchID_get
    if _newclass:
        BankBrchID = _swig_property(_pyctp.CThostFtdcTransferBankField_BankBrchID_get, _pyctp.CThostFtdcTransferBankField_BankBrchID_set)
    __swig_setmethods__["BankName"] = _pyctp.CThostFtdcTransferBankField_BankName_set
    __swig_getmethods__["BankName"] = _pyctp.CThostFtdcTransferBankField_BankName_get
    if _newclass:
        BankName = _swig_property(_pyctp.CThostFtdcTransferBankField_BankName_get, _pyctp.CThostFtdcTransferBankField_BankName_set)
    __swig_setmethods__["IsActive"] = _pyctp.CThostFtdcTransferBankField_IsActive_set
    __swig_getmethods__["IsActive"] = _pyctp.CThostFtdcTransferBankField_IsActive_get
    if _newclass:
        IsActive = _swig_property(_pyctp.CThostFtdcTransferBankField_IsActive_get, _pyctp.CThostFtdcTransferBankField_IsActive_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcTransferBankField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcTransferBankField
    __del__ = lambda self: None
CThostFtdcTransferBankField_swigregister = _pyctp.CThostFtdcTransferBankField_swigregister
CThostFtdcTransferBankField_swigregister(CThostFtdcTransferBankField)

class CThostFtdcQryInvestorPositionDetailField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryInvestorPositionDetailField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryInvestorPositionDetailField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryInvestorPositionDetailField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryInvestorPositionDetailField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryInvestorPositionDetailField_BrokerID_get, _pyctp.CThostFtdcQryInvestorPositionDetailField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryInvestorPositionDetailField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryInvestorPositionDetailField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryInvestorPositionDetailField_InvestorID_get, _pyctp.CThostFtdcQryInvestorPositionDetailField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryInvestorPositionDetailField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryInvestorPositionDetailField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryInvestorPositionDetailField_InstrumentID_get, _pyctp.CThostFtdcQryInvestorPositionDetailField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryInvestorPositionDetailField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryInvestorPositionDetailField
    __del__ = lambda self: None
CThostFtdcQryInvestorPositionDetailField_swigregister = _pyctp.CThostFtdcQryInvestorPositionDetailField_swigregister
CThostFtdcQryInvestorPositionDetailField_swigregister(CThostFtdcQryInvestorPositionDetailField)

class CThostFtdcInvestorPositionDetailField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcInvestorPositionDetailField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcInvestorPositionDetailField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcInvestorPositionDetailField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcInvestorPositionDetailField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcInvestorPositionDetailField_InstrumentID_get, _pyctp.CThostFtdcInvestorPositionDetailField_InstrumentID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcInvestorPositionDetailField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcInvestorPositionDetailField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcInvestorPositionDetailField_BrokerID_get, _pyctp.CThostFtdcInvestorPositionDetailField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcInvestorPositionDetailField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcInvestorPositionDetailField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcInvestorPositionDetailField_InvestorID_get, _pyctp.CThostFtdcInvestorPositionDetailField_InvestorID_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcInvestorPositionDetailField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcInvestorPositionDetailField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcInvestorPositionDetailField_HedgeFlag_get, _pyctp.CThostFtdcInvestorPositionDetailField_HedgeFlag_set)
    __swig_setmethods__["Direction"] = _pyctp.CThostFtdcInvestorPositionDetailField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CThostFtdcInvestorPositionDetailField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CThostFtdcInvestorPositionDetailField_Direction_get, _pyctp.CThostFtdcInvestorPositionDetailField_Direction_set)
    __swig_setmethods__["OpenDate"] = _pyctp.CThostFtdcInvestorPositionDetailField_OpenDate_set
    __swig_getmethods__["OpenDate"] = _pyctp.CThostFtdcInvestorPositionDetailField_OpenDate_get
    if _newclass:
        OpenDate = _swig_property(_pyctp.CThostFtdcInvestorPositionDetailField_OpenDate_get, _pyctp.CThostFtdcInvestorPositionDetailField_OpenDate_set)
    __swig_setmethods__["TradeID"] = _pyctp.CThostFtdcInvestorPositionDetailField_TradeID_set
    __swig_getmethods__["TradeID"] = _pyctp.CThostFtdcInvestorPositionDetailField_TradeID_get
    if _newclass:
        TradeID = _swig_property(_pyctp.CThostFtdcInvestorPositionDetailField_TradeID_get, _pyctp.CThostFtdcInvestorPositionDetailField_TradeID_set)
    __swig_setmethods__["Volume"] = _pyctp.CThostFtdcInvestorPositionDetailField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CThostFtdcInvestorPositionDetailField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CThostFtdcInvestorPositionDetailField_Volume_get, _pyctp.CThostFtdcInvestorPositionDetailField_Volume_set)
    __swig_setmethods__["OpenPrice"] = _pyctp.CThostFtdcInvestorPositionDetailField_OpenPrice_set
    __swig_getmethods__["OpenPrice"] = _pyctp.CThostFtdcInvestorPositionDetailField_OpenPrice_get
    if _newclass:
        OpenPrice = _swig_property(_pyctp.CThostFtdcInvestorPositionDetailField_OpenPrice_get, _pyctp.CThostFtdcInvestorPositionDetailField_OpenPrice_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcInvestorPositionDetailField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcInvestorPositionDetailField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcInvestorPositionDetailField_TradingDay_get, _pyctp.CThostFtdcInvestorPositionDetailField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CThostFtdcInvestorPositionDetailField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CThostFtdcInvestorPositionDetailField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CThostFtdcInvestorPositionDetailField_SettlementID_get, _pyctp.CThostFtdcInvestorPositionDetailField_SettlementID_set)
    __swig_setmethods__["TradeType"] = _pyctp.CThostFtdcInvestorPositionDetailField_TradeType_set
    __swig_getmethods__["TradeType"] = _pyctp.CThostFtdcInvestorPositionDetailField_TradeType_get
    if _newclass:
        TradeType = _swig_property(_pyctp.CThostFtdcInvestorPositionDetailField_TradeType_get, _pyctp.CThostFtdcInvestorPositionDetailField_TradeType_set)
    __swig_setmethods__["CombInstrumentID"] = _pyctp.CThostFtdcInvestorPositionDetailField_CombInstrumentID_set
    __swig_getmethods__["CombInstrumentID"] = _pyctp.CThostFtdcInvestorPositionDetailField_CombInstrumentID_get
    if _newclass:
        CombInstrumentID = _swig_property(_pyctp.CThostFtdcInvestorPositionDetailField_CombInstrumentID_get, _pyctp.CThostFtdcInvestorPositionDetailField_CombInstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcInvestorPositionDetailField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcInvestorPositionDetailField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcInvestorPositionDetailField_ExchangeID_get, _pyctp.CThostFtdcInvestorPositionDetailField_ExchangeID_set)
    __swig_setmethods__["CloseProfitByDate"] = _pyctp.CThostFtdcInvestorPositionDetailField_CloseProfitByDate_set
    __swig_getmethods__["CloseProfitByDate"] = _pyctp.CThostFtdcInvestorPositionDetailField_CloseProfitByDate_get
    if _newclass:
        CloseProfitByDate = _swig_property(_pyctp.CThostFtdcInvestorPositionDetailField_CloseProfitByDate_get, _pyctp.CThostFtdcInvestorPositionDetailField_CloseProfitByDate_set)
    __swig_setmethods__["CloseProfitByTrade"] = _pyctp.CThostFtdcInvestorPositionDetailField_CloseProfitByTrade_set
    __swig_getmethods__["CloseProfitByTrade"] = _pyctp.CThostFtdcInvestorPositionDetailField_CloseProfitByTrade_get
    if _newclass:
        CloseProfitByTrade = _swig_property(_pyctp.CThostFtdcInvestorPositionDetailField_CloseProfitByTrade_get, _pyctp.CThostFtdcInvestorPositionDetailField_CloseProfitByTrade_set)
    __swig_setmethods__["PositionProfitByDate"] = _pyctp.CThostFtdcInvestorPositionDetailField_PositionProfitByDate_set
    __swig_getmethods__["PositionProfitByDate"] = _pyctp.CThostFtdcInvestorPositionDetailField_PositionProfitByDate_get
    if _newclass:
        PositionProfitByDate = _swig_property(_pyctp.CThostFtdcInvestorPositionDetailField_PositionProfitByDate_get, _pyctp.CThostFtdcInvestorPositionDetailField_PositionProfitByDate_set)
    __swig_setmethods__["PositionProfitByTrade"] = _pyctp.CThostFtdcInvestorPositionDetailField_PositionProfitByTrade_set
    __swig_getmethods__["PositionProfitByTrade"] = _pyctp.CThostFtdcInvestorPositionDetailField_PositionProfitByTrade_get
    if _newclass:
        PositionProfitByTrade = _swig_property(_pyctp.CThostFtdcInvestorPositionDetailField_PositionProfitByTrade_get, _pyctp.CThostFtdcInvestorPositionDetailField_PositionProfitByTrade_set)
    __swig_setmethods__["Margin"] = _pyctp.CThostFtdcInvestorPositionDetailField_Margin_set
    __swig_getmethods__["Margin"] = _pyctp.CThostFtdcInvestorPositionDetailField_Margin_get
    if _newclass:
        Margin = _swig_property(_pyctp.CThostFtdcInvestorPositionDetailField_Margin_get, _pyctp.CThostFtdcInvestorPositionDetailField_Margin_set)
    __swig_setmethods__["ExchMargin"] = _pyctp.CThostFtdcInvestorPositionDetailField_ExchMargin_set
    __swig_getmethods__["ExchMargin"] = _pyctp.CThostFtdcInvestorPositionDetailField_ExchMargin_get
    if _newclass:
        ExchMargin = _swig_property(_pyctp.CThostFtdcInvestorPositionDetailField_ExchMargin_get, _pyctp.CThostFtdcInvestorPositionDetailField_ExchMargin_set)
    __swig_setmethods__["MarginRateByMoney"] = _pyctp.CThostFtdcInvestorPositionDetailField_MarginRateByMoney_set
    __swig_getmethods__["MarginRateByMoney"] = _pyctp.CThostFtdcInvestorPositionDetailField_MarginRateByMoney_get
    if _newclass:
        MarginRateByMoney = _swig_property(_pyctp.CThostFtdcInvestorPositionDetailField_MarginRateByMoney_get, _pyctp.CThostFtdcInvestorPositionDetailField_MarginRateByMoney_set)
    __swig_setmethods__["MarginRateByVolume"] = _pyctp.CThostFtdcInvestorPositionDetailField_MarginRateByVolume_set
    __swig_getmethods__["MarginRateByVolume"] = _pyctp.CThostFtdcInvestorPositionDetailField_MarginRateByVolume_get
    if _newclass:
        MarginRateByVolume = _swig_property(_pyctp.CThostFtdcInvestorPositionDetailField_MarginRateByVolume_get, _pyctp.CThostFtdcInvestorPositionDetailField_MarginRateByVolume_set)
    __swig_setmethods__["LastSettlementPrice"] = _pyctp.CThostFtdcInvestorPositionDetailField_LastSettlementPrice_set
    __swig_getmethods__["LastSettlementPrice"] = _pyctp.CThostFtdcInvestorPositionDetailField_LastSettlementPrice_get
    if _newclass:
        LastSettlementPrice = _swig_property(_pyctp.CThostFtdcInvestorPositionDetailField_LastSettlementPrice_get, _pyctp.CThostFtdcInvestorPositionDetailField_LastSettlementPrice_set)
    __swig_setmethods__["SettlementPrice"] = _pyctp.CThostFtdcInvestorPositionDetailField_SettlementPrice_set
    __swig_getmethods__["SettlementPrice"] = _pyctp.CThostFtdcInvestorPositionDetailField_SettlementPrice_get
    if _newclass:
        SettlementPrice = _swig_property(_pyctp.CThostFtdcInvestorPositionDetailField_SettlementPrice_get, _pyctp.CThostFtdcInvestorPositionDetailField_SettlementPrice_set)
    __swig_setmethods__["CloseVolume"] = _pyctp.CThostFtdcInvestorPositionDetailField_CloseVolume_set
    __swig_getmethods__["CloseVolume"] = _pyctp.CThostFtdcInvestorPositionDetailField_CloseVolume_get
    if _newclass:
        CloseVolume = _swig_property(_pyctp.CThostFtdcInvestorPositionDetailField_CloseVolume_get, _pyctp.CThostFtdcInvestorPositionDetailField_CloseVolume_set)
    __swig_setmethods__["CloseAmount"] = _pyctp.CThostFtdcInvestorPositionDetailField_CloseAmount_set
    __swig_getmethods__["CloseAmount"] = _pyctp.CThostFtdcInvestorPositionDetailField_CloseAmount_get
    if _newclass:
        CloseAmount = _swig_property(_pyctp.CThostFtdcInvestorPositionDetailField_CloseAmount_get, _pyctp.CThostFtdcInvestorPositionDetailField_CloseAmount_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcInvestorPositionDetailField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcInvestorPositionDetailField
    __del__ = lambda self: None
CThostFtdcInvestorPositionDetailField_swigregister = _pyctp.CThostFtdcInvestorPositionDetailField_swigregister
CThostFtdcInvestorPositionDetailField_swigregister(CThostFtdcInvestorPositionDetailField)

class CThostFtdcTradingAccountPasswordField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcTradingAccountPasswordField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcTradingAccountPasswordField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcTradingAccountPasswordField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcTradingAccountPasswordField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcTradingAccountPasswordField_BrokerID_get, _pyctp.CThostFtdcTradingAccountPasswordField_BrokerID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcTradingAccountPasswordField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcTradingAccountPasswordField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcTradingAccountPasswordField_AccountID_get, _pyctp.CThostFtdcTradingAccountPasswordField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcTradingAccountPasswordField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcTradingAccountPasswordField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcTradingAccountPasswordField_Password_get, _pyctp.CThostFtdcTradingAccountPasswordField_Password_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcTradingAccountPasswordField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcTradingAccountPasswordField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcTradingAccountPasswordField_CurrencyID_get, _pyctp.CThostFtdcTradingAccountPasswordField_CurrencyID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcTradingAccountPasswordField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcTradingAccountPasswordField
    __del__ = lambda self: None
CThostFtdcTradingAccountPasswordField_swigregister = _pyctp.CThostFtdcTradingAccountPasswordField_swigregister
CThostFtdcTradingAccountPasswordField_swigregister(CThostFtdcTradingAccountPasswordField)

class CThostFtdcMDTraderOfferField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcMDTraderOfferField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcMDTraderOfferField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcMDTraderOfferField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcMDTraderOfferField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcMDTraderOfferField_ExchangeID_get, _pyctp.CThostFtdcMDTraderOfferField_ExchangeID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcMDTraderOfferField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcMDTraderOfferField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcMDTraderOfferField_TraderID_get, _pyctp.CThostFtdcMDTraderOfferField_TraderID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcMDTraderOfferField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcMDTraderOfferField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcMDTraderOfferField_ParticipantID_get, _pyctp.CThostFtdcMDTraderOfferField_ParticipantID_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcMDTraderOfferField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcMDTraderOfferField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcMDTraderOfferField_Password_get, _pyctp.CThostFtdcMDTraderOfferField_Password_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcMDTraderOfferField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcMDTraderOfferField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcMDTraderOfferField_InstallID_get, _pyctp.CThostFtdcMDTraderOfferField_InstallID_set)
    __swig_setmethods__["OrderLocalID"] = _pyctp.CThostFtdcMDTraderOfferField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _pyctp.CThostFtdcMDTraderOfferField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_pyctp.CThostFtdcMDTraderOfferField_OrderLocalID_get, _pyctp.CThostFtdcMDTraderOfferField_OrderLocalID_set)
    __swig_setmethods__["TraderConnectStatus"] = _pyctp.CThostFtdcMDTraderOfferField_TraderConnectStatus_set
    __swig_getmethods__["TraderConnectStatus"] = _pyctp.CThostFtdcMDTraderOfferField_TraderConnectStatus_get
    if _newclass:
        TraderConnectStatus = _swig_property(_pyctp.CThostFtdcMDTraderOfferField_TraderConnectStatus_get, _pyctp.CThostFtdcMDTraderOfferField_TraderConnectStatus_set)
    __swig_setmethods__["ConnectRequestDate"] = _pyctp.CThostFtdcMDTraderOfferField_ConnectRequestDate_set
    __swig_getmethods__["ConnectRequestDate"] = _pyctp.CThostFtdcMDTraderOfferField_ConnectRequestDate_get
    if _newclass:
        ConnectRequestDate = _swig_property(_pyctp.CThostFtdcMDTraderOfferField_ConnectRequestDate_get, _pyctp.CThostFtdcMDTraderOfferField_ConnectRequestDate_set)
    __swig_setmethods__["ConnectRequestTime"] = _pyctp.CThostFtdcMDTraderOfferField_ConnectRequestTime_set
    __swig_getmethods__["ConnectRequestTime"] = _pyctp.CThostFtdcMDTraderOfferField_ConnectRequestTime_get
    if _newclass:
        ConnectRequestTime = _swig_property(_pyctp.CThostFtdcMDTraderOfferField_ConnectRequestTime_get, _pyctp.CThostFtdcMDTraderOfferField_ConnectRequestTime_set)
    __swig_setmethods__["LastReportDate"] = _pyctp.CThostFtdcMDTraderOfferField_LastReportDate_set
    __swig_getmethods__["LastReportDate"] = _pyctp.CThostFtdcMDTraderOfferField_LastReportDate_get
    if _newclass:
        LastReportDate = _swig_property(_pyctp.CThostFtdcMDTraderOfferField_LastReportDate_get, _pyctp.CThostFtdcMDTraderOfferField_LastReportDate_set)
    __swig_setmethods__["LastReportTime"] = _pyctp.CThostFtdcMDTraderOfferField_LastReportTime_set
    __swig_getmethods__["LastReportTime"] = _pyctp.CThostFtdcMDTraderOfferField_LastReportTime_get
    if _newclass:
        LastReportTime = _swig_property(_pyctp.CThostFtdcMDTraderOfferField_LastReportTime_get, _pyctp.CThostFtdcMDTraderOfferField_LastReportTime_set)
    __swig_setmethods__["ConnectDate"] = _pyctp.CThostFtdcMDTraderOfferField_ConnectDate_set
    __swig_getmethods__["ConnectDate"] = _pyctp.CThostFtdcMDTraderOfferField_ConnectDate_get
    if _newclass:
        ConnectDate = _swig_property(_pyctp.CThostFtdcMDTraderOfferField_ConnectDate_get, _pyctp.CThostFtdcMDTraderOfferField_ConnectDate_set)
    __swig_setmethods__["ConnectTime"] = _pyctp.CThostFtdcMDTraderOfferField_ConnectTime_set
    __swig_getmethods__["ConnectTime"] = _pyctp.CThostFtdcMDTraderOfferField_ConnectTime_get
    if _newclass:
        ConnectTime = _swig_property(_pyctp.CThostFtdcMDTraderOfferField_ConnectTime_get, _pyctp.CThostFtdcMDTraderOfferField_ConnectTime_set)
    __swig_setmethods__["StartDate"] = _pyctp.CThostFtdcMDTraderOfferField_StartDate_set
    __swig_getmethods__["StartDate"] = _pyctp.CThostFtdcMDTraderOfferField_StartDate_get
    if _newclass:
        StartDate = _swig_property(_pyctp.CThostFtdcMDTraderOfferField_StartDate_get, _pyctp.CThostFtdcMDTraderOfferField_StartDate_set)
    __swig_setmethods__["StartTime"] = _pyctp.CThostFtdcMDTraderOfferField_StartTime_set
    __swig_getmethods__["StartTime"] = _pyctp.CThostFtdcMDTraderOfferField_StartTime_get
    if _newclass:
        StartTime = _swig_property(_pyctp.CThostFtdcMDTraderOfferField_StartTime_get, _pyctp.CThostFtdcMDTraderOfferField_StartTime_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcMDTraderOfferField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcMDTraderOfferField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcMDTraderOfferField_TradingDay_get, _pyctp.CThostFtdcMDTraderOfferField_TradingDay_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcMDTraderOfferField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcMDTraderOfferField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcMDTraderOfferField_BrokerID_get, _pyctp.CThostFtdcMDTraderOfferField_BrokerID_set)
    __swig_setmethods__["MaxTradeID"] = _pyctp.CThostFtdcMDTraderOfferField_MaxTradeID_set
    __swig_getmethods__["MaxTradeID"] = _pyctp.CThostFtdcMDTraderOfferField_MaxTradeID_get
    if _newclass:
        MaxTradeID = _swig_property(_pyctp.CThostFtdcMDTraderOfferField_MaxTradeID_get, _pyctp.CThostFtdcMDTraderOfferField_MaxTradeID_set)
    __swig_setmethods__["MaxOrderMessageReference"] = _pyctp.CThostFtdcMDTraderOfferField_MaxOrderMessageReference_set
    __swig_getmethods__["MaxOrderMessageReference"] = _pyctp.CThostFtdcMDTraderOfferField_MaxOrderMessageReference_get
    if _newclass:
        MaxOrderMessageReference = _swig_property(_pyctp.CThostFtdcMDTraderOfferField_MaxOrderMessageReference_get, _pyctp.CThostFtdcMDTraderOfferField_MaxOrderMessageReference_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcMDTraderOfferField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcMDTraderOfferField
    __del__ = lambda self: None
CThostFtdcMDTraderOfferField_swigregister = _pyctp.CThostFtdcMDTraderOfferField_swigregister
CThostFtdcMDTraderOfferField_swigregister(CThostFtdcMDTraderOfferField)

class CThostFtdcQryMDTraderOfferField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryMDTraderOfferField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryMDTraderOfferField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryMDTraderOfferField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryMDTraderOfferField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryMDTraderOfferField_ExchangeID_get, _pyctp.CThostFtdcQryMDTraderOfferField_ExchangeID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcQryMDTraderOfferField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcQryMDTraderOfferField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcQryMDTraderOfferField_ParticipantID_get, _pyctp.CThostFtdcQryMDTraderOfferField_ParticipantID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcQryMDTraderOfferField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcQryMDTraderOfferField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcQryMDTraderOfferField_TraderID_get, _pyctp.CThostFtdcQryMDTraderOfferField_TraderID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryMDTraderOfferField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryMDTraderOfferField
    __del__ = lambda self: None
CThostFtdcQryMDTraderOfferField_swigregister = _pyctp.CThostFtdcQryMDTraderOfferField_swigregister
CThostFtdcQryMDTraderOfferField_swigregister(CThostFtdcQryMDTraderOfferField)

class CThostFtdcQryNoticeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryNoticeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryNoticeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryNoticeField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryNoticeField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryNoticeField_BrokerID_get, _pyctp.CThostFtdcQryNoticeField_BrokerID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryNoticeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryNoticeField
    __del__ = lambda self: None
CThostFtdcQryNoticeField_swigregister = _pyctp.CThostFtdcQryNoticeField_swigregister
CThostFtdcQryNoticeField_swigregister(CThostFtdcQryNoticeField)

class CThostFtdcNoticeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcNoticeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcNoticeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcNoticeField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcNoticeField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcNoticeField_BrokerID_get, _pyctp.CThostFtdcNoticeField_BrokerID_set)
    __swig_setmethods__["Content"] = _pyctp.CThostFtdcNoticeField_Content_set
    __swig_getmethods__["Content"] = _pyctp.CThostFtdcNoticeField_Content_get
    if _newclass:
        Content = _swig_property(_pyctp.CThostFtdcNoticeField_Content_get, _pyctp.CThostFtdcNoticeField_Content_set)
    __swig_setmethods__["SequenceLabel"] = _pyctp.CThostFtdcNoticeField_SequenceLabel_set
    __swig_getmethods__["SequenceLabel"] = _pyctp.CThostFtdcNoticeField_SequenceLabel_get
    if _newclass:
        SequenceLabel = _swig_property(_pyctp.CThostFtdcNoticeField_SequenceLabel_get, _pyctp.CThostFtdcNoticeField_SequenceLabel_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcNoticeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcNoticeField
    __del__ = lambda self: None
CThostFtdcNoticeField_swigregister = _pyctp.CThostFtdcNoticeField_swigregister
CThostFtdcNoticeField_swigregister(CThostFtdcNoticeField)

class CThostFtdcUserRightField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcUserRightField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcUserRightField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcUserRightField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcUserRightField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcUserRightField_BrokerID_get, _pyctp.CThostFtdcUserRightField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcUserRightField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcUserRightField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcUserRightField_UserID_get, _pyctp.CThostFtdcUserRightField_UserID_set)
    __swig_setmethods__["UserRightType"] = _pyctp.CThostFtdcUserRightField_UserRightType_set
    __swig_getmethods__["UserRightType"] = _pyctp.CThostFtdcUserRightField_UserRightType_get
    if _newclass:
        UserRightType = _swig_property(_pyctp.CThostFtdcUserRightField_UserRightType_get, _pyctp.CThostFtdcUserRightField_UserRightType_set)
    __swig_setmethods__["IsForbidden"] = _pyctp.CThostFtdcUserRightField_IsForbidden_set
    __swig_getmethods__["IsForbidden"] = _pyctp.CThostFtdcUserRightField_IsForbidden_get
    if _newclass:
        IsForbidden = _swig_property(_pyctp.CThostFtdcUserRightField_IsForbidden_get, _pyctp.CThostFtdcUserRightField_IsForbidden_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcUserRightField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcUserRightField
    __del__ = lambda self: None
CThostFtdcUserRightField_swigregister = _pyctp.CThostFtdcUserRightField_swigregister
CThostFtdcUserRightField_swigregister(CThostFtdcUserRightField)

class CThostFtdcQrySettlementInfoConfirmField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQrySettlementInfoConfirmField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQrySettlementInfoConfirmField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQrySettlementInfoConfirmField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQrySettlementInfoConfirmField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQrySettlementInfoConfirmField_BrokerID_get, _pyctp.CThostFtdcQrySettlementInfoConfirmField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQrySettlementInfoConfirmField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQrySettlementInfoConfirmField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQrySettlementInfoConfirmField_InvestorID_get, _pyctp.CThostFtdcQrySettlementInfoConfirmField_InvestorID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQrySettlementInfoConfirmField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQrySettlementInfoConfirmField
    __del__ = lambda self: None
CThostFtdcQrySettlementInfoConfirmField_swigregister = _pyctp.CThostFtdcQrySettlementInfoConfirmField_swigregister
CThostFtdcQrySettlementInfoConfirmField_swigregister(CThostFtdcQrySettlementInfoConfirmField)

class CThostFtdcLoadSettlementInfoField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcLoadSettlementInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcLoadSettlementInfoField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcLoadSettlementInfoField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcLoadSettlementInfoField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcLoadSettlementInfoField_BrokerID_get, _pyctp.CThostFtdcLoadSettlementInfoField_BrokerID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcLoadSettlementInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcLoadSettlementInfoField
    __del__ = lambda self: None
CThostFtdcLoadSettlementInfoField_swigregister = _pyctp.CThostFtdcLoadSettlementInfoField_swigregister
CThostFtdcLoadSettlementInfoField_swigregister(CThostFtdcLoadSettlementInfoField)

class CThostFtdcBrokerWithdrawAlgorithmField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcBrokerWithdrawAlgorithmField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcBrokerWithdrawAlgorithmField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcBrokerWithdrawAlgorithmField_BrokerID_get, _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_BrokerID_set)
    __swig_setmethods__["WithdrawAlgorithm"] = _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_WithdrawAlgorithm_set
    __swig_getmethods__["WithdrawAlgorithm"] = _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_WithdrawAlgorithm_get
    if _newclass:
        WithdrawAlgorithm = _swig_property(_pyctp.CThostFtdcBrokerWithdrawAlgorithmField_WithdrawAlgorithm_get, _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_WithdrawAlgorithm_set)
    __swig_setmethods__["UsingRatio"] = _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_UsingRatio_set
    __swig_getmethods__["UsingRatio"] = _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_UsingRatio_get
    if _newclass:
        UsingRatio = _swig_property(_pyctp.CThostFtdcBrokerWithdrawAlgorithmField_UsingRatio_get, _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_UsingRatio_set)
    __swig_setmethods__["IncludeCloseProfit"] = _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_IncludeCloseProfit_set
    __swig_getmethods__["IncludeCloseProfit"] = _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_IncludeCloseProfit_get
    if _newclass:
        IncludeCloseProfit = _swig_property(_pyctp.CThostFtdcBrokerWithdrawAlgorithmField_IncludeCloseProfit_get, _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_IncludeCloseProfit_set)
    __swig_setmethods__["AllWithoutTrade"] = _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_AllWithoutTrade_set
    __swig_getmethods__["AllWithoutTrade"] = _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_AllWithoutTrade_get
    if _newclass:
        AllWithoutTrade = _swig_property(_pyctp.CThostFtdcBrokerWithdrawAlgorithmField_AllWithoutTrade_get, _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_AllWithoutTrade_set)
    __swig_setmethods__["AvailIncludeCloseProfit"] = _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_AvailIncludeCloseProfit_set
    __swig_getmethods__["AvailIncludeCloseProfit"] = _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_AvailIncludeCloseProfit_get
    if _newclass:
        AvailIncludeCloseProfit = _swig_property(_pyctp.CThostFtdcBrokerWithdrawAlgorithmField_AvailIncludeCloseProfit_get, _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_AvailIncludeCloseProfit_set)
    __swig_setmethods__["IsBrokerUserEvent"] = _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_IsBrokerUserEvent_set
    __swig_getmethods__["IsBrokerUserEvent"] = _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_IsBrokerUserEvent_get
    if _newclass:
        IsBrokerUserEvent = _swig_property(_pyctp.CThostFtdcBrokerWithdrawAlgorithmField_IsBrokerUserEvent_get, _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_IsBrokerUserEvent_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcBrokerWithdrawAlgorithmField_CurrencyID_get, _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_CurrencyID_set)
    __swig_setmethods__["FundMortgageRatio"] = _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_FundMortgageRatio_set
    __swig_getmethods__["FundMortgageRatio"] = _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_FundMortgageRatio_get
    if _newclass:
        FundMortgageRatio = _swig_property(_pyctp.CThostFtdcBrokerWithdrawAlgorithmField_FundMortgageRatio_get, _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_FundMortgageRatio_set)
    __swig_setmethods__["BalanceAlgorithm"] = _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_BalanceAlgorithm_set
    __swig_getmethods__["BalanceAlgorithm"] = _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_BalanceAlgorithm_get
    if _newclass:
        BalanceAlgorithm = _swig_property(_pyctp.CThostFtdcBrokerWithdrawAlgorithmField_BalanceAlgorithm_get, _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_BalanceAlgorithm_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcBrokerWithdrawAlgorithmField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcBrokerWithdrawAlgorithmField
    __del__ = lambda self: None
CThostFtdcBrokerWithdrawAlgorithmField_swigregister = _pyctp.CThostFtdcBrokerWithdrawAlgorithmField_swigregister
CThostFtdcBrokerWithdrawAlgorithmField_swigregister(CThostFtdcBrokerWithdrawAlgorithmField)

class CThostFtdcTradingAccountPasswordUpdateV1Field(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcTradingAccountPasswordUpdateV1Field, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcTradingAccountPasswordUpdateV1Field, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcTradingAccountPasswordUpdateV1Field_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcTradingAccountPasswordUpdateV1Field_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcTradingAccountPasswordUpdateV1Field_BrokerID_get, _pyctp.CThostFtdcTradingAccountPasswordUpdateV1Field_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcTradingAccountPasswordUpdateV1Field_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcTradingAccountPasswordUpdateV1Field_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcTradingAccountPasswordUpdateV1Field_InvestorID_get, _pyctp.CThostFtdcTradingAccountPasswordUpdateV1Field_InvestorID_set)
    __swig_setmethods__["OldPassword"] = _pyctp.CThostFtdcTradingAccountPasswordUpdateV1Field_OldPassword_set
    __swig_getmethods__["OldPassword"] = _pyctp.CThostFtdcTradingAccountPasswordUpdateV1Field_OldPassword_get
    if _newclass:
        OldPassword = _swig_property(_pyctp.CThostFtdcTradingAccountPasswordUpdateV1Field_OldPassword_get, _pyctp.CThostFtdcTradingAccountPasswordUpdateV1Field_OldPassword_set)
    __swig_setmethods__["NewPassword"] = _pyctp.CThostFtdcTradingAccountPasswordUpdateV1Field_NewPassword_set
    __swig_getmethods__["NewPassword"] = _pyctp.CThostFtdcTradingAccountPasswordUpdateV1Field_NewPassword_get
    if _newclass:
        NewPassword = _swig_property(_pyctp.CThostFtdcTradingAccountPasswordUpdateV1Field_NewPassword_get, _pyctp.CThostFtdcTradingAccountPasswordUpdateV1Field_NewPassword_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcTradingAccountPasswordUpdateV1Field()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcTradingAccountPasswordUpdateV1Field
    __del__ = lambda self: None
CThostFtdcTradingAccountPasswordUpdateV1Field_swigregister = _pyctp.CThostFtdcTradingAccountPasswordUpdateV1Field_swigregister
CThostFtdcTradingAccountPasswordUpdateV1Field_swigregister(CThostFtdcTradingAccountPasswordUpdateV1Field)

class CThostFtdcTradingAccountPasswordUpdateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcTradingAccountPasswordUpdateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcTradingAccountPasswordUpdateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcTradingAccountPasswordUpdateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcTradingAccountPasswordUpdateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcTradingAccountPasswordUpdateField_BrokerID_get, _pyctp.CThostFtdcTradingAccountPasswordUpdateField_BrokerID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcTradingAccountPasswordUpdateField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcTradingAccountPasswordUpdateField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcTradingAccountPasswordUpdateField_AccountID_get, _pyctp.CThostFtdcTradingAccountPasswordUpdateField_AccountID_set)
    __swig_setmethods__["OldPassword"] = _pyctp.CThostFtdcTradingAccountPasswordUpdateField_OldPassword_set
    __swig_getmethods__["OldPassword"] = _pyctp.CThostFtdcTradingAccountPasswordUpdateField_OldPassword_get
    if _newclass:
        OldPassword = _swig_property(_pyctp.CThostFtdcTradingAccountPasswordUpdateField_OldPassword_get, _pyctp.CThostFtdcTradingAccountPasswordUpdateField_OldPassword_set)
    __swig_setmethods__["NewPassword"] = _pyctp.CThostFtdcTradingAccountPasswordUpdateField_NewPassword_set
    __swig_getmethods__["NewPassword"] = _pyctp.CThostFtdcTradingAccountPasswordUpdateField_NewPassword_get
    if _newclass:
        NewPassword = _swig_property(_pyctp.CThostFtdcTradingAccountPasswordUpdateField_NewPassword_get, _pyctp.CThostFtdcTradingAccountPasswordUpdateField_NewPassword_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcTradingAccountPasswordUpdateField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcTradingAccountPasswordUpdateField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcTradingAccountPasswordUpdateField_CurrencyID_get, _pyctp.CThostFtdcTradingAccountPasswordUpdateField_CurrencyID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcTradingAccountPasswordUpdateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcTradingAccountPasswordUpdateField
    __del__ = lambda self: None
CThostFtdcTradingAccountPasswordUpdateField_swigregister = _pyctp.CThostFtdcTradingAccountPasswordUpdateField_swigregister
CThostFtdcTradingAccountPasswordUpdateField_swigregister(CThostFtdcTradingAccountPasswordUpdateField)

class CThostFtdcQryCombinationLegField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryCombinationLegField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryCombinationLegField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["CombInstrumentID"] = _pyctp.CThostFtdcQryCombinationLegField_CombInstrumentID_set
    __swig_getmethods__["CombInstrumentID"] = _pyctp.CThostFtdcQryCombinationLegField_CombInstrumentID_get
    if _newclass:
        CombInstrumentID = _swig_property(_pyctp.CThostFtdcQryCombinationLegField_CombInstrumentID_get, _pyctp.CThostFtdcQryCombinationLegField_CombInstrumentID_set)
    __swig_setmethods__["LegID"] = _pyctp.CThostFtdcQryCombinationLegField_LegID_set
    __swig_getmethods__["LegID"] = _pyctp.CThostFtdcQryCombinationLegField_LegID_get
    if _newclass:
        LegID = _swig_property(_pyctp.CThostFtdcQryCombinationLegField_LegID_get, _pyctp.CThostFtdcQryCombinationLegField_LegID_set)
    __swig_setmethods__["LegInstrumentID"] = _pyctp.CThostFtdcQryCombinationLegField_LegInstrumentID_set
    __swig_getmethods__["LegInstrumentID"] = _pyctp.CThostFtdcQryCombinationLegField_LegInstrumentID_get
    if _newclass:
        LegInstrumentID = _swig_property(_pyctp.CThostFtdcQryCombinationLegField_LegInstrumentID_get, _pyctp.CThostFtdcQryCombinationLegField_LegInstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryCombinationLegField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryCombinationLegField
    __del__ = lambda self: None
CThostFtdcQryCombinationLegField_swigregister = _pyctp.CThostFtdcQryCombinationLegField_swigregister
CThostFtdcQryCombinationLegField_swigregister(CThostFtdcQryCombinationLegField)

class CThostFtdcQrySyncStatusField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQrySyncStatusField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQrySyncStatusField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcQrySyncStatusField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcQrySyncStatusField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcQrySyncStatusField_TradingDay_get, _pyctp.CThostFtdcQrySyncStatusField_TradingDay_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQrySyncStatusField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQrySyncStatusField
    __del__ = lambda self: None
CThostFtdcQrySyncStatusField_swigregister = _pyctp.CThostFtdcQrySyncStatusField_swigregister
CThostFtdcQrySyncStatusField_swigregister(CThostFtdcQrySyncStatusField)

class CThostFtdcCombinationLegField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcCombinationLegField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcCombinationLegField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["CombInstrumentID"] = _pyctp.CThostFtdcCombinationLegField_CombInstrumentID_set
    __swig_getmethods__["CombInstrumentID"] = _pyctp.CThostFtdcCombinationLegField_CombInstrumentID_get
    if _newclass:
        CombInstrumentID = _swig_property(_pyctp.CThostFtdcCombinationLegField_CombInstrumentID_get, _pyctp.CThostFtdcCombinationLegField_CombInstrumentID_set)
    __swig_setmethods__["LegID"] = _pyctp.CThostFtdcCombinationLegField_LegID_set
    __swig_getmethods__["LegID"] = _pyctp.CThostFtdcCombinationLegField_LegID_get
    if _newclass:
        LegID = _swig_property(_pyctp.CThostFtdcCombinationLegField_LegID_get, _pyctp.CThostFtdcCombinationLegField_LegID_set)
    __swig_setmethods__["LegInstrumentID"] = _pyctp.CThostFtdcCombinationLegField_LegInstrumentID_set
    __swig_getmethods__["LegInstrumentID"] = _pyctp.CThostFtdcCombinationLegField_LegInstrumentID_get
    if _newclass:
        LegInstrumentID = _swig_property(_pyctp.CThostFtdcCombinationLegField_LegInstrumentID_get, _pyctp.CThostFtdcCombinationLegField_LegInstrumentID_set)
    __swig_setmethods__["Direction"] = _pyctp.CThostFtdcCombinationLegField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CThostFtdcCombinationLegField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CThostFtdcCombinationLegField_Direction_get, _pyctp.CThostFtdcCombinationLegField_Direction_set)
    __swig_setmethods__["LegMultiple"] = _pyctp.CThostFtdcCombinationLegField_LegMultiple_set
    __swig_getmethods__["LegMultiple"] = _pyctp.CThostFtdcCombinationLegField_LegMultiple_get
    if _newclass:
        LegMultiple = _swig_property(_pyctp.CThostFtdcCombinationLegField_LegMultiple_get, _pyctp.CThostFtdcCombinationLegField_LegMultiple_set)
    __swig_setmethods__["ImplyLevel"] = _pyctp.CThostFtdcCombinationLegField_ImplyLevel_set
    __swig_getmethods__["ImplyLevel"] = _pyctp.CThostFtdcCombinationLegField_ImplyLevel_get
    if _newclass:
        ImplyLevel = _swig_property(_pyctp.CThostFtdcCombinationLegField_ImplyLevel_get, _pyctp.CThostFtdcCombinationLegField_ImplyLevel_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcCombinationLegField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcCombinationLegField
    __del__ = lambda self: None
CThostFtdcCombinationLegField_swigregister = _pyctp.CThostFtdcCombinationLegField_swigregister
CThostFtdcCombinationLegField_swigregister(CThostFtdcCombinationLegField)

class CThostFtdcSyncStatusField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcSyncStatusField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcSyncStatusField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcSyncStatusField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcSyncStatusField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcSyncStatusField_TradingDay_get, _pyctp.CThostFtdcSyncStatusField_TradingDay_set)
    __swig_setmethods__["DataSyncStatus"] = _pyctp.CThostFtdcSyncStatusField_DataSyncStatus_set
    __swig_getmethods__["DataSyncStatus"] = _pyctp.CThostFtdcSyncStatusField_DataSyncStatus_get
    if _newclass:
        DataSyncStatus = _swig_property(_pyctp.CThostFtdcSyncStatusField_DataSyncStatus_get, _pyctp.CThostFtdcSyncStatusField_DataSyncStatus_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcSyncStatusField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcSyncStatusField
    __del__ = lambda self: None
CThostFtdcSyncStatusField_swigregister = _pyctp.CThostFtdcSyncStatusField_swigregister
CThostFtdcSyncStatusField_swigregister(CThostFtdcSyncStatusField)

class CThostFtdcQryLinkManField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryLinkManField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryLinkManField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryLinkManField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryLinkManField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryLinkManField_BrokerID_get, _pyctp.CThostFtdcQryLinkManField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryLinkManField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryLinkManField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryLinkManField_InvestorID_get, _pyctp.CThostFtdcQryLinkManField_InvestorID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryLinkManField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryLinkManField
    __del__ = lambda self: None
CThostFtdcQryLinkManField_swigregister = _pyctp.CThostFtdcQryLinkManField_swigregister
CThostFtdcQryLinkManField_swigregister(CThostFtdcQryLinkManField)

class CThostFtdcLinkManField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcLinkManField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcLinkManField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcLinkManField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcLinkManField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcLinkManField_BrokerID_get, _pyctp.CThostFtdcLinkManField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcLinkManField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcLinkManField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcLinkManField_InvestorID_get, _pyctp.CThostFtdcLinkManField_InvestorID_set)
    __swig_setmethods__["PersonType"] = _pyctp.CThostFtdcLinkManField_PersonType_set
    __swig_getmethods__["PersonType"] = _pyctp.CThostFtdcLinkManField_PersonType_get
    if _newclass:
        PersonType = _swig_property(_pyctp.CThostFtdcLinkManField_PersonType_get, _pyctp.CThostFtdcLinkManField_PersonType_set)
    __swig_setmethods__["IdentifiedCardType"] = _pyctp.CThostFtdcLinkManField_IdentifiedCardType_set
    __swig_getmethods__["IdentifiedCardType"] = _pyctp.CThostFtdcLinkManField_IdentifiedCardType_get
    if _newclass:
        IdentifiedCardType = _swig_property(_pyctp.CThostFtdcLinkManField_IdentifiedCardType_get, _pyctp.CThostFtdcLinkManField_IdentifiedCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcLinkManField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcLinkManField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CThostFtdcLinkManField_IdentifiedCardNo_get, _pyctp.CThostFtdcLinkManField_IdentifiedCardNo_set)
    __swig_setmethods__["PersonName"] = _pyctp.CThostFtdcLinkManField_PersonName_set
    __swig_getmethods__["PersonName"] = _pyctp.CThostFtdcLinkManField_PersonName_get
    if _newclass:
        PersonName = _swig_property(_pyctp.CThostFtdcLinkManField_PersonName_get, _pyctp.CThostFtdcLinkManField_PersonName_set)
    __swig_setmethods__["Telephone"] = _pyctp.CThostFtdcLinkManField_Telephone_set
    __swig_getmethods__["Telephone"] = _pyctp.CThostFtdcLinkManField_Telephone_get
    if _newclass:
        Telephone = _swig_property(_pyctp.CThostFtdcLinkManField_Telephone_get, _pyctp.CThostFtdcLinkManField_Telephone_set)
    __swig_setmethods__["Address"] = _pyctp.CThostFtdcLinkManField_Address_set
    __swig_getmethods__["Address"] = _pyctp.CThostFtdcLinkManField_Address_get
    if _newclass:
        Address = _swig_property(_pyctp.CThostFtdcLinkManField_Address_get, _pyctp.CThostFtdcLinkManField_Address_set)
    __swig_setmethods__["ZipCode"] = _pyctp.CThostFtdcLinkManField_ZipCode_set
    __swig_getmethods__["ZipCode"] = _pyctp.CThostFtdcLinkManField_ZipCode_get
    if _newclass:
        ZipCode = _swig_property(_pyctp.CThostFtdcLinkManField_ZipCode_get, _pyctp.CThostFtdcLinkManField_ZipCode_set)
    __swig_setmethods__["Priority"] = _pyctp.CThostFtdcLinkManField_Priority_set
    __swig_getmethods__["Priority"] = _pyctp.CThostFtdcLinkManField_Priority_get
    if _newclass:
        Priority = _swig_property(_pyctp.CThostFtdcLinkManField_Priority_get, _pyctp.CThostFtdcLinkManField_Priority_set)
    __swig_setmethods__["UOAZipCode"] = _pyctp.CThostFtdcLinkManField_UOAZipCode_set
    __swig_getmethods__["UOAZipCode"] = _pyctp.CThostFtdcLinkManField_UOAZipCode_get
    if _newclass:
        UOAZipCode = _swig_property(_pyctp.CThostFtdcLinkManField_UOAZipCode_get, _pyctp.CThostFtdcLinkManField_UOAZipCode_set)
    __swig_setmethods__["PersonFullName"] = _pyctp.CThostFtdcLinkManField_PersonFullName_set
    __swig_getmethods__["PersonFullName"] = _pyctp.CThostFtdcLinkManField_PersonFullName_get
    if _newclass:
        PersonFullName = _swig_property(_pyctp.CThostFtdcLinkManField_PersonFullName_get, _pyctp.CThostFtdcLinkManField_PersonFullName_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcLinkManField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcLinkManField
    __del__ = lambda self: None
CThostFtdcLinkManField_swigregister = _pyctp.CThostFtdcLinkManField_swigregister
CThostFtdcLinkManField_swigregister(CThostFtdcLinkManField)

class CThostFtdcQryBrokerUserEventField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryBrokerUserEventField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryBrokerUserEventField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryBrokerUserEventField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryBrokerUserEventField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryBrokerUserEventField_BrokerID_get, _pyctp.CThostFtdcQryBrokerUserEventField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcQryBrokerUserEventField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcQryBrokerUserEventField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcQryBrokerUserEventField_UserID_get, _pyctp.CThostFtdcQryBrokerUserEventField_UserID_set)
    __swig_setmethods__["UserEventType"] = _pyctp.CThostFtdcQryBrokerUserEventField_UserEventType_set
    __swig_getmethods__["UserEventType"] = _pyctp.CThostFtdcQryBrokerUserEventField_UserEventType_get
    if _newclass:
        UserEventType = _swig_property(_pyctp.CThostFtdcQryBrokerUserEventField_UserEventType_get, _pyctp.CThostFtdcQryBrokerUserEventField_UserEventType_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryBrokerUserEventField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryBrokerUserEventField
    __del__ = lambda self: None
CThostFtdcQryBrokerUserEventField_swigregister = _pyctp.CThostFtdcQryBrokerUserEventField_swigregister
CThostFtdcQryBrokerUserEventField_swigregister(CThostFtdcQryBrokerUserEventField)

class CThostFtdcBrokerUserEventField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcBrokerUserEventField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcBrokerUserEventField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcBrokerUserEventField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcBrokerUserEventField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcBrokerUserEventField_BrokerID_get, _pyctp.CThostFtdcBrokerUserEventField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcBrokerUserEventField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcBrokerUserEventField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcBrokerUserEventField_UserID_get, _pyctp.CThostFtdcBrokerUserEventField_UserID_set)
    __swig_setmethods__["UserEventType"] = _pyctp.CThostFtdcBrokerUserEventField_UserEventType_set
    __swig_getmethods__["UserEventType"] = _pyctp.CThostFtdcBrokerUserEventField_UserEventType_get
    if _newclass:
        UserEventType = _swig_property(_pyctp.CThostFtdcBrokerUserEventField_UserEventType_get, _pyctp.CThostFtdcBrokerUserEventField_UserEventType_set)
    __swig_setmethods__["EventSequenceNo"] = _pyctp.CThostFtdcBrokerUserEventField_EventSequenceNo_set
    __swig_getmethods__["EventSequenceNo"] = _pyctp.CThostFtdcBrokerUserEventField_EventSequenceNo_get
    if _newclass:
        EventSequenceNo = _swig_property(_pyctp.CThostFtdcBrokerUserEventField_EventSequenceNo_get, _pyctp.CThostFtdcBrokerUserEventField_EventSequenceNo_set)
    __swig_setmethods__["EventDate"] = _pyctp.CThostFtdcBrokerUserEventField_EventDate_set
    __swig_getmethods__["EventDate"] = _pyctp.CThostFtdcBrokerUserEventField_EventDate_get
    if _newclass:
        EventDate = _swig_property(_pyctp.CThostFtdcBrokerUserEventField_EventDate_get, _pyctp.CThostFtdcBrokerUserEventField_EventDate_set)
    __swig_setmethods__["EventTime"] = _pyctp.CThostFtdcBrokerUserEventField_EventTime_set
    __swig_getmethods__["EventTime"] = _pyctp.CThostFtdcBrokerUserEventField_EventTime_get
    if _newclass:
        EventTime = _swig_property(_pyctp.CThostFtdcBrokerUserEventField_EventTime_get, _pyctp.CThostFtdcBrokerUserEventField_EventTime_set)
    __swig_setmethods__["UserEventInfo"] = _pyctp.CThostFtdcBrokerUserEventField_UserEventInfo_set
    __swig_getmethods__["UserEventInfo"] = _pyctp.CThostFtdcBrokerUserEventField_UserEventInfo_get
    if _newclass:
        UserEventInfo = _swig_property(_pyctp.CThostFtdcBrokerUserEventField_UserEventInfo_get, _pyctp.CThostFtdcBrokerUserEventField_UserEventInfo_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcBrokerUserEventField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcBrokerUserEventField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcBrokerUserEventField_InvestorID_get, _pyctp.CThostFtdcBrokerUserEventField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcBrokerUserEventField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcBrokerUserEventField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcBrokerUserEventField_InstrumentID_get, _pyctp.CThostFtdcBrokerUserEventField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcBrokerUserEventField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcBrokerUserEventField
    __del__ = lambda self: None
CThostFtdcBrokerUserEventField_swigregister = _pyctp.CThostFtdcBrokerUserEventField_swigregister
CThostFtdcBrokerUserEventField_swigregister(CThostFtdcBrokerUserEventField)

class CThostFtdcQryContractBankField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryContractBankField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryContractBankField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryContractBankField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryContractBankField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryContractBankField_BrokerID_get, _pyctp.CThostFtdcQryContractBankField_BrokerID_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcQryContractBankField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcQryContractBankField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcQryContractBankField_BankID_get, _pyctp.CThostFtdcQryContractBankField_BankID_set)
    __swig_setmethods__["BankBrchID"] = _pyctp.CThostFtdcQryContractBankField_BankBrchID_set
    __swig_getmethods__["BankBrchID"] = _pyctp.CThostFtdcQryContractBankField_BankBrchID_get
    if _newclass:
        BankBrchID = _swig_property(_pyctp.CThostFtdcQryContractBankField_BankBrchID_get, _pyctp.CThostFtdcQryContractBankField_BankBrchID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryContractBankField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryContractBankField
    __del__ = lambda self: None
CThostFtdcQryContractBankField_swigregister = _pyctp.CThostFtdcQryContractBankField_swigregister
CThostFtdcQryContractBankField_swigregister(CThostFtdcQryContractBankField)

class CThostFtdcContractBankField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcContractBankField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcContractBankField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcContractBankField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcContractBankField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcContractBankField_BrokerID_get, _pyctp.CThostFtdcContractBankField_BrokerID_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcContractBankField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcContractBankField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcContractBankField_BankID_get, _pyctp.CThostFtdcContractBankField_BankID_set)
    __swig_setmethods__["BankBrchID"] = _pyctp.CThostFtdcContractBankField_BankBrchID_set
    __swig_getmethods__["BankBrchID"] = _pyctp.CThostFtdcContractBankField_BankBrchID_get
    if _newclass:
        BankBrchID = _swig_property(_pyctp.CThostFtdcContractBankField_BankBrchID_get, _pyctp.CThostFtdcContractBankField_BankBrchID_set)
    __swig_setmethods__["BankName"] = _pyctp.CThostFtdcContractBankField_BankName_set
    __swig_getmethods__["BankName"] = _pyctp.CThostFtdcContractBankField_BankName_get
    if _newclass:
        BankName = _swig_property(_pyctp.CThostFtdcContractBankField_BankName_get, _pyctp.CThostFtdcContractBankField_BankName_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcContractBankField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcContractBankField
    __del__ = lambda self: None
CThostFtdcContractBankField_swigregister = _pyctp.CThostFtdcContractBankField_swigregister
CThostFtdcContractBankField_swigregister(CThostFtdcContractBankField)

class CThostFtdcInvestorPositionCombineDetailField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcInvestorPositionCombineDetailField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcInvestorPositionCombineDetailField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcInvestorPositionCombineDetailField_TradingDay_get, _pyctp.CThostFtdcInvestorPositionCombineDetailField_TradingDay_set)
    __swig_setmethods__["OpenDate"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_OpenDate_set
    __swig_getmethods__["OpenDate"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_OpenDate_get
    if _newclass:
        OpenDate = _swig_property(_pyctp.CThostFtdcInvestorPositionCombineDetailField_OpenDate_get, _pyctp.CThostFtdcInvestorPositionCombineDetailField_OpenDate_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcInvestorPositionCombineDetailField_ExchangeID_get, _pyctp.CThostFtdcInvestorPositionCombineDetailField_ExchangeID_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CThostFtdcInvestorPositionCombineDetailField_SettlementID_get, _pyctp.CThostFtdcInvestorPositionCombineDetailField_SettlementID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcInvestorPositionCombineDetailField_BrokerID_get, _pyctp.CThostFtdcInvestorPositionCombineDetailField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcInvestorPositionCombineDetailField_InvestorID_get, _pyctp.CThostFtdcInvestorPositionCombineDetailField_InvestorID_set)
    __swig_setmethods__["ComTradeID"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_ComTradeID_set
    __swig_getmethods__["ComTradeID"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_ComTradeID_get
    if _newclass:
        ComTradeID = _swig_property(_pyctp.CThostFtdcInvestorPositionCombineDetailField_ComTradeID_get, _pyctp.CThostFtdcInvestorPositionCombineDetailField_ComTradeID_set)
    __swig_setmethods__["TradeID"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_TradeID_set
    __swig_getmethods__["TradeID"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_TradeID_get
    if _newclass:
        TradeID = _swig_property(_pyctp.CThostFtdcInvestorPositionCombineDetailField_TradeID_get, _pyctp.CThostFtdcInvestorPositionCombineDetailField_TradeID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcInvestorPositionCombineDetailField_InstrumentID_get, _pyctp.CThostFtdcInvestorPositionCombineDetailField_InstrumentID_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcInvestorPositionCombineDetailField_HedgeFlag_get, _pyctp.CThostFtdcInvestorPositionCombineDetailField_HedgeFlag_set)
    __swig_setmethods__["Direction"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CThostFtdcInvestorPositionCombineDetailField_Direction_get, _pyctp.CThostFtdcInvestorPositionCombineDetailField_Direction_set)
    __swig_setmethods__["TotalAmt"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_TotalAmt_set
    __swig_getmethods__["TotalAmt"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_TotalAmt_get
    if _newclass:
        TotalAmt = _swig_property(_pyctp.CThostFtdcInvestorPositionCombineDetailField_TotalAmt_get, _pyctp.CThostFtdcInvestorPositionCombineDetailField_TotalAmt_set)
    __swig_setmethods__["Margin"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_Margin_set
    __swig_getmethods__["Margin"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_Margin_get
    if _newclass:
        Margin = _swig_property(_pyctp.CThostFtdcInvestorPositionCombineDetailField_Margin_get, _pyctp.CThostFtdcInvestorPositionCombineDetailField_Margin_set)
    __swig_setmethods__["ExchMargin"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_ExchMargin_set
    __swig_getmethods__["ExchMargin"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_ExchMargin_get
    if _newclass:
        ExchMargin = _swig_property(_pyctp.CThostFtdcInvestorPositionCombineDetailField_ExchMargin_get, _pyctp.CThostFtdcInvestorPositionCombineDetailField_ExchMargin_set)
    __swig_setmethods__["MarginRateByMoney"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_MarginRateByMoney_set
    __swig_getmethods__["MarginRateByMoney"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_MarginRateByMoney_get
    if _newclass:
        MarginRateByMoney = _swig_property(_pyctp.CThostFtdcInvestorPositionCombineDetailField_MarginRateByMoney_get, _pyctp.CThostFtdcInvestorPositionCombineDetailField_MarginRateByMoney_set)
    __swig_setmethods__["MarginRateByVolume"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_MarginRateByVolume_set
    __swig_getmethods__["MarginRateByVolume"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_MarginRateByVolume_get
    if _newclass:
        MarginRateByVolume = _swig_property(_pyctp.CThostFtdcInvestorPositionCombineDetailField_MarginRateByVolume_get, _pyctp.CThostFtdcInvestorPositionCombineDetailField_MarginRateByVolume_set)
    __swig_setmethods__["LegID"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_LegID_set
    __swig_getmethods__["LegID"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_LegID_get
    if _newclass:
        LegID = _swig_property(_pyctp.CThostFtdcInvestorPositionCombineDetailField_LegID_get, _pyctp.CThostFtdcInvestorPositionCombineDetailField_LegID_set)
    __swig_setmethods__["LegMultiple"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_LegMultiple_set
    __swig_getmethods__["LegMultiple"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_LegMultiple_get
    if _newclass:
        LegMultiple = _swig_property(_pyctp.CThostFtdcInvestorPositionCombineDetailField_LegMultiple_get, _pyctp.CThostFtdcInvestorPositionCombineDetailField_LegMultiple_set)
    __swig_setmethods__["CombInstrumentID"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_CombInstrumentID_set
    __swig_getmethods__["CombInstrumentID"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_CombInstrumentID_get
    if _newclass:
        CombInstrumentID = _swig_property(_pyctp.CThostFtdcInvestorPositionCombineDetailField_CombInstrumentID_get, _pyctp.CThostFtdcInvestorPositionCombineDetailField_CombInstrumentID_set)
    __swig_setmethods__["TradeGroupID"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_TradeGroupID_set
    __swig_getmethods__["TradeGroupID"] = _pyctp.CThostFtdcInvestorPositionCombineDetailField_TradeGroupID_get
    if _newclass:
        TradeGroupID = _swig_property(_pyctp.CThostFtdcInvestorPositionCombineDetailField_TradeGroupID_get, _pyctp.CThostFtdcInvestorPositionCombineDetailField_TradeGroupID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcInvestorPositionCombineDetailField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcInvestorPositionCombineDetailField
    __del__ = lambda self: None
CThostFtdcInvestorPositionCombineDetailField_swigregister = _pyctp.CThostFtdcInvestorPositionCombineDetailField_swigregister
CThostFtdcInvestorPositionCombineDetailField_swigregister(CThostFtdcInvestorPositionCombineDetailField)

class CThostFtdcParkedOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcParkedOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcParkedOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcParkedOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcParkedOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcParkedOrderField_BrokerID_get, _pyctp.CThostFtdcParkedOrderField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcParkedOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcParkedOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcParkedOrderField_InvestorID_get, _pyctp.CThostFtdcParkedOrderField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcParkedOrderField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcParkedOrderField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcParkedOrderField_InstrumentID_get, _pyctp.CThostFtdcParkedOrderField_InstrumentID_set)
    __swig_setmethods__["OrderRef"] = _pyctp.CThostFtdcParkedOrderField_OrderRef_set
    __swig_getmethods__["OrderRef"] = _pyctp.CThostFtdcParkedOrderField_OrderRef_get
    if _newclass:
        OrderRef = _swig_property(_pyctp.CThostFtdcParkedOrderField_OrderRef_get, _pyctp.CThostFtdcParkedOrderField_OrderRef_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcParkedOrderField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcParkedOrderField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcParkedOrderField_UserID_get, _pyctp.CThostFtdcParkedOrderField_UserID_set)
    __swig_setmethods__["OrderPriceType"] = _pyctp.CThostFtdcParkedOrderField_OrderPriceType_set
    __swig_getmethods__["OrderPriceType"] = _pyctp.CThostFtdcParkedOrderField_OrderPriceType_get
    if _newclass:
        OrderPriceType = _swig_property(_pyctp.CThostFtdcParkedOrderField_OrderPriceType_get, _pyctp.CThostFtdcParkedOrderField_OrderPriceType_set)
    __swig_setmethods__["Direction"] = _pyctp.CThostFtdcParkedOrderField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CThostFtdcParkedOrderField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CThostFtdcParkedOrderField_Direction_get, _pyctp.CThostFtdcParkedOrderField_Direction_set)
    __swig_setmethods__["CombOffsetFlag"] = _pyctp.CThostFtdcParkedOrderField_CombOffsetFlag_set
    __swig_getmethods__["CombOffsetFlag"] = _pyctp.CThostFtdcParkedOrderField_CombOffsetFlag_get
    if _newclass:
        CombOffsetFlag = _swig_property(_pyctp.CThostFtdcParkedOrderField_CombOffsetFlag_get, _pyctp.CThostFtdcParkedOrderField_CombOffsetFlag_set)
    __swig_setmethods__["CombHedgeFlag"] = _pyctp.CThostFtdcParkedOrderField_CombHedgeFlag_set
    __swig_getmethods__["CombHedgeFlag"] = _pyctp.CThostFtdcParkedOrderField_CombHedgeFlag_get
    if _newclass:
        CombHedgeFlag = _swig_property(_pyctp.CThostFtdcParkedOrderField_CombHedgeFlag_get, _pyctp.CThostFtdcParkedOrderField_CombHedgeFlag_set)
    __swig_setmethods__["LimitPrice"] = _pyctp.CThostFtdcParkedOrderField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _pyctp.CThostFtdcParkedOrderField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_pyctp.CThostFtdcParkedOrderField_LimitPrice_get, _pyctp.CThostFtdcParkedOrderField_LimitPrice_set)
    __swig_setmethods__["VolumeTotalOriginal"] = _pyctp.CThostFtdcParkedOrderField_VolumeTotalOriginal_set
    __swig_getmethods__["VolumeTotalOriginal"] = _pyctp.CThostFtdcParkedOrderField_VolumeTotalOriginal_get
    if _newclass:
        VolumeTotalOriginal = _swig_property(_pyctp.CThostFtdcParkedOrderField_VolumeTotalOriginal_get, _pyctp.CThostFtdcParkedOrderField_VolumeTotalOriginal_set)
    __swig_setmethods__["TimeCondition"] = _pyctp.CThostFtdcParkedOrderField_TimeCondition_set
    __swig_getmethods__["TimeCondition"] = _pyctp.CThostFtdcParkedOrderField_TimeCondition_get
    if _newclass:
        TimeCondition = _swig_property(_pyctp.CThostFtdcParkedOrderField_TimeCondition_get, _pyctp.CThostFtdcParkedOrderField_TimeCondition_set)
    __swig_setmethods__["GTDDate"] = _pyctp.CThostFtdcParkedOrderField_GTDDate_set
    __swig_getmethods__["GTDDate"] = _pyctp.CThostFtdcParkedOrderField_GTDDate_get
    if _newclass:
        GTDDate = _swig_property(_pyctp.CThostFtdcParkedOrderField_GTDDate_get, _pyctp.CThostFtdcParkedOrderField_GTDDate_set)
    __swig_setmethods__["VolumeCondition"] = _pyctp.CThostFtdcParkedOrderField_VolumeCondition_set
    __swig_getmethods__["VolumeCondition"] = _pyctp.CThostFtdcParkedOrderField_VolumeCondition_get
    if _newclass:
        VolumeCondition = _swig_property(_pyctp.CThostFtdcParkedOrderField_VolumeCondition_get, _pyctp.CThostFtdcParkedOrderField_VolumeCondition_set)
    __swig_setmethods__["MinVolume"] = _pyctp.CThostFtdcParkedOrderField_MinVolume_set
    __swig_getmethods__["MinVolume"] = _pyctp.CThostFtdcParkedOrderField_MinVolume_get
    if _newclass:
        MinVolume = _swig_property(_pyctp.CThostFtdcParkedOrderField_MinVolume_get, _pyctp.CThostFtdcParkedOrderField_MinVolume_set)
    __swig_setmethods__["ContingentCondition"] = _pyctp.CThostFtdcParkedOrderField_ContingentCondition_set
    __swig_getmethods__["ContingentCondition"] = _pyctp.CThostFtdcParkedOrderField_ContingentCondition_get
    if _newclass:
        ContingentCondition = _swig_property(_pyctp.CThostFtdcParkedOrderField_ContingentCondition_get, _pyctp.CThostFtdcParkedOrderField_ContingentCondition_set)
    __swig_setmethods__["StopPrice"] = _pyctp.CThostFtdcParkedOrderField_StopPrice_set
    __swig_getmethods__["StopPrice"] = _pyctp.CThostFtdcParkedOrderField_StopPrice_get
    if _newclass:
        StopPrice = _swig_property(_pyctp.CThostFtdcParkedOrderField_StopPrice_get, _pyctp.CThostFtdcParkedOrderField_StopPrice_set)
    __swig_setmethods__["ForceCloseReason"] = _pyctp.CThostFtdcParkedOrderField_ForceCloseReason_set
    __swig_getmethods__["ForceCloseReason"] = _pyctp.CThostFtdcParkedOrderField_ForceCloseReason_get
    if _newclass:
        ForceCloseReason = _swig_property(_pyctp.CThostFtdcParkedOrderField_ForceCloseReason_get, _pyctp.CThostFtdcParkedOrderField_ForceCloseReason_set)
    __swig_setmethods__["IsAutoSuspend"] = _pyctp.CThostFtdcParkedOrderField_IsAutoSuspend_set
    __swig_getmethods__["IsAutoSuspend"] = _pyctp.CThostFtdcParkedOrderField_IsAutoSuspend_get
    if _newclass:
        IsAutoSuspend = _swig_property(_pyctp.CThostFtdcParkedOrderField_IsAutoSuspend_get, _pyctp.CThostFtdcParkedOrderField_IsAutoSuspend_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CThostFtdcParkedOrderField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CThostFtdcParkedOrderField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CThostFtdcParkedOrderField_BusinessUnit_get, _pyctp.CThostFtdcParkedOrderField_BusinessUnit_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcParkedOrderField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcParkedOrderField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcParkedOrderField_RequestID_get, _pyctp.CThostFtdcParkedOrderField_RequestID_set)
    __swig_setmethods__["UserForceClose"] = _pyctp.CThostFtdcParkedOrderField_UserForceClose_set
    __swig_getmethods__["UserForceClose"] = _pyctp.CThostFtdcParkedOrderField_UserForceClose_get
    if _newclass:
        UserForceClose = _swig_property(_pyctp.CThostFtdcParkedOrderField_UserForceClose_get, _pyctp.CThostFtdcParkedOrderField_UserForceClose_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcParkedOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcParkedOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcParkedOrderField_ExchangeID_get, _pyctp.CThostFtdcParkedOrderField_ExchangeID_set)
    __swig_setmethods__["ParkedOrderID"] = _pyctp.CThostFtdcParkedOrderField_ParkedOrderID_set
    __swig_getmethods__["ParkedOrderID"] = _pyctp.CThostFtdcParkedOrderField_ParkedOrderID_get
    if _newclass:
        ParkedOrderID = _swig_property(_pyctp.CThostFtdcParkedOrderField_ParkedOrderID_get, _pyctp.CThostFtdcParkedOrderField_ParkedOrderID_set)
    __swig_setmethods__["UserType"] = _pyctp.CThostFtdcParkedOrderField_UserType_set
    __swig_getmethods__["UserType"] = _pyctp.CThostFtdcParkedOrderField_UserType_get
    if _newclass:
        UserType = _swig_property(_pyctp.CThostFtdcParkedOrderField_UserType_get, _pyctp.CThostFtdcParkedOrderField_UserType_set)
    __swig_setmethods__["Status"] = _pyctp.CThostFtdcParkedOrderField_Status_set
    __swig_getmethods__["Status"] = _pyctp.CThostFtdcParkedOrderField_Status_get
    if _newclass:
        Status = _swig_property(_pyctp.CThostFtdcParkedOrderField_Status_get, _pyctp.CThostFtdcParkedOrderField_Status_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CThostFtdcParkedOrderField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CThostFtdcParkedOrderField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CThostFtdcParkedOrderField_ErrorID_get, _pyctp.CThostFtdcParkedOrderField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CThostFtdcParkedOrderField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CThostFtdcParkedOrderField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CThostFtdcParkedOrderField_ErrorMsg_get, _pyctp.CThostFtdcParkedOrderField_ErrorMsg_set)
    __swig_setmethods__["IsSwapOrder"] = _pyctp.CThostFtdcParkedOrderField_IsSwapOrder_set
    __swig_getmethods__["IsSwapOrder"] = _pyctp.CThostFtdcParkedOrderField_IsSwapOrder_get
    if _newclass:
        IsSwapOrder = _swig_property(_pyctp.CThostFtdcParkedOrderField_IsSwapOrder_get, _pyctp.CThostFtdcParkedOrderField_IsSwapOrder_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcParkedOrderField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcParkedOrderField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcParkedOrderField_AccountID_get, _pyctp.CThostFtdcParkedOrderField_AccountID_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcParkedOrderField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcParkedOrderField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcParkedOrderField_CurrencyID_get, _pyctp.CThostFtdcParkedOrderField_CurrencyID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcParkedOrderField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcParkedOrderField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcParkedOrderField_ClientID_get, _pyctp.CThostFtdcParkedOrderField_ClientID_set)
    __swig_setmethods__["InvestUnitID"] = _pyctp.CThostFtdcParkedOrderField_InvestUnitID_set
    __swig_getmethods__["InvestUnitID"] = _pyctp.CThostFtdcParkedOrderField_InvestUnitID_get
    if _newclass:
        InvestUnitID = _swig_property(_pyctp.CThostFtdcParkedOrderField_InvestUnitID_get, _pyctp.CThostFtdcParkedOrderField_InvestUnitID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcParkedOrderField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcParkedOrderField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcParkedOrderField_IPAddress_get, _pyctp.CThostFtdcParkedOrderField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcParkedOrderField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcParkedOrderField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcParkedOrderField_MacAddress_get, _pyctp.CThostFtdcParkedOrderField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcParkedOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcParkedOrderField
    __del__ = lambda self: None
CThostFtdcParkedOrderField_swigregister = _pyctp.CThostFtdcParkedOrderField_swigregister
CThostFtdcParkedOrderField_swigregister(CThostFtdcParkedOrderField)

class CThostFtdcParkedOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcParkedOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcParkedOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcParkedOrderActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcParkedOrderActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcParkedOrderActionField_BrokerID_get, _pyctp.CThostFtdcParkedOrderActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcParkedOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcParkedOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcParkedOrderActionField_InvestorID_get, _pyctp.CThostFtdcParkedOrderActionField_InvestorID_set)
    __swig_setmethods__["OrderActionRef"] = _pyctp.CThostFtdcParkedOrderActionField_OrderActionRef_set
    __swig_getmethods__["OrderActionRef"] = _pyctp.CThostFtdcParkedOrderActionField_OrderActionRef_get
    if _newclass:
        OrderActionRef = _swig_property(_pyctp.CThostFtdcParkedOrderActionField_OrderActionRef_get, _pyctp.CThostFtdcParkedOrderActionField_OrderActionRef_set)
    __swig_setmethods__["OrderRef"] = _pyctp.CThostFtdcParkedOrderActionField_OrderRef_set
    __swig_getmethods__["OrderRef"] = _pyctp.CThostFtdcParkedOrderActionField_OrderRef_get
    if _newclass:
        OrderRef = _swig_property(_pyctp.CThostFtdcParkedOrderActionField_OrderRef_get, _pyctp.CThostFtdcParkedOrderActionField_OrderRef_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcParkedOrderActionField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcParkedOrderActionField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcParkedOrderActionField_RequestID_get, _pyctp.CThostFtdcParkedOrderActionField_RequestID_set)
    __swig_setmethods__["FrontID"] = _pyctp.CThostFtdcParkedOrderActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CThostFtdcParkedOrderActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CThostFtdcParkedOrderActionField_FrontID_get, _pyctp.CThostFtdcParkedOrderActionField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcParkedOrderActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcParkedOrderActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcParkedOrderActionField_SessionID_get, _pyctp.CThostFtdcParkedOrderActionField_SessionID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcParkedOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcParkedOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcParkedOrderActionField_ExchangeID_get, _pyctp.CThostFtdcParkedOrderActionField_ExchangeID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CThostFtdcParkedOrderActionField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CThostFtdcParkedOrderActionField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CThostFtdcParkedOrderActionField_OrderSysID_get, _pyctp.CThostFtdcParkedOrderActionField_OrderSysID_set)
    __swig_setmethods__["ActionFlag"] = _pyctp.CThostFtdcParkedOrderActionField_ActionFlag_set
    __swig_getmethods__["ActionFlag"] = _pyctp.CThostFtdcParkedOrderActionField_ActionFlag_get
    if _newclass:
        ActionFlag = _swig_property(_pyctp.CThostFtdcParkedOrderActionField_ActionFlag_get, _pyctp.CThostFtdcParkedOrderActionField_ActionFlag_set)
    __swig_setmethods__["LimitPrice"] = _pyctp.CThostFtdcParkedOrderActionField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _pyctp.CThostFtdcParkedOrderActionField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_pyctp.CThostFtdcParkedOrderActionField_LimitPrice_get, _pyctp.CThostFtdcParkedOrderActionField_LimitPrice_set)
    __swig_setmethods__["VolumeChange"] = _pyctp.CThostFtdcParkedOrderActionField_VolumeChange_set
    __swig_getmethods__["VolumeChange"] = _pyctp.CThostFtdcParkedOrderActionField_VolumeChange_get
    if _newclass:
        VolumeChange = _swig_property(_pyctp.CThostFtdcParkedOrderActionField_VolumeChange_get, _pyctp.CThostFtdcParkedOrderActionField_VolumeChange_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcParkedOrderActionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcParkedOrderActionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcParkedOrderActionField_UserID_get, _pyctp.CThostFtdcParkedOrderActionField_UserID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcParkedOrderActionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcParkedOrderActionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcParkedOrderActionField_InstrumentID_get, _pyctp.CThostFtdcParkedOrderActionField_InstrumentID_set)
    __swig_setmethods__["ParkedOrderActionID"] = _pyctp.CThostFtdcParkedOrderActionField_ParkedOrderActionID_set
    __swig_getmethods__["ParkedOrderActionID"] = _pyctp.CThostFtdcParkedOrderActionField_ParkedOrderActionID_get
    if _newclass:
        ParkedOrderActionID = _swig_property(_pyctp.CThostFtdcParkedOrderActionField_ParkedOrderActionID_get, _pyctp.CThostFtdcParkedOrderActionField_ParkedOrderActionID_set)
    __swig_setmethods__["UserType"] = _pyctp.CThostFtdcParkedOrderActionField_UserType_set
    __swig_getmethods__["UserType"] = _pyctp.CThostFtdcParkedOrderActionField_UserType_get
    if _newclass:
        UserType = _swig_property(_pyctp.CThostFtdcParkedOrderActionField_UserType_get, _pyctp.CThostFtdcParkedOrderActionField_UserType_set)
    __swig_setmethods__["Status"] = _pyctp.CThostFtdcParkedOrderActionField_Status_set
    __swig_getmethods__["Status"] = _pyctp.CThostFtdcParkedOrderActionField_Status_get
    if _newclass:
        Status = _swig_property(_pyctp.CThostFtdcParkedOrderActionField_Status_get, _pyctp.CThostFtdcParkedOrderActionField_Status_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CThostFtdcParkedOrderActionField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CThostFtdcParkedOrderActionField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CThostFtdcParkedOrderActionField_ErrorID_get, _pyctp.CThostFtdcParkedOrderActionField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CThostFtdcParkedOrderActionField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CThostFtdcParkedOrderActionField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CThostFtdcParkedOrderActionField_ErrorMsg_get, _pyctp.CThostFtdcParkedOrderActionField_ErrorMsg_set)
    __swig_setmethods__["InvestUnitID"] = _pyctp.CThostFtdcParkedOrderActionField_InvestUnitID_set
    __swig_getmethods__["InvestUnitID"] = _pyctp.CThostFtdcParkedOrderActionField_InvestUnitID_get
    if _newclass:
        InvestUnitID = _swig_property(_pyctp.CThostFtdcParkedOrderActionField_InvestUnitID_get, _pyctp.CThostFtdcParkedOrderActionField_InvestUnitID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcParkedOrderActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcParkedOrderActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcParkedOrderActionField_IPAddress_get, _pyctp.CThostFtdcParkedOrderActionField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcParkedOrderActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcParkedOrderActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcParkedOrderActionField_MacAddress_get, _pyctp.CThostFtdcParkedOrderActionField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcParkedOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcParkedOrderActionField
    __del__ = lambda self: None
CThostFtdcParkedOrderActionField_swigregister = _pyctp.CThostFtdcParkedOrderActionField_swigregister
CThostFtdcParkedOrderActionField_swigregister(CThostFtdcParkedOrderActionField)

class CThostFtdcQryParkedOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryParkedOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryParkedOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryParkedOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryParkedOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryParkedOrderField_BrokerID_get, _pyctp.CThostFtdcQryParkedOrderField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryParkedOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryParkedOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryParkedOrderField_InvestorID_get, _pyctp.CThostFtdcQryParkedOrderField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryParkedOrderField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryParkedOrderField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryParkedOrderField_InstrumentID_get, _pyctp.CThostFtdcQryParkedOrderField_InstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryParkedOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryParkedOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryParkedOrderField_ExchangeID_get, _pyctp.CThostFtdcQryParkedOrderField_ExchangeID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryParkedOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryParkedOrderField
    __del__ = lambda self: None
CThostFtdcQryParkedOrderField_swigregister = _pyctp.CThostFtdcQryParkedOrderField_swigregister
CThostFtdcQryParkedOrderField_swigregister(CThostFtdcQryParkedOrderField)

class CThostFtdcQryParkedOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryParkedOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryParkedOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryParkedOrderActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryParkedOrderActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryParkedOrderActionField_BrokerID_get, _pyctp.CThostFtdcQryParkedOrderActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryParkedOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryParkedOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryParkedOrderActionField_InvestorID_get, _pyctp.CThostFtdcQryParkedOrderActionField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryParkedOrderActionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryParkedOrderActionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryParkedOrderActionField_InstrumentID_get, _pyctp.CThostFtdcQryParkedOrderActionField_InstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryParkedOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryParkedOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryParkedOrderActionField_ExchangeID_get, _pyctp.CThostFtdcQryParkedOrderActionField_ExchangeID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryParkedOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryParkedOrderActionField
    __del__ = lambda self: None
CThostFtdcQryParkedOrderActionField_swigregister = _pyctp.CThostFtdcQryParkedOrderActionField_swigregister
CThostFtdcQryParkedOrderActionField_swigregister(CThostFtdcQryParkedOrderActionField)

class CThostFtdcRemoveParkedOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcRemoveParkedOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcRemoveParkedOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcRemoveParkedOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcRemoveParkedOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcRemoveParkedOrderField_BrokerID_get, _pyctp.CThostFtdcRemoveParkedOrderField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcRemoveParkedOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcRemoveParkedOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcRemoveParkedOrderField_InvestorID_get, _pyctp.CThostFtdcRemoveParkedOrderField_InvestorID_set)
    __swig_setmethods__["ParkedOrderID"] = _pyctp.CThostFtdcRemoveParkedOrderField_ParkedOrderID_set
    __swig_getmethods__["ParkedOrderID"] = _pyctp.CThostFtdcRemoveParkedOrderField_ParkedOrderID_get
    if _newclass:
        ParkedOrderID = _swig_property(_pyctp.CThostFtdcRemoveParkedOrderField_ParkedOrderID_get, _pyctp.CThostFtdcRemoveParkedOrderField_ParkedOrderID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcRemoveParkedOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcRemoveParkedOrderField
    __del__ = lambda self: None
CThostFtdcRemoveParkedOrderField_swigregister = _pyctp.CThostFtdcRemoveParkedOrderField_swigregister
CThostFtdcRemoveParkedOrderField_swigregister(CThostFtdcRemoveParkedOrderField)

class CThostFtdcRemoveParkedOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcRemoveParkedOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcRemoveParkedOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcRemoveParkedOrderActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcRemoveParkedOrderActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcRemoveParkedOrderActionField_BrokerID_get, _pyctp.CThostFtdcRemoveParkedOrderActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcRemoveParkedOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcRemoveParkedOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcRemoveParkedOrderActionField_InvestorID_get, _pyctp.CThostFtdcRemoveParkedOrderActionField_InvestorID_set)
    __swig_setmethods__["ParkedOrderActionID"] = _pyctp.CThostFtdcRemoveParkedOrderActionField_ParkedOrderActionID_set
    __swig_getmethods__["ParkedOrderActionID"] = _pyctp.CThostFtdcRemoveParkedOrderActionField_ParkedOrderActionID_get
    if _newclass:
        ParkedOrderActionID = _swig_property(_pyctp.CThostFtdcRemoveParkedOrderActionField_ParkedOrderActionID_get, _pyctp.CThostFtdcRemoveParkedOrderActionField_ParkedOrderActionID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcRemoveParkedOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcRemoveParkedOrderActionField
    __del__ = lambda self: None
CThostFtdcRemoveParkedOrderActionField_swigregister = _pyctp.CThostFtdcRemoveParkedOrderActionField_swigregister
CThostFtdcRemoveParkedOrderActionField_swigregister(CThostFtdcRemoveParkedOrderActionField)

class CThostFtdcInvestorWithdrawAlgorithmField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcInvestorWithdrawAlgorithmField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcInvestorWithdrawAlgorithmField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcInvestorWithdrawAlgorithmField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcInvestorWithdrawAlgorithmField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcInvestorWithdrawAlgorithmField_BrokerID_get, _pyctp.CThostFtdcInvestorWithdrawAlgorithmField_BrokerID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CThostFtdcInvestorWithdrawAlgorithmField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CThostFtdcInvestorWithdrawAlgorithmField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CThostFtdcInvestorWithdrawAlgorithmField_InvestorRange_get, _pyctp.CThostFtdcInvestorWithdrawAlgorithmField_InvestorRange_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcInvestorWithdrawAlgorithmField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcInvestorWithdrawAlgorithmField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcInvestorWithdrawAlgorithmField_InvestorID_get, _pyctp.CThostFtdcInvestorWithdrawAlgorithmField_InvestorID_set)
    __swig_setmethods__["UsingRatio"] = _pyctp.CThostFtdcInvestorWithdrawAlgorithmField_UsingRatio_set
    __swig_getmethods__["UsingRatio"] = _pyctp.CThostFtdcInvestorWithdrawAlgorithmField_UsingRatio_get
    if _newclass:
        UsingRatio = _swig_property(_pyctp.CThostFtdcInvestorWithdrawAlgorithmField_UsingRatio_get, _pyctp.CThostFtdcInvestorWithdrawAlgorithmField_UsingRatio_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcInvestorWithdrawAlgorithmField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcInvestorWithdrawAlgorithmField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcInvestorWithdrawAlgorithmField_CurrencyID_get, _pyctp.CThostFtdcInvestorWithdrawAlgorithmField_CurrencyID_set)
    __swig_setmethods__["FundMortgageRatio"] = _pyctp.CThostFtdcInvestorWithdrawAlgorithmField_FundMortgageRatio_set
    __swig_getmethods__["FundMortgageRatio"] = _pyctp.CThostFtdcInvestorWithdrawAlgorithmField_FundMortgageRatio_get
    if _newclass:
        FundMortgageRatio = _swig_property(_pyctp.CThostFtdcInvestorWithdrawAlgorithmField_FundMortgageRatio_get, _pyctp.CThostFtdcInvestorWithdrawAlgorithmField_FundMortgageRatio_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcInvestorWithdrawAlgorithmField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcInvestorWithdrawAlgorithmField
    __del__ = lambda self: None
CThostFtdcInvestorWithdrawAlgorithmField_swigregister = _pyctp.CThostFtdcInvestorWithdrawAlgorithmField_swigregister
CThostFtdcInvestorWithdrawAlgorithmField_swigregister(CThostFtdcInvestorWithdrawAlgorithmField)

class CThostFtdcQryInvestorPositionCombineDetailField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryInvestorPositionCombineDetailField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryInvestorPositionCombineDetailField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryInvestorPositionCombineDetailField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryInvestorPositionCombineDetailField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryInvestorPositionCombineDetailField_BrokerID_get, _pyctp.CThostFtdcQryInvestorPositionCombineDetailField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryInvestorPositionCombineDetailField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryInvestorPositionCombineDetailField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryInvestorPositionCombineDetailField_InvestorID_get, _pyctp.CThostFtdcQryInvestorPositionCombineDetailField_InvestorID_set)
    __swig_setmethods__["CombInstrumentID"] = _pyctp.CThostFtdcQryInvestorPositionCombineDetailField_CombInstrumentID_set
    __swig_getmethods__["CombInstrumentID"] = _pyctp.CThostFtdcQryInvestorPositionCombineDetailField_CombInstrumentID_get
    if _newclass:
        CombInstrumentID = _swig_property(_pyctp.CThostFtdcQryInvestorPositionCombineDetailField_CombInstrumentID_get, _pyctp.CThostFtdcQryInvestorPositionCombineDetailField_CombInstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryInvestorPositionCombineDetailField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryInvestorPositionCombineDetailField
    __del__ = lambda self: None
CThostFtdcQryInvestorPositionCombineDetailField_swigregister = _pyctp.CThostFtdcQryInvestorPositionCombineDetailField_swigregister
CThostFtdcQryInvestorPositionCombineDetailField_swigregister(CThostFtdcQryInvestorPositionCombineDetailField)

class CThostFtdcMarketDataAveragePriceField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcMarketDataAveragePriceField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcMarketDataAveragePriceField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["AveragePrice"] = _pyctp.CThostFtdcMarketDataAveragePriceField_AveragePrice_set
    __swig_getmethods__["AveragePrice"] = _pyctp.CThostFtdcMarketDataAveragePriceField_AveragePrice_get
    if _newclass:
        AveragePrice = _swig_property(_pyctp.CThostFtdcMarketDataAveragePriceField_AveragePrice_get, _pyctp.CThostFtdcMarketDataAveragePriceField_AveragePrice_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcMarketDataAveragePriceField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcMarketDataAveragePriceField
    __del__ = lambda self: None
CThostFtdcMarketDataAveragePriceField_swigregister = _pyctp.CThostFtdcMarketDataAveragePriceField_swigregister
CThostFtdcMarketDataAveragePriceField_swigregister(CThostFtdcMarketDataAveragePriceField)

class CThostFtdcVerifyInvestorPasswordField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcVerifyInvestorPasswordField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcVerifyInvestorPasswordField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcVerifyInvestorPasswordField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcVerifyInvestorPasswordField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcVerifyInvestorPasswordField_BrokerID_get, _pyctp.CThostFtdcVerifyInvestorPasswordField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcVerifyInvestorPasswordField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcVerifyInvestorPasswordField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcVerifyInvestorPasswordField_InvestorID_get, _pyctp.CThostFtdcVerifyInvestorPasswordField_InvestorID_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcVerifyInvestorPasswordField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcVerifyInvestorPasswordField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcVerifyInvestorPasswordField_Password_get, _pyctp.CThostFtdcVerifyInvestorPasswordField_Password_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcVerifyInvestorPasswordField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcVerifyInvestorPasswordField
    __del__ = lambda self: None
CThostFtdcVerifyInvestorPasswordField_swigregister = _pyctp.CThostFtdcVerifyInvestorPasswordField_swigregister
CThostFtdcVerifyInvestorPasswordField_swigregister(CThostFtdcVerifyInvestorPasswordField)

class CThostFtdcUserIPField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcUserIPField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcUserIPField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcUserIPField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcUserIPField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcUserIPField_BrokerID_get, _pyctp.CThostFtdcUserIPField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcUserIPField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcUserIPField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcUserIPField_UserID_get, _pyctp.CThostFtdcUserIPField_UserID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcUserIPField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcUserIPField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcUserIPField_IPAddress_get, _pyctp.CThostFtdcUserIPField_IPAddress_set)
    __swig_setmethods__["IPMask"] = _pyctp.CThostFtdcUserIPField_IPMask_set
    __swig_getmethods__["IPMask"] = _pyctp.CThostFtdcUserIPField_IPMask_get
    if _newclass:
        IPMask = _swig_property(_pyctp.CThostFtdcUserIPField_IPMask_get, _pyctp.CThostFtdcUserIPField_IPMask_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcUserIPField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcUserIPField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcUserIPField_MacAddress_get, _pyctp.CThostFtdcUserIPField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcUserIPField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcUserIPField
    __del__ = lambda self: None
CThostFtdcUserIPField_swigregister = _pyctp.CThostFtdcUserIPField_swigregister
CThostFtdcUserIPField_swigregister(CThostFtdcUserIPField)

class CThostFtdcTradingNoticeInfoField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcTradingNoticeInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcTradingNoticeInfoField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcTradingNoticeInfoField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcTradingNoticeInfoField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcTradingNoticeInfoField_BrokerID_get, _pyctp.CThostFtdcTradingNoticeInfoField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcTradingNoticeInfoField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcTradingNoticeInfoField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcTradingNoticeInfoField_InvestorID_get, _pyctp.CThostFtdcTradingNoticeInfoField_InvestorID_set)
    __swig_setmethods__["SendTime"] = _pyctp.CThostFtdcTradingNoticeInfoField_SendTime_set
    __swig_getmethods__["SendTime"] = _pyctp.CThostFtdcTradingNoticeInfoField_SendTime_get
    if _newclass:
        SendTime = _swig_property(_pyctp.CThostFtdcTradingNoticeInfoField_SendTime_get, _pyctp.CThostFtdcTradingNoticeInfoField_SendTime_set)
    __swig_setmethods__["FieldContent"] = _pyctp.CThostFtdcTradingNoticeInfoField_FieldContent_set
    __swig_getmethods__["FieldContent"] = _pyctp.CThostFtdcTradingNoticeInfoField_FieldContent_get
    if _newclass:
        FieldContent = _swig_property(_pyctp.CThostFtdcTradingNoticeInfoField_FieldContent_get, _pyctp.CThostFtdcTradingNoticeInfoField_FieldContent_set)
    __swig_setmethods__["SequenceSeries"] = _pyctp.CThostFtdcTradingNoticeInfoField_SequenceSeries_set
    __swig_getmethods__["SequenceSeries"] = _pyctp.CThostFtdcTradingNoticeInfoField_SequenceSeries_get
    if _newclass:
        SequenceSeries = _swig_property(_pyctp.CThostFtdcTradingNoticeInfoField_SequenceSeries_get, _pyctp.CThostFtdcTradingNoticeInfoField_SequenceSeries_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CThostFtdcTradingNoticeInfoField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CThostFtdcTradingNoticeInfoField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CThostFtdcTradingNoticeInfoField_SequenceNo_get, _pyctp.CThostFtdcTradingNoticeInfoField_SequenceNo_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcTradingNoticeInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcTradingNoticeInfoField
    __del__ = lambda self: None
CThostFtdcTradingNoticeInfoField_swigregister = _pyctp.CThostFtdcTradingNoticeInfoField_swigregister
CThostFtdcTradingNoticeInfoField_swigregister(CThostFtdcTradingNoticeInfoField)

class CThostFtdcTradingNoticeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcTradingNoticeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcTradingNoticeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcTradingNoticeField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcTradingNoticeField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcTradingNoticeField_BrokerID_get, _pyctp.CThostFtdcTradingNoticeField_BrokerID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CThostFtdcTradingNoticeField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CThostFtdcTradingNoticeField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CThostFtdcTradingNoticeField_InvestorRange_get, _pyctp.CThostFtdcTradingNoticeField_InvestorRange_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcTradingNoticeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcTradingNoticeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcTradingNoticeField_InvestorID_get, _pyctp.CThostFtdcTradingNoticeField_InvestorID_set)
    __swig_setmethods__["SequenceSeries"] = _pyctp.CThostFtdcTradingNoticeField_SequenceSeries_set
    __swig_getmethods__["SequenceSeries"] = _pyctp.CThostFtdcTradingNoticeField_SequenceSeries_get
    if _newclass:
        SequenceSeries = _swig_property(_pyctp.CThostFtdcTradingNoticeField_SequenceSeries_get, _pyctp.CThostFtdcTradingNoticeField_SequenceSeries_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcTradingNoticeField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcTradingNoticeField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcTradingNoticeField_UserID_get, _pyctp.CThostFtdcTradingNoticeField_UserID_set)
    __swig_setmethods__["SendTime"] = _pyctp.CThostFtdcTradingNoticeField_SendTime_set
    __swig_getmethods__["SendTime"] = _pyctp.CThostFtdcTradingNoticeField_SendTime_get
    if _newclass:
        SendTime = _swig_property(_pyctp.CThostFtdcTradingNoticeField_SendTime_get, _pyctp.CThostFtdcTradingNoticeField_SendTime_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CThostFtdcTradingNoticeField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CThostFtdcTradingNoticeField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CThostFtdcTradingNoticeField_SequenceNo_get, _pyctp.CThostFtdcTradingNoticeField_SequenceNo_set)
    __swig_setmethods__["FieldContent"] = _pyctp.CThostFtdcTradingNoticeField_FieldContent_set
    __swig_getmethods__["FieldContent"] = _pyctp.CThostFtdcTradingNoticeField_FieldContent_get
    if _newclass:
        FieldContent = _swig_property(_pyctp.CThostFtdcTradingNoticeField_FieldContent_get, _pyctp.CThostFtdcTradingNoticeField_FieldContent_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcTradingNoticeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcTradingNoticeField
    __del__ = lambda self: None
CThostFtdcTradingNoticeField_swigregister = _pyctp.CThostFtdcTradingNoticeField_swigregister
CThostFtdcTradingNoticeField_swigregister(CThostFtdcTradingNoticeField)

class CThostFtdcQryTradingNoticeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryTradingNoticeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryTradingNoticeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryTradingNoticeField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryTradingNoticeField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryTradingNoticeField_BrokerID_get, _pyctp.CThostFtdcQryTradingNoticeField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryTradingNoticeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryTradingNoticeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryTradingNoticeField_InvestorID_get, _pyctp.CThostFtdcQryTradingNoticeField_InvestorID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryTradingNoticeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryTradingNoticeField
    __del__ = lambda self: None
CThostFtdcQryTradingNoticeField_swigregister = _pyctp.CThostFtdcQryTradingNoticeField_swigregister
CThostFtdcQryTradingNoticeField_swigregister(CThostFtdcQryTradingNoticeField)

class CThostFtdcQryErrOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryErrOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryErrOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryErrOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryErrOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryErrOrderField_BrokerID_get, _pyctp.CThostFtdcQryErrOrderField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryErrOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryErrOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryErrOrderField_InvestorID_get, _pyctp.CThostFtdcQryErrOrderField_InvestorID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryErrOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryErrOrderField
    __del__ = lambda self: None
CThostFtdcQryErrOrderField_swigregister = _pyctp.CThostFtdcQryErrOrderField_swigregister
CThostFtdcQryErrOrderField_swigregister(CThostFtdcQryErrOrderField)

class CThostFtdcErrOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcErrOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcErrOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcErrOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcErrOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcErrOrderField_BrokerID_get, _pyctp.CThostFtdcErrOrderField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcErrOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcErrOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcErrOrderField_InvestorID_get, _pyctp.CThostFtdcErrOrderField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcErrOrderField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcErrOrderField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcErrOrderField_InstrumentID_get, _pyctp.CThostFtdcErrOrderField_InstrumentID_set)
    __swig_setmethods__["OrderRef"] = _pyctp.CThostFtdcErrOrderField_OrderRef_set
    __swig_getmethods__["OrderRef"] = _pyctp.CThostFtdcErrOrderField_OrderRef_get
    if _newclass:
        OrderRef = _swig_property(_pyctp.CThostFtdcErrOrderField_OrderRef_get, _pyctp.CThostFtdcErrOrderField_OrderRef_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcErrOrderField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcErrOrderField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcErrOrderField_UserID_get, _pyctp.CThostFtdcErrOrderField_UserID_set)
    __swig_setmethods__["OrderPriceType"] = _pyctp.CThostFtdcErrOrderField_OrderPriceType_set
    __swig_getmethods__["OrderPriceType"] = _pyctp.CThostFtdcErrOrderField_OrderPriceType_get
    if _newclass:
        OrderPriceType = _swig_property(_pyctp.CThostFtdcErrOrderField_OrderPriceType_get, _pyctp.CThostFtdcErrOrderField_OrderPriceType_set)
    __swig_setmethods__["Direction"] = _pyctp.CThostFtdcErrOrderField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CThostFtdcErrOrderField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CThostFtdcErrOrderField_Direction_get, _pyctp.CThostFtdcErrOrderField_Direction_set)
    __swig_setmethods__["CombOffsetFlag"] = _pyctp.CThostFtdcErrOrderField_CombOffsetFlag_set
    __swig_getmethods__["CombOffsetFlag"] = _pyctp.CThostFtdcErrOrderField_CombOffsetFlag_get
    if _newclass:
        CombOffsetFlag = _swig_property(_pyctp.CThostFtdcErrOrderField_CombOffsetFlag_get, _pyctp.CThostFtdcErrOrderField_CombOffsetFlag_set)
    __swig_setmethods__["CombHedgeFlag"] = _pyctp.CThostFtdcErrOrderField_CombHedgeFlag_set
    __swig_getmethods__["CombHedgeFlag"] = _pyctp.CThostFtdcErrOrderField_CombHedgeFlag_get
    if _newclass:
        CombHedgeFlag = _swig_property(_pyctp.CThostFtdcErrOrderField_CombHedgeFlag_get, _pyctp.CThostFtdcErrOrderField_CombHedgeFlag_set)
    __swig_setmethods__["LimitPrice"] = _pyctp.CThostFtdcErrOrderField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _pyctp.CThostFtdcErrOrderField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_pyctp.CThostFtdcErrOrderField_LimitPrice_get, _pyctp.CThostFtdcErrOrderField_LimitPrice_set)
    __swig_setmethods__["VolumeTotalOriginal"] = _pyctp.CThostFtdcErrOrderField_VolumeTotalOriginal_set
    __swig_getmethods__["VolumeTotalOriginal"] = _pyctp.CThostFtdcErrOrderField_VolumeTotalOriginal_get
    if _newclass:
        VolumeTotalOriginal = _swig_property(_pyctp.CThostFtdcErrOrderField_VolumeTotalOriginal_get, _pyctp.CThostFtdcErrOrderField_VolumeTotalOriginal_set)
    __swig_setmethods__["TimeCondition"] = _pyctp.CThostFtdcErrOrderField_TimeCondition_set
    __swig_getmethods__["TimeCondition"] = _pyctp.CThostFtdcErrOrderField_TimeCondition_get
    if _newclass:
        TimeCondition = _swig_property(_pyctp.CThostFtdcErrOrderField_TimeCondition_get, _pyctp.CThostFtdcErrOrderField_TimeCondition_set)
    __swig_setmethods__["GTDDate"] = _pyctp.CThostFtdcErrOrderField_GTDDate_set
    __swig_getmethods__["GTDDate"] = _pyctp.CThostFtdcErrOrderField_GTDDate_get
    if _newclass:
        GTDDate = _swig_property(_pyctp.CThostFtdcErrOrderField_GTDDate_get, _pyctp.CThostFtdcErrOrderField_GTDDate_set)
    __swig_setmethods__["VolumeCondition"] = _pyctp.CThostFtdcErrOrderField_VolumeCondition_set
    __swig_getmethods__["VolumeCondition"] = _pyctp.CThostFtdcErrOrderField_VolumeCondition_get
    if _newclass:
        VolumeCondition = _swig_property(_pyctp.CThostFtdcErrOrderField_VolumeCondition_get, _pyctp.CThostFtdcErrOrderField_VolumeCondition_set)
    __swig_setmethods__["MinVolume"] = _pyctp.CThostFtdcErrOrderField_MinVolume_set
    __swig_getmethods__["MinVolume"] = _pyctp.CThostFtdcErrOrderField_MinVolume_get
    if _newclass:
        MinVolume = _swig_property(_pyctp.CThostFtdcErrOrderField_MinVolume_get, _pyctp.CThostFtdcErrOrderField_MinVolume_set)
    __swig_setmethods__["ContingentCondition"] = _pyctp.CThostFtdcErrOrderField_ContingentCondition_set
    __swig_getmethods__["ContingentCondition"] = _pyctp.CThostFtdcErrOrderField_ContingentCondition_get
    if _newclass:
        ContingentCondition = _swig_property(_pyctp.CThostFtdcErrOrderField_ContingentCondition_get, _pyctp.CThostFtdcErrOrderField_ContingentCondition_set)
    __swig_setmethods__["StopPrice"] = _pyctp.CThostFtdcErrOrderField_StopPrice_set
    __swig_getmethods__["StopPrice"] = _pyctp.CThostFtdcErrOrderField_StopPrice_get
    if _newclass:
        StopPrice = _swig_property(_pyctp.CThostFtdcErrOrderField_StopPrice_get, _pyctp.CThostFtdcErrOrderField_StopPrice_set)
    __swig_setmethods__["ForceCloseReason"] = _pyctp.CThostFtdcErrOrderField_ForceCloseReason_set
    __swig_getmethods__["ForceCloseReason"] = _pyctp.CThostFtdcErrOrderField_ForceCloseReason_get
    if _newclass:
        ForceCloseReason = _swig_property(_pyctp.CThostFtdcErrOrderField_ForceCloseReason_get, _pyctp.CThostFtdcErrOrderField_ForceCloseReason_set)
    __swig_setmethods__["IsAutoSuspend"] = _pyctp.CThostFtdcErrOrderField_IsAutoSuspend_set
    __swig_getmethods__["IsAutoSuspend"] = _pyctp.CThostFtdcErrOrderField_IsAutoSuspend_get
    if _newclass:
        IsAutoSuspend = _swig_property(_pyctp.CThostFtdcErrOrderField_IsAutoSuspend_get, _pyctp.CThostFtdcErrOrderField_IsAutoSuspend_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CThostFtdcErrOrderField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CThostFtdcErrOrderField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CThostFtdcErrOrderField_BusinessUnit_get, _pyctp.CThostFtdcErrOrderField_BusinessUnit_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcErrOrderField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcErrOrderField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcErrOrderField_RequestID_get, _pyctp.CThostFtdcErrOrderField_RequestID_set)
    __swig_setmethods__["UserForceClose"] = _pyctp.CThostFtdcErrOrderField_UserForceClose_set
    __swig_getmethods__["UserForceClose"] = _pyctp.CThostFtdcErrOrderField_UserForceClose_get
    if _newclass:
        UserForceClose = _swig_property(_pyctp.CThostFtdcErrOrderField_UserForceClose_get, _pyctp.CThostFtdcErrOrderField_UserForceClose_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CThostFtdcErrOrderField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CThostFtdcErrOrderField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CThostFtdcErrOrderField_ErrorID_get, _pyctp.CThostFtdcErrOrderField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CThostFtdcErrOrderField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CThostFtdcErrOrderField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CThostFtdcErrOrderField_ErrorMsg_get, _pyctp.CThostFtdcErrOrderField_ErrorMsg_set)
    __swig_setmethods__["IsSwapOrder"] = _pyctp.CThostFtdcErrOrderField_IsSwapOrder_set
    __swig_getmethods__["IsSwapOrder"] = _pyctp.CThostFtdcErrOrderField_IsSwapOrder_get
    if _newclass:
        IsSwapOrder = _swig_property(_pyctp.CThostFtdcErrOrderField_IsSwapOrder_get, _pyctp.CThostFtdcErrOrderField_IsSwapOrder_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcErrOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcErrOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcErrOrderField_ExchangeID_get, _pyctp.CThostFtdcErrOrderField_ExchangeID_set)
    __swig_setmethods__["InvestUnitID"] = _pyctp.CThostFtdcErrOrderField_InvestUnitID_set
    __swig_getmethods__["InvestUnitID"] = _pyctp.CThostFtdcErrOrderField_InvestUnitID_get
    if _newclass:
        InvestUnitID = _swig_property(_pyctp.CThostFtdcErrOrderField_InvestUnitID_get, _pyctp.CThostFtdcErrOrderField_InvestUnitID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcErrOrderField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcErrOrderField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcErrOrderField_AccountID_get, _pyctp.CThostFtdcErrOrderField_AccountID_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcErrOrderField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcErrOrderField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcErrOrderField_CurrencyID_get, _pyctp.CThostFtdcErrOrderField_CurrencyID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcErrOrderField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcErrOrderField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcErrOrderField_ClientID_get, _pyctp.CThostFtdcErrOrderField_ClientID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcErrOrderField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcErrOrderField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcErrOrderField_IPAddress_get, _pyctp.CThostFtdcErrOrderField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcErrOrderField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcErrOrderField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcErrOrderField_MacAddress_get, _pyctp.CThostFtdcErrOrderField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcErrOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcErrOrderField
    __del__ = lambda self: None
CThostFtdcErrOrderField_swigregister = _pyctp.CThostFtdcErrOrderField_swigregister
CThostFtdcErrOrderField_swigregister(CThostFtdcErrOrderField)

class CThostFtdcErrorConditionalOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcErrorConditionalOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcErrorConditionalOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcErrorConditionalOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcErrorConditionalOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_BrokerID_get, _pyctp.CThostFtdcErrorConditionalOrderField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcErrorConditionalOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcErrorConditionalOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_InvestorID_get, _pyctp.CThostFtdcErrorConditionalOrderField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcErrorConditionalOrderField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcErrorConditionalOrderField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_InstrumentID_get, _pyctp.CThostFtdcErrorConditionalOrderField_InstrumentID_set)
    __swig_setmethods__["OrderRef"] = _pyctp.CThostFtdcErrorConditionalOrderField_OrderRef_set
    __swig_getmethods__["OrderRef"] = _pyctp.CThostFtdcErrorConditionalOrderField_OrderRef_get
    if _newclass:
        OrderRef = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_OrderRef_get, _pyctp.CThostFtdcErrorConditionalOrderField_OrderRef_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcErrorConditionalOrderField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcErrorConditionalOrderField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_UserID_get, _pyctp.CThostFtdcErrorConditionalOrderField_UserID_set)
    __swig_setmethods__["OrderPriceType"] = _pyctp.CThostFtdcErrorConditionalOrderField_OrderPriceType_set
    __swig_getmethods__["OrderPriceType"] = _pyctp.CThostFtdcErrorConditionalOrderField_OrderPriceType_get
    if _newclass:
        OrderPriceType = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_OrderPriceType_get, _pyctp.CThostFtdcErrorConditionalOrderField_OrderPriceType_set)
    __swig_setmethods__["Direction"] = _pyctp.CThostFtdcErrorConditionalOrderField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CThostFtdcErrorConditionalOrderField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_Direction_get, _pyctp.CThostFtdcErrorConditionalOrderField_Direction_set)
    __swig_setmethods__["CombOffsetFlag"] = _pyctp.CThostFtdcErrorConditionalOrderField_CombOffsetFlag_set
    __swig_getmethods__["CombOffsetFlag"] = _pyctp.CThostFtdcErrorConditionalOrderField_CombOffsetFlag_get
    if _newclass:
        CombOffsetFlag = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_CombOffsetFlag_get, _pyctp.CThostFtdcErrorConditionalOrderField_CombOffsetFlag_set)
    __swig_setmethods__["CombHedgeFlag"] = _pyctp.CThostFtdcErrorConditionalOrderField_CombHedgeFlag_set
    __swig_getmethods__["CombHedgeFlag"] = _pyctp.CThostFtdcErrorConditionalOrderField_CombHedgeFlag_get
    if _newclass:
        CombHedgeFlag = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_CombHedgeFlag_get, _pyctp.CThostFtdcErrorConditionalOrderField_CombHedgeFlag_set)
    __swig_setmethods__["LimitPrice"] = _pyctp.CThostFtdcErrorConditionalOrderField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _pyctp.CThostFtdcErrorConditionalOrderField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_LimitPrice_get, _pyctp.CThostFtdcErrorConditionalOrderField_LimitPrice_set)
    __swig_setmethods__["VolumeTotalOriginal"] = _pyctp.CThostFtdcErrorConditionalOrderField_VolumeTotalOriginal_set
    __swig_getmethods__["VolumeTotalOriginal"] = _pyctp.CThostFtdcErrorConditionalOrderField_VolumeTotalOriginal_get
    if _newclass:
        VolumeTotalOriginal = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_VolumeTotalOriginal_get, _pyctp.CThostFtdcErrorConditionalOrderField_VolumeTotalOriginal_set)
    __swig_setmethods__["TimeCondition"] = _pyctp.CThostFtdcErrorConditionalOrderField_TimeCondition_set
    __swig_getmethods__["TimeCondition"] = _pyctp.CThostFtdcErrorConditionalOrderField_TimeCondition_get
    if _newclass:
        TimeCondition = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_TimeCondition_get, _pyctp.CThostFtdcErrorConditionalOrderField_TimeCondition_set)
    __swig_setmethods__["GTDDate"] = _pyctp.CThostFtdcErrorConditionalOrderField_GTDDate_set
    __swig_getmethods__["GTDDate"] = _pyctp.CThostFtdcErrorConditionalOrderField_GTDDate_get
    if _newclass:
        GTDDate = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_GTDDate_get, _pyctp.CThostFtdcErrorConditionalOrderField_GTDDate_set)
    __swig_setmethods__["VolumeCondition"] = _pyctp.CThostFtdcErrorConditionalOrderField_VolumeCondition_set
    __swig_getmethods__["VolumeCondition"] = _pyctp.CThostFtdcErrorConditionalOrderField_VolumeCondition_get
    if _newclass:
        VolumeCondition = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_VolumeCondition_get, _pyctp.CThostFtdcErrorConditionalOrderField_VolumeCondition_set)
    __swig_setmethods__["MinVolume"] = _pyctp.CThostFtdcErrorConditionalOrderField_MinVolume_set
    __swig_getmethods__["MinVolume"] = _pyctp.CThostFtdcErrorConditionalOrderField_MinVolume_get
    if _newclass:
        MinVolume = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_MinVolume_get, _pyctp.CThostFtdcErrorConditionalOrderField_MinVolume_set)
    __swig_setmethods__["ContingentCondition"] = _pyctp.CThostFtdcErrorConditionalOrderField_ContingentCondition_set
    __swig_getmethods__["ContingentCondition"] = _pyctp.CThostFtdcErrorConditionalOrderField_ContingentCondition_get
    if _newclass:
        ContingentCondition = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_ContingentCondition_get, _pyctp.CThostFtdcErrorConditionalOrderField_ContingentCondition_set)
    __swig_setmethods__["StopPrice"] = _pyctp.CThostFtdcErrorConditionalOrderField_StopPrice_set
    __swig_getmethods__["StopPrice"] = _pyctp.CThostFtdcErrorConditionalOrderField_StopPrice_get
    if _newclass:
        StopPrice = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_StopPrice_get, _pyctp.CThostFtdcErrorConditionalOrderField_StopPrice_set)
    __swig_setmethods__["ForceCloseReason"] = _pyctp.CThostFtdcErrorConditionalOrderField_ForceCloseReason_set
    __swig_getmethods__["ForceCloseReason"] = _pyctp.CThostFtdcErrorConditionalOrderField_ForceCloseReason_get
    if _newclass:
        ForceCloseReason = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_ForceCloseReason_get, _pyctp.CThostFtdcErrorConditionalOrderField_ForceCloseReason_set)
    __swig_setmethods__["IsAutoSuspend"] = _pyctp.CThostFtdcErrorConditionalOrderField_IsAutoSuspend_set
    __swig_getmethods__["IsAutoSuspend"] = _pyctp.CThostFtdcErrorConditionalOrderField_IsAutoSuspend_get
    if _newclass:
        IsAutoSuspend = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_IsAutoSuspend_get, _pyctp.CThostFtdcErrorConditionalOrderField_IsAutoSuspend_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CThostFtdcErrorConditionalOrderField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CThostFtdcErrorConditionalOrderField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_BusinessUnit_get, _pyctp.CThostFtdcErrorConditionalOrderField_BusinessUnit_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcErrorConditionalOrderField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcErrorConditionalOrderField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_RequestID_get, _pyctp.CThostFtdcErrorConditionalOrderField_RequestID_set)
    __swig_setmethods__["OrderLocalID"] = _pyctp.CThostFtdcErrorConditionalOrderField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _pyctp.CThostFtdcErrorConditionalOrderField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_OrderLocalID_get, _pyctp.CThostFtdcErrorConditionalOrderField_OrderLocalID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcErrorConditionalOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcErrorConditionalOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_ExchangeID_get, _pyctp.CThostFtdcErrorConditionalOrderField_ExchangeID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcErrorConditionalOrderField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcErrorConditionalOrderField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_ParticipantID_get, _pyctp.CThostFtdcErrorConditionalOrderField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcErrorConditionalOrderField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcErrorConditionalOrderField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_ClientID_get, _pyctp.CThostFtdcErrorConditionalOrderField_ClientID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CThostFtdcErrorConditionalOrderField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CThostFtdcErrorConditionalOrderField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_ExchangeInstID_get, _pyctp.CThostFtdcErrorConditionalOrderField_ExchangeInstID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcErrorConditionalOrderField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcErrorConditionalOrderField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_TraderID_get, _pyctp.CThostFtdcErrorConditionalOrderField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcErrorConditionalOrderField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcErrorConditionalOrderField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_InstallID_get, _pyctp.CThostFtdcErrorConditionalOrderField_InstallID_set)
    __swig_setmethods__["OrderSubmitStatus"] = _pyctp.CThostFtdcErrorConditionalOrderField_OrderSubmitStatus_set
    __swig_getmethods__["OrderSubmitStatus"] = _pyctp.CThostFtdcErrorConditionalOrderField_OrderSubmitStatus_get
    if _newclass:
        OrderSubmitStatus = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_OrderSubmitStatus_get, _pyctp.CThostFtdcErrorConditionalOrderField_OrderSubmitStatus_set)
    __swig_setmethods__["NotifySequence"] = _pyctp.CThostFtdcErrorConditionalOrderField_NotifySequence_set
    __swig_getmethods__["NotifySequence"] = _pyctp.CThostFtdcErrorConditionalOrderField_NotifySequence_get
    if _newclass:
        NotifySequence = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_NotifySequence_get, _pyctp.CThostFtdcErrorConditionalOrderField_NotifySequence_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcErrorConditionalOrderField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcErrorConditionalOrderField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_TradingDay_get, _pyctp.CThostFtdcErrorConditionalOrderField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CThostFtdcErrorConditionalOrderField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CThostFtdcErrorConditionalOrderField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_SettlementID_get, _pyctp.CThostFtdcErrorConditionalOrderField_SettlementID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CThostFtdcErrorConditionalOrderField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CThostFtdcErrorConditionalOrderField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_OrderSysID_get, _pyctp.CThostFtdcErrorConditionalOrderField_OrderSysID_set)
    __swig_setmethods__["OrderSource"] = _pyctp.CThostFtdcErrorConditionalOrderField_OrderSource_set
    __swig_getmethods__["OrderSource"] = _pyctp.CThostFtdcErrorConditionalOrderField_OrderSource_get
    if _newclass:
        OrderSource = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_OrderSource_get, _pyctp.CThostFtdcErrorConditionalOrderField_OrderSource_set)
    __swig_setmethods__["OrderStatus"] = _pyctp.CThostFtdcErrorConditionalOrderField_OrderStatus_set
    __swig_getmethods__["OrderStatus"] = _pyctp.CThostFtdcErrorConditionalOrderField_OrderStatus_get
    if _newclass:
        OrderStatus = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_OrderStatus_get, _pyctp.CThostFtdcErrorConditionalOrderField_OrderStatus_set)
    __swig_setmethods__["OrderType"] = _pyctp.CThostFtdcErrorConditionalOrderField_OrderType_set
    __swig_getmethods__["OrderType"] = _pyctp.CThostFtdcErrorConditionalOrderField_OrderType_get
    if _newclass:
        OrderType = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_OrderType_get, _pyctp.CThostFtdcErrorConditionalOrderField_OrderType_set)
    __swig_setmethods__["VolumeTraded"] = _pyctp.CThostFtdcErrorConditionalOrderField_VolumeTraded_set
    __swig_getmethods__["VolumeTraded"] = _pyctp.CThostFtdcErrorConditionalOrderField_VolumeTraded_get
    if _newclass:
        VolumeTraded = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_VolumeTraded_get, _pyctp.CThostFtdcErrorConditionalOrderField_VolumeTraded_set)
    __swig_setmethods__["VolumeTotal"] = _pyctp.CThostFtdcErrorConditionalOrderField_VolumeTotal_set
    __swig_getmethods__["VolumeTotal"] = _pyctp.CThostFtdcErrorConditionalOrderField_VolumeTotal_get
    if _newclass:
        VolumeTotal = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_VolumeTotal_get, _pyctp.CThostFtdcErrorConditionalOrderField_VolumeTotal_set)
    __swig_setmethods__["InsertDate"] = _pyctp.CThostFtdcErrorConditionalOrderField_InsertDate_set
    __swig_getmethods__["InsertDate"] = _pyctp.CThostFtdcErrorConditionalOrderField_InsertDate_get
    if _newclass:
        InsertDate = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_InsertDate_get, _pyctp.CThostFtdcErrorConditionalOrderField_InsertDate_set)
    __swig_setmethods__["InsertTime"] = _pyctp.CThostFtdcErrorConditionalOrderField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _pyctp.CThostFtdcErrorConditionalOrderField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_InsertTime_get, _pyctp.CThostFtdcErrorConditionalOrderField_InsertTime_set)
    __swig_setmethods__["ActiveTime"] = _pyctp.CThostFtdcErrorConditionalOrderField_ActiveTime_set
    __swig_getmethods__["ActiveTime"] = _pyctp.CThostFtdcErrorConditionalOrderField_ActiveTime_get
    if _newclass:
        ActiveTime = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_ActiveTime_get, _pyctp.CThostFtdcErrorConditionalOrderField_ActiveTime_set)
    __swig_setmethods__["SuspendTime"] = _pyctp.CThostFtdcErrorConditionalOrderField_SuspendTime_set
    __swig_getmethods__["SuspendTime"] = _pyctp.CThostFtdcErrorConditionalOrderField_SuspendTime_get
    if _newclass:
        SuspendTime = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_SuspendTime_get, _pyctp.CThostFtdcErrorConditionalOrderField_SuspendTime_set)
    __swig_setmethods__["UpdateTime"] = _pyctp.CThostFtdcErrorConditionalOrderField_UpdateTime_set
    __swig_getmethods__["UpdateTime"] = _pyctp.CThostFtdcErrorConditionalOrderField_UpdateTime_get
    if _newclass:
        UpdateTime = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_UpdateTime_get, _pyctp.CThostFtdcErrorConditionalOrderField_UpdateTime_set)
    __swig_setmethods__["CancelTime"] = _pyctp.CThostFtdcErrorConditionalOrderField_CancelTime_set
    __swig_getmethods__["CancelTime"] = _pyctp.CThostFtdcErrorConditionalOrderField_CancelTime_get
    if _newclass:
        CancelTime = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_CancelTime_get, _pyctp.CThostFtdcErrorConditionalOrderField_CancelTime_set)
    __swig_setmethods__["ActiveTraderID"] = _pyctp.CThostFtdcErrorConditionalOrderField_ActiveTraderID_set
    __swig_getmethods__["ActiveTraderID"] = _pyctp.CThostFtdcErrorConditionalOrderField_ActiveTraderID_get
    if _newclass:
        ActiveTraderID = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_ActiveTraderID_get, _pyctp.CThostFtdcErrorConditionalOrderField_ActiveTraderID_set)
    __swig_setmethods__["ClearingPartID"] = _pyctp.CThostFtdcErrorConditionalOrderField_ClearingPartID_set
    __swig_getmethods__["ClearingPartID"] = _pyctp.CThostFtdcErrorConditionalOrderField_ClearingPartID_get
    if _newclass:
        ClearingPartID = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_ClearingPartID_get, _pyctp.CThostFtdcErrorConditionalOrderField_ClearingPartID_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CThostFtdcErrorConditionalOrderField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CThostFtdcErrorConditionalOrderField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_SequenceNo_get, _pyctp.CThostFtdcErrorConditionalOrderField_SequenceNo_set)
    __swig_setmethods__["FrontID"] = _pyctp.CThostFtdcErrorConditionalOrderField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CThostFtdcErrorConditionalOrderField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_FrontID_get, _pyctp.CThostFtdcErrorConditionalOrderField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcErrorConditionalOrderField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcErrorConditionalOrderField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_SessionID_get, _pyctp.CThostFtdcErrorConditionalOrderField_SessionID_set)
    __swig_setmethods__["UserProductInfo"] = _pyctp.CThostFtdcErrorConditionalOrderField_UserProductInfo_set
    __swig_getmethods__["UserProductInfo"] = _pyctp.CThostFtdcErrorConditionalOrderField_UserProductInfo_get
    if _newclass:
        UserProductInfo = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_UserProductInfo_get, _pyctp.CThostFtdcErrorConditionalOrderField_UserProductInfo_set)
    __swig_setmethods__["StatusMsg"] = _pyctp.CThostFtdcErrorConditionalOrderField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _pyctp.CThostFtdcErrorConditionalOrderField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_StatusMsg_get, _pyctp.CThostFtdcErrorConditionalOrderField_StatusMsg_set)
    __swig_setmethods__["UserForceClose"] = _pyctp.CThostFtdcErrorConditionalOrderField_UserForceClose_set
    __swig_getmethods__["UserForceClose"] = _pyctp.CThostFtdcErrorConditionalOrderField_UserForceClose_get
    if _newclass:
        UserForceClose = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_UserForceClose_get, _pyctp.CThostFtdcErrorConditionalOrderField_UserForceClose_set)
    __swig_setmethods__["ActiveUserID"] = _pyctp.CThostFtdcErrorConditionalOrderField_ActiveUserID_set
    __swig_getmethods__["ActiveUserID"] = _pyctp.CThostFtdcErrorConditionalOrderField_ActiveUserID_get
    if _newclass:
        ActiveUserID = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_ActiveUserID_get, _pyctp.CThostFtdcErrorConditionalOrderField_ActiveUserID_set)
    __swig_setmethods__["BrokerOrderSeq"] = _pyctp.CThostFtdcErrorConditionalOrderField_BrokerOrderSeq_set
    __swig_getmethods__["BrokerOrderSeq"] = _pyctp.CThostFtdcErrorConditionalOrderField_BrokerOrderSeq_get
    if _newclass:
        BrokerOrderSeq = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_BrokerOrderSeq_get, _pyctp.CThostFtdcErrorConditionalOrderField_BrokerOrderSeq_set)
    __swig_setmethods__["RelativeOrderSysID"] = _pyctp.CThostFtdcErrorConditionalOrderField_RelativeOrderSysID_set
    __swig_getmethods__["RelativeOrderSysID"] = _pyctp.CThostFtdcErrorConditionalOrderField_RelativeOrderSysID_get
    if _newclass:
        RelativeOrderSysID = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_RelativeOrderSysID_get, _pyctp.CThostFtdcErrorConditionalOrderField_RelativeOrderSysID_set)
    __swig_setmethods__["ZCETotalTradedVolume"] = _pyctp.CThostFtdcErrorConditionalOrderField_ZCETotalTradedVolume_set
    __swig_getmethods__["ZCETotalTradedVolume"] = _pyctp.CThostFtdcErrorConditionalOrderField_ZCETotalTradedVolume_get
    if _newclass:
        ZCETotalTradedVolume = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_ZCETotalTradedVolume_get, _pyctp.CThostFtdcErrorConditionalOrderField_ZCETotalTradedVolume_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CThostFtdcErrorConditionalOrderField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CThostFtdcErrorConditionalOrderField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_ErrorID_get, _pyctp.CThostFtdcErrorConditionalOrderField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CThostFtdcErrorConditionalOrderField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CThostFtdcErrorConditionalOrderField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_ErrorMsg_get, _pyctp.CThostFtdcErrorConditionalOrderField_ErrorMsg_set)
    __swig_setmethods__["IsSwapOrder"] = _pyctp.CThostFtdcErrorConditionalOrderField_IsSwapOrder_set
    __swig_getmethods__["IsSwapOrder"] = _pyctp.CThostFtdcErrorConditionalOrderField_IsSwapOrder_get
    if _newclass:
        IsSwapOrder = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_IsSwapOrder_get, _pyctp.CThostFtdcErrorConditionalOrderField_IsSwapOrder_set)
    __swig_setmethods__["BranchID"] = _pyctp.CThostFtdcErrorConditionalOrderField_BranchID_set
    __swig_getmethods__["BranchID"] = _pyctp.CThostFtdcErrorConditionalOrderField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_BranchID_get, _pyctp.CThostFtdcErrorConditionalOrderField_BranchID_set)
    __swig_setmethods__["InvestUnitID"] = _pyctp.CThostFtdcErrorConditionalOrderField_InvestUnitID_set
    __swig_getmethods__["InvestUnitID"] = _pyctp.CThostFtdcErrorConditionalOrderField_InvestUnitID_get
    if _newclass:
        InvestUnitID = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_InvestUnitID_get, _pyctp.CThostFtdcErrorConditionalOrderField_InvestUnitID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcErrorConditionalOrderField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcErrorConditionalOrderField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_AccountID_get, _pyctp.CThostFtdcErrorConditionalOrderField_AccountID_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcErrorConditionalOrderField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcErrorConditionalOrderField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_CurrencyID_get, _pyctp.CThostFtdcErrorConditionalOrderField_CurrencyID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcErrorConditionalOrderField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcErrorConditionalOrderField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_IPAddress_get, _pyctp.CThostFtdcErrorConditionalOrderField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcErrorConditionalOrderField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcErrorConditionalOrderField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcErrorConditionalOrderField_MacAddress_get, _pyctp.CThostFtdcErrorConditionalOrderField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcErrorConditionalOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcErrorConditionalOrderField
    __del__ = lambda self: None
CThostFtdcErrorConditionalOrderField_swigregister = _pyctp.CThostFtdcErrorConditionalOrderField_swigregister
CThostFtdcErrorConditionalOrderField_swigregister(CThostFtdcErrorConditionalOrderField)

class CThostFtdcQryErrOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryErrOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryErrOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryErrOrderActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryErrOrderActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryErrOrderActionField_BrokerID_get, _pyctp.CThostFtdcQryErrOrderActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryErrOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryErrOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryErrOrderActionField_InvestorID_get, _pyctp.CThostFtdcQryErrOrderActionField_InvestorID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryErrOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryErrOrderActionField
    __del__ = lambda self: None
CThostFtdcQryErrOrderActionField_swigregister = _pyctp.CThostFtdcQryErrOrderActionField_swigregister
CThostFtdcQryErrOrderActionField_swigregister(CThostFtdcQryErrOrderActionField)

class CThostFtdcErrOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcErrOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcErrOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcErrOrderActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcErrOrderActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcErrOrderActionField_BrokerID_get, _pyctp.CThostFtdcErrOrderActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcErrOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcErrOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcErrOrderActionField_InvestorID_get, _pyctp.CThostFtdcErrOrderActionField_InvestorID_set)
    __swig_setmethods__["OrderActionRef"] = _pyctp.CThostFtdcErrOrderActionField_OrderActionRef_set
    __swig_getmethods__["OrderActionRef"] = _pyctp.CThostFtdcErrOrderActionField_OrderActionRef_get
    if _newclass:
        OrderActionRef = _swig_property(_pyctp.CThostFtdcErrOrderActionField_OrderActionRef_get, _pyctp.CThostFtdcErrOrderActionField_OrderActionRef_set)
    __swig_setmethods__["OrderRef"] = _pyctp.CThostFtdcErrOrderActionField_OrderRef_set
    __swig_getmethods__["OrderRef"] = _pyctp.CThostFtdcErrOrderActionField_OrderRef_get
    if _newclass:
        OrderRef = _swig_property(_pyctp.CThostFtdcErrOrderActionField_OrderRef_get, _pyctp.CThostFtdcErrOrderActionField_OrderRef_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcErrOrderActionField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcErrOrderActionField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcErrOrderActionField_RequestID_get, _pyctp.CThostFtdcErrOrderActionField_RequestID_set)
    __swig_setmethods__["FrontID"] = _pyctp.CThostFtdcErrOrderActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CThostFtdcErrOrderActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CThostFtdcErrOrderActionField_FrontID_get, _pyctp.CThostFtdcErrOrderActionField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcErrOrderActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcErrOrderActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcErrOrderActionField_SessionID_get, _pyctp.CThostFtdcErrOrderActionField_SessionID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcErrOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcErrOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcErrOrderActionField_ExchangeID_get, _pyctp.CThostFtdcErrOrderActionField_ExchangeID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CThostFtdcErrOrderActionField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CThostFtdcErrOrderActionField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CThostFtdcErrOrderActionField_OrderSysID_get, _pyctp.CThostFtdcErrOrderActionField_OrderSysID_set)
    __swig_setmethods__["ActionFlag"] = _pyctp.CThostFtdcErrOrderActionField_ActionFlag_set
    __swig_getmethods__["ActionFlag"] = _pyctp.CThostFtdcErrOrderActionField_ActionFlag_get
    if _newclass:
        ActionFlag = _swig_property(_pyctp.CThostFtdcErrOrderActionField_ActionFlag_get, _pyctp.CThostFtdcErrOrderActionField_ActionFlag_set)
    __swig_setmethods__["LimitPrice"] = _pyctp.CThostFtdcErrOrderActionField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _pyctp.CThostFtdcErrOrderActionField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_pyctp.CThostFtdcErrOrderActionField_LimitPrice_get, _pyctp.CThostFtdcErrOrderActionField_LimitPrice_set)
    __swig_setmethods__["VolumeChange"] = _pyctp.CThostFtdcErrOrderActionField_VolumeChange_set
    __swig_getmethods__["VolumeChange"] = _pyctp.CThostFtdcErrOrderActionField_VolumeChange_get
    if _newclass:
        VolumeChange = _swig_property(_pyctp.CThostFtdcErrOrderActionField_VolumeChange_get, _pyctp.CThostFtdcErrOrderActionField_VolumeChange_set)
    __swig_setmethods__["ActionDate"] = _pyctp.CThostFtdcErrOrderActionField_ActionDate_set
    __swig_getmethods__["ActionDate"] = _pyctp.CThostFtdcErrOrderActionField_ActionDate_get
    if _newclass:
        ActionDate = _swig_property(_pyctp.CThostFtdcErrOrderActionField_ActionDate_get, _pyctp.CThostFtdcErrOrderActionField_ActionDate_set)
    __swig_setmethods__["ActionTime"] = _pyctp.CThostFtdcErrOrderActionField_ActionTime_set
    __swig_getmethods__["ActionTime"] = _pyctp.CThostFtdcErrOrderActionField_ActionTime_get
    if _newclass:
        ActionTime = _swig_property(_pyctp.CThostFtdcErrOrderActionField_ActionTime_get, _pyctp.CThostFtdcErrOrderActionField_ActionTime_set)
    __swig_setmethods__["TraderID"] = _pyctp.CThostFtdcErrOrderActionField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CThostFtdcErrOrderActionField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CThostFtdcErrOrderActionField_TraderID_get, _pyctp.CThostFtdcErrOrderActionField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcErrOrderActionField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcErrOrderActionField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcErrOrderActionField_InstallID_get, _pyctp.CThostFtdcErrOrderActionField_InstallID_set)
    __swig_setmethods__["OrderLocalID"] = _pyctp.CThostFtdcErrOrderActionField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _pyctp.CThostFtdcErrOrderActionField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_pyctp.CThostFtdcErrOrderActionField_OrderLocalID_get, _pyctp.CThostFtdcErrOrderActionField_OrderLocalID_set)
    __swig_setmethods__["ActionLocalID"] = _pyctp.CThostFtdcErrOrderActionField_ActionLocalID_set
    __swig_getmethods__["ActionLocalID"] = _pyctp.CThostFtdcErrOrderActionField_ActionLocalID_get
    if _newclass:
        ActionLocalID = _swig_property(_pyctp.CThostFtdcErrOrderActionField_ActionLocalID_get, _pyctp.CThostFtdcErrOrderActionField_ActionLocalID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcErrOrderActionField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcErrOrderActionField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcErrOrderActionField_ParticipantID_get, _pyctp.CThostFtdcErrOrderActionField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CThostFtdcErrOrderActionField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CThostFtdcErrOrderActionField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CThostFtdcErrOrderActionField_ClientID_get, _pyctp.CThostFtdcErrOrderActionField_ClientID_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CThostFtdcErrOrderActionField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CThostFtdcErrOrderActionField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CThostFtdcErrOrderActionField_BusinessUnit_get, _pyctp.CThostFtdcErrOrderActionField_BusinessUnit_set)
    __swig_setmethods__["OrderActionStatus"] = _pyctp.CThostFtdcErrOrderActionField_OrderActionStatus_set
    __swig_getmethods__["OrderActionStatus"] = _pyctp.CThostFtdcErrOrderActionField_OrderActionStatus_get
    if _newclass:
        OrderActionStatus = _swig_property(_pyctp.CThostFtdcErrOrderActionField_OrderActionStatus_get, _pyctp.CThostFtdcErrOrderActionField_OrderActionStatus_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcErrOrderActionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcErrOrderActionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcErrOrderActionField_UserID_get, _pyctp.CThostFtdcErrOrderActionField_UserID_set)
    __swig_setmethods__["StatusMsg"] = _pyctp.CThostFtdcErrOrderActionField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _pyctp.CThostFtdcErrOrderActionField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_pyctp.CThostFtdcErrOrderActionField_StatusMsg_get, _pyctp.CThostFtdcErrOrderActionField_StatusMsg_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcErrOrderActionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcErrOrderActionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcErrOrderActionField_InstrumentID_get, _pyctp.CThostFtdcErrOrderActionField_InstrumentID_set)
    __swig_setmethods__["BranchID"] = _pyctp.CThostFtdcErrOrderActionField_BranchID_set
    __swig_getmethods__["BranchID"] = _pyctp.CThostFtdcErrOrderActionField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_pyctp.CThostFtdcErrOrderActionField_BranchID_get, _pyctp.CThostFtdcErrOrderActionField_BranchID_set)
    __swig_setmethods__["InvestUnitID"] = _pyctp.CThostFtdcErrOrderActionField_InvestUnitID_set
    __swig_getmethods__["InvestUnitID"] = _pyctp.CThostFtdcErrOrderActionField_InvestUnitID_get
    if _newclass:
        InvestUnitID = _swig_property(_pyctp.CThostFtdcErrOrderActionField_InvestUnitID_get, _pyctp.CThostFtdcErrOrderActionField_InvestUnitID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcErrOrderActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcErrOrderActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcErrOrderActionField_IPAddress_get, _pyctp.CThostFtdcErrOrderActionField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CThostFtdcErrOrderActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CThostFtdcErrOrderActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CThostFtdcErrOrderActionField_MacAddress_get, _pyctp.CThostFtdcErrOrderActionField_MacAddress_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CThostFtdcErrOrderActionField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CThostFtdcErrOrderActionField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CThostFtdcErrOrderActionField_ErrorID_get, _pyctp.CThostFtdcErrOrderActionField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CThostFtdcErrOrderActionField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CThostFtdcErrOrderActionField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CThostFtdcErrOrderActionField_ErrorMsg_get, _pyctp.CThostFtdcErrOrderActionField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcErrOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcErrOrderActionField
    __del__ = lambda self: None
CThostFtdcErrOrderActionField_swigregister = _pyctp.CThostFtdcErrOrderActionField_swigregister
CThostFtdcErrOrderActionField_swigregister(CThostFtdcErrOrderActionField)

class CThostFtdcQryExchangeSequenceField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryExchangeSequenceField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryExchangeSequenceField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryExchangeSequenceField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryExchangeSequenceField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryExchangeSequenceField_ExchangeID_get, _pyctp.CThostFtdcQryExchangeSequenceField_ExchangeID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryExchangeSequenceField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryExchangeSequenceField
    __del__ = lambda self: None
CThostFtdcQryExchangeSequenceField_swigregister = _pyctp.CThostFtdcQryExchangeSequenceField_swigregister
CThostFtdcQryExchangeSequenceField_swigregister(CThostFtdcQryExchangeSequenceField)

class CThostFtdcExchangeSequenceField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcExchangeSequenceField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcExchangeSequenceField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeSequenceField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcExchangeSequenceField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcExchangeSequenceField_ExchangeID_get, _pyctp.CThostFtdcExchangeSequenceField_ExchangeID_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CThostFtdcExchangeSequenceField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CThostFtdcExchangeSequenceField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CThostFtdcExchangeSequenceField_SequenceNo_get, _pyctp.CThostFtdcExchangeSequenceField_SequenceNo_set)
    __swig_setmethods__["MarketStatus"] = _pyctp.CThostFtdcExchangeSequenceField_MarketStatus_set
    __swig_getmethods__["MarketStatus"] = _pyctp.CThostFtdcExchangeSequenceField_MarketStatus_get
    if _newclass:
        MarketStatus = _swig_property(_pyctp.CThostFtdcExchangeSequenceField_MarketStatus_get, _pyctp.CThostFtdcExchangeSequenceField_MarketStatus_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcExchangeSequenceField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcExchangeSequenceField
    __del__ = lambda self: None
CThostFtdcExchangeSequenceField_swigregister = _pyctp.CThostFtdcExchangeSequenceField_swigregister
CThostFtdcExchangeSequenceField_swigregister(CThostFtdcExchangeSequenceField)

class CThostFtdcQueryMaxOrderVolumeWithPriceField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQueryMaxOrderVolumeWithPriceField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQueryMaxOrderVolumeWithPriceField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_BrokerID_get, _pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_InvestorID_get, _pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_InstrumentID_get, _pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_InstrumentID_set)
    __swig_setmethods__["Direction"] = _pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_Direction_get, _pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_Direction_set)
    __swig_setmethods__["OffsetFlag"] = _pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_OffsetFlag_set
    __swig_getmethods__["OffsetFlag"] = _pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_OffsetFlag_get
    if _newclass:
        OffsetFlag = _swig_property(_pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_OffsetFlag_get, _pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_OffsetFlag_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_HedgeFlag_get, _pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_HedgeFlag_set)
    __swig_setmethods__["MaxVolume"] = _pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_MaxVolume_set
    __swig_getmethods__["MaxVolume"] = _pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_MaxVolume_get
    if _newclass:
        MaxVolume = _swig_property(_pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_MaxVolume_get, _pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_MaxVolume_set)
    __swig_setmethods__["Price"] = _pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_Price_set
    __swig_getmethods__["Price"] = _pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_Price_get
    if _newclass:
        Price = _swig_property(_pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_Price_get, _pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_Price_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQueryMaxOrderVolumeWithPriceField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQueryMaxOrderVolumeWithPriceField
    __del__ = lambda self: None
CThostFtdcQueryMaxOrderVolumeWithPriceField_swigregister = _pyctp.CThostFtdcQueryMaxOrderVolumeWithPriceField_swigregister
CThostFtdcQueryMaxOrderVolumeWithPriceField_swigregister(CThostFtdcQueryMaxOrderVolumeWithPriceField)

class CThostFtdcQryBrokerTradingParamsField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryBrokerTradingParamsField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryBrokerTradingParamsField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryBrokerTradingParamsField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryBrokerTradingParamsField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryBrokerTradingParamsField_BrokerID_get, _pyctp.CThostFtdcQryBrokerTradingParamsField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryBrokerTradingParamsField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryBrokerTradingParamsField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryBrokerTradingParamsField_InvestorID_get, _pyctp.CThostFtdcQryBrokerTradingParamsField_InvestorID_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcQryBrokerTradingParamsField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcQryBrokerTradingParamsField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcQryBrokerTradingParamsField_CurrencyID_get, _pyctp.CThostFtdcQryBrokerTradingParamsField_CurrencyID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryBrokerTradingParamsField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryBrokerTradingParamsField
    __del__ = lambda self: None
CThostFtdcQryBrokerTradingParamsField_swigregister = _pyctp.CThostFtdcQryBrokerTradingParamsField_swigregister
CThostFtdcQryBrokerTradingParamsField_swigregister(CThostFtdcQryBrokerTradingParamsField)

class CThostFtdcBrokerTradingParamsField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcBrokerTradingParamsField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcBrokerTradingParamsField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcBrokerTradingParamsField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcBrokerTradingParamsField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcBrokerTradingParamsField_BrokerID_get, _pyctp.CThostFtdcBrokerTradingParamsField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcBrokerTradingParamsField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcBrokerTradingParamsField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcBrokerTradingParamsField_InvestorID_get, _pyctp.CThostFtdcBrokerTradingParamsField_InvestorID_set)
    __swig_setmethods__["MarginPriceType"] = _pyctp.CThostFtdcBrokerTradingParamsField_MarginPriceType_set
    __swig_getmethods__["MarginPriceType"] = _pyctp.CThostFtdcBrokerTradingParamsField_MarginPriceType_get
    if _newclass:
        MarginPriceType = _swig_property(_pyctp.CThostFtdcBrokerTradingParamsField_MarginPriceType_get, _pyctp.CThostFtdcBrokerTradingParamsField_MarginPriceType_set)
    __swig_setmethods__["Algorithm"] = _pyctp.CThostFtdcBrokerTradingParamsField_Algorithm_set
    __swig_getmethods__["Algorithm"] = _pyctp.CThostFtdcBrokerTradingParamsField_Algorithm_get
    if _newclass:
        Algorithm = _swig_property(_pyctp.CThostFtdcBrokerTradingParamsField_Algorithm_get, _pyctp.CThostFtdcBrokerTradingParamsField_Algorithm_set)
    __swig_setmethods__["AvailIncludeCloseProfit"] = _pyctp.CThostFtdcBrokerTradingParamsField_AvailIncludeCloseProfit_set
    __swig_getmethods__["AvailIncludeCloseProfit"] = _pyctp.CThostFtdcBrokerTradingParamsField_AvailIncludeCloseProfit_get
    if _newclass:
        AvailIncludeCloseProfit = _swig_property(_pyctp.CThostFtdcBrokerTradingParamsField_AvailIncludeCloseProfit_get, _pyctp.CThostFtdcBrokerTradingParamsField_AvailIncludeCloseProfit_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcBrokerTradingParamsField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcBrokerTradingParamsField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcBrokerTradingParamsField_CurrencyID_get, _pyctp.CThostFtdcBrokerTradingParamsField_CurrencyID_set)
    __swig_setmethods__["OptionRoyaltyPriceType"] = _pyctp.CThostFtdcBrokerTradingParamsField_OptionRoyaltyPriceType_set
    __swig_getmethods__["OptionRoyaltyPriceType"] = _pyctp.CThostFtdcBrokerTradingParamsField_OptionRoyaltyPriceType_get
    if _newclass:
        OptionRoyaltyPriceType = _swig_property(_pyctp.CThostFtdcBrokerTradingParamsField_OptionRoyaltyPriceType_get, _pyctp.CThostFtdcBrokerTradingParamsField_OptionRoyaltyPriceType_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcBrokerTradingParamsField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcBrokerTradingParamsField
    __del__ = lambda self: None
CThostFtdcBrokerTradingParamsField_swigregister = _pyctp.CThostFtdcBrokerTradingParamsField_swigregister
CThostFtdcBrokerTradingParamsField_swigregister(CThostFtdcBrokerTradingParamsField)

class CThostFtdcQryBrokerTradingAlgosField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryBrokerTradingAlgosField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryBrokerTradingAlgosField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryBrokerTradingAlgosField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryBrokerTradingAlgosField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryBrokerTradingAlgosField_BrokerID_get, _pyctp.CThostFtdcQryBrokerTradingAlgosField_BrokerID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryBrokerTradingAlgosField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryBrokerTradingAlgosField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryBrokerTradingAlgosField_ExchangeID_get, _pyctp.CThostFtdcQryBrokerTradingAlgosField_ExchangeID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryBrokerTradingAlgosField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryBrokerTradingAlgosField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryBrokerTradingAlgosField_InstrumentID_get, _pyctp.CThostFtdcQryBrokerTradingAlgosField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryBrokerTradingAlgosField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryBrokerTradingAlgosField
    __del__ = lambda self: None
CThostFtdcQryBrokerTradingAlgosField_swigregister = _pyctp.CThostFtdcQryBrokerTradingAlgosField_swigregister
CThostFtdcQryBrokerTradingAlgosField_swigregister(CThostFtdcQryBrokerTradingAlgosField)

class CThostFtdcBrokerTradingAlgosField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcBrokerTradingAlgosField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcBrokerTradingAlgosField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcBrokerTradingAlgosField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcBrokerTradingAlgosField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcBrokerTradingAlgosField_BrokerID_get, _pyctp.CThostFtdcBrokerTradingAlgosField_BrokerID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcBrokerTradingAlgosField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcBrokerTradingAlgosField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcBrokerTradingAlgosField_ExchangeID_get, _pyctp.CThostFtdcBrokerTradingAlgosField_ExchangeID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcBrokerTradingAlgosField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcBrokerTradingAlgosField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcBrokerTradingAlgosField_InstrumentID_get, _pyctp.CThostFtdcBrokerTradingAlgosField_InstrumentID_set)
    __swig_setmethods__["HandlePositionAlgoID"] = _pyctp.CThostFtdcBrokerTradingAlgosField_HandlePositionAlgoID_set
    __swig_getmethods__["HandlePositionAlgoID"] = _pyctp.CThostFtdcBrokerTradingAlgosField_HandlePositionAlgoID_get
    if _newclass:
        HandlePositionAlgoID = _swig_property(_pyctp.CThostFtdcBrokerTradingAlgosField_HandlePositionAlgoID_get, _pyctp.CThostFtdcBrokerTradingAlgosField_HandlePositionAlgoID_set)
    __swig_setmethods__["FindMarginRateAlgoID"] = _pyctp.CThostFtdcBrokerTradingAlgosField_FindMarginRateAlgoID_set
    __swig_getmethods__["FindMarginRateAlgoID"] = _pyctp.CThostFtdcBrokerTradingAlgosField_FindMarginRateAlgoID_get
    if _newclass:
        FindMarginRateAlgoID = _swig_property(_pyctp.CThostFtdcBrokerTradingAlgosField_FindMarginRateAlgoID_get, _pyctp.CThostFtdcBrokerTradingAlgosField_FindMarginRateAlgoID_set)
    __swig_setmethods__["HandleTradingAccountAlgoID"] = _pyctp.CThostFtdcBrokerTradingAlgosField_HandleTradingAccountAlgoID_set
    __swig_getmethods__["HandleTradingAccountAlgoID"] = _pyctp.CThostFtdcBrokerTradingAlgosField_HandleTradingAccountAlgoID_get
    if _newclass:
        HandleTradingAccountAlgoID = _swig_property(_pyctp.CThostFtdcBrokerTradingAlgosField_HandleTradingAccountAlgoID_get, _pyctp.CThostFtdcBrokerTradingAlgosField_HandleTradingAccountAlgoID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcBrokerTradingAlgosField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcBrokerTradingAlgosField
    __del__ = lambda self: None
CThostFtdcBrokerTradingAlgosField_swigregister = _pyctp.CThostFtdcBrokerTradingAlgosField_swigregister
CThostFtdcBrokerTradingAlgosField_swigregister(CThostFtdcBrokerTradingAlgosField)

class CThostFtdcQueryBrokerDepositField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQueryBrokerDepositField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQueryBrokerDepositField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQueryBrokerDepositField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQueryBrokerDepositField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQueryBrokerDepositField_BrokerID_get, _pyctp.CThostFtdcQueryBrokerDepositField_BrokerID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQueryBrokerDepositField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQueryBrokerDepositField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQueryBrokerDepositField_ExchangeID_get, _pyctp.CThostFtdcQueryBrokerDepositField_ExchangeID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQueryBrokerDepositField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQueryBrokerDepositField
    __del__ = lambda self: None
CThostFtdcQueryBrokerDepositField_swigregister = _pyctp.CThostFtdcQueryBrokerDepositField_swigregister
CThostFtdcQueryBrokerDepositField_swigregister(CThostFtdcQueryBrokerDepositField)

class CThostFtdcBrokerDepositField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcBrokerDepositField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcBrokerDepositField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcBrokerDepositField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcBrokerDepositField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcBrokerDepositField_TradingDay_get, _pyctp.CThostFtdcBrokerDepositField_TradingDay_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcBrokerDepositField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcBrokerDepositField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcBrokerDepositField_BrokerID_get, _pyctp.CThostFtdcBrokerDepositField_BrokerID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcBrokerDepositField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcBrokerDepositField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcBrokerDepositField_ParticipantID_get, _pyctp.CThostFtdcBrokerDepositField_ParticipantID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcBrokerDepositField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcBrokerDepositField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcBrokerDepositField_ExchangeID_get, _pyctp.CThostFtdcBrokerDepositField_ExchangeID_set)
    __swig_setmethods__["PreBalance"] = _pyctp.CThostFtdcBrokerDepositField_PreBalance_set
    __swig_getmethods__["PreBalance"] = _pyctp.CThostFtdcBrokerDepositField_PreBalance_get
    if _newclass:
        PreBalance = _swig_property(_pyctp.CThostFtdcBrokerDepositField_PreBalance_get, _pyctp.CThostFtdcBrokerDepositField_PreBalance_set)
    __swig_setmethods__["CurrMargin"] = _pyctp.CThostFtdcBrokerDepositField_CurrMargin_set
    __swig_getmethods__["CurrMargin"] = _pyctp.CThostFtdcBrokerDepositField_CurrMargin_get
    if _newclass:
        CurrMargin = _swig_property(_pyctp.CThostFtdcBrokerDepositField_CurrMargin_get, _pyctp.CThostFtdcBrokerDepositField_CurrMargin_set)
    __swig_setmethods__["CloseProfit"] = _pyctp.CThostFtdcBrokerDepositField_CloseProfit_set
    __swig_getmethods__["CloseProfit"] = _pyctp.CThostFtdcBrokerDepositField_CloseProfit_get
    if _newclass:
        CloseProfit = _swig_property(_pyctp.CThostFtdcBrokerDepositField_CloseProfit_get, _pyctp.CThostFtdcBrokerDepositField_CloseProfit_set)
    __swig_setmethods__["Balance"] = _pyctp.CThostFtdcBrokerDepositField_Balance_set
    __swig_getmethods__["Balance"] = _pyctp.CThostFtdcBrokerDepositField_Balance_get
    if _newclass:
        Balance = _swig_property(_pyctp.CThostFtdcBrokerDepositField_Balance_get, _pyctp.CThostFtdcBrokerDepositField_Balance_set)
    __swig_setmethods__["Deposit"] = _pyctp.CThostFtdcBrokerDepositField_Deposit_set
    __swig_getmethods__["Deposit"] = _pyctp.CThostFtdcBrokerDepositField_Deposit_get
    if _newclass:
        Deposit = _swig_property(_pyctp.CThostFtdcBrokerDepositField_Deposit_get, _pyctp.CThostFtdcBrokerDepositField_Deposit_set)
    __swig_setmethods__["Withdraw"] = _pyctp.CThostFtdcBrokerDepositField_Withdraw_set
    __swig_getmethods__["Withdraw"] = _pyctp.CThostFtdcBrokerDepositField_Withdraw_get
    if _newclass:
        Withdraw = _swig_property(_pyctp.CThostFtdcBrokerDepositField_Withdraw_get, _pyctp.CThostFtdcBrokerDepositField_Withdraw_set)
    __swig_setmethods__["Available"] = _pyctp.CThostFtdcBrokerDepositField_Available_set
    __swig_getmethods__["Available"] = _pyctp.CThostFtdcBrokerDepositField_Available_get
    if _newclass:
        Available = _swig_property(_pyctp.CThostFtdcBrokerDepositField_Available_get, _pyctp.CThostFtdcBrokerDepositField_Available_set)
    __swig_setmethods__["Reserve"] = _pyctp.CThostFtdcBrokerDepositField_Reserve_set
    __swig_getmethods__["Reserve"] = _pyctp.CThostFtdcBrokerDepositField_Reserve_get
    if _newclass:
        Reserve = _swig_property(_pyctp.CThostFtdcBrokerDepositField_Reserve_get, _pyctp.CThostFtdcBrokerDepositField_Reserve_set)
    __swig_setmethods__["FrozenMargin"] = _pyctp.CThostFtdcBrokerDepositField_FrozenMargin_set
    __swig_getmethods__["FrozenMargin"] = _pyctp.CThostFtdcBrokerDepositField_FrozenMargin_get
    if _newclass:
        FrozenMargin = _swig_property(_pyctp.CThostFtdcBrokerDepositField_FrozenMargin_get, _pyctp.CThostFtdcBrokerDepositField_FrozenMargin_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcBrokerDepositField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcBrokerDepositField
    __del__ = lambda self: None
CThostFtdcBrokerDepositField_swigregister = _pyctp.CThostFtdcBrokerDepositField_swigregister
CThostFtdcBrokerDepositField_swigregister(CThostFtdcBrokerDepositField)

class CThostFtdcQryCFMMCBrokerKeyField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryCFMMCBrokerKeyField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryCFMMCBrokerKeyField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryCFMMCBrokerKeyField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryCFMMCBrokerKeyField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryCFMMCBrokerKeyField_BrokerID_get, _pyctp.CThostFtdcQryCFMMCBrokerKeyField_BrokerID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryCFMMCBrokerKeyField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryCFMMCBrokerKeyField
    __del__ = lambda self: None
CThostFtdcQryCFMMCBrokerKeyField_swigregister = _pyctp.CThostFtdcQryCFMMCBrokerKeyField_swigregister
CThostFtdcQryCFMMCBrokerKeyField_swigregister(CThostFtdcQryCFMMCBrokerKeyField)

class CThostFtdcCFMMCBrokerKeyField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcCFMMCBrokerKeyField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcCFMMCBrokerKeyField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcCFMMCBrokerKeyField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcCFMMCBrokerKeyField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcCFMMCBrokerKeyField_BrokerID_get, _pyctp.CThostFtdcCFMMCBrokerKeyField_BrokerID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcCFMMCBrokerKeyField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcCFMMCBrokerKeyField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcCFMMCBrokerKeyField_ParticipantID_get, _pyctp.CThostFtdcCFMMCBrokerKeyField_ParticipantID_set)
    __swig_setmethods__["CreateDate"] = _pyctp.CThostFtdcCFMMCBrokerKeyField_CreateDate_set
    __swig_getmethods__["CreateDate"] = _pyctp.CThostFtdcCFMMCBrokerKeyField_CreateDate_get
    if _newclass:
        CreateDate = _swig_property(_pyctp.CThostFtdcCFMMCBrokerKeyField_CreateDate_get, _pyctp.CThostFtdcCFMMCBrokerKeyField_CreateDate_set)
    __swig_setmethods__["CreateTime"] = _pyctp.CThostFtdcCFMMCBrokerKeyField_CreateTime_set
    __swig_getmethods__["CreateTime"] = _pyctp.CThostFtdcCFMMCBrokerKeyField_CreateTime_get
    if _newclass:
        CreateTime = _swig_property(_pyctp.CThostFtdcCFMMCBrokerKeyField_CreateTime_get, _pyctp.CThostFtdcCFMMCBrokerKeyField_CreateTime_set)
    __swig_setmethods__["KeyID"] = _pyctp.CThostFtdcCFMMCBrokerKeyField_KeyID_set
    __swig_getmethods__["KeyID"] = _pyctp.CThostFtdcCFMMCBrokerKeyField_KeyID_get
    if _newclass:
        KeyID = _swig_property(_pyctp.CThostFtdcCFMMCBrokerKeyField_KeyID_get, _pyctp.CThostFtdcCFMMCBrokerKeyField_KeyID_set)
    __swig_setmethods__["CurrentKey"] = _pyctp.CThostFtdcCFMMCBrokerKeyField_CurrentKey_set
    __swig_getmethods__["CurrentKey"] = _pyctp.CThostFtdcCFMMCBrokerKeyField_CurrentKey_get
    if _newclass:
        CurrentKey = _swig_property(_pyctp.CThostFtdcCFMMCBrokerKeyField_CurrentKey_get, _pyctp.CThostFtdcCFMMCBrokerKeyField_CurrentKey_set)
    __swig_setmethods__["KeyKind"] = _pyctp.CThostFtdcCFMMCBrokerKeyField_KeyKind_set
    __swig_getmethods__["KeyKind"] = _pyctp.CThostFtdcCFMMCBrokerKeyField_KeyKind_get
    if _newclass:
        KeyKind = _swig_property(_pyctp.CThostFtdcCFMMCBrokerKeyField_KeyKind_get, _pyctp.CThostFtdcCFMMCBrokerKeyField_KeyKind_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcCFMMCBrokerKeyField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcCFMMCBrokerKeyField
    __del__ = lambda self: None
CThostFtdcCFMMCBrokerKeyField_swigregister = _pyctp.CThostFtdcCFMMCBrokerKeyField_swigregister
CThostFtdcCFMMCBrokerKeyField_swigregister(CThostFtdcCFMMCBrokerKeyField)

class CThostFtdcCFMMCTradingAccountKeyField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcCFMMCTradingAccountKeyField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcCFMMCTradingAccountKeyField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcCFMMCTradingAccountKeyField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcCFMMCTradingAccountKeyField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcCFMMCTradingAccountKeyField_BrokerID_get, _pyctp.CThostFtdcCFMMCTradingAccountKeyField_BrokerID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcCFMMCTradingAccountKeyField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcCFMMCTradingAccountKeyField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcCFMMCTradingAccountKeyField_ParticipantID_get, _pyctp.CThostFtdcCFMMCTradingAccountKeyField_ParticipantID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcCFMMCTradingAccountKeyField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcCFMMCTradingAccountKeyField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcCFMMCTradingAccountKeyField_AccountID_get, _pyctp.CThostFtdcCFMMCTradingAccountKeyField_AccountID_set)
    __swig_setmethods__["KeyID"] = _pyctp.CThostFtdcCFMMCTradingAccountKeyField_KeyID_set
    __swig_getmethods__["KeyID"] = _pyctp.CThostFtdcCFMMCTradingAccountKeyField_KeyID_get
    if _newclass:
        KeyID = _swig_property(_pyctp.CThostFtdcCFMMCTradingAccountKeyField_KeyID_get, _pyctp.CThostFtdcCFMMCTradingAccountKeyField_KeyID_set)
    __swig_setmethods__["CurrentKey"] = _pyctp.CThostFtdcCFMMCTradingAccountKeyField_CurrentKey_set
    __swig_getmethods__["CurrentKey"] = _pyctp.CThostFtdcCFMMCTradingAccountKeyField_CurrentKey_get
    if _newclass:
        CurrentKey = _swig_property(_pyctp.CThostFtdcCFMMCTradingAccountKeyField_CurrentKey_get, _pyctp.CThostFtdcCFMMCTradingAccountKeyField_CurrentKey_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcCFMMCTradingAccountKeyField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcCFMMCTradingAccountKeyField
    __del__ = lambda self: None
CThostFtdcCFMMCTradingAccountKeyField_swigregister = _pyctp.CThostFtdcCFMMCTradingAccountKeyField_swigregister
CThostFtdcCFMMCTradingAccountKeyField_swigregister(CThostFtdcCFMMCTradingAccountKeyField)

class CThostFtdcQryCFMMCTradingAccountKeyField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryCFMMCTradingAccountKeyField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryCFMMCTradingAccountKeyField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryCFMMCTradingAccountKeyField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryCFMMCTradingAccountKeyField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryCFMMCTradingAccountKeyField_BrokerID_get, _pyctp.CThostFtdcQryCFMMCTradingAccountKeyField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryCFMMCTradingAccountKeyField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryCFMMCTradingAccountKeyField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryCFMMCTradingAccountKeyField_InvestorID_get, _pyctp.CThostFtdcQryCFMMCTradingAccountKeyField_InvestorID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryCFMMCTradingAccountKeyField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryCFMMCTradingAccountKeyField
    __del__ = lambda self: None
CThostFtdcQryCFMMCTradingAccountKeyField_swigregister = _pyctp.CThostFtdcQryCFMMCTradingAccountKeyField_swigregister
CThostFtdcQryCFMMCTradingAccountKeyField_swigregister(CThostFtdcQryCFMMCTradingAccountKeyField)

class CThostFtdcBrokerUserOTPParamField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcBrokerUserOTPParamField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcBrokerUserOTPParamField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcBrokerUserOTPParamField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcBrokerUserOTPParamField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcBrokerUserOTPParamField_BrokerID_get, _pyctp.CThostFtdcBrokerUserOTPParamField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcBrokerUserOTPParamField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcBrokerUserOTPParamField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcBrokerUserOTPParamField_UserID_get, _pyctp.CThostFtdcBrokerUserOTPParamField_UserID_set)
    __swig_setmethods__["OTPVendorsID"] = _pyctp.CThostFtdcBrokerUserOTPParamField_OTPVendorsID_set
    __swig_getmethods__["OTPVendorsID"] = _pyctp.CThostFtdcBrokerUserOTPParamField_OTPVendorsID_get
    if _newclass:
        OTPVendorsID = _swig_property(_pyctp.CThostFtdcBrokerUserOTPParamField_OTPVendorsID_get, _pyctp.CThostFtdcBrokerUserOTPParamField_OTPVendorsID_set)
    __swig_setmethods__["SerialNumber"] = _pyctp.CThostFtdcBrokerUserOTPParamField_SerialNumber_set
    __swig_getmethods__["SerialNumber"] = _pyctp.CThostFtdcBrokerUserOTPParamField_SerialNumber_get
    if _newclass:
        SerialNumber = _swig_property(_pyctp.CThostFtdcBrokerUserOTPParamField_SerialNumber_get, _pyctp.CThostFtdcBrokerUserOTPParamField_SerialNumber_set)
    __swig_setmethods__["AuthKey"] = _pyctp.CThostFtdcBrokerUserOTPParamField_AuthKey_set
    __swig_getmethods__["AuthKey"] = _pyctp.CThostFtdcBrokerUserOTPParamField_AuthKey_get
    if _newclass:
        AuthKey = _swig_property(_pyctp.CThostFtdcBrokerUserOTPParamField_AuthKey_get, _pyctp.CThostFtdcBrokerUserOTPParamField_AuthKey_set)
    __swig_setmethods__["LastDrift"] = _pyctp.CThostFtdcBrokerUserOTPParamField_LastDrift_set
    __swig_getmethods__["LastDrift"] = _pyctp.CThostFtdcBrokerUserOTPParamField_LastDrift_get
    if _newclass:
        LastDrift = _swig_property(_pyctp.CThostFtdcBrokerUserOTPParamField_LastDrift_get, _pyctp.CThostFtdcBrokerUserOTPParamField_LastDrift_set)
    __swig_setmethods__["LastSuccess"] = _pyctp.CThostFtdcBrokerUserOTPParamField_LastSuccess_set
    __swig_getmethods__["LastSuccess"] = _pyctp.CThostFtdcBrokerUserOTPParamField_LastSuccess_get
    if _newclass:
        LastSuccess = _swig_property(_pyctp.CThostFtdcBrokerUserOTPParamField_LastSuccess_get, _pyctp.CThostFtdcBrokerUserOTPParamField_LastSuccess_set)
    __swig_setmethods__["OTPType"] = _pyctp.CThostFtdcBrokerUserOTPParamField_OTPType_set
    __swig_getmethods__["OTPType"] = _pyctp.CThostFtdcBrokerUserOTPParamField_OTPType_get
    if _newclass:
        OTPType = _swig_property(_pyctp.CThostFtdcBrokerUserOTPParamField_OTPType_get, _pyctp.CThostFtdcBrokerUserOTPParamField_OTPType_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcBrokerUserOTPParamField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcBrokerUserOTPParamField
    __del__ = lambda self: None
CThostFtdcBrokerUserOTPParamField_swigregister = _pyctp.CThostFtdcBrokerUserOTPParamField_swigregister
CThostFtdcBrokerUserOTPParamField_swigregister(CThostFtdcBrokerUserOTPParamField)

class CThostFtdcManualSyncBrokerUserOTPField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcManualSyncBrokerUserOTPField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcManualSyncBrokerUserOTPField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcManualSyncBrokerUserOTPField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcManualSyncBrokerUserOTPField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcManualSyncBrokerUserOTPField_BrokerID_get, _pyctp.CThostFtdcManualSyncBrokerUserOTPField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcManualSyncBrokerUserOTPField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcManualSyncBrokerUserOTPField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcManualSyncBrokerUserOTPField_UserID_get, _pyctp.CThostFtdcManualSyncBrokerUserOTPField_UserID_set)
    __swig_setmethods__["OTPType"] = _pyctp.CThostFtdcManualSyncBrokerUserOTPField_OTPType_set
    __swig_getmethods__["OTPType"] = _pyctp.CThostFtdcManualSyncBrokerUserOTPField_OTPType_get
    if _newclass:
        OTPType = _swig_property(_pyctp.CThostFtdcManualSyncBrokerUserOTPField_OTPType_get, _pyctp.CThostFtdcManualSyncBrokerUserOTPField_OTPType_set)
    __swig_setmethods__["FirstOTP"] = _pyctp.CThostFtdcManualSyncBrokerUserOTPField_FirstOTP_set
    __swig_getmethods__["FirstOTP"] = _pyctp.CThostFtdcManualSyncBrokerUserOTPField_FirstOTP_get
    if _newclass:
        FirstOTP = _swig_property(_pyctp.CThostFtdcManualSyncBrokerUserOTPField_FirstOTP_get, _pyctp.CThostFtdcManualSyncBrokerUserOTPField_FirstOTP_set)
    __swig_setmethods__["SecondOTP"] = _pyctp.CThostFtdcManualSyncBrokerUserOTPField_SecondOTP_set
    __swig_getmethods__["SecondOTP"] = _pyctp.CThostFtdcManualSyncBrokerUserOTPField_SecondOTP_get
    if _newclass:
        SecondOTP = _swig_property(_pyctp.CThostFtdcManualSyncBrokerUserOTPField_SecondOTP_get, _pyctp.CThostFtdcManualSyncBrokerUserOTPField_SecondOTP_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcManualSyncBrokerUserOTPField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcManualSyncBrokerUserOTPField
    __del__ = lambda self: None
CThostFtdcManualSyncBrokerUserOTPField_swigregister = _pyctp.CThostFtdcManualSyncBrokerUserOTPField_swigregister
CThostFtdcManualSyncBrokerUserOTPField_swigregister(CThostFtdcManualSyncBrokerUserOTPField)

class CThostFtdcCommRateModelField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcCommRateModelField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcCommRateModelField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcCommRateModelField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcCommRateModelField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcCommRateModelField_BrokerID_get, _pyctp.CThostFtdcCommRateModelField_BrokerID_set)
    __swig_setmethods__["CommModelID"] = _pyctp.CThostFtdcCommRateModelField_CommModelID_set
    __swig_getmethods__["CommModelID"] = _pyctp.CThostFtdcCommRateModelField_CommModelID_get
    if _newclass:
        CommModelID = _swig_property(_pyctp.CThostFtdcCommRateModelField_CommModelID_get, _pyctp.CThostFtdcCommRateModelField_CommModelID_set)
    __swig_setmethods__["CommModelName"] = _pyctp.CThostFtdcCommRateModelField_CommModelName_set
    __swig_getmethods__["CommModelName"] = _pyctp.CThostFtdcCommRateModelField_CommModelName_get
    if _newclass:
        CommModelName = _swig_property(_pyctp.CThostFtdcCommRateModelField_CommModelName_get, _pyctp.CThostFtdcCommRateModelField_CommModelName_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcCommRateModelField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcCommRateModelField
    __del__ = lambda self: None
CThostFtdcCommRateModelField_swigregister = _pyctp.CThostFtdcCommRateModelField_swigregister
CThostFtdcCommRateModelField_swigregister(CThostFtdcCommRateModelField)

class CThostFtdcQryCommRateModelField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryCommRateModelField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryCommRateModelField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryCommRateModelField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryCommRateModelField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryCommRateModelField_BrokerID_get, _pyctp.CThostFtdcQryCommRateModelField_BrokerID_set)
    __swig_setmethods__["CommModelID"] = _pyctp.CThostFtdcQryCommRateModelField_CommModelID_set
    __swig_getmethods__["CommModelID"] = _pyctp.CThostFtdcQryCommRateModelField_CommModelID_get
    if _newclass:
        CommModelID = _swig_property(_pyctp.CThostFtdcQryCommRateModelField_CommModelID_get, _pyctp.CThostFtdcQryCommRateModelField_CommModelID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryCommRateModelField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryCommRateModelField
    __del__ = lambda self: None
CThostFtdcQryCommRateModelField_swigregister = _pyctp.CThostFtdcQryCommRateModelField_swigregister
CThostFtdcQryCommRateModelField_swigregister(CThostFtdcQryCommRateModelField)

class CThostFtdcMarginModelField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcMarginModelField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcMarginModelField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcMarginModelField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcMarginModelField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcMarginModelField_BrokerID_get, _pyctp.CThostFtdcMarginModelField_BrokerID_set)
    __swig_setmethods__["MarginModelID"] = _pyctp.CThostFtdcMarginModelField_MarginModelID_set
    __swig_getmethods__["MarginModelID"] = _pyctp.CThostFtdcMarginModelField_MarginModelID_get
    if _newclass:
        MarginModelID = _swig_property(_pyctp.CThostFtdcMarginModelField_MarginModelID_get, _pyctp.CThostFtdcMarginModelField_MarginModelID_set)
    __swig_setmethods__["MarginModelName"] = _pyctp.CThostFtdcMarginModelField_MarginModelName_set
    __swig_getmethods__["MarginModelName"] = _pyctp.CThostFtdcMarginModelField_MarginModelName_get
    if _newclass:
        MarginModelName = _swig_property(_pyctp.CThostFtdcMarginModelField_MarginModelName_get, _pyctp.CThostFtdcMarginModelField_MarginModelName_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcMarginModelField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcMarginModelField
    __del__ = lambda self: None
CThostFtdcMarginModelField_swigregister = _pyctp.CThostFtdcMarginModelField_swigregister
CThostFtdcMarginModelField_swigregister(CThostFtdcMarginModelField)

class CThostFtdcQryMarginModelField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryMarginModelField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryMarginModelField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryMarginModelField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryMarginModelField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryMarginModelField_BrokerID_get, _pyctp.CThostFtdcQryMarginModelField_BrokerID_set)
    __swig_setmethods__["MarginModelID"] = _pyctp.CThostFtdcQryMarginModelField_MarginModelID_set
    __swig_getmethods__["MarginModelID"] = _pyctp.CThostFtdcQryMarginModelField_MarginModelID_get
    if _newclass:
        MarginModelID = _swig_property(_pyctp.CThostFtdcQryMarginModelField_MarginModelID_get, _pyctp.CThostFtdcQryMarginModelField_MarginModelID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryMarginModelField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryMarginModelField
    __del__ = lambda self: None
CThostFtdcQryMarginModelField_swigregister = _pyctp.CThostFtdcQryMarginModelField_swigregister
CThostFtdcQryMarginModelField_swigregister(CThostFtdcQryMarginModelField)

class CThostFtdcEWarrantOffsetField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcEWarrantOffsetField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcEWarrantOffsetField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcEWarrantOffsetField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcEWarrantOffsetField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcEWarrantOffsetField_TradingDay_get, _pyctp.CThostFtdcEWarrantOffsetField_TradingDay_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcEWarrantOffsetField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcEWarrantOffsetField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcEWarrantOffsetField_BrokerID_get, _pyctp.CThostFtdcEWarrantOffsetField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcEWarrantOffsetField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcEWarrantOffsetField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcEWarrantOffsetField_InvestorID_get, _pyctp.CThostFtdcEWarrantOffsetField_InvestorID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcEWarrantOffsetField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcEWarrantOffsetField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcEWarrantOffsetField_ExchangeID_get, _pyctp.CThostFtdcEWarrantOffsetField_ExchangeID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcEWarrantOffsetField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcEWarrantOffsetField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcEWarrantOffsetField_InstrumentID_get, _pyctp.CThostFtdcEWarrantOffsetField_InstrumentID_set)
    __swig_setmethods__["Direction"] = _pyctp.CThostFtdcEWarrantOffsetField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CThostFtdcEWarrantOffsetField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CThostFtdcEWarrantOffsetField_Direction_get, _pyctp.CThostFtdcEWarrantOffsetField_Direction_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcEWarrantOffsetField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcEWarrantOffsetField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcEWarrantOffsetField_HedgeFlag_get, _pyctp.CThostFtdcEWarrantOffsetField_HedgeFlag_set)
    __swig_setmethods__["Volume"] = _pyctp.CThostFtdcEWarrantOffsetField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CThostFtdcEWarrantOffsetField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CThostFtdcEWarrantOffsetField_Volume_get, _pyctp.CThostFtdcEWarrantOffsetField_Volume_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcEWarrantOffsetField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcEWarrantOffsetField
    __del__ = lambda self: None
CThostFtdcEWarrantOffsetField_swigregister = _pyctp.CThostFtdcEWarrantOffsetField_swigregister
CThostFtdcEWarrantOffsetField_swigregister(CThostFtdcEWarrantOffsetField)

class CThostFtdcQryEWarrantOffsetField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryEWarrantOffsetField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryEWarrantOffsetField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryEWarrantOffsetField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryEWarrantOffsetField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryEWarrantOffsetField_BrokerID_get, _pyctp.CThostFtdcQryEWarrantOffsetField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryEWarrantOffsetField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryEWarrantOffsetField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryEWarrantOffsetField_InvestorID_get, _pyctp.CThostFtdcQryEWarrantOffsetField_InvestorID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryEWarrantOffsetField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryEWarrantOffsetField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryEWarrantOffsetField_ExchangeID_get, _pyctp.CThostFtdcQryEWarrantOffsetField_ExchangeID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcQryEWarrantOffsetField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcQryEWarrantOffsetField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcQryEWarrantOffsetField_InstrumentID_get, _pyctp.CThostFtdcQryEWarrantOffsetField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryEWarrantOffsetField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryEWarrantOffsetField
    __del__ = lambda self: None
CThostFtdcQryEWarrantOffsetField_swigregister = _pyctp.CThostFtdcQryEWarrantOffsetField_swigregister
CThostFtdcQryEWarrantOffsetField_swigregister(CThostFtdcQryEWarrantOffsetField)

class CThostFtdcQryInvestorProductGroupMarginField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryInvestorProductGroupMarginField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryInvestorProductGroupMarginField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryInvestorProductGroupMarginField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryInvestorProductGroupMarginField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryInvestorProductGroupMarginField_BrokerID_get, _pyctp.CThostFtdcQryInvestorProductGroupMarginField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQryInvestorProductGroupMarginField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQryInvestorProductGroupMarginField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQryInvestorProductGroupMarginField_InvestorID_get, _pyctp.CThostFtdcQryInvestorProductGroupMarginField_InvestorID_set)
    __swig_setmethods__["ProductGroupID"] = _pyctp.CThostFtdcQryInvestorProductGroupMarginField_ProductGroupID_set
    __swig_getmethods__["ProductGroupID"] = _pyctp.CThostFtdcQryInvestorProductGroupMarginField_ProductGroupID_get
    if _newclass:
        ProductGroupID = _swig_property(_pyctp.CThostFtdcQryInvestorProductGroupMarginField_ProductGroupID_get, _pyctp.CThostFtdcQryInvestorProductGroupMarginField_ProductGroupID_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcQryInvestorProductGroupMarginField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcQryInvestorProductGroupMarginField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcQryInvestorProductGroupMarginField_HedgeFlag_get, _pyctp.CThostFtdcQryInvestorProductGroupMarginField_HedgeFlag_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryInvestorProductGroupMarginField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryInvestorProductGroupMarginField
    __del__ = lambda self: None
CThostFtdcQryInvestorProductGroupMarginField_swigregister = _pyctp.CThostFtdcQryInvestorProductGroupMarginField_swigregister
CThostFtdcQryInvestorProductGroupMarginField_swigregister(CThostFtdcQryInvestorProductGroupMarginField)

class CThostFtdcInvestorProductGroupMarginField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcInvestorProductGroupMarginField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcInvestorProductGroupMarginField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ProductGroupID"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_ProductGroupID_set
    __swig_getmethods__["ProductGroupID"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_ProductGroupID_get
    if _newclass:
        ProductGroupID = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_ProductGroupID_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_ProductGroupID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_BrokerID_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_InvestorID_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_InvestorID_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_TradingDay_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_SettlementID_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_SettlementID_set)
    __swig_setmethods__["FrozenMargin"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_FrozenMargin_set
    __swig_getmethods__["FrozenMargin"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_FrozenMargin_get
    if _newclass:
        FrozenMargin = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_FrozenMargin_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_FrozenMargin_set)
    __swig_setmethods__["LongFrozenMargin"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_LongFrozenMargin_set
    __swig_getmethods__["LongFrozenMargin"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_LongFrozenMargin_get
    if _newclass:
        LongFrozenMargin = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_LongFrozenMargin_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_LongFrozenMargin_set)
    __swig_setmethods__["ShortFrozenMargin"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_ShortFrozenMargin_set
    __swig_getmethods__["ShortFrozenMargin"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_ShortFrozenMargin_get
    if _newclass:
        ShortFrozenMargin = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_ShortFrozenMargin_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_ShortFrozenMargin_set)
    __swig_setmethods__["UseMargin"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_UseMargin_set
    __swig_getmethods__["UseMargin"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_UseMargin_get
    if _newclass:
        UseMargin = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_UseMargin_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_UseMargin_set)
    __swig_setmethods__["LongUseMargin"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_LongUseMargin_set
    __swig_getmethods__["LongUseMargin"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_LongUseMargin_get
    if _newclass:
        LongUseMargin = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_LongUseMargin_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_LongUseMargin_set)
    __swig_setmethods__["ShortUseMargin"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_ShortUseMargin_set
    __swig_getmethods__["ShortUseMargin"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_ShortUseMargin_get
    if _newclass:
        ShortUseMargin = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_ShortUseMargin_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_ShortUseMargin_set)
    __swig_setmethods__["ExchMargin"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_ExchMargin_set
    __swig_getmethods__["ExchMargin"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_ExchMargin_get
    if _newclass:
        ExchMargin = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_ExchMargin_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_ExchMargin_set)
    __swig_setmethods__["LongExchMargin"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_LongExchMargin_set
    __swig_getmethods__["LongExchMargin"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_LongExchMargin_get
    if _newclass:
        LongExchMargin = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_LongExchMargin_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_LongExchMargin_set)
    __swig_setmethods__["ShortExchMargin"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_ShortExchMargin_set
    __swig_getmethods__["ShortExchMargin"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_ShortExchMargin_get
    if _newclass:
        ShortExchMargin = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_ShortExchMargin_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_ShortExchMargin_set)
    __swig_setmethods__["CloseProfit"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_CloseProfit_set
    __swig_getmethods__["CloseProfit"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_CloseProfit_get
    if _newclass:
        CloseProfit = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_CloseProfit_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_CloseProfit_set)
    __swig_setmethods__["FrozenCommission"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_FrozenCommission_set
    __swig_getmethods__["FrozenCommission"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_FrozenCommission_get
    if _newclass:
        FrozenCommission = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_FrozenCommission_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_FrozenCommission_set)
    __swig_setmethods__["Commission"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_Commission_set
    __swig_getmethods__["Commission"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_Commission_get
    if _newclass:
        Commission = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_Commission_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_Commission_set)
    __swig_setmethods__["FrozenCash"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_FrozenCash_set
    __swig_getmethods__["FrozenCash"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_FrozenCash_get
    if _newclass:
        FrozenCash = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_FrozenCash_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_FrozenCash_set)
    __swig_setmethods__["CashIn"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_CashIn_set
    __swig_getmethods__["CashIn"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_CashIn_get
    if _newclass:
        CashIn = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_CashIn_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_CashIn_set)
    __swig_setmethods__["PositionProfit"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_PositionProfit_set
    __swig_getmethods__["PositionProfit"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_PositionProfit_get
    if _newclass:
        PositionProfit = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_PositionProfit_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_PositionProfit_set)
    __swig_setmethods__["OffsetAmount"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_OffsetAmount_set
    __swig_getmethods__["OffsetAmount"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_OffsetAmount_get
    if _newclass:
        OffsetAmount = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_OffsetAmount_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_OffsetAmount_set)
    __swig_setmethods__["LongOffsetAmount"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_LongOffsetAmount_set
    __swig_getmethods__["LongOffsetAmount"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_LongOffsetAmount_get
    if _newclass:
        LongOffsetAmount = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_LongOffsetAmount_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_LongOffsetAmount_set)
    __swig_setmethods__["ShortOffsetAmount"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_ShortOffsetAmount_set
    __swig_getmethods__["ShortOffsetAmount"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_ShortOffsetAmount_get
    if _newclass:
        ShortOffsetAmount = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_ShortOffsetAmount_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_ShortOffsetAmount_set)
    __swig_setmethods__["ExchOffsetAmount"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_ExchOffsetAmount_set
    __swig_getmethods__["ExchOffsetAmount"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_ExchOffsetAmount_get
    if _newclass:
        ExchOffsetAmount = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_ExchOffsetAmount_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_ExchOffsetAmount_set)
    __swig_setmethods__["LongExchOffsetAmount"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_LongExchOffsetAmount_set
    __swig_getmethods__["LongExchOffsetAmount"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_LongExchOffsetAmount_get
    if _newclass:
        LongExchOffsetAmount = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_LongExchOffsetAmount_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_LongExchOffsetAmount_set)
    __swig_setmethods__["ShortExchOffsetAmount"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_ShortExchOffsetAmount_set
    __swig_getmethods__["ShortExchOffsetAmount"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_ShortExchOffsetAmount_get
    if _newclass:
        ShortExchOffsetAmount = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_ShortExchOffsetAmount_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_ShortExchOffsetAmount_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CThostFtdcInvestorProductGroupMarginField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CThostFtdcInvestorProductGroupMarginField_HedgeFlag_get, _pyctp.CThostFtdcInvestorProductGroupMarginField_HedgeFlag_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcInvestorProductGroupMarginField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcInvestorProductGroupMarginField
    __del__ = lambda self: None
CThostFtdcInvestorProductGroupMarginField_swigregister = _pyctp.CThostFtdcInvestorProductGroupMarginField_swigregister
CThostFtdcInvestorProductGroupMarginField_swigregister(CThostFtdcInvestorProductGroupMarginField)

class CThostFtdcQueryCFMMCTradingAccountTokenField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQueryCFMMCTradingAccountTokenField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQueryCFMMCTradingAccountTokenField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQueryCFMMCTradingAccountTokenField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQueryCFMMCTradingAccountTokenField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQueryCFMMCTradingAccountTokenField_BrokerID_get, _pyctp.CThostFtdcQueryCFMMCTradingAccountTokenField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcQueryCFMMCTradingAccountTokenField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcQueryCFMMCTradingAccountTokenField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcQueryCFMMCTradingAccountTokenField_InvestorID_get, _pyctp.CThostFtdcQueryCFMMCTradingAccountTokenField_InvestorID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQueryCFMMCTradingAccountTokenField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQueryCFMMCTradingAccountTokenField
    __del__ = lambda self: None
CThostFtdcQueryCFMMCTradingAccountTokenField_swigregister = _pyctp.CThostFtdcQueryCFMMCTradingAccountTokenField_swigregister
CThostFtdcQueryCFMMCTradingAccountTokenField_swigregister(CThostFtdcQueryCFMMCTradingAccountTokenField)

class CThostFtdcCFMMCTradingAccountTokenField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcCFMMCTradingAccountTokenField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcCFMMCTradingAccountTokenField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcCFMMCTradingAccountTokenField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcCFMMCTradingAccountTokenField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcCFMMCTradingAccountTokenField_BrokerID_get, _pyctp.CThostFtdcCFMMCTradingAccountTokenField_BrokerID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CThostFtdcCFMMCTradingAccountTokenField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CThostFtdcCFMMCTradingAccountTokenField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CThostFtdcCFMMCTradingAccountTokenField_ParticipantID_get, _pyctp.CThostFtdcCFMMCTradingAccountTokenField_ParticipantID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcCFMMCTradingAccountTokenField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcCFMMCTradingAccountTokenField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcCFMMCTradingAccountTokenField_AccountID_get, _pyctp.CThostFtdcCFMMCTradingAccountTokenField_AccountID_set)
    __swig_setmethods__["KeyID"] = _pyctp.CThostFtdcCFMMCTradingAccountTokenField_KeyID_set
    __swig_getmethods__["KeyID"] = _pyctp.CThostFtdcCFMMCTradingAccountTokenField_KeyID_get
    if _newclass:
        KeyID = _swig_property(_pyctp.CThostFtdcCFMMCTradingAccountTokenField_KeyID_get, _pyctp.CThostFtdcCFMMCTradingAccountTokenField_KeyID_set)
    __swig_setmethods__["Token"] = _pyctp.CThostFtdcCFMMCTradingAccountTokenField_Token_set
    __swig_getmethods__["Token"] = _pyctp.CThostFtdcCFMMCTradingAccountTokenField_Token_get
    if _newclass:
        Token = _swig_property(_pyctp.CThostFtdcCFMMCTradingAccountTokenField_Token_get, _pyctp.CThostFtdcCFMMCTradingAccountTokenField_Token_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcCFMMCTradingAccountTokenField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcCFMMCTradingAccountTokenField
    __del__ = lambda self: None
CThostFtdcCFMMCTradingAccountTokenField_swigregister = _pyctp.CThostFtdcCFMMCTradingAccountTokenField_swigregister
CThostFtdcCFMMCTradingAccountTokenField_swigregister(CThostFtdcCFMMCTradingAccountTokenField)

class CThostFtdcQryProductGroupField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryProductGroupField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryProductGroupField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ProductID"] = _pyctp.CThostFtdcQryProductGroupField_ProductID_set
    __swig_getmethods__["ProductID"] = _pyctp.CThostFtdcQryProductGroupField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_pyctp.CThostFtdcQryProductGroupField_ProductID_get, _pyctp.CThostFtdcQryProductGroupField_ProductID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryProductGroupField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryProductGroupField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryProductGroupField_ExchangeID_get, _pyctp.CThostFtdcQryProductGroupField_ExchangeID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryProductGroupField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryProductGroupField
    __del__ = lambda self: None
CThostFtdcQryProductGroupField_swigregister = _pyctp.CThostFtdcQryProductGroupField_swigregister
CThostFtdcQryProductGroupField_swigregister(CThostFtdcQryProductGroupField)

class CThostFtdcProductGroupField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcProductGroupField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcProductGroupField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ProductID"] = _pyctp.CThostFtdcProductGroupField_ProductID_set
    __swig_getmethods__["ProductID"] = _pyctp.CThostFtdcProductGroupField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_pyctp.CThostFtdcProductGroupField_ProductID_get, _pyctp.CThostFtdcProductGroupField_ProductID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcProductGroupField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcProductGroupField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcProductGroupField_ExchangeID_get, _pyctp.CThostFtdcProductGroupField_ExchangeID_set)
    __swig_setmethods__["ProductGroupID"] = _pyctp.CThostFtdcProductGroupField_ProductGroupID_set
    __swig_getmethods__["ProductGroupID"] = _pyctp.CThostFtdcProductGroupField_ProductGroupID_get
    if _newclass:
        ProductGroupID = _swig_property(_pyctp.CThostFtdcProductGroupField_ProductGroupID_get, _pyctp.CThostFtdcProductGroupField_ProductGroupID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcProductGroupField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcProductGroupField
    __del__ = lambda self: None
CThostFtdcProductGroupField_swigregister = _pyctp.CThostFtdcProductGroupField_swigregister
CThostFtdcProductGroupField_swigregister(CThostFtdcProductGroupField)

class CThostFtdcBulletinField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcBulletinField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcBulletinField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcBulletinField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcBulletinField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcBulletinField_ExchangeID_get, _pyctp.CThostFtdcBulletinField_ExchangeID_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcBulletinField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcBulletinField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcBulletinField_TradingDay_get, _pyctp.CThostFtdcBulletinField_TradingDay_set)
    __swig_setmethods__["BulletinID"] = _pyctp.CThostFtdcBulletinField_BulletinID_set
    __swig_getmethods__["BulletinID"] = _pyctp.CThostFtdcBulletinField_BulletinID_get
    if _newclass:
        BulletinID = _swig_property(_pyctp.CThostFtdcBulletinField_BulletinID_get, _pyctp.CThostFtdcBulletinField_BulletinID_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CThostFtdcBulletinField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CThostFtdcBulletinField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CThostFtdcBulletinField_SequenceNo_get, _pyctp.CThostFtdcBulletinField_SequenceNo_set)
    __swig_setmethods__["NewsType"] = _pyctp.CThostFtdcBulletinField_NewsType_set
    __swig_getmethods__["NewsType"] = _pyctp.CThostFtdcBulletinField_NewsType_get
    if _newclass:
        NewsType = _swig_property(_pyctp.CThostFtdcBulletinField_NewsType_get, _pyctp.CThostFtdcBulletinField_NewsType_set)
    __swig_setmethods__["NewsUrgency"] = _pyctp.CThostFtdcBulletinField_NewsUrgency_set
    __swig_getmethods__["NewsUrgency"] = _pyctp.CThostFtdcBulletinField_NewsUrgency_get
    if _newclass:
        NewsUrgency = _swig_property(_pyctp.CThostFtdcBulletinField_NewsUrgency_get, _pyctp.CThostFtdcBulletinField_NewsUrgency_set)
    __swig_setmethods__["SendTime"] = _pyctp.CThostFtdcBulletinField_SendTime_set
    __swig_getmethods__["SendTime"] = _pyctp.CThostFtdcBulletinField_SendTime_get
    if _newclass:
        SendTime = _swig_property(_pyctp.CThostFtdcBulletinField_SendTime_get, _pyctp.CThostFtdcBulletinField_SendTime_set)
    __swig_setmethods__["Abstract"] = _pyctp.CThostFtdcBulletinField_Abstract_set
    __swig_getmethods__["Abstract"] = _pyctp.CThostFtdcBulletinField_Abstract_get
    if _newclass:
        Abstract = _swig_property(_pyctp.CThostFtdcBulletinField_Abstract_get, _pyctp.CThostFtdcBulletinField_Abstract_set)
    __swig_setmethods__["ComeFrom"] = _pyctp.CThostFtdcBulletinField_ComeFrom_set
    __swig_getmethods__["ComeFrom"] = _pyctp.CThostFtdcBulletinField_ComeFrom_get
    if _newclass:
        ComeFrom = _swig_property(_pyctp.CThostFtdcBulletinField_ComeFrom_get, _pyctp.CThostFtdcBulletinField_ComeFrom_set)
    __swig_setmethods__["Content"] = _pyctp.CThostFtdcBulletinField_Content_set
    __swig_getmethods__["Content"] = _pyctp.CThostFtdcBulletinField_Content_get
    if _newclass:
        Content = _swig_property(_pyctp.CThostFtdcBulletinField_Content_get, _pyctp.CThostFtdcBulletinField_Content_set)
    __swig_setmethods__["URLLink"] = _pyctp.CThostFtdcBulletinField_URLLink_set
    __swig_getmethods__["URLLink"] = _pyctp.CThostFtdcBulletinField_URLLink_get
    if _newclass:
        URLLink = _swig_property(_pyctp.CThostFtdcBulletinField_URLLink_get, _pyctp.CThostFtdcBulletinField_URLLink_set)
    __swig_setmethods__["MarketID"] = _pyctp.CThostFtdcBulletinField_MarketID_set
    __swig_getmethods__["MarketID"] = _pyctp.CThostFtdcBulletinField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_pyctp.CThostFtdcBulletinField_MarketID_get, _pyctp.CThostFtdcBulletinField_MarketID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcBulletinField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcBulletinField
    __del__ = lambda self: None
CThostFtdcBulletinField_swigregister = _pyctp.CThostFtdcBulletinField_swigregister
CThostFtdcBulletinField_swigregister(CThostFtdcBulletinField)

class CThostFtdcQryBulletinField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryBulletinField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryBulletinField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcQryBulletinField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcQryBulletinField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcQryBulletinField_ExchangeID_get, _pyctp.CThostFtdcQryBulletinField_ExchangeID_set)
    __swig_setmethods__["BulletinID"] = _pyctp.CThostFtdcQryBulletinField_BulletinID_set
    __swig_getmethods__["BulletinID"] = _pyctp.CThostFtdcQryBulletinField_BulletinID_get
    if _newclass:
        BulletinID = _swig_property(_pyctp.CThostFtdcQryBulletinField_BulletinID_get, _pyctp.CThostFtdcQryBulletinField_BulletinID_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CThostFtdcQryBulletinField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CThostFtdcQryBulletinField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CThostFtdcQryBulletinField_SequenceNo_get, _pyctp.CThostFtdcQryBulletinField_SequenceNo_set)
    __swig_setmethods__["NewsType"] = _pyctp.CThostFtdcQryBulletinField_NewsType_set
    __swig_getmethods__["NewsType"] = _pyctp.CThostFtdcQryBulletinField_NewsType_get
    if _newclass:
        NewsType = _swig_property(_pyctp.CThostFtdcQryBulletinField_NewsType_get, _pyctp.CThostFtdcQryBulletinField_NewsType_set)
    __swig_setmethods__["NewsUrgency"] = _pyctp.CThostFtdcQryBulletinField_NewsUrgency_set
    __swig_getmethods__["NewsUrgency"] = _pyctp.CThostFtdcQryBulletinField_NewsUrgency_get
    if _newclass:
        NewsUrgency = _swig_property(_pyctp.CThostFtdcQryBulletinField_NewsUrgency_get, _pyctp.CThostFtdcQryBulletinField_NewsUrgency_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryBulletinField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryBulletinField
    __del__ = lambda self: None
CThostFtdcQryBulletinField_swigregister = _pyctp.CThostFtdcQryBulletinField_swigregister
CThostFtdcQryBulletinField_swigregister(CThostFtdcQryBulletinField)

class CThostFtdcReqOpenAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcReqOpenAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcReqOpenAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcReqOpenAccountField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcReqOpenAccountField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_TradeCode_get, _pyctp.CThostFtdcReqOpenAccountField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcReqOpenAccountField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcReqOpenAccountField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_BankID_get, _pyctp.CThostFtdcReqOpenAccountField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcReqOpenAccountField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcReqOpenAccountField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_BankBranchID_get, _pyctp.CThostFtdcReqOpenAccountField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcReqOpenAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcReqOpenAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_BrokerID_get, _pyctp.CThostFtdcReqOpenAccountField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcReqOpenAccountField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcReqOpenAccountField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_BrokerBranchID_get, _pyctp.CThostFtdcReqOpenAccountField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcReqOpenAccountField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcReqOpenAccountField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_TradeDate_get, _pyctp.CThostFtdcReqOpenAccountField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcReqOpenAccountField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcReqOpenAccountField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_TradeTime_get, _pyctp.CThostFtdcReqOpenAccountField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcReqOpenAccountField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcReqOpenAccountField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_BankSerial_get, _pyctp.CThostFtdcReqOpenAccountField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcReqOpenAccountField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcReqOpenAccountField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_TradingDay_get, _pyctp.CThostFtdcReqOpenAccountField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcReqOpenAccountField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcReqOpenAccountField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_PlateSerial_get, _pyctp.CThostFtdcReqOpenAccountField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcReqOpenAccountField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcReqOpenAccountField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_LastFragment_get, _pyctp.CThostFtdcReqOpenAccountField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcReqOpenAccountField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcReqOpenAccountField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_SessionID_get, _pyctp.CThostFtdcReqOpenAccountField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CThostFtdcReqOpenAccountField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CThostFtdcReqOpenAccountField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_CustomerName_get, _pyctp.CThostFtdcReqOpenAccountField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CThostFtdcReqOpenAccountField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CThostFtdcReqOpenAccountField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_IdCardType_get, _pyctp.CThostFtdcReqOpenAccountField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcReqOpenAccountField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcReqOpenAccountField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_IdentifiedCardNo_get, _pyctp.CThostFtdcReqOpenAccountField_IdentifiedCardNo_set)
    __swig_setmethods__["Gender"] = _pyctp.CThostFtdcReqOpenAccountField_Gender_set
    __swig_getmethods__["Gender"] = _pyctp.CThostFtdcReqOpenAccountField_Gender_get
    if _newclass:
        Gender = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_Gender_get, _pyctp.CThostFtdcReqOpenAccountField_Gender_set)
    __swig_setmethods__["CountryCode"] = _pyctp.CThostFtdcReqOpenAccountField_CountryCode_set
    __swig_getmethods__["CountryCode"] = _pyctp.CThostFtdcReqOpenAccountField_CountryCode_get
    if _newclass:
        CountryCode = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_CountryCode_get, _pyctp.CThostFtdcReqOpenAccountField_CountryCode_set)
    __swig_setmethods__["CustType"] = _pyctp.CThostFtdcReqOpenAccountField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CThostFtdcReqOpenAccountField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_CustType_get, _pyctp.CThostFtdcReqOpenAccountField_CustType_set)
    __swig_setmethods__["Address"] = _pyctp.CThostFtdcReqOpenAccountField_Address_set
    __swig_getmethods__["Address"] = _pyctp.CThostFtdcReqOpenAccountField_Address_get
    if _newclass:
        Address = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_Address_get, _pyctp.CThostFtdcReqOpenAccountField_Address_set)
    __swig_setmethods__["ZipCode"] = _pyctp.CThostFtdcReqOpenAccountField_ZipCode_set
    __swig_getmethods__["ZipCode"] = _pyctp.CThostFtdcReqOpenAccountField_ZipCode_get
    if _newclass:
        ZipCode = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_ZipCode_get, _pyctp.CThostFtdcReqOpenAccountField_ZipCode_set)
    __swig_setmethods__["Telephone"] = _pyctp.CThostFtdcReqOpenAccountField_Telephone_set
    __swig_getmethods__["Telephone"] = _pyctp.CThostFtdcReqOpenAccountField_Telephone_get
    if _newclass:
        Telephone = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_Telephone_get, _pyctp.CThostFtdcReqOpenAccountField_Telephone_set)
    __swig_setmethods__["MobilePhone"] = _pyctp.CThostFtdcReqOpenAccountField_MobilePhone_set
    __swig_getmethods__["MobilePhone"] = _pyctp.CThostFtdcReqOpenAccountField_MobilePhone_get
    if _newclass:
        MobilePhone = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_MobilePhone_get, _pyctp.CThostFtdcReqOpenAccountField_MobilePhone_set)
    __swig_setmethods__["Fax"] = _pyctp.CThostFtdcReqOpenAccountField_Fax_set
    __swig_getmethods__["Fax"] = _pyctp.CThostFtdcReqOpenAccountField_Fax_get
    if _newclass:
        Fax = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_Fax_get, _pyctp.CThostFtdcReqOpenAccountField_Fax_set)
    __swig_setmethods__["EMail"] = _pyctp.CThostFtdcReqOpenAccountField_EMail_set
    __swig_getmethods__["EMail"] = _pyctp.CThostFtdcReqOpenAccountField_EMail_get
    if _newclass:
        EMail = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_EMail_get, _pyctp.CThostFtdcReqOpenAccountField_EMail_set)
    __swig_setmethods__["MoneyAccountStatus"] = _pyctp.CThostFtdcReqOpenAccountField_MoneyAccountStatus_set
    __swig_getmethods__["MoneyAccountStatus"] = _pyctp.CThostFtdcReqOpenAccountField_MoneyAccountStatus_get
    if _newclass:
        MoneyAccountStatus = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_MoneyAccountStatus_get, _pyctp.CThostFtdcReqOpenAccountField_MoneyAccountStatus_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CThostFtdcReqOpenAccountField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CThostFtdcReqOpenAccountField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_BankAccount_get, _pyctp.CThostFtdcReqOpenAccountField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CThostFtdcReqOpenAccountField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CThostFtdcReqOpenAccountField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_BankPassWord_get, _pyctp.CThostFtdcReqOpenAccountField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcReqOpenAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcReqOpenAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_AccountID_get, _pyctp.CThostFtdcReqOpenAccountField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcReqOpenAccountField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcReqOpenAccountField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_Password_get, _pyctp.CThostFtdcReqOpenAccountField_Password_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcReqOpenAccountField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcReqOpenAccountField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_InstallID_get, _pyctp.CThostFtdcReqOpenAccountField_InstallID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcReqOpenAccountField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcReqOpenAccountField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_VerifyCertNoFlag_get, _pyctp.CThostFtdcReqOpenAccountField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcReqOpenAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcReqOpenAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_CurrencyID_get, _pyctp.CThostFtdcReqOpenAccountField_CurrencyID_set)
    __swig_setmethods__["CashExchangeCode"] = _pyctp.CThostFtdcReqOpenAccountField_CashExchangeCode_set
    __swig_getmethods__["CashExchangeCode"] = _pyctp.CThostFtdcReqOpenAccountField_CashExchangeCode_get
    if _newclass:
        CashExchangeCode = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_CashExchangeCode_get, _pyctp.CThostFtdcReqOpenAccountField_CashExchangeCode_set)
    __swig_setmethods__["Digest"] = _pyctp.CThostFtdcReqOpenAccountField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CThostFtdcReqOpenAccountField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_Digest_get, _pyctp.CThostFtdcReqOpenAccountField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CThostFtdcReqOpenAccountField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CThostFtdcReqOpenAccountField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_BankAccType_get, _pyctp.CThostFtdcReqOpenAccountField_BankAccType_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CThostFtdcReqOpenAccountField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CThostFtdcReqOpenAccountField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_DeviceID_get, _pyctp.CThostFtdcReqOpenAccountField_DeviceID_set)
    __swig_setmethods__["BankSecuAccType"] = _pyctp.CThostFtdcReqOpenAccountField_BankSecuAccType_set
    __swig_getmethods__["BankSecuAccType"] = _pyctp.CThostFtdcReqOpenAccountField_BankSecuAccType_get
    if _newclass:
        BankSecuAccType = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_BankSecuAccType_get, _pyctp.CThostFtdcReqOpenAccountField_BankSecuAccType_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcReqOpenAccountField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcReqOpenAccountField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_BrokerIDByBank_get, _pyctp.CThostFtdcReqOpenAccountField_BrokerIDByBank_set)
    __swig_setmethods__["BankSecuAcc"] = _pyctp.CThostFtdcReqOpenAccountField_BankSecuAcc_set
    __swig_getmethods__["BankSecuAcc"] = _pyctp.CThostFtdcReqOpenAccountField_BankSecuAcc_get
    if _newclass:
        BankSecuAcc = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_BankSecuAcc_get, _pyctp.CThostFtdcReqOpenAccountField_BankSecuAcc_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CThostFtdcReqOpenAccountField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CThostFtdcReqOpenAccountField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_BankPwdFlag_get, _pyctp.CThostFtdcReqOpenAccountField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CThostFtdcReqOpenAccountField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CThostFtdcReqOpenAccountField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_SecuPwdFlag_get, _pyctp.CThostFtdcReqOpenAccountField_SecuPwdFlag_set)
    __swig_setmethods__["OperNo"] = _pyctp.CThostFtdcReqOpenAccountField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CThostFtdcReqOpenAccountField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_OperNo_get, _pyctp.CThostFtdcReqOpenAccountField_OperNo_set)
    __swig_setmethods__["TID"] = _pyctp.CThostFtdcReqOpenAccountField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CThostFtdcReqOpenAccountField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_TID_get, _pyctp.CThostFtdcReqOpenAccountField_TID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcReqOpenAccountField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcReqOpenAccountField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcReqOpenAccountField_UserID_get, _pyctp.CThostFtdcReqOpenAccountField_UserID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcReqOpenAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcReqOpenAccountField
    __del__ = lambda self: None
CThostFtdcReqOpenAccountField_swigregister = _pyctp.CThostFtdcReqOpenAccountField_swigregister
CThostFtdcReqOpenAccountField_swigregister(CThostFtdcReqOpenAccountField)

class CThostFtdcReqCancelAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcReqCancelAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcReqCancelAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcReqCancelAccountField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcReqCancelAccountField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_TradeCode_get, _pyctp.CThostFtdcReqCancelAccountField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcReqCancelAccountField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcReqCancelAccountField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_BankID_get, _pyctp.CThostFtdcReqCancelAccountField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcReqCancelAccountField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcReqCancelAccountField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_BankBranchID_get, _pyctp.CThostFtdcReqCancelAccountField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcReqCancelAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcReqCancelAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_BrokerID_get, _pyctp.CThostFtdcReqCancelAccountField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcReqCancelAccountField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcReqCancelAccountField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_BrokerBranchID_get, _pyctp.CThostFtdcReqCancelAccountField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcReqCancelAccountField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcReqCancelAccountField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_TradeDate_get, _pyctp.CThostFtdcReqCancelAccountField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcReqCancelAccountField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcReqCancelAccountField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_TradeTime_get, _pyctp.CThostFtdcReqCancelAccountField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcReqCancelAccountField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcReqCancelAccountField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_BankSerial_get, _pyctp.CThostFtdcReqCancelAccountField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcReqCancelAccountField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcReqCancelAccountField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_TradingDay_get, _pyctp.CThostFtdcReqCancelAccountField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcReqCancelAccountField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcReqCancelAccountField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_PlateSerial_get, _pyctp.CThostFtdcReqCancelAccountField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcReqCancelAccountField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcReqCancelAccountField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_LastFragment_get, _pyctp.CThostFtdcReqCancelAccountField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcReqCancelAccountField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcReqCancelAccountField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_SessionID_get, _pyctp.CThostFtdcReqCancelAccountField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CThostFtdcReqCancelAccountField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CThostFtdcReqCancelAccountField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_CustomerName_get, _pyctp.CThostFtdcReqCancelAccountField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CThostFtdcReqCancelAccountField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CThostFtdcReqCancelAccountField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_IdCardType_get, _pyctp.CThostFtdcReqCancelAccountField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcReqCancelAccountField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcReqCancelAccountField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_IdentifiedCardNo_get, _pyctp.CThostFtdcReqCancelAccountField_IdentifiedCardNo_set)
    __swig_setmethods__["Gender"] = _pyctp.CThostFtdcReqCancelAccountField_Gender_set
    __swig_getmethods__["Gender"] = _pyctp.CThostFtdcReqCancelAccountField_Gender_get
    if _newclass:
        Gender = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_Gender_get, _pyctp.CThostFtdcReqCancelAccountField_Gender_set)
    __swig_setmethods__["CountryCode"] = _pyctp.CThostFtdcReqCancelAccountField_CountryCode_set
    __swig_getmethods__["CountryCode"] = _pyctp.CThostFtdcReqCancelAccountField_CountryCode_get
    if _newclass:
        CountryCode = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_CountryCode_get, _pyctp.CThostFtdcReqCancelAccountField_CountryCode_set)
    __swig_setmethods__["CustType"] = _pyctp.CThostFtdcReqCancelAccountField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CThostFtdcReqCancelAccountField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_CustType_get, _pyctp.CThostFtdcReqCancelAccountField_CustType_set)
    __swig_setmethods__["Address"] = _pyctp.CThostFtdcReqCancelAccountField_Address_set
    __swig_getmethods__["Address"] = _pyctp.CThostFtdcReqCancelAccountField_Address_get
    if _newclass:
        Address = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_Address_get, _pyctp.CThostFtdcReqCancelAccountField_Address_set)
    __swig_setmethods__["ZipCode"] = _pyctp.CThostFtdcReqCancelAccountField_ZipCode_set
    __swig_getmethods__["ZipCode"] = _pyctp.CThostFtdcReqCancelAccountField_ZipCode_get
    if _newclass:
        ZipCode = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_ZipCode_get, _pyctp.CThostFtdcReqCancelAccountField_ZipCode_set)
    __swig_setmethods__["Telephone"] = _pyctp.CThostFtdcReqCancelAccountField_Telephone_set
    __swig_getmethods__["Telephone"] = _pyctp.CThostFtdcReqCancelAccountField_Telephone_get
    if _newclass:
        Telephone = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_Telephone_get, _pyctp.CThostFtdcReqCancelAccountField_Telephone_set)
    __swig_setmethods__["MobilePhone"] = _pyctp.CThostFtdcReqCancelAccountField_MobilePhone_set
    __swig_getmethods__["MobilePhone"] = _pyctp.CThostFtdcReqCancelAccountField_MobilePhone_get
    if _newclass:
        MobilePhone = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_MobilePhone_get, _pyctp.CThostFtdcReqCancelAccountField_MobilePhone_set)
    __swig_setmethods__["Fax"] = _pyctp.CThostFtdcReqCancelAccountField_Fax_set
    __swig_getmethods__["Fax"] = _pyctp.CThostFtdcReqCancelAccountField_Fax_get
    if _newclass:
        Fax = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_Fax_get, _pyctp.CThostFtdcReqCancelAccountField_Fax_set)
    __swig_setmethods__["EMail"] = _pyctp.CThostFtdcReqCancelAccountField_EMail_set
    __swig_getmethods__["EMail"] = _pyctp.CThostFtdcReqCancelAccountField_EMail_get
    if _newclass:
        EMail = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_EMail_get, _pyctp.CThostFtdcReqCancelAccountField_EMail_set)
    __swig_setmethods__["MoneyAccountStatus"] = _pyctp.CThostFtdcReqCancelAccountField_MoneyAccountStatus_set
    __swig_getmethods__["MoneyAccountStatus"] = _pyctp.CThostFtdcReqCancelAccountField_MoneyAccountStatus_get
    if _newclass:
        MoneyAccountStatus = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_MoneyAccountStatus_get, _pyctp.CThostFtdcReqCancelAccountField_MoneyAccountStatus_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CThostFtdcReqCancelAccountField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CThostFtdcReqCancelAccountField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_BankAccount_get, _pyctp.CThostFtdcReqCancelAccountField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CThostFtdcReqCancelAccountField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CThostFtdcReqCancelAccountField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_BankPassWord_get, _pyctp.CThostFtdcReqCancelAccountField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcReqCancelAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcReqCancelAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_AccountID_get, _pyctp.CThostFtdcReqCancelAccountField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcReqCancelAccountField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcReqCancelAccountField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_Password_get, _pyctp.CThostFtdcReqCancelAccountField_Password_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcReqCancelAccountField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcReqCancelAccountField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_InstallID_get, _pyctp.CThostFtdcReqCancelAccountField_InstallID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcReqCancelAccountField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcReqCancelAccountField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_VerifyCertNoFlag_get, _pyctp.CThostFtdcReqCancelAccountField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcReqCancelAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcReqCancelAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_CurrencyID_get, _pyctp.CThostFtdcReqCancelAccountField_CurrencyID_set)
    __swig_setmethods__["CashExchangeCode"] = _pyctp.CThostFtdcReqCancelAccountField_CashExchangeCode_set
    __swig_getmethods__["CashExchangeCode"] = _pyctp.CThostFtdcReqCancelAccountField_CashExchangeCode_get
    if _newclass:
        CashExchangeCode = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_CashExchangeCode_get, _pyctp.CThostFtdcReqCancelAccountField_CashExchangeCode_set)
    __swig_setmethods__["Digest"] = _pyctp.CThostFtdcReqCancelAccountField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CThostFtdcReqCancelAccountField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_Digest_get, _pyctp.CThostFtdcReqCancelAccountField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CThostFtdcReqCancelAccountField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CThostFtdcReqCancelAccountField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_BankAccType_get, _pyctp.CThostFtdcReqCancelAccountField_BankAccType_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CThostFtdcReqCancelAccountField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CThostFtdcReqCancelAccountField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_DeviceID_get, _pyctp.CThostFtdcReqCancelAccountField_DeviceID_set)
    __swig_setmethods__["BankSecuAccType"] = _pyctp.CThostFtdcReqCancelAccountField_BankSecuAccType_set
    __swig_getmethods__["BankSecuAccType"] = _pyctp.CThostFtdcReqCancelAccountField_BankSecuAccType_get
    if _newclass:
        BankSecuAccType = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_BankSecuAccType_get, _pyctp.CThostFtdcReqCancelAccountField_BankSecuAccType_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcReqCancelAccountField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcReqCancelAccountField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_BrokerIDByBank_get, _pyctp.CThostFtdcReqCancelAccountField_BrokerIDByBank_set)
    __swig_setmethods__["BankSecuAcc"] = _pyctp.CThostFtdcReqCancelAccountField_BankSecuAcc_set
    __swig_getmethods__["BankSecuAcc"] = _pyctp.CThostFtdcReqCancelAccountField_BankSecuAcc_get
    if _newclass:
        BankSecuAcc = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_BankSecuAcc_get, _pyctp.CThostFtdcReqCancelAccountField_BankSecuAcc_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CThostFtdcReqCancelAccountField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CThostFtdcReqCancelAccountField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_BankPwdFlag_get, _pyctp.CThostFtdcReqCancelAccountField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CThostFtdcReqCancelAccountField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CThostFtdcReqCancelAccountField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_SecuPwdFlag_get, _pyctp.CThostFtdcReqCancelAccountField_SecuPwdFlag_set)
    __swig_setmethods__["OperNo"] = _pyctp.CThostFtdcReqCancelAccountField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CThostFtdcReqCancelAccountField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_OperNo_get, _pyctp.CThostFtdcReqCancelAccountField_OperNo_set)
    __swig_setmethods__["TID"] = _pyctp.CThostFtdcReqCancelAccountField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CThostFtdcReqCancelAccountField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_TID_get, _pyctp.CThostFtdcReqCancelAccountField_TID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcReqCancelAccountField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcReqCancelAccountField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcReqCancelAccountField_UserID_get, _pyctp.CThostFtdcReqCancelAccountField_UserID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcReqCancelAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcReqCancelAccountField
    __del__ = lambda self: None
CThostFtdcReqCancelAccountField_swigregister = _pyctp.CThostFtdcReqCancelAccountField_swigregister
CThostFtdcReqCancelAccountField_swigregister(CThostFtdcReqCancelAccountField)

class CThostFtdcReqChangeAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcReqChangeAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcReqChangeAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcReqChangeAccountField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcReqChangeAccountField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_TradeCode_get, _pyctp.CThostFtdcReqChangeAccountField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcReqChangeAccountField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcReqChangeAccountField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_BankID_get, _pyctp.CThostFtdcReqChangeAccountField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcReqChangeAccountField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcReqChangeAccountField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_BankBranchID_get, _pyctp.CThostFtdcReqChangeAccountField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcReqChangeAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcReqChangeAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_BrokerID_get, _pyctp.CThostFtdcReqChangeAccountField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcReqChangeAccountField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcReqChangeAccountField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_BrokerBranchID_get, _pyctp.CThostFtdcReqChangeAccountField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcReqChangeAccountField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcReqChangeAccountField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_TradeDate_get, _pyctp.CThostFtdcReqChangeAccountField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcReqChangeAccountField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcReqChangeAccountField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_TradeTime_get, _pyctp.CThostFtdcReqChangeAccountField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcReqChangeAccountField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcReqChangeAccountField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_BankSerial_get, _pyctp.CThostFtdcReqChangeAccountField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcReqChangeAccountField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcReqChangeAccountField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_TradingDay_get, _pyctp.CThostFtdcReqChangeAccountField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcReqChangeAccountField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcReqChangeAccountField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_PlateSerial_get, _pyctp.CThostFtdcReqChangeAccountField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcReqChangeAccountField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcReqChangeAccountField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_LastFragment_get, _pyctp.CThostFtdcReqChangeAccountField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcReqChangeAccountField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcReqChangeAccountField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_SessionID_get, _pyctp.CThostFtdcReqChangeAccountField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CThostFtdcReqChangeAccountField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CThostFtdcReqChangeAccountField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_CustomerName_get, _pyctp.CThostFtdcReqChangeAccountField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CThostFtdcReqChangeAccountField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CThostFtdcReqChangeAccountField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_IdCardType_get, _pyctp.CThostFtdcReqChangeAccountField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcReqChangeAccountField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcReqChangeAccountField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_IdentifiedCardNo_get, _pyctp.CThostFtdcReqChangeAccountField_IdentifiedCardNo_set)
    __swig_setmethods__["Gender"] = _pyctp.CThostFtdcReqChangeAccountField_Gender_set
    __swig_getmethods__["Gender"] = _pyctp.CThostFtdcReqChangeAccountField_Gender_get
    if _newclass:
        Gender = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_Gender_get, _pyctp.CThostFtdcReqChangeAccountField_Gender_set)
    __swig_setmethods__["CountryCode"] = _pyctp.CThostFtdcReqChangeAccountField_CountryCode_set
    __swig_getmethods__["CountryCode"] = _pyctp.CThostFtdcReqChangeAccountField_CountryCode_get
    if _newclass:
        CountryCode = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_CountryCode_get, _pyctp.CThostFtdcReqChangeAccountField_CountryCode_set)
    __swig_setmethods__["CustType"] = _pyctp.CThostFtdcReqChangeAccountField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CThostFtdcReqChangeAccountField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_CustType_get, _pyctp.CThostFtdcReqChangeAccountField_CustType_set)
    __swig_setmethods__["Address"] = _pyctp.CThostFtdcReqChangeAccountField_Address_set
    __swig_getmethods__["Address"] = _pyctp.CThostFtdcReqChangeAccountField_Address_get
    if _newclass:
        Address = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_Address_get, _pyctp.CThostFtdcReqChangeAccountField_Address_set)
    __swig_setmethods__["ZipCode"] = _pyctp.CThostFtdcReqChangeAccountField_ZipCode_set
    __swig_getmethods__["ZipCode"] = _pyctp.CThostFtdcReqChangeAccountField_ZipCode_get
    if _newclass:
        ZipCode = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_ZipCode_get, _pyctp.CThostFtdcReqChangeAccountField_ZipCode_set)
    __swig_setmethods__["Telephone"] = _pyctp.CThostFtdcReqChangeAccountField_Telephone_set
    __swig_getmethods__["Telephone"] = _pyctp.CThostFtdcReqChangeAccountField_Telephone_get
    if _newclass:
        Telephone = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_Telephone_get, _pyctp.CThostFtdcReqChangeAccountField_Telephone_set)
    __swig_setmethods__["MobilePhone"] = _pyctp.CThostFtdcReqChangeAccountField_MobilePhone_set
    __swig_getmethods__["MobilePhone"] = _pyctp.CThostFtdcReqChangeAccountField_MobilePhone_get
    if _newclass:
        MobilePhone = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_MobilePhone_get, _pyctp.CThostFtdcReqChangeAccountField_MobilePhone_set)
    __swig_setmethods__["Fax"] = _pyctp.CThostFtdcReqChangeAccountField_Fax_set
    __swig_getmethods__["Fax"] = _pyctp.CThostFtdcReqChangeAccountField_Fax_get
    if _newclass:
        Fax = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_Fax_get, _pyctp.CThostFtdcReqChangeAccountField_Fax_set)
    __swig_setmethods__["EMail"] = _pyctp.CThostFtdcReqChangeAccountField_EMail_set
    __swig_getmethods__["EMail"] = _pyctp.CThostFtdcReqChangeAccountField_EMail_get
    if _newclass:
        EMail = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_EMail_get, _pyctp.CThostFtdcReqChangeAccountField_EMail_set)
    __swig_setmethods__["MoneyAccountStatus"] = _pyctp.CThostFtdcReqChangeAccountField_MoneyAccountStatus_set
    __swig_getmethods__["MoneyAccountStatus"] = _pyctp.CThostFtdcReqChangeAccountField_MoneyAccountStatus_get
    if _newclass:
        MoneyAccountStatus = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_MoneyAccountStatus_get, _pyctp.CThostFtdcReqChangeAccountField_MoneyAccountStatus_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CThostFtdcReqChangeAccountField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CThostFtdcReqChangeAccountField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_BankAccount_get, _pyctp.CThostFtdcReqChangeAccountField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CThostFtdcReqChangeAccountField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CThostFtdcReqChangeAccountField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_BankPassWord_get, _pyctp.CThostFtdcReqChangeAccountField_BankPassWord_set)
    __swig_setmethods__["NewBankAccount"] = _pyctp.CThostFtdcReqChangeAccountField_NewBankAccount_set
    __swig_getmethods__["NewBankAccount"] = _pyctp.CThostFtdcReqChangeAccountField_NewBankAccount_get
    if _newclass:
        NewBankAccount = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_NewBankAccount_get, _pyctp.CThostFtdcReqChangeAccountField_NewBankAccount_set)
    __swig_setmethods__["NewBankPassWord"] = _pyctp.CThostFtdcReqChangeAccountField_NewBankPassWord_set
    __swig_getmethods__["NewBankPassWord"] = _pyctp.CThostFtdcReqChangeAccountField_NewBankPassWord_get
    if _newclass:
        NewBankPassWord = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_NewBankPassWord_get, _pyctp.CThostFtdcReqChangeAccountField_NewBankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcReqChangeAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcReqChangeAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_AccountID_get, _pyctp.CThostFtdcReqChangeAccountField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcReqChangeAccountField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcReqChangeAccountField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_Password_get, _pyctp.CThostFtdcReqChangeAccountField_Password_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CThostFtdcReqChangeAccountField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CThostFtdcReqChangeAccountField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_BankAccType_get, _pyctp.CThostFtdcReqChangeAccountField_BankAccType_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcReqChangeAccountField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcReqChangeAccountField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_InstallID_get, _pyctp.CThostFtdcReqChangeAccountField_InstallID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcReqChangeAccountField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcReqChangeAccountField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_VerifyCertNoFlag_get, _pyctp.CThostFtdcReqChangeAccountField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcReqChangeAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcReqChangeAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_CurrencyID_get, _pyctp.CThostFtdcReqChangeAccountField_CurrencyID_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcReqChangeAccountField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcReqChangeAccountField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_BrokerIDByBank_get, _pyctp.CThostFtdcReqChangeAccountField_BrokerIDByBank_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CThostFtdcReqChangeAccountField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CThostFtdcReqChangeAccountField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_BankPwdFlag_get, _pyctp.CThostFtdcReqChangeAccountField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CThostFtdcReqChangeAccountField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CThostFtdcReqChangeAccountField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_SecuPwdFlag_get, _pyctp.CThostFtdcReqChangeAccountField_SecuPwdFlag_set)
    __swig_setmethods__["TID"] = _pyctp.CThostFtdcReqChangeAccountField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CThostFtdcReqChangeAccountField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_TID_get, _pyctp.CThostFtdcReqChangeAccountField_TID_set)
    __swig_setmethods__["Digest"] = _pyctp.CThostFtdcReqChangeAccountField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CThostFtdcReqChangeAccountField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CThostFtdcReqChangeAccountField_Digest_get, _pyctp.CThostFtdcReqChangeAccountField_Digest_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcReqChangeAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcReqChangeAccountField
    __del__ = lambda self: None
CThostFtdcReqChangeAccountField_swigregister = _pyctp.CThostFtdcReqChangeAccountField_swigregister
CThostFtdcReqChangeAccountField_swigregister(CThostFtdcReqChangeAccountField)

class CThostFtdcReqTransferField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcReqTransferField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcReqTransferField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcReqTransferField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcReqTransferField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcReqTransferField_TradeCode_get, _pyctp.CThostFtdcReqTransferField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcReqTransferField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcReqTransferField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcReqTransferField_BankID_get, _pyctp.CThostFtdcReqTransferField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcReqTransferField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcReqTransferField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcReqTransferField_BankBranchID_get, _pyctp.CThostFtdcReqTransferField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcReqTransferField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcReqTransferField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcReqTransferField_BrokerID_get, _pyctp.CThostFtdcReqTransferField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcReqTransferField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcReqTransferField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcReqTransferField_BrokerBranchID_get, _pyctp.CThostFtdcReqTransferField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcReqTransferField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcReqTransferField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcReqTransferField_TradeDate_get, _pyctp.CThostFtdcReqTransferField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcReqTransferField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcReqTransferField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcReqTransferField_TradeTime_get, _pyctp.CThostFtdcReqTransferField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcReqTransferField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcReqTransferField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcReqTransferField_BankSerial_get, _pyctp.CThostFtdcReqTransferField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcReqTransferField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcReqTransferField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcReqTransferField_TradingDay_get, _pyctp.CThostFtdcReqTransferField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcReqTransferField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcReqTransferField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcReqTransferField_PlateSerial_get, _pyctp.CThostFtdcReqTransferField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcReqTransferField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcReqTransferField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcReqTransferField_LastFragment_get, _pyctp.CThostFtdcReqTransferField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcReqTransferField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcReqTransferField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcReqTransferField_SessionID_get, _pyctp.CThostFtdcReqTransferField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CThostFtdcReqTransferField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CThostFtdcReqTransferField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CThostFtdcReqTransferField_CustomerName_get, _pyctp.CThostFtdcReqTransferField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CThostFtdcReqTransferField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CThostFtdcReqTransferField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CThostFtdcReqTransferField_IdCardType_get, _pyctp.CThostFtdcReqTransferField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcReqTransferField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcReqTransferField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CThostFtdcReqTransferField_IdentifiedCardNo_get, _pyctp.CThostFtdcReqTransferField_IdentifiedCardNo_set)
    __swig_setmethods__["CustType"] = _pyctp.CThostFtdcReqTransferField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CThostFtdcReqTransferField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CThostFtdcReqTransferField_CustType_get, _pyctp.CThostFtdcReqTransferField_CustType_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CThostFtdcReqTransferField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CThostFtdcReqTransferField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CThostFtdcReqTransferField_BankAccount_get, _pyctp.CThostFtdcReqTransferField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CThostFtdcReqTransferField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CThostFtdcReqTransferField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CThostFtdcReqTransferField_BankPassWord_get, _pyctp.CThostFtdcReqTransferField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcReqTransferField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcReqTransferField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcReqTransferField_AccountID_get, _pyctp.CThostFtdcReqTransferField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcReqTransferField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcReqTransferField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcReqTransferField_Password_get, _pyctp.CThostFtdcReqTransferField_Password_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcReqTransferField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcReqTransferField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcReqTransferField_InstallID_get, _pyctp.CThostFtdcReqTransferField_InstallID_set)
    __swig_setmethods__["FutureSerial"] = _pyctp.CThostFtdcReqTransferField_FutureSerial_set
    __swig_getmethods__["FutureSerial"] = _pyctp.CThostFtdcReqTransferField_FutureSerial_get
    if _newclass:
        FutureSerial = _swig_property(_pyctp.CThostFtdcReqTransferField_FutureSerial_get, _pyctp.CThostFtdcReqTransferField_FutureSerial_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcReqTransferField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcReqTransferField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcReqTransferField_UserID_get, _pyctp.CThostFtdcReqTransferField_UserID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcReqTransferField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcReqTransferField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CThostFtdcReqTransferField_VerifyCertNoFlag_get, _pyctp.CThostFtdcReqTransferField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcReqTransferField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcReqTransferField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcReqTransferField_CurrencyID_get, _pyctp.CThostFtdcReqTransferField_CurrencyID_set)
    __swig_setmethods__["TradeAmount"] = _pyctp.CThostFtdcReqTransferField_TradeAmount_set
    __swig_getmethods__["TradeAmount"] = _pyctp.CThostFtdcReqTransferField_TradeAmount_get
    if _newclass:
        TradeAmount = _swig_property(_pyctp.CThostFtdcReqTransferField_TradeAmount_get, _pyctp.CThostFtdcReqTransferField_TradeAmount_set)
    __swig_setmethods__["FutureFetchAmount"] = _pyctp.CThostFtdcReqTransferField_FutureFetchAmount_set
    __swig_getmethods__["FutureFetchAmount"] = _pyctp.CThostFtdcReqTransferField_FutureFetchAmount_get
    if _newclass:
        FutureFetchAmount = _swig_property(_pyctp.CThostFtdcReqTransferField_FutureFetchAmount_get, _pyctp.CThostFtdcReqTransferField_FutureFetchAmount_set)
    __swig_setmethods__["FeePayFlag"] = _pyctp.CThostFtdcReqTransferField_FeePayFlag_set
    __swig_getmethods__["FeePayFlag"] = _pyctp.CThostFtdcReqTransferField_FeePayFlag_get
    if _newclass:
        FeePayFlag = _swig_property(_pyctp.CThostFtdcReqTransferField_FeePayFlag_get, _pyctp.CThostFtdcReqTransferField_FeePayFlag_set)
    __swig_setmethods__["CustFee"] = _pyctp.CThostFtdcReqTransferField_CustFee_set
    __swig_getmethods__["CustFee"] = _pyctp.CThostFtdcReqTransferField_CustFee_get
    if _newclass:
        CustFee = _swig_property(_pyctp.CThostFtdcReqTransferField_CustFee_get, _pyctp.CThostFtdcReqTransferField_CustFee_set)
    __swig_setmethods__["BrokerFee"] = _pyctp.CThostFtdcReqTransferField_BrokerFee_set
    __swig_getmethods__["BrokerFee"] = _pyctp.CThostFtdcReqTransferField_BrokerFee_get
    if _newclass:
        BrokerFee = _swig_property(_pyctp.CThostFtdcReqTransferField_BrokerFee_get, _pyctp.CThostFtdcReqTransferField_BrokerFee_set)
    __swig_setmethods__["Message"] = _pyctp.CThostFtdcReqTransferField_Message_set
    __swig_getmethods__["Message"] = _pyctp.CThostFtdcReqTransferField_Message_get
    if _newclass:
        Message = _swig_property(_pyctp.CThostFtdcReqTransferField_Message_get, _pyctp.CThostFtdcReqTransferField_Message_set)
    __swig_setmethods__["Digest"] = _pyctp.CThostFtdcReqTransferField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CThostFtdcReqTransferField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CThostFtdcReqTransferField_Digest_get, _pyctp.CThostFtdcReqTransferField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CThostFtdcReqTransferField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CThostFtdcReqTransferField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CThostFtdcReqTransferField_BankAccType_get, _pyctp.CThostFtdcReqTransferField_BankAccType_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CThostFtdcReqTransferField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CThostFtdcReqTransferField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CThostFtdcReqTransferField_DeviceID_get, _pyctp.CThostFtdcReqTransferField_DeviceID_set)
    __swig_setmethods__["BankSecuAccType"] = _pyctp.CThostFtdcReqTransferField_BankSecuAccType_set
    __swig_getmethods__["BankSecuAccType"] = _pyctp.CThostFtdcReqTransferField_BankSecuAccType_get
    if _newclass:
        BankSecuAccType = _swig_property(_pyctp.CThostFtdcReqTransferField_BankSecuAccType_get, _pyctp.CThostFtdcReqTransferField_BankSecuAccType_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcReqTransferField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcReqTransferField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CThostFtdcReqTransferField_BrokerIDByBank_get, _pyctp.CThostFtdcReqTransferField_BrokerIDByBank_set)
    __swig_setmethods__["BankSecuAcc"] = _pyctp.CThostFtdcReqTransferField_BankSecuAcc_set
    __swig_getmethods__["BankSecuAcc"] = _pyctp.CThostFtdcReqTransferField_BankSecuAcc_get
    if _newclass:
        BankSecuAcc = _swig_property(_pyctp.CThostFtdcReqTransferField_BankSecuAcc_get, _pyctp.CThostFtdcReqTransferField_BankSecuAcc_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CThostFtdcReqTransferField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CThostFtdcReqTransferField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CThostFtdcReqTransferField_BankPwdFlag_get, _pyctp.CThostFtdcReqTransferField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CThostFtdcReqTransferField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CThostFtdcReqTransferField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CThostFtdcReqTransferField_SecuPwdFlag_get, _pyctp.CThostFtdcReqTransferField_SecuPwdFlag_set)
    __swig_setmethods__["OperNo"] = _pyctp.CThostFtdcReqTransferField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CThostFtdcReqTransferField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CThostFtdcReqTransferField_OperNo_get, _pyctp.CThostFtdcReqTransferField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcReqTransferField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcReqTransferField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcReqTransferField_RequestID_get, _pyctp.CThostFtdcReqTransferField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CThostFtdcReqTransferField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CThostFtdcReqTransferField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CThostFtdcReqTransferField_TID_get, _pyctp.CThostFtdcReqTransferField_TID_set)
    __swig_setmethods__["TransferStatus"] = _pyctp.CThostFtdcReqTransferField_TransferStatus_set
    __swig_getmethods__["TransferStatus"] = _pyctp.CThostFtdcReqTransferField_TransferStatus_get
    if _newclass:
        TransferStatus = _swig_property(_pyctp.CThostFtdcReqTransferField_TransferStatus_get, _pyctp.CThostFtdcReqTransferField_TransferStatus_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcReqTransferField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcReqTransferField
    __del__ = lambda self: None
CThostFtdcReqTransferField_swigregister = _pyctp.CThostFtdcReqTransferField_swigregister
CThostFtdcReqTransferField_swigregister(CThostFtdcReqTransferField)

class CThostFtdcRspTransferField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcRspTransferField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcRspTransferField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcRspTransferField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcRspTransferField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcRspTransferField_TradeCode_get, _pyctp.CThostFtdcRspTransferField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcRspTransferField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcRspTransferField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcRspTransferField_BankID_get, _pyctp.CThostFtdcRspTransferField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcRspTransferField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcRspTransferField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcRspTransferField_BankBranchID_get, _pyctp.CThostFtdcRspTransferField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcRspTransferField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcRspTransferField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcRspTransferField_BrokerID_get, _pyctp.CThostFtdcRspTransferField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcRspTransferField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcRspTransferField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcRspTransferField_BrokerBranchID_get, _pyctp.CThostFtdcRspTransferField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcRspTransferField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcRspTransferField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcRspTransferField_TradeDate_get, _pyctp.CThostFtdcRspTransferField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcRspTransferField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcRspTransferField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcRspTransferField_TradeTime_get, _pyctp.CThostFtdcRspTransferField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcRspTransferField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcRspTransferField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcRspTransferField_BankSerial_get, _pyctp.CThostFtdcRspTransferField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcRspTransferField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcRspTransferField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcRspTransferField_TradingDay_get, _pyctp.CThostFtdcRspTransferField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcRspTransferField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcRspTransferField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcRspTransferField_PlateSerial_get, _pyctp.CThostFtdcRspTransferField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcRspTransferField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcRspTransferField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcRspTransferField_LastFragment_get, _pyctp.CThostFtdcRspTransferField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcRspTransferField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcRspTransferField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcRspTransferField_SessionID_get, _pyctp.CThostFtdcRspTransferField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CThostFtdcRspTransferField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CThostFtdcRspTransferField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CThostFtdcRspTransferField_CustomerName_get, _pyctp.CThostFtdcRspTransferField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CThostFtdcRspTransferField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CThostFtdcRspTransferField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CThostFtdcRspTransferField_IdCardType_get, _pyctp.CThostFtdcRspTransferField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcRspTransferField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcRspTransferField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CThostFtdcRspTransferField_IdentifiedCardNo_get, _pyctp.CThostFtdcRspTransferField_IdentifiedCardNo_set)
    __swig_setmethods__["CustType"] = _pyctp.CThostFtdcRspTransferField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CThostFtdcRspTransferField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CThostFtdcRspTransferField_CustType_get, _pyctp.CThostFtdcRspTransferField_CustType_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CThostFtdcRspTransferField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CThostFtdcRspTransferField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CThostFtdcRspTransferField_BankAccount_get, _pyctp.CThostFtdcRspTransferField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CThostFtdcRspTransferField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CThostFtdcRspTransferField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CThostFtdcRspTransferField_BankPassWord_get, _pyctp.CThostFtdcRspTransferField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcRspTransferField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcRspTransferField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcRspTransferField_AccountID_get, _pyctp.CThostFtdcRspTransferField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcRspTransferField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcRspTransferField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcRspTransferField_Password_get, _pyctp.CThostFtdcRspTransferField_Password_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcRspTransferField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcRspTransferField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcRspTransferField_InstallID_get, _pyctp.CThostFtdcRspTransferField_InstallID_set)
    __swig_setmethods__["FutureSerial"] = _pyctp.CThostFtdcRspTransferField_FutureSerial_set
    __swig_getmethods__["FutureSerial"] = _pyctp.CThostFtdcRspTransferField_FutureSerial_get
    if _newclass:
        FutureSerial = _swig_property(_pyctp.CThostFtdcRspTransferField_FutureSerial_get, _pyctp.CThostFtdcRspTransferField_FutureSerial_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcRspTransferField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcRspTransferField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcRspTransferField_UserID_get, _pyctp.CThostFtdcRspTransferField_UserID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcRspTransferField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcRspTransferField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CThostFtdcRspTransferField_VerifyCertNoFlag_get, _pyctp.CThostFtdcRspTransferField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcRspTransferField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcRspTransferField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcRspTransferField_CurrencyID_get, _pyctp.CThostFtdcRspTransferField_CurrencyID_set)
    __swig_setmethods__["TradeAmount"] = _pyctp.CThostFtdcRspTransferField_TradeAmount_set
    __swig_getmethods__["TradeAmount"] = _pyctp.CThostFtdcRspTransferField_TradeAmount_get
    if _newclass:
        TradeAmount = _swig_property(_pyctp.CThostFtdcRspTransferField_TradeAmount_get, _pyctp.CThostFtdcRspTransferField_TradeAmount_set)
    __swig_setmethods__["FutureFetchAmount"] = _pyctp.CThostFtdcRspTransferField_FutureFetchAmount_set
    __swig_getmethods__["FutureFetchAmount"] = _pyctp.CThostFtdcRspTransferField_FutureFetchAmount_get
    if _newclass:
        FutureFetchAmount = _swig_property(_pyctp.CThostFtdcRspTransferField_FutureFetchAmount_get, _pyctp.CThostFtdcRspTransferField_FutureFetchAmount_set)
    __swig_setmethods__["FeePayFlag"] = _pyctp.CThostFtdcRspTransferField_FeePayFlag_set
    __swig_getmethods__["FeePayFlag"] = _pyctp.CThostFtdcRspTransferField_FeePayFlag_get
    if _newclass:
        FeePayFlag = _swig_property(_pyctp.CThostFtdcRspTransferField_FeePayFlag_get, _pyctp.CThostFtdcRspTransferField_FeePayFlag_set)
    __swig_setmethods__["CustFee"] = _pyctp.CThostFtdcRspTransferField_CustFee_set
    __swig_getmethods__["CustFee"] = _pyctp.CThostFtdcRspTransferField_CustFee_get
    if _newclass:
        CustFee = _swig_property(_pyctp.CThostFtdcRspTransferField_CustFee_get, _pyctp.CThostFtdcRspTransferField_CustFee_set)
    __swig_setmethods__["BrokerFee"] = _pyctp.CThostFtdcRspTransferField_BrokerFee_set
    __swig_getmethods__["BrokerFee"] = _pyctp.CThostFtdcRspTransferField_BrokerFee_get
    if _newclass:
        BrokerFee = _swig_property(_pyctp.CThostFtdcRspTransferField_BrokerFee_get, _pyctp.CThostFtdcRspTransferField_BrokerFee_set)
    __swig_setmethods__["Message"] = _pyctp.CThostFtdcRspTransferField_Message_set
    __swig_getmethods__["Message"] = _pyctp.CThostFtdcRspTransferField_Message_get
    if _newclass:
        Message = _swig_property(_pyctp.CThostFtdcRspTransferField_Message_get, _pyctp.CThostFtdcRspTransferField_Message_set)
    __swig_setmethods__["Digest"] = _pyctp.CThostFtdcRspTransferField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CThostFtdcRspTransferField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CThostFtdcRspTransferField_Digest_get, _pyctp.CThostFtdcRspTransferField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CThostFtdcRspTransferField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CThostFtdcRspTransferField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CThostFtdcRspTransferField_BankAccType_get, _pyctp.CThostFtdcRspTransferField_BankAccType_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CThostFtdcRspTransferField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CThostFtdcRspTransferField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CThostFtdcRspTransferField_DeviceID_get, _pyctp.CThostFtdcRspTransferField_DeviceID_set)
    __swig_setmethods__["BankSecuAccType"] = _pyctp.CThostFtdcRspTransferField_BankSecuAccType_set
    __swig_getmethods__["BankSecuAccType"] = _pyctp.CThostFtdcRspTransferField_BankSecuAccType_get
    if _newclass:
        BankSecuAccType = _swig_property(_pyctp.CThostFtdcRspTransferField_BankSecuAccType_get, _pyctp.CThostFtdcRspTransferField_BankSecuAccType_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcRspTransferField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcRspTransferField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CThostFtdcRspTransferField_BrokerIDByBank_get, _pyctp.CThostFtdcRspTransferField_BrokerIDByBank_set)
    __swig_setmethods__["BankSecuAcc"] = _pyctp.CThostFtdcRspTransferField_BankSecuAcc_set
    __swig_getmethods__["BankSecuAcc"] = _pyctp.CThostFtdcRspTransferField_BankSecuAcc_get
    if _newclass:
        BankSecuAcc = _swig_property(_pyctp.CThostFtdcRspTransferField_BankSecuAcc_get, _pyctp.CThostFtdcRspTransferField_BankSecuAcc_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CThostFtdcRspTransferField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CThostFtdcRspTransferField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CThostFtdcRspTransferField_BankPwdFlag_get, _pyctp.CThostFtdcRspTransferField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CThostFtdcRspTransferField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CThostFtdcRspTransferField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CThostFtdcRspTransferField_SecuPwdFlag_get, _pyctp.CThostFtdcRspTransferField_SecuPwdFlag_set)
    __swig_setmethods__["OperNo"] = _pyctp.CThostFtdcRspTransferField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CThostFtdcRspTransferField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CThostFtdcRspTransferField_OperNo_get, _pyctp.CThostFtdcRspTransferField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcRspTransferField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcRspTransferField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcRspTransferField_RequestID_get, _pyctp.CThostFtdcRspTransferField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CThostFtdcRspTransferField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CThostFtdcRspTransferField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CThostFtdcRspTransferField_TID_get, _pyctp.CThostFtdcRspTransferField_TID_set)
    __swig_setmethods__["TransferStatus"] = _pyctp.CThostFtdcRspTransferField_TransferStatus_set
    __swig_getmethods__["TransferStatus"] = _pyctp.CThostFtdcRspTransferField_TransferStatus_get
    if _newclass:
        TransferStatus = _swig_property(_pyctp.CThostFtdcRspTransferField_TransferStatus_get, _pyctp.CThostFtdcRspTransferField_TransferStatus_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CThostFtdcRspTransferField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CThostFtdcRspTransferField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CThostFtdcRspTransferField_ErrorID_get, _pyctp.CThostFtdcRspTransferField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CThostFtdcRspTransferField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CThostFtdcRspTransferField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CThostFtdcRspTransferField_ErrorMsg_get, _pyctp.CThostFtdcRspTransferField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcRspTransferField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcRspTransferField
    __del__ = lambda self: None
CThostFtdcRspTransferField_swigregister = _pyctp.CThostFtdcRspTransferField_swigregister
CThostFtdcRspTransferField_swigregister(CThostFtdcRspTransferField)

class CThostFtdcReqRepealField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcReqRepealField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcReqRepealField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["RepealTimeInterval"] = _pyctp.CThostFtdcReqRepealField_RepealTimeInterval_set
    __swig_getmethods__["RepealTimeInterval"] = _pyctp.CThostFtdcReqRepealField_RepealTimeInterval_get
    if _newclass:
        RepealTimeInterval = _swig_property(_pyctp.CThostFtdcReqRepealField_RepealTimeInterval_get, _pyctp.CThostFtdcReqRepealField_RepealTimeInterval_set)
    __swig_setmethods__["RepealedTimes"] = _pyctp.CThostFtdcReqRepealField_RepealedTimes_set
    __swig_getmethods__["RepealedTimes"] = _pyctp.CThostFtdcReqRepealField_RepealedTimes_get
    if _newclass:
        RepealedTimes = _swig_property(_pyctp.CThostFtdcReqRepealField_RepealedTimes_get, _pyctp.CThostFtdcReqRepealField_RepealedTimes_set)
    __swig_setmethods__["BankRepealFlag"] = _pyctp.CThostFtdcReqRepealField_BankRepealFlag_set
    __swig_getmethods__["BankRepealFlag"] = _pyctp.CThostFtdcReqRepealField_BankRepealFlag_get
    if _newclass:
        BankRepealFlag = _swig_property(_pyctp.CThostFtdcReqRepealField_BankRepealFlag_get, _pyctp.CThostFtdcReqRepealField_BankRepealFlag_set)
    __swig_setmethods__["BrokerRepealFlag"] = _pyctp.CThostFtdcReqRepealField_BrokerRepealFlag_set
    __swig_getmethods__["BrokerRepealFlag"] = _pyctp.CThostFtdcReqRepealField_BrokerRepealFlag_get
    if _newclass:
        BrokerRepealFlag = _swig_property(_pyctp.CThostFtdcReqRepealField_BrokerRepealFlag_get, _pyctp.CThostFtdcReqRepealField_BrokerRepealFlag_set)
    __swig_setmethods__["PlateRepealSerial"] = _pyctp.CThostFtdcReqRepealField_PlateRepealSerial_set
    __swig_getmethods__["PlateRepealSerial"] = _pyctp.CThostFtdcReqRepealField_PlateRepealSerial_get
    if _newclass:
        PlateRepealSerial = _swig_property(_pyctp.CThostFtdcReqRepealField_PlateRepealSerial_get, _pyctp.CThostFtdcReqRepealField_PlateRepealSerial_set)
    __swig_setmethods__["BankRepealSerial"] = _pyctp.CThostFtdcReqRepealField_BankRepealSerial_set
    __swig_getmethods__["BankRepealSerial"] = _pyctp.CThostFtdcReqRepealField_BankRepealSerial_get
    if _newclass:
        BankRepealSerial = _swig_property(_pyctp.CThostFtdcReqRepealField_BankRepealSerial_get, _pyctp.CThostFtdcReqRepealField_BankRepealSerial_set)
    __swig_setmethods__["FutureRepealSerial"] = _pyctp.CThostFtdcReqRepealField_FutureRepealSerial_set
    __swig_getmethods__["FutureRepealSerial"] = _pyctp.CThostFtdcReqRepealField_FutureRepealSerial_get
    if _newclass:
        FutureRepealSerial = _swig_property(_pyctp.CThostFtdcReqRepealField_FutureRepealSerial_get, _pyctp.CThostFtdcReqRepealField_FutureRepealSerial_set)
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcReqRepealField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcReqRepealField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcReqRepealField_TradeCode_get, _pyctp.CThostFtdcReqRepealField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcReqRepealField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcReqRepealField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcReqRepealField_BankID_get, _pyctp.CThostFtdcReqRepealField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcReqRepealField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcReqRepealField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcReqRepealField_BankBranchID_get, _pyctp.CThostFtdcReqRepealField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcReqRepealField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcReqRepealField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcReqRepealField_BrokerID_get, _pyctp.CThostFtdcReqRepealField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcReqRepealField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcReqRepealField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcReqRepealField_BrokerBranchID_get, _pyctp.CThostFtdcReqRepealField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcReqRepealField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcReqRepealField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcReqRepealField_TradeDate_get, _pyctp.CThostFtdcReqRepealField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcReqRepealField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcReqRepealField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcReqRepealField_TradeTime_get, _pyctp.CThostFtdcReqRepealField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcReqRepealField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcReqRepealField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcReqRepealField_BankSerial_get, _pyctp.CThostFtdcReqRepealField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcReqRepealField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcReqRepealField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcReqRepealField_TradingDay_get, _pyctp.CThostFtdcReqRepealField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcReqRepealField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcReqRepealField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcReqRepealField_PlateSerial_get, _pyctp.CThostFtdcReqRepealField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcReqRepealField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcReqRepealField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcReqRepealField_LastFragment_get, _pyctp.CThostFtdcReqRepealField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcReqRepealField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcReqRepealField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcReqRepealField_SessionID_get, _pyctp.CThostFtdcReqRepealField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CThostFtdcReqRepealField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CThostFtdcReqRepealField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CThostFtdcReqRepealField_CustomerName_get, _pyctp.CThostFtdcReqRepealField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CThostFtdcReqRepealField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CThostFtdcReqRepealField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CThostFtdcReqRepealField_IdCardType_get, _pyctp.CThostFtdcReqRepealField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcReqRepealField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcReqRepealField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CThostFtdcReqRepealField_IdentifiedCardNo_get, _pyctp.CThostFtdcReqRepealField_IdentifiedCardNo_set)
    __swig_setmethods__["CustType"] = _pyctp.CThostFtdcReqRepealField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CThostFtdcReqRepealField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CThostFtdcReqRepealField_CustType_get, _pyctp.CThostFtdcReqRepealField_CustType_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CThostFtdcReqRepealField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CThostFtdcReqRepealField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CThostFtdcReqRepealField_BankAccount_get, _pyctp.CThostFtdcReqRepealField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CThostFtdcReqRepealField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CThostFtdcReqRepealField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CThostFtdcReqRepealField_BankPassWord_get, _pyctp.CThostFtdcReqRepealField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcReqRepealField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcReqRepealField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcReqRepealField_AccountID_get, _pyctp.CThostFtdcReqRepealField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcReqRepealField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcReqRepealField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcReqRepealField_Password_get, _pyctp.CThostFtdcReqRepealField_Password_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcReqRepealField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcReqRepealField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcReqRepealField_InstallID_get, _pyctp.CThostFtdcReqRepealField_InstallID_set)
    __swig_setmethods__["FutureSerial"] = _pyctp.CThostFtdcReqRepealField_FutureSerial_set
    __swig_getmethods__["FutureSerial"] = _pyctp.CThostFtdcReqRepealField_FutureSerial_get
    if _newclass:
        FutureSerial = _swig_property(_pyctp.CThostFtdcReqRepealField_FutureSerial_get, _pyctp.CThostFtdcReqRepealField_FutureSerial_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcReqRepealField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcReqRepealField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcReqRepealField_UserID_get, _pyctp.CThostFtdcReqRepealField_UserID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcReqRepealField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcReqRepealField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CThostFtdcReqRepealField_VerifyCertNoFlag_get, _pyctp.CThostFtdcReqRepealField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcReqRepealField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcReqRepealField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcReqRepealField_CurrencyID_get, _pyctp.CThostFtdcReqRepealField_CurrencyID_set)
    __swig_setmethods__["TradeAmount"] = _pyctp.CThostFtdcReqRepealField_TradeAmount_set
    __swig_getmethods__["TradeAmount"] = _pyctp.CThostFtdcReqRepealField_TradeAmount_get
    if _newclass:
        TradeAmount = _swig_property(_pyctp.CThostFtdcReqRepealField_TradeAmount_get, _pyctp.CThostFtdcReqRepealField_TradeAmount_set)
    __swig_setmethods__["FutureFetchAmount"] = _pyctp.CThostFtdcReqRepealField_FutureFetchAmount_set
    __swig_getmethods__["FutureFetchAmount"] = _pyctp.CThostFtdcReqRepealField_FutureFetchAmount_get
    if _newclass:
        FutureFetchAmount = _swig_property(_pyctp.CThostFtdcReqRepealField_FutureFetchAmount_get, _pyctp.CThostFtdcReqRepealField_FutureFetchAmount_set)
    __swig_setmethods__["FeePayFlag"] = _pyctp.CThostFtdcReqRepealField_FeePayFlag_set
    __swig_getmethods__["FeePayFlag"] = _pyctp.CThostFtdcReqRepealField_FeePayFlag_get
    if _newclass:
        FeePayFlag = _swig_property(_pyctp.CThostFtdcReqRepealField_FeePayFlag_get, _pyctp.CThostFtdcReqRepealField_FeePayFlag_set)
    __swig_setmethods__["CustFee"] = _pyctp.CThostFtdcReqRepealField_CustFee_set
    __swig_getmethods__["CustFee"] = _pyctp.CThostFtdcReqRepealField_CustFee_get
    if _newclass:
        CustFee = _swig_property(_pyctp.CThostFtdcReqRepealField_CustFee_get, _pyctp.CThostFtdcReqRepealField_CustFee_set)
    __swig_setmethods__["BrokerFee"] = _pyctp.CThostFtdcReqRepealField_BrokerFee_set
    __swig_getmethods__["BrokerFee"] = _pyctp.CThostFtdcReqRepealField_BrokerFee_get
    if _newclass:
        BrokerFee = _swig_property(_pyctp.CThostFtdcReqRepealField_BrokerFee_get, _pyctp.CThostFtdcReqRepealField_BrokerFee_set)
    __swig_setmethods__["Message"] = _pyctp.CThostFtdcReqRepealField_Message_set
    __swig_getmethods__["Message"] = _pyctp.CThostFtdcReqRepealField_Message_get
    if _newclass:
        Message = _swig_property(_pyctp.CThostFtdcReqRepealField_Message_get, _pyctp.CThostFtdcReqRepealField_Message_set)
    __swig_setmethods__["Digest"] = _pyctp.CThostFtdcReqRepealField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CThostFtdcReqRepealField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CThostFtdcReqRepealField_Digest_get, _pyctp.CThostFtdcReqRepealField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CThostFtdcReqRepealField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CThostFtdcReqRepealField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CThostFtdcReqRepealField_BankAccType_get, _pyctp.CThostFtdcReqRepealField_BankAccType_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CThostFtdcReqRepealField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CThostFtdcReqRepealField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CThostFtdcReqRepealField_DeviceID_get, _pyctp.CThostFtdcReqRepealField_DeviceID_set)
    __swig_setmethods__["BankSecuAccType"] = _pyctp.CThostFtdcReqRepealField_BankSecuAccType_set
    __swig_getmethods__["BankSecuAccType"] = _pyctp.CThostFtdcReqRepealField_BankSecuAccType_get
    if _newclass:
        BankSecuAccType = _swig_property(_pyctp.CThostFtdcReqRepealField_BankSecuAccType_get, _pyctp.CThostFtdcReqRepealField_BankSecuAccType_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcReqRepealField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcReqRepealField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CThostFtdcReqRepealField_BrokerIDByBank_get, _pyctp.CThostFtdcReqRepealField_BrokerIDByBank_set)
    __swig_setmethods__["BankSecuAcc"] = _pyctp.CThostFtdcReqRepealField_BankSecuAcc_set
    __swig_getmethods__["BankSecuAcc"] = _pyctp.CThostFtdcReqRepealField_BankSecuAcc_get
    if _newclass:
        BankSecuAcc = _swig_property(_pyctp.CThostFtdcReqRepealField_BankSecuAcc_get, _pyctp.CThostFtdcReqRepealField_BankSecuAcc_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CThostFtdcReqRepealField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CThostFtdcReqRepealField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CThostFtdcReqRepealField_BankPwdFlag_get, _pyctp.CThostFtdcReqRepealField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CThostFtdcReqRepealField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CThostFtdcReqRepealField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CThostFtdcReqRepealField_SecuPwdFlag_get, _pyctp.CThostFtdcReqRepealField_SecuPwdFlag_set)
    __swig_setmethods__["OperNo"] = _pyctp.CThostFtdcReqRepealField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CThostFtdcReqRepealField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CThostFtdcReqRepealField_OperNo_get, _pyctp.CThostFtdcReqRepealField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcReqRepealField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcReqRepealField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcReqRepealField_RequestID_get, _pyctp.CThostFtdcReqRepealField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CThostFtdcReqRepealField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CThostFtdcReqRepealField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CThostFtdcReqRepealField_TID_get, _pyctp.CThostFtdcReqRepealField_TID_set)
    __swig_setmethods__["TransferStatus"] = _pyctp.CThostFtdcReqRepealField_TransferStatus_set
    __swig_getmethods__["TransferStatus"] = _pyctp.CThostFtdcReqRepealField_TransferStatus_get
    if _newclass:
        TransferStatus = _swig_property(_pyctp.CThostFtdcReqRepealField_TransferStatus_get, _pyctp.CThostFtdcReqRepealField_TransferStatus_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcReqRepealField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcReqRepealField
    __del__ = lambda self: None
CThostFtdcReqRepealField_swigregister = _pyctp.CThostFtdcReqRepealField_swigregister
CThostFtdcReqRepealField_swigregister(CThostFtdcReqRepealField)

class CThostFtdcRspRepealField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcRspRepealField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcRspRepealField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["RepealTimeInterval"] = _pyctp.CThostFtdcRspRepealField_RepealTimeInterval_set
    __swig_getmethods__["RepealTimeInterval"] = _pyctp.CThostFtdcRspRepealField_RepealTimeInterval_get
    if _newclass:
        RepealTimeInterval = _swig_property(_pyctp.CThostFtdcRspRepealField_RepealTimeInterval_get, _pyctp.CThostFtdcRspRepealField_RepealTimeInterval_set)
    __swig_setmethods__["RepealedTimes"] = _pyctp.CThostFtdcRspRepealField_RepealedTimes_set
    __swig_getmethods__["RepealedTimes"] = _pyctp.CThostFtdcRspRepealField_RepealedTimes_get
    if _newclass:
        RepealedTimes = _swig_property(_pyctp.CThostFtdcRspRepealField_RepealedTimes_get, _pyctp.CThostFtdcRspRepealField_RepealedTimes_set)
    __swig_setmethods__["BankRepealFlag"] = _pyctp.CThostFtdcRspRepealField_BankRepealFlag_set
    __swig_getmethods__["BankRepealFlag"] = _pyctp.CThostFtdcRspRepealField_BankRepealFlag_get
    if _newclass:
        BankRepealFlag = _swig_property(_pyctp.CThostFtdcRspRepealField_BankRepealFlag_get, _pyctp.CThostFtdcRspRepealField_BankRepealFlag_set)
    __swig_setmethods__["BrokerRepealFlag"] = _pyctp.CThostFtdcRspRepealField_BrokerRepealFlag_set
    __swig_getmethods__["BrokerRepealFlag"] = _pyctp.CThostFtdcRspRepealField_BrokerRepealFlag_get
    if _newclass:
        BrokerRepealFlag = _swig_property(_pyctp.CThostFtdcRspRepealField_BrokerRepealFlag_get, _pyctp.CThostFtdcRspRepealField_BrokerRepealFlag_set)
    __swig_setmethods__["PlateRepealSerial"] = _pyctp.CThostFtdcRspRepealField_PlateRepealSerial_set
    __swig_getmethods__["PlateRepealSerial"] = _pyctp.CThostFtdcRspRepealField_PlateRepealSerial_get
    if _newclass:
        PlateRepealSerial = _swig_property(_pyctp.CThostFtdcRspRepealField_PlateRepealSerial_get, _pyctp.CThostFtdcRspRepealField_PlateRepealSerial_set)
    __swig_setmethods__["BankRepealSerial"] = _pyctp.CThostFtdcRspRepealField_BankRepealSerial_set
    __swig_getmethods__["BankRepealSerial"] = _pyctp.CThostFtdcRspRepealField_BankRepealSerial_get
    if _newclass:
        BankRepealSerial = _swig_property(_pyctp.CThostFtdcRspRepealField_BankRepealSerial_get, _pyctp.CThostFtdcRspRepealField_BankRepealSerial_set)
    __swig_setmethods__["FutureRepealSerial"] = _pyctp.CThostFtdcRspRepealField_FutureRepealSerial_set
    __swig_getmethods__["FutureRepealSerial"] = _pyctp.CThostFtdcRspRepealField_FutureRepealSerial_get
    if _newclass:
        FutureRepealSerial = _swig_property(_pyctp.CThostFtdcRspRepealField_FutureRepealSerial_get, _pyctp.CThostFtdcRspRepealField_FutureRepealSerial_set)
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcRspRepealField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcRspRepealField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcRspRepealField_TradeCode_get, _pyctp.CThostFtdcRspRepealField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcRspRepealField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcRspRepealField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcRspRepealField_BankID_get, _pyctp.CThostFtdcRspRepealField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcRspRepealField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcRspRepealField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcRspRepealField_BankBranchID_get, _pyctp.CThostFtdcRspRepealField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcRspRepealField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcRspRepealField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcRspRepealField_BrokerID_get, _pyctp.CThostFtdcRspRepealField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcRspRepealField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcRspRepealField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcRspRepealField_BrokerBranchID_get, _pyctp.CThostFtdcRspRepealField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcRspRepealField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcRspRepealField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcRspRepealField_TradeDate_get, _pyctp.CThostFtdcRspRepealField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcRspRepealField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcRspRepealField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcRspRepealField_TradeTime_get, _pyctp.CThostFtdcRspRepealField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcRspRepealField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcRspRepealField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcRspRepealField_BankSerial_get, _pyctp.CThostFtdcRspRepealField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcRspRepealField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcRspRepealField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcRspRepealField_TradingDay_get, _pyctp.CThostFtdcRspRepealField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcRspRepealField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcRspRepealField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcRspRepealField_PlateSerial_get, _pyctp.CThostFtdcRspRepealField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcRspRepealField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcRspRepealField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcRspRepealField_LastFragment_get, _pyctp.CThostFtdcRspRepealField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcRspRepealField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcRspRepealField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcRspRepealField_SessionID_get, _pyctp.CThostFtdcRspRepealField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CThostFtdcRspRepealField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CThostFtdcRspRepealField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CThostFtdcRspRepealField_CustomerName_get, _pyctp.CThostFtdcRspRepealField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CThostFtdcRspRepealField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CThostFtdcRspRepealField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CThostFtdcRspRepealField_IdCardType_get, _pyctp.CThostFtdcRspRepealField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcRspRepealField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcRspRepealField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CThostFtdcRspRepealField_IdentifiedCardNo_get, _pyctp.CThostFtdcRspRepealField_IdentifiedCardNo_set)
    __swig_setmethods__["CustType"] = _pyctp.CThostFtdcRspRepealField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CThostFtdcRspRepealField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CThostFtdcRspRepealField_CustType_get, _pyctp.CThostFtdcRspRepealField_CustType_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CThostFtdcRspRepealField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CThostFtdcRspRepealField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CThostFtdcRspRepealField_BankAccount_get, _pyctp.CThostFtdcRspRepealField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CThostFtdcRspRepealField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CThostFtdcRspRepealField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CThostFtdcRspRepealField_BankPassWord_get, _pyctp.CThostFtdcRspRepealField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcRspRepealField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcRspRepealField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcRspRepealField_AccountID_get, _pyctp.CThostFtdcRspRepealField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcRspRepealField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcRspRepealField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcRspRepealField_Password_get, _pyctp.CThostFtdcRspRepealField_Password_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcRspRepealField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcRspRepealField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcRspRepealField_InstallID_get, _pyctp.CThostFtdcRspRepealField_InstallID_set)
    __swig_setmethods__["FutureSerial"] = _pyctp.CThostFtdcRspRepealField_FutureSerial_set
    __swig_getmethods__["FutureSerial"] = _pyctp.CThostFtdcRspRepealField_FutureSerial_get
    if _newclass:
        FutureSerial = _swig_property(_pyctp.CThostFtdcRspRepealField_FutureSerial_get, _pyctp.CThostFtdcRspRepealField_FutureSerial_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcRspRepealField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcRspRepealField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcRspRepealField_UserID_get, _pyctp.CThostFtdcRspRepealField_UserID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcRspRepealField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcRspRepealField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CThostFtdcRspRepealField_VerifyCertNoFlag_get, _pyctp.CThostFtdcRspRepealField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcRspRepealField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcRspRepealField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcRspRepealField_CurrencyID_get, _pyctp.CThostFtdcRspRepealField_CurrencyID_set)
    __swig_setmethods__["TradeAmount"] = _pyctp.CThostFtdcRspRepealField_TradeAmount_set
    __swig_getmethods__["TradeAmount"] = _pyctp.CThostFtdcRspRepealField_TradeAmount_get
    if _newclass:
        TradeAmount = _swig_property(_pyctp.CThostFtdcRspRepealField_TradeAmount_get, _pyctp.CThostFtdcRspRepealField_TradeAmount_set)
    __swig_setmethods__["FutureFetchAmount"] = _pyctp.CThostFtdcRspRepealField_FutureFetchAmount_set
    __swig_getmethods__["FutureFetchAmount"] = _pyctp.CThostFtdcRspRepealField_FutureFetchAmount_get
    if _newclass:
        FutureFetchAmount = _swig_property(_pyctp.CThostFtdcRspRepealField_FutureFetchAmount_get, _pyctp.CThostFtdcRspRepealField_FutureFetchAmount_set)
    __swig_setmethods__["FeePayFlag"] = _pyctp.CThostFtdcRspRepealField_FeePayFlag_set
    __swig_getmethods__["FeePayFlag"] = _pyctp.CThostFtdcRspRepealField_FeePayFlag_get
    if _newclass:
        FeePayFlag = _swig_property(_pyctp.CThostFtdcRspRepealField_FeePayFlag_get, _pyctp.CThostFtdcRspRepealField_FeePayFlag_set)
    __swig_setmethods__["CustFee"] = _pyctp.CThostFtdcRspRepealField_CustFee_set
    __swig_getmethods__["CustFee"] = _pyctp.CThostFtdcRspRepealField_CustFee_get
    if _newclass:
        CustFee = _swig_property(_pyctp.CThostFtdcRspRepealField_CustFee_get, _pyctp.CThostFtdcRspRepealField_CustFee_set)
    __swig_setmethods__["BrokerFee"] = _pyctp.CThostFtdcRspRepealField_BrokerFee_set
    __swig_getmethods__["BrokerFee"] = _pyctp.CThostFtdcRspRepealField_BrokerFee_get
    if _newclass:
        BrokerFee = _swig_property(_pyctp.CThostFtdcRspRepealField_BrokerFee_get, _pyctp.CThostFtdcRspRepealField_BrokerFee_set)
    __swig_setmethods__["Message"] = _pyctp.CThostFtdcRspRepealField_Message_set
    __swig_getmethods__["Message"] = _pyctp.CThostFtdcRspRepealField_Message_get
    if _newclass:
        Message = _swig_property(_pyctp.CThostFtdcRspRepealField_Message_get, _pyctp.CThostFtdcRspRepealField_Message_set)
    __swig_setmethods__["Digest"] = _pyctp.CThostFtdcRspRepealField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CThostFtdcRspRepealField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CThostFtdcRspRepealField_Digest_get, _pyctp.CThostFtdcRspRepealField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CThostFtdcRspRepealField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CThostFtdcRspRepealField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CThostFtdcRspRepealField_BankAccType_get, _pyctp.CThostFtdcRspRepealField_BankAccType_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CThostFtdcRspRepealField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CThostFtdcRspRepealField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CThostFtdcRspRepealField_DeviceID_get, _pyctp.CThostFtdcRspRepealField_DeviceID_set)
    __swig_setmethods__["BankSecuAccType"] = _pyctp.CThostFtdcRspRepealField_BankSecuAccType_set
    __swig_getmethods__["BankSecuAccType"] = _pyctp.CThostFtdcRspRepealField_BankSecuAccType_get
    if _newclass:
        BankSecuAccType = _swig_property(_pyctp.CThostFtdcRspRepealField_BankSecuAccType_get, _pyctp.CThostFtdcRspRepealField_BankSecuAccType_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcRspRepealField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcRspRepealField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CThostFtdcRspRepealField_BrokerIDByBank_get, _pyctp.CThostFtdcRspRepealField_BrokerIDByBank_set)
    __swig_setmethods__["BankSecuAcc"] = _pyctp.CThostFtdcRspRepealField_BankSecuAcc_set
    __swig_getmethods__["BankSecuAcc"] = _pyctp.CThostFtdcRspRepealField_BankSecuAcc_get
    if _newclass:
        BankSecuAcc = _swig_property(_pyctp.CThostFtdcRspRepealField_BankSecuAcc_get, _pyctp.CThostFtdcRspRepealField_BankSecuAcc_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CThostFtdcRspRepealField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CThostFtdcRspRepealField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CThostFtdcRspRepealField_BankPwdFlag_get, _pyctp.CThostFtdcRspRepealField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CThostFtdcRspRepealField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CThostFtdcRspRepealField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CThostFtdcRspRepealField_SecuPwdFlag_get, _pyctp.CThostFtdcRspRepealField_SecuPwdFlag_set)
    __swig_setmethods__["OperNo"] = _pyctp.CThostFtdcRspRepealField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CThostFtdcRspRepealField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CThostFtdcRspRepealField_OperNo_get, _pyctp.CThostFtdcRspRepealField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcRspRepealField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcRspRepealField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcRspRepealField_RequestID_get, _pyctp.CThostFtdcRspRepealField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CThostFtdcRspRepealField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CThostFtdcRspRepealField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CThostFtdcRspRepealField_TID_get, _pyctp.CThostFtdcRspRepealField_TID_set)
    __swig_setmethods__["TransferStatus"] = _pyctp.CThostFtdcRspRepealField_TransferStatus_set
    __swig_getmethods__["TransferStatus"] = _pyctp.CThostFtdcRspRepealField_TransferStatus_get
    if _newclass:
        TransferStatus = _swig_property(_pyctp.CThostFtdcRspRepealField_TransferStatus_get, _pyctp.CThostFtdcRspRepealField_TransferStatus_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CThostFtdcRspRepealField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CThostFtdcRspRepealField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CThostFtdcRspRepealField_ErrorID_get, _pyctp.CThostFtdcRspRepealField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CThostFtdcRspRepealField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CThostFtdcRspRepealField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CThostFtdcRspRepealField_ErrorMsg_get, _pyctp.CThostFtdcRspRepealField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcRspRepealField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcRspRepealField
    __del__ = lambda self: None
CThostFtdcRspRepealField_swigregister = _pyctp.CThostFtdcRspRepealField_swigregister
CThostFtdcRspRepealField_swigregister(CThostFtdcRspRepealField)

class CThostFtdcReqQueryAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcReqQueryAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcReqQueryAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcReqQueryAccountField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcReqQueryAccountField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_TradeCode_get, _pyctp.CThostFtdcReqQueryAccountField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcReqQueryAccountField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcReqQueryAccountField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_BankID_get, _pyctp.CThostFtdcReqQueryAccountField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcReqQueryAccountField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcReqQueryAccountField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_BankBranchID_get, _pyctp.CThostFtdcReqQueryAccountField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcReqQueryAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcReqQueryAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_BrokerID_get, _pyctp.CThostFtdcReqQueryAccountField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcReqQueryAccountField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcReqQueryAccountField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_BrokerBranchID_get, _pyctp.CThostFtdcReqQueryAccountField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcReqQueryAccountField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcReqQueryAccountField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_TradeDate_get, _pyctp.CThostFtdcReqQueryAccountField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcReqQueryAccountField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcReqQueryAccountField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_TradeTime_get, _pyctp.CThostFtdcReqQueryAccountField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcReqQueryAccountField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcReqQueryAccountField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_BankSerial_get, _pyctp.CThostFtdcReqQueryAccountField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcReqQueryAccountField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcReqQueryAccountField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_TradingDay_get, _pyctp.CThostFtdcReqQueryAccountField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcReqQueryAccountField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcReqQueryAccountField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_PlateSerial_get, _pyctp.CThostFtdcReqQueryAccountField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcReqQueryAccountField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcReqQueryAccountField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_LastFragment_get, _pyctp.CThostFtdcReqQueryAccountField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcReqQueryAccountField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcReqQueryAccountField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_SessionID_get, _pyctp.CThostFtdcReqQueryAccountField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CThostFtdcReqQueryAccountField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CThostFtdcReqQueryAccountField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_CustomerName_get, _pyctp.CThostFtdcReqQueryAccountField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CThostFtdcReqQueryAccountField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CThostFtdcReqQueryAccountField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_IdCardType_get, _pyctp.CThostFtdcReqQueryAccountField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcReqQueryAccountField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcReqQueryAccountField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_IdentifiedCardNo_get, _pyctp.CThostFtdcReqQueryAccountField_IdentifiedCardNo_set)
    __swig_setmethods__["CustType"] = _pyctp.CThostFtdcReqQueryAccountField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CThostFtdcReqQueryAccountField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_CustType_get, _pyctp.CThostFtdcReqQueryAccountField_CustType_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CThostFtdcReqQueryAccountField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CThostFtdcReqQueryAccountField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_BankAccount_get, _pyctp.CThostFtdcReqQueryAccountField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CThostFtdcReqQueryAccountField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CThostFtdcReqQueryAccountField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_BankPassWord_get, _pyctp.CThostFtdcReqQueryAccountField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcReqQueryAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcReqQueryAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_AccountID_get, _pyctp.CThostFtdcReqQueryAccountField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcReqQueryAccountField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcReqQueryAccountField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_Password_get, _pyctp.CThostFtdcReqQueryAccountField_Password_set)
    __swig_setmethods__["FutureSerial"] = _pyctp.CThostFtdcReqQueryAccountField_FutureSerial_set
    __swig_getmethods__["FutureSerial"] = _pyctp.CThostFtdcReqQueryAccountField_FutureSerial_get
    if _newclass:
        FutureSerial = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_FutureSerial_get, _pyctp.CThostFtdcReqQueryAccountField_FutureSerial_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcReqQueryAccountField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcReqQueryAccountField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_InstallID_get, _pyctp.CThostFtdcReqQueryAccountField_InstallID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcReqQueryAccountField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcReqQueryAccountField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_UserID_get, _pyctp.CThostFtdcReqQueryAccountField_UserID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcReqQueryAccountField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcReqQueryAccountField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_VerifyCertNoFlag_get, _pyctp.CThostFtdcReqQueryAccountField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcReqQueryAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcReqQueryAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_CurrencyID_get, _pyctp.CThostFtdcReqQueryAccountField_CurrencyID_set)
    __swig_setmethods__["Digest"] = _pyctp.CThostFtdcReqQueryAccountField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CThostFtdcReqQueryAccountField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_Digest_get, _pyctp.CThostFtdcReqQueryAccountField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CThostFtdcReqQueryAccountField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CThostFtdcReqQueryAccountField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_BankAccType_get, _pyctp.CThostFtdcReqQueryAccountField_BankAccType_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CThostFtdcReqQueryAccountField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CThostFtdcReqQueryAccountField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_DeviceID_get, _pyctp.CThostFtdcReqQueryAccountField_DeviceID_set)
    __swig_setmethods__["BankSecuAccType"] = _pyctp.CThostFtdcReqQueryAccountField_BankSecuAccType_set
    __swig_getmethods__["BankSecuAccType"] = _pyctp.CThostFtdcReqQueryAccountField_BankSecuAccType_get
    if _newclass:
        BankSecuAccType = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_BankSecuAccType_get, _pyctp.CThostFtdcReqQueryAccountField_BankSecuAccType_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcReqQueryAccountField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcReqQueryAccountField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_BrokerIDByBank_get, _pyctp.CThostFtdcReqQueryAccountField_BrokerIDByBank_set)
    __swig_setmethods__["BankSecuAcc"] = _pyctp.CThostFtdcReqQueryAccountField_BankSecuAcc_set
    __swig_getmethods__["BankSecuAcc"] = _pyctp.CThostFtdcReqQueryAccountField_BankSecuAcc_get
    if _newclass:
        BankSecuAcc = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_BankSecuAcc_get, _pyctp.CThostFtdcReqQueryAccountField_BankSecuAcc_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CThostFtdcReqQueryAccountField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CThostFtdcReqQueryAccountField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_BankPwdFlag_get, _pyctp.CThostFtdcReqQueryAccountField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CThostFtdcReqQueryAccountField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CThostFtdcReqQueryAccountField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_SecuPwdFlag_get, _pyctp.CThostFtdcReqQueryAccountField_SecuPwdFlag_set)
    __swig_setmethods__["OperNo"] = _pyctp.CThostFtdcReqQueryAccountField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CThostFtdcReqQueryAccountField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_OperNo_get, _pyctp.CThostFtdcReqQueryAccountField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcReqQueryAccountField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcReqQueryAccountField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_RequestID_get, _pyctp.CThostFtdcReqQueryAccountField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CThostFtdcReqQueryAccountField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CThostFtdcReqQueryAccountField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CThostFtdcReqQueryAccountField_TID_get, _pyctp.CThostFtdcReqQueryAccountField_TID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcReqQueryAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcReqQueryAccountField
    __del__ = lambda self: None
CThostFtdcReqQueryAccountField_swigregister = _pyctp.CThostFtdcReqQueryAccountField_swigregister
CThostFtdcReqQueryAccountField_swigregister(CThostFtdcReqQueryAccountField)

class CThostFtdcRspQueryAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcRspQueryAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcRspQueryAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcRspQueryAccountField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcRspQueryAccountField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_TradeCode_get, _pyctp.CThostFtdcRspQueryAccountField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcRspQueryAccountField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcRspQueryAccountField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_BankID_get, _pyctp.CThostFtdcRspQueryAccountField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcRspQueryAccountField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcRspQueryAccountField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_BankBranchID_get, _pyctp.CThostFtdcRspQueryAccountField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcRspQueryAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcRspQueryAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_BrokerID_get, _pyctp.CThostFtdcRspQueryAccountField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcRspQueryAccountField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcRspQueryAccountField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_BrokerBranchID_get, _pyctp.CThostFtdcRspQueryAccountField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcRspQueryAccountField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcRspQueryAccountField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_TradeDate_get, _pyctp.CThostFtdcRspQueryAccountField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcRspQueryAccountField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcRspQueryAccountField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_TradeTime_get, _pyctp.CThostFtdcRspQueryAccountField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcRspQueryAccountField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcRspQueryAccountField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_BankSerial_get, _pyctp.CThostFtdcRspQueryAccountField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcRspQueryAccountField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcRspQueryAccountField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_TradingDay_get, _pyctp.CThostFtdcRspQueryAccountField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcRspQueryAccountField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcRspQueryAccountField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_PlateSerial_get, _pyctp.CThostFtdcRspQueryAccountField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcRspQueryAccountField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcRspQueryAccountField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_LastFragment_get, _pyctp.CThostFtdcRspQueryAccountField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcRspQueryAccountField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcRspQueryAccountField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_SessionID_get, _pyctp.CThostFtdcRspQueryAccountField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CThostFtdcRspQueryAccountField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CThostFtdcRspQueryAccountField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_CustomerName_get, _pyctp.CThostFtdcRspQueryAccountField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CThostFtdcRspQueryAccountField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CThostFtdcRspQueryAccountField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_IdCardType_get, _pyctp.CThostFtdcRspQueryAccountField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcRspQueryAccountField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcRspQueryAccountField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_IdentifiedCardNo_get, _pyctp.CThostFtdcRspQueryAccountField_IdentifiedCardNo_set)
    __swig_setmethods__["CustType"] = _pyctp.CThostFtdcRspQueryAccountField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CThostFtdcRspQueryAccountField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_CustType_get, _pyctp.CThostFtdcRspQueryAccountField_CustType_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CThostFtdcRspQueryAccountField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CThostFtdcRspQueryAccountField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_BankAccount_get, _pyctp.CThostFtdcRspQueryAccountField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CThostFtdcRspQueryAccountField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CThostFtdcRspQueryAccountField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_BankPassWord_get, _pyctp.CThostFtdcRspQueryAccountField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcRspQueryAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcRspQueryAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_AccountID_get, _pyctp.CThostFtdcRspQueryAccountField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcRspQueryAccountField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcRspQueryAccountField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_Password_get, _pyctp.CThostFtdcRspQueryAccountField_Password_set)
    __swig_setmethods__["FutureSerial"] = _pyctp.CThostFtdcRspQueryAccountField_FutureSerial_set
    __swig_getmethods__["FutureSerial"] = _pyctp.CThostFtdcRspQueryAccountField_FutureSerial_get
    if _newclass:
        FutureSerial = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_FutureSerial_get, _pyctp.CThostFtdcRspQueryAccountField_FutureSerial_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcRspQueryAccountField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcRspQueryAccountField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_InstallID_get, _pyctp.CThostFtdcRspQueryAccountField_InstallID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcRspQueryAccountField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcRspQueryAccountField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_UserID_get, _pyctp.CThostFtdcRspQueryAccountField_UserID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcRspQueryAccountField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcRspQueryAccountField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_VerifyCertNoFlag_get, _pyctp.CThostFtdcRspQueryAccountField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcRspQueryAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcRspQueryAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_CurrencyID_get, _pyctp.CThostFtdcRspQueryAccountField_CurrencyID_set)
    __swig_setmethods__["Digest"] = _pyctp.CThostFtdcRspQueryAccountField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CThostFtdcRspQueryAccountField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_Digest_get, _pyctp.CThostFtdcRspQueryAccountField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CThostFtdcRspQueryAccountField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CThostFtdcRspQueryAccountField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_BankAccType_get, _pyctp.CThostFtdcRspQueryAccountField_BankAccType_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CThostFtdcRspQueryAccountField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CThostFtdcRspQueryAccountField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_DeviceID_get, _pyctp.CThostFtdcRspQueryAccountField_DeviceID_set)
    __swig_setmethods__["BankSecuAccType"] = _pyctp.CThostFtdcRspQueryAccountField_BankSecuAccType_set
    __swig_getmethods__["BankSecuAccType"] = _pyctp.CThostFtdcRspQueryAccountField_BankSecuAccType_get
    if _newclass:
        BankSecuAccType = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_BankSecuAccType_get, _pyctp.CThostFtdcRspQueryAccountField_BankSecuAccType_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcRspQueryAccountField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcRspQueryAccountField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_BrokerIDByBank_get, _pyctp.CThostFtdcRspQueryAccountField_BrokerIDByBank_set)
    __swig_setmethods__["BankSecuAcc"] = _pyctp.CThostFtdcRspQueryAccountField_BankSecuAcc_set
    __swig_getmethods__["BankSecuAcc"] = _pyctp.CThostFtdcRspQueryAccountField_BankSecuAcc_get
    if _newclass:
        BankSecuAcc = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_BankSecuAcc_get, _pyctp.CThostFtdcRspQueryAccountField_BankSecuAcc_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CThostFtdcRspQueryAccountField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CThostFtdcRspQueryAccountField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_BankPwdFlag_get, _pyctp.CThostFtdcRspQueryAccountField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CThostFtdcRspQueryAccountField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CThostFtdcRspQueryAccountField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_SecuPwdFlag_get, _pyctp.CThostFtdcRspQueryAccountField_SecuPwdFlag_set)
    __swig_setmethods__["OperNo"] = _pyctp.CThostFtdcRspQueryAccountField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CThostFtdcRspQueryAccountField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_OperNo_get, _pyctp.CThostFtdcRspQueryAccountField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcRspQueryAccountField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcRspQueryAccountField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_RequestID_get, _pyctp.CThostFtdcRspQueryAccountField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CThostFtdcRspQueryAccountField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CThostFtdcRspQueryAccountField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_TID_get, _pyctp.CThostFtdcRspQueryAccountField_TID_set)
    __swig_setmethods__["BankUseAmount"] = _pyctp.CThostFtdcRspQueryAccountField_BankUseAmount_set
    __swig_getmethods__["BankUseAmount"] = _pyctp.CThostFtdcRspQueryAccountField_BankUseAmount_get
    if _newclass:
        BankUseAmount = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_BankUseAmount_get, _pyctp.CThostFtdcRspQueryAccountField_BankUseAmount_set)
    __swig_setmethods__["BankFetchAmount"] = _pyctp.CThostFtdcRspQueryAccountField_BankFetchAmount_set
    __swig_getmethods__["BankFetchAmount"] = _pyctp.CThostFtdcRspQueryAccountField_BankFetchAmount_get
    if _newclass:
        BankFetchAmount = _swig_property(_pyctp.CThostFtdcRspQueryAccountField_BankFetchAmount_get, _pyctp.CThostFtdcRspQueryAccountField_BankFetchAmount_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcRspQueryAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcRspQueryAccountField
    __del__ = lambda self: None
CThostFtdcRspQueryAccountField_swigregister = _pyctp.CThostFtdcRspQueryAccountField_swigregister
CThostFtdcRspQueryAccountField_swigregister(CThostFtdcRspQueryAccountField)

class CThostFtdcFutureSignIOField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcFutureSignIOField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcFutureSignIOField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcFutureSignIOField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcFutureSignIOField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcFutureSignIOField_TradeCode_get, _pyctp.CThostFtdcFutureSignIOField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcFutureSignIOField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcFutureSignIOField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcFutureSignIOField_BankID_get, _pyctp.CThostFtdcFutureSignIOField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcFutureSignIOField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcFutureSignIOField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcFutureSignIOField_BankBranchID_get, _pyctp.CThostFtdcFutureSignIOField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcFutureSignIOField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcFutureSignIOField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcFutureSignIOField_BrokerID_get, _pyctp.CThostFtdcFutureSignIOField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcFutureSignIOField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcFutureSignIOField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcFutureSignIOField_BrokerBranchID_get, _pyctp.CThostFtdcFutureSignIOField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcFutureSignIOField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcFutureSignIOField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcFutureSignIOField_TradeDate_get, _pyctp.CThostFtdcFutureSignIOField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcFutureSignIOField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcFutureSignIOField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcFutureSignIOField_TradeTime_get, _pyctp.CThostFtdcFutureSignIOField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcFutureSignIOField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcFutureSignIOField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcFutureSignIOField_BankSerial_get, _pyctp.CThostFtdcFutureSignIOField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcFutureSignIOField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcFutureSignIOField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcFutureSignIOField_TradingDay_get, _pyctp.CThostFtdcFutureSignIOField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcFutureSignIOField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcFutureSignIOField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcFutureSignIOField_PlateSerial_get, _pyctp.CThostFtdcFutureSignIOField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcFutureSignIOField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcFutureSignIOField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcFutureSignIOField_LastFragment_get, _pyctp.CThostFtdcFutureSignIOField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcFutureSignIOField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcFutureSignIOField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcFutureSignIOField_SessionID_get, _pyctp.CThostFtdcFutureSignIOField_SessionID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcFutureSignIOField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcFutureSignIOField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcFutureSignIOField_InstallID_get, _pyctp.CThostFtdcFutureSignIOField_InstallID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcFutureSignIOField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcFutureSignIOField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcFutureSignIOField_UserID_get, _pyctp.CThostFtdcFutureSignIOField_UserID_set)
    __swig_setmethods__["Digest"] = _pyctp.CThostFtdcFutureSignIOField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CThostFtdcFutureSignIOField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CThostFtdcFutureSignIOField_Digest_get, _pyctp.CThostFtdcFutureSignIOField_Digest_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcFutureSignIOField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcFutureSignIOField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcFutureSignIOField_CurrencyID_get, _pyctp.CThostFtdcFutureSignIOField_CurrencyID_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CThostFtdcFutureSignIOField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CThostFtdcFutureSignIOField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CThostFtdcFutureSignIOField_DeviceID_get, _pyctp.CThostFtdcFutureSignIOField_DeviceID_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcFutureSignIOField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcFutureSignIOField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CThostFtdcFutureSignIOField_BrokerIDByBank_get, _pyctp.CThostFtdcFutureSignIOField_BrokerIDByBank_set)
    __swig_setmethods__["OperNo"] = _pyctp.CThostFtdcFutureSignIOField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CThostFtdcFutureSignIOField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CThostFtdcFutureSignIOField_OperNo_get, _pyctp.CThostFtdcFutureSignIOField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcFutureSignIOField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcFutureSignIOField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcFutureSignIOField_RequestID_get, _pyctp.CThostFtdcFutureSignIOField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CThostFtdcFutureSignIOField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CThostFtdcFutureSignIOField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CThostFtdcFutureSignIOField_TID_get, _pyctp.CThostFtdcFutureSignIOField_TID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcFutureSignIOField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcFutureSignIOField
    __del__ = lambda self: None
CThostFtdcFutureSignIOField_swigregister = _pyctp.CThostFtdcFutureSignIOField_swigregister
CThostFtdcFutureSignIOField_swigregister(CThostFtdcFutureSignIOField)

class CThostFtdcRspFutureSignInField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcRspFutureSignInField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcRspFutureSignInField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcRspFutureSignInField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcRspFutureSignInField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcRspFutureSignInField_TradeCode_get, _pyctp.CThostFtdcRspFutureSignInField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcRspFutureSignInField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcRspFutureSignInField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcRspFutureSignInField_BankID_get, _pyctp.CThostFtdcRspFutureSignInField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcRspFutureSignInField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcRspFutureSignInField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcRspFutureSignInField_BankBranchID_get, _pyctp.CThostFtdcRspFutureSignInField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcRspFutureSignInField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcRspFutureSignInField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcRspFutureSignInField_BrokerID_get, _pyctp.CThostFtdcRspFutureSignInField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcRspFutureSignInField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcRspFutureSignInField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcRspFutureSignInField_BrokerBranchID_get, _pyctp.CThostFtdcRspFutureSignInField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcRspFutureSignInField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcRspFutureSignInField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcRspFutureSignInField_TradeDate_get, _pyctp.CThostFtdcRspFutureSignInField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcRspFutureSignInField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcRspFutureSignInField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcRspFutureSignInField_TradeTime_get, _pyctp.CThostFtdcRspFutureSignInField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcRspFutureSignInField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcRspFutureSignInField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcRspFutureSignInField_BankSerial_get, _pyctp.CThostFtdcRspFutureSignInField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcRspFutureSignInField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcRspFutureSignInField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcRspFutureSignInField_TradingDay_get, _pyctp.CThostFtdcRspFutureSignInField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcRspFutureSignInField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcRspFutureSignInField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcRspFutureSignInField_PlateSerial_get, _pyctp.CThostFtdcRspFutureSignInField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcRspFutureSignInField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcRspFutureSignInField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcRspFutureSignInField_LastFragment_get, _pyctp.CThostFtdcRspFutureSignInField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcRspFutureSignInField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcRspFutureSignInField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcRspFutureSignInField_SessionID_get, _pyctp.CThostFtdcRspFutureSignInField_SessionID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcRspFutureSignInField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcRspFutureSignInField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcRspFutureSignInField_InstallID_get, _pyctp.CThostFtdcRspFutureSignInField_InstallID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcRspFutureSignInField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcRspFutureSignInField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcRspFutureSignInField_UserID_get, _pyctp.CThostFtdcRspFutureSignInField_UserID_set)
    __swig_setmethods__["Digest"] = _pyctp.CThostFtdcRspFutureSignInField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CThostFtdcRspFutureSignInField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CThostFtdcRspFutureSignInField_Digest_get, _pyctp.CThostFtdcRspFutureSignInField_Digest_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcRspFutureSignInField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcRspFutureSignInField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcRspFutureSignInField_CurrencyID_get, _pyctp.CThostFtdcRspFutureSignInField_CurrencyID_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CThostFtdcRspFutureSignInField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CThostFtdcRspFutureSignInField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CThostFtdcRspFutureSignInField_DeviceID_get, _pyctp.CThostFtdcRspFutureSignInField_DeviceID_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcRspFutureSignInField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcRspFutureSignInField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CThostFtdcRspFutureSignInField_BrokerIDByBank_get, _pyctp.CThostFtdcRspFutureSignInField_BrokerIDByBank_set)
    __swig_setmethods__["OperNo"] = _pyctp.CThostFtdcRspFutureSignInField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CThostFtdcRspFutureSignInField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CThostFtdcRspFutureSignInField_OperNo_get, _pyctp.CThostFtdcRspFutureSignInField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcRspFutureSignInField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcRspFutureSignInField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcRspFutureSignInField_RequestID_get, _pyctp.CThostFtdcRspFutureSignInField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CThostFtdcRspFutureSignInField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CThostFtdcRspFutureSignInField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CThostFtdcRspFutureSignInField_TID_get, _pyctp.CThostFtdcRspFutureSignInField_TID_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CThostFtdcRspFutureSignInField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CThostFtdcRspFutureSignInField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CThostFtdcRspFutureSignInField_ErrorID_get, _pyctp.CThostFtdcRspFutureSignInField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CThostFtdcRspFutureSignInField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CThostFtdcRspFutureSignInField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CThostFtdcRspFutureSignInField_ErrorMsg_get, _pyctp.CThostFtdcRspFutureSignInField_ErrorMsg_set)
    __swig_setmethods__["PinKey"] = _pyctp.CThostFtdcRspFutureSignInField_PinKey_set
    __swig_getmethods__["PinKey"] = _pyctp.CThostFtdcRspFutureSignInField_PinKey_get
    if _newclass:
        PinKey = _swig_property(_pyctp.CThostFtdcRspFutureSignInField_PinKey_get, _pyctp.CThostFtdcRspFutureSignInField_PinKey_set)
    __swig_setmethods__["MacKey"] = _pyctp.CThostFtdcRspFutureSignInField_MacKey_set
    __swig_getmethods__["MacKey"] = _pyctp.CThostFtdcRspFutureSignInField_MacKey_get
    if _newclass:
        MacKey = _swig_property(_pyctp.CThostFtdcRspFutureSignInField_MacKey_get, _pyctp.CThostFtdcRspFutureSignInField_MacKey_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcRspFutureSignInField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcRspFutureSignInField
    __del__ = lambda self: None
CThostFtdcRspFutureSignInField_swigregister = _pyctp.CThostFtdcRspFutureSignInField_swigregister
CThostFtdcRspFutureSignInField_swigregister(CThostFtdcRspFutureSignInField)

class CThostFtdcReqFutureSignOutField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcReqFutureSignOutField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcReqFutureSignOutField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcReqFutureSignOutField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcReqFutureSignOutField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcReqFutureSignOutField_TradeCode_get, _pyctp.CThostFtdcReqFutureSignOutField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcReqFutureSignOutField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcReqFutureSignOutField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcReqFutureSignOutField_BankID_get, _pyctp.CThostFtdcReqFutureSignOutField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcReqFutureSignOutField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcReqFutureSignOutField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcReqFutureSignOutField_BankBranchID_get, _pyctp.CThostFtdcReqFutureSignOutField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcReqFutureSignOutField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcReqFutureSignOutField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcReqFutureSignOutField_BrokerID_get, _pyctp.CThostFtdcReqFutureSignOutField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcReqFutureSignOutField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcReqFutureSignOutField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcReqFutureSignOutField_BrokerBranchID_get, _pyctp.CThostFtdcReqFutureSignOutField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcReqFutureSignOutField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcReqFutureSignOutField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcReqFutureSignOutField_TradeDate_get, _pyctp.CThostFtdcReqFutureSignOutField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcReqFutureSignOutField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcReqFutureSignOutField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcReqFutureSignOutField_TradeTime_get, _pyctp.CThostFtdcReqFutureSignOutField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcReqFutureSignOutField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcReqFutureSignOutField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcReqFutureSignOutField_BankSerial_get, _pyctp.CThostFtdcReqFutureSignOutField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcReqFutureSignOutField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcReqFutureSignOutField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcReqFutureSignOutField_TradingDay_get, _pyctp.CThostFtdcReqFutureSignOutField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcReqFutureSignOutField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcReqFutureSignOutField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcReqFutureSignOutField_PlateSerial_get, _pyctp.CThostFtdcReqFutureSignOutField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcReqFutureSignOutField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcReqFutureSignOutField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcReqFutureSignOutField_LastFragment_get, _pyctp.CThostFtdcReqFutureSignOutField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcReqFutureSignOutField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcReqFutureSignOutField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcReqFutureSignOutField_SessionID_get, _pyctp.CThostFtdcReqFutureSignOutField_SessionID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcReqFutureSignOutField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcReqFutureSignOutField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcReqFutureSignOutField_InstallID_get, _pyctp.CThostFtdcReqFutureSignOutField_InstallID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcReqFutureSignOutField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcReqFutureSignOutField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcReqFutureSignOutField_UserID_get, _pyctp.CThostFtdcReqFutureSignOutField_UserID_set)
    __swig_setmethods__["Digest"] = _pyctp.CThostFtdcReqFutureSignOutField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CThostFtdcReqFutureSignOutField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CThostFtdcReqFutureSignOutField_Digest_get, _pyctp.CThostFtdcReqFutureSignOutField_Digest_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcReqFutureSignOutField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcReqFutureSignOutField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcReqFutureSignOutField_CurrencyID_get, _pyctp.CThostFtdcReqFutureSignOutField_CurrencyID_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CThostFtdcReqFutureSignOutField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CThostFtdcReqFutureSignOutField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CThostFtdcReqFutureSignOutField_DeviceID_get, _pyctp.CThostFtdcReqFutureSignOutField_DeviceID_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcReqFutureSignOutField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcReqFutureSignOutField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CThostFtdcReqFutureSignOutField_BrokerIDByBank_get, _pyctp.CThostFtdcReqFutureSignOutField_BrokerIDByBank_set)
    __swig_setmethods__["OperNo"] = _pyctp.CThostFtdcReqFutureSignOutField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CThostFtdcReqFutureSignOutField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CThostFtdcReqFutureSignOutField_OperNo_get, _pyctp.CThostFtdcReqFutureSignOutField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcReqFutureSignOutField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcReqFutureSignOutField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcReqFutureSignOutField_RequestID_get, _pyctp.CThostFtdcReqFutureSignOutField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CThostFtdcReqFutureSignOutField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CThostFtdcReqFutureSignOutField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CThostFtdcReqFutureSignOutField_TID_get, _pyctp.CThostFtdcReqFutureSignOutField_TID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcReqFutureSignOutField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcReqFutureSignOutField
    __del__ = lambda self: None
CThostFtdcReqFutureSignOutField_swigregister = _pyctp.CThostFtdcReqFutureSignOutField_swigregister
CThostFtdcReqFutureSignOutField_swigregister(CThostFtdcReqFutureSignOutField)

class CThostFtdcRspFutureSignOutField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcRspFutureSignOutField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcRspFutureSignOutField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcRspFutureSignOutField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcRspFutureSignOutField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcRspFutureSignOutField_TradeCode_get, _pyctp.CThostFtdcRspFutureSignOutField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcRspFutureSignOutField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcRspFutureSignOutField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcRspFutureSignOutField_BankID_get, _pyctp.CThostFtdcRspFutureSignOutField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcRspFutureSignOutField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcRspFutureSignOutField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcRspFutureSignOutField_BankBranchID_get, _pyctp.CThostFtdcRspFutureSignOutField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcRspFutureSignOutField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcRspFutureSignOutField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcRspFutureSignOutField_BrokerID_get, _pyctp.CThostFtdcRspFutureSignOutField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcRspFutureSignOutField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcRspFutureSignOutField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcRspFutureSignOutField_BrokerBranchID_get, _pyctp.CThostFtdcRspFutureSignOutField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcRspFutureSignOutField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcRspFutureSignOutField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcRspFutureSignOutField_TradeDate_get, _pyctp.CThostFtdcRspFutureSignOutField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcRspFutureSignOutField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcRspFutureSignOutField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcRspFutureSignOutField_TradeTime_get, _pyctp.CThostFtdcRspFutureSignOutField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcRspFutureSignOutField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcRspFutureSignOutField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcRspFutureSignOutField_BankSerial_get, _pyctp.CThostFtdcRspFutureSignOutField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcRspFutureSignOutField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcRspFutureSignOutField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcRspFutureSignOutField_TradingDay_get, _pyctp.CThostFtdcRspFutureSignOutField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcRspFutureSignOutField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcRspFutureSignOutField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcRspFutureSignOutField_PlateSerial_get, _pyctp.CThostFtdcRspFutureSignOutField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcRspFutureSignOutField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcRspFutureSignOutField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcRspFutureSignOutField_LastFragment_get, _pyctp.CThostFtdcRspFutureSignOutField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcRspFutureSignOutField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcRspFutureSignOutField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcRspFutureSignOutField_SessionID_get, _pyctp.CThostFtdcRspFutureSignOutField_SessionID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcRspFutureSignOutField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcRspFutureSignOutField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcRspFutureSignOutField_InstallID_get, _pyctp.CThostFtdcRspFutureSignOutField_InstallID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcRspFutureSignOutField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcRspFutureSignOutField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcRspFutureSignOutField_UserID_get, _pyctp.CThostFtdcRspFutureSignOutField_UserID_set)
    __swig_setmethods__["Digest"] = _pyctp.CThostFtdcRspFutureSignOutField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CThostFtdcRspFutureSignOutField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CThostFtdcRspFutureSignOutField_Digest_get, _pyctp.CThostFtdcRspFutureSignOutField_Digest_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcRspFutureSignOutField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcRspFutureSignOutField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcRspFutureSignOutField_CurrencyID_get, _pyctp.CThostFtdcRspFutureSignOutField_CurrencyID_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CThostFtdcRspFutureSignOutField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CThostFtdcRspFutureSignOutField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CThostFtdcRspFutureSignOutField_DeviceID_get, _pyctp.CThostFtdcRspFutureSignOutField_DeviceID_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcRspFutureSignOutField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcRspFutureSignOutField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CThostFtdcRspFutureSignOutField_BrokerIDByBank_get, _pyctp.CThostFtdcRspFutureSignOutField_BrokerIDByBank_set)
    __swig_setmethods__["OperNo"] = _pyctp.CThostFtdcRspFutureSignOutField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CThostFtdcRspFutureSignOutField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CThostFtdcRspFutureSignOutField_OperNo_get, _pyctp.CThostFtdcRspFutureSignOutField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcRspFutureSignOutField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcRspFutureSignOutField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcRspFutureSignOutField_RequestID_get, _pyctp.CThostFtdcRspFutureSignOutField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CThostFtdcRspFutureSignOutField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CThostFtdcRspFutureSignOutField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CThostFtdcRspFutureSignOutField_TID_get, _pyctp.CThostFtdcRspFutureSignOutField_TID_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CThostFtdcRspFutureSignOutField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CThostFtdcRspFutureSignOutField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CThostFtdcRspFutureSignOutField_ErrorID_get, _pyctp.CThostFtdcRspFutureSignOutField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CThostFtdcRspFutureSignOutField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CThostFtdcRspFutureSignOutField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CThostFtdcRspFutureSignOutField_ErrorMsg_get, _pyctp.CThostFtdcRspFutureSignOutField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcRspFutureSignOutField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcRspFutureSignOutField
    __del__ = lambda self: None
CThostFtdcRspFutureSignOutField_swigregister = _pyctp.CThostFtdcRspFutureSignOutField_swigregister
CThostFtdcRspFutureSignOutField_swigregister(CThostFtdcRspFutureSignOutField)

class CThostFtdcReqQueryTradeResultBySerialField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcReqQueryTradeResultBySerialField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcReqQueryTradeResultBySerialField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcReqQueryTradeResultBySerialField_TradeCode_get, _pyctp.CThostFtdcReqQueryTradeResultBySerialField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcReqQueryTradeResultBySerialField_BankID_get, _pyctp.CThostFtdcReqQueryTradeResultBySerialField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcReqQueryTradeResultBySerialField_BankBranchID_get, _pyctp.CThostFtdcReqQueryTradeResultBySerialField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcReqQueryTradeResultBySerialField_BrokerID_get, _pyctp.CThostFtdcReqQueryTradeResultBySerialField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcReqQueryTradeResultBySerialField_BrokerBranchID_get, _pyctp.CThostFtdcReqQueryTradeResultBySerialField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcReqQueryTradeResultBySerialField_TradeDate_get, _pyctp.CThostFtdcReqQueryTradeResultBySerialField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcReqQueryTradeResultBySerialField_TradeTime_get, _pyctp.CThostFtdcReqQueryTradeResultBySerialField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcReqQueryTradeResultBySerialField_BankSerial_get, _pyctp.CThostFtdcReqQueryTradeResultBySerialField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcReqQueryTradeResultBySerialField_TradingDay_get, _pyctp.CThostFtdcReqQueryTradeResultBySerialField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcReqQueryTradeResultBySerialField_PlateSerial_get, _pyctp.CThostFtdcReqQueryTradeResultBySerialField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcReqQueryTradeResultBySerialField_LastFragment_get, _pyctp.CThostFtdcReqQueryTradeResultBySerialField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcReqQueryTradeResultBySerialField_SessionID_get, _pyctp.CThostFtdcReqQueryTradeResultBySerialField_SessionID_set)
    __swig_setmethods__["Reference"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_Reference_set
    __swig_getmethods__["Reference"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_Reference_get
    if _newclass:
        Reference = _swig_property(_pyctp.CThostFtdcReqQueryTradeResultBySerialField_Reference_get, _pyctp.CThostFtdcReqQueryTradeResultBySerialField_Reference_set)
    __swig_setmethods__["RefrenceIssureType"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssureType_set
    __swig_getmethods__["RefrenceIssureType"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssureType_get
    if _newclass:
        RefrenceIssureType = _swig_property(_pyctp.CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssureType_get, _pyctp.CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssureType_set)
    __swig_setmethods__["RefrenceIssure"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssure_set
    __swig_getmethods__["RefrenceIssure"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssure_get
    if _newclass:
        RefrenceIssure = _swig_property(_pyctp.CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssure_get, _pyctp.CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssure_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CThostFtdcReqQueryTradeResultBySerialField_CustomerName_get, _pyctp.CThostFtdcReqQueryTradeResultBySerialField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CThostFtdcReqQueryTradeResultBySerialField_IdCardType_get, _pyctp.CThostFtdcReqQueryTradeResultBySerialField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CThostFtdcReqQueryTradeResultBySerialField_IdentifiedCardNo_get, _pyctp.CThostFtdcReqQueryTradeResultBySerialField_IdentifiedCardNo_set)
    __swig_setmethods__["CustType"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CThostFtdcReqQueryTradeResultBySerialField_CustType_get, _pyctp.CThostFtdcReqQueryTradeResultBySerialField_CustType_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CThostFtdcReqQueryTradeResultBySerialField_BankAccount_get, _pyctp.CThostFtdcReqQueryTradeResultBySerialField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CThostFtdcReqQueryTradeResultBySerialField_BankPassWord_get, _pyctp.CThostFtdcReqQueryTradeResultBySerialField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcReqQueryTradeResultBySerialField_AccountID_get, _pyctp.CThostFtdcReqQueryTradeResultBySerialField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcReqQueryTradeResultBySerialField_Password_get, _pyctp.CThostFtdcReqQueryTradeResultBySerialField_Password_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcReqQueryTradeResultBySerialField_CurrencyID_get, _pyctp.CThostFtdcReqQueryTradeResultBySerialField_CurrencyID_set)
    __swig_setmethods__["TradeAmount"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_TradeAmount_set
    __swig_getmethods__["TradeAmount"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_TradeAmount_get
    if _newclass:
        TradeAmount = _swig_property(_pyctp.CThostFtdcReqQueryTradeResultBySerialField_TradeAmount_get, _pyctp.CThostFtdcReqQueryTradeResultBySerialField_TradeAmount_set)
    __swig_setmethods__["Digest"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CThostFtdcReqQueryTradeResultBySerialField_Digest_get, _pyctp.CThostFtdcReqQueryTradeResultBySerialField_Digest_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcReqQueryTradeResultBySerialField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcReqQueryTradeResultBySerialField
    __del__ = lambda self: None
CThostFtdcReqQueryTradeResultBySerialField_swigregister = _pyctp.CThostFtdcReqQueryTradeResultBySerialField_swigregister
CThostFtdcReqQueryTradeResultBySerialField_swigregister(CThostFtdcReqQueryTradeResultBySerialField)

class CThostFtdcRspQueryTradeResultBySerialField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcRspQueryTradeResultBySerialField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcRspQueryTradeResultBySerialField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcRspQueryTradeResultBySerialField_TradeCode_get, _pyctp.CThostFtdcRspQueryTradeResultBySerialField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcRspQueryTradeResultBySerialField_BankID_get, _pyctp.CThostFtdcRspQueryTradeResultBySerialField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcRspQueryTradeResultBySerialField_BankBranchID_get, _pyctp.CThostFtdcRspQueryTradeResultBySerialField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcRspQueryTradeResultBySerialField_BrokerID_get, _pyctp.CThostFtdcRspQueryTradeResultBySerialField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcRspQueryTradeResultBySerialField_BrokerBranchID_get, _pyctp.CThostFtdcRspQueryTradeResultBySerialField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcRspQueryTradeResultBySerialField_TradeDate_get, _pyctp.CThostFtdcRspQueryTradeResultBySerialField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcRspQueryTradeResultBySerialField_TradeTime_get, _pyctp.CThostFtdcRspQueryTradeResultBySerialField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcRspQueryTradeResultBySerialField_BankSerial_get, _pyctp.CThostFtdcRspQueryTradeResultBySerialField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcRspQueryTradeResultBySerialField_TradingDay_get, _pyctp.CThostFtdcRspQueryTradeResultBySerialField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcRspQueryTradeResultBySerialField_PlateSerial_get, _pyctp.CThostFtdcRspQueryTradeResultBySerialField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcRspQueryTradeResultBySerialField_LastFragment_get, _pyctp.CThostFtdcRspQueryTradeResultBySerialField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcRspQueryTradeResultBySerialField_SessionID_get, _pyctp.CThostFtdcRspQueryTradeResultBySerialField_SessionID_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CThostFtdcRspQueryTradeResultBySerialField_ErrorID_get, _pyctp.CThostFtdcRspQueryTradeResultBySerialField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CThostFtdcRspQueryTradeResultBySerialField_ErrorMsg_get, _pyctp.CThostFtdcRspQueryTradeResultBySerialField_ErrorMsg_set)
    __swig_setmethods__["Reference"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_Reference_set
    __swig_getmethods__["Reference"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_Reference_get
    if _newclass:
        Reference = _swig_property(_pyctp.CThostFtdcRspQueryTradeResultBySerialField_Reference_get, _pyctp.CThostFtdcRspQueryTradeResultBySerialField_Reference_set)
    __swig_setmethods__["RefrenceIssureType"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssureType_set
    __swig_getmethods__["RefrenceIssureType"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssureType_get
    if _newclass:
        RefrenceIssureType = _swig_property(_pyctp.CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssureType_get, _pyctp.CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssureType_set)
    __swig_setmethods__["RefrenceIssure"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssure_set
    __swig_getmethods__["RefrenceIssure"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssure_get
    if _newclass:
        RefrenceIssure = _swig_property(_pyctp.CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssure_get, _pyctp.CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssure_set)
    __swig_setmethods__["OriginReturnCode"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_OriginReturnCode_set
    __swig_getmethods__["OriginReturnCode"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_OriginReturnCode_get
    if _newclass:
        OriginReturnCode = _swig_property(_pyctp.CThostFtdcRspQueryTradeResultBySerialField_OriginReturnCode_get, _pyctp.CThostFtdcRspQueryTradeResultBySerialField_OriginReturnCode_set)
    __swig_setmethods__["OriginDescrInfoForReturnCode"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_OriginDescrInfoForReturnCode_set
    __swig_getmethods__["OriginDescrInfoForReturnCode"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_OriginDescrInfoForReturnCode_get
    if _newclass:
        OriginDescrInfoForReturnCode = _swig_property(_pyctp.CThostFtdcRspQueryTradeResultBySerialField_OriginDescrInfoForReturnCode_get, _pyctp.CThostFtdcRspQueryTradeResultBySerialField_OriginDescrInfoForReturnCode_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CThostFtdcRspQueryTradeResultBySerialField_BankAccount_get, _pyctp.CThostFtdcRspQueryTradeResultBySerialField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CThostFtdcRspQueryTradeResultBySerialField_BankPassWord_get, _pyctp.CThostFtdcRspQueryTradeResultBySerialField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcRspQueryTradeResultBySerialField_AccountID_get, _pyctp.CThostFtdcRspQueryTradeResultBySerialField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcRspQueryTradeResultBySerialField_Password_get, _pyctp.CThostFtdcRspQueryTradeResultBySerialField_Password_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcRspQueryTradeResultBySerialField_CurrencyID_get, _pyctp.CThostFtdcRspQueryTradeResultBySerialField_CurrencyID_set)
    __swig_setmethods__["TradeAmount"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_TradeAmount_set
    __swig_getmethods__["TradeAmount"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_TradeAmount_get
    if _newclass:
        TradeAmount = _swig_property(_pyctp.CThostFtdcRspQueryTradeResultBySerialField_TradeAmount_get, _pyctp.CThostFtdcRspQueryTradeResultBySerialField_TradeAmount_set)
    __swig_setmethods__["Digest"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CThostFtdcRspQueryTradeResultBySerialField_Digest_get, _pyctp.CThostFtdcRspQueryTradeResultBySerialField_Digest_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcRspQueryTradeResultBySerialField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcRspQueryTradeResultBySerialField
    __del__ = lambda self: None
CThostFtdcRspQueryTradeResultBySerialField_swigregister = _pyctp.CThostFtdcRspQueryTradeResultBySerialField_swigregister
CThostFtdcRspQueryTradeResultBySerialField_swigregister(CThostFtdcRspQueryTradeResultBySerialField)

class CThostFtdcReqDayEndFileReadyField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcReqDayEndFileReadyField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcReqDayEndFileReadyField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcReqDayEndFileReadyField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcReqDayEndFileReadyField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcReqDayEndFileReadyField_TradeCode_get, _pyctp.CThostFtdcReqDayEndFileReadyField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcReqDayEndFileReadyField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcReqDayEndFileReadyField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcReqDayEndFileReadyField_BankID_get, _pyctp.CThostFtdcReqDayEndFileReadyField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcReqDayEndFileReadyField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcReqDayEndFileReadyField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcReqDayEndFileReadyField_BankBranchID_get, _pyctp.CThostFtdcReqDayEndFileReadyField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcReqDayEndFileReadyField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcReqDayEndFileReadyField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcReqDayEndFileReadyField_BrokerID_get, _pyctp.CThostFtdcReqDayEndFileReadyField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcReqDayEndFileReadyField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcReqDayEndFileReadyField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcReqDayEndFileReadyField_BrokerBranchID_get, _pyctp.CThostFtdcReqDayEndFileReadyField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcReqDayEndFileReadyField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcReqDayEndFileReadyField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcReqDayEndFileReadyField_TradeDate_get, _pyctp.CThostFtdcReqDayEndFileReadyField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcReqDayEndFileReadyField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcReqDayEndFileReadyField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcReqDayEndFileReadyField_TradeTime_get, _pyctp.CThostFtdcReqDayEndFileReadyField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcReqDayEndFileReadyField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcReqDayEndFileReadyField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcReqDayEndFileReadyField_BankSerial_get, _pyctp.CThostFtdcReqDayEndFileReadyField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcReqDayEndFileReadyField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcReqDayEndFileReadyField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcReqDayEndFileReadyField_TradingDay_get, _pyctp.CThostFtdcReqDayEndFileReadyField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcReqDayEndFileReadyField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcReqDayEndFileReadyField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcReqDayEndFileReadyField_PlateSerial_get, _pyctp.CThostFtdcReqDayEndFileReadyField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcReqDayEndFileReadyField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcReqDayEndFileReadyField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcReqDayEndFileReadyField_LastFragment_get, _pyctp.CThostFtdcReqDayEndFileReadyField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcReqDayEndFileReadyField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcReqDayEndFileReadyField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcReqDayEndFileReadyField_SessionID_get, _pyctp.CThostFtdcReqDayEndFileReadyField_SessionID_set)
    __swig_setmethods__["FileBusinessCode"] = _pyctp.CThostFtdcReqDayEndFileReadyField_FileBusinessCode_set
    __swig_getmethods__["FileBusinessCode"] = _pyctp.CThostFtdcReqDayEndFileReadyField_FileBusinessCode_get
    if _newclass:
        FileBusinessCode = _swig_property(_pyctp.CThostFtdcReqDayEndFileReadyField_FileBusinessCode_get, _pyctp.CThostFtdcReqDayEndFileReadyField_FileBusinessCode_set)
    __swig_setmethods__["Digest"] = _pyctp.CThostFtdcReqDayEndFileReadyField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CThostFtdcReqDayEndFileReadyField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CThostFtdcReqDayEndFileReadyField_Digest_get, _pyctp.CThostFtdcReqDayEndFileReadyField_Digest_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcReqDayEndFileReadyField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcReqDayEndFileReadyField
    __del__ = lambda self: None
CThostFtdcReqDayEndFileReadyField_swigregister = _pyctp.CThostFtdcReqDayEndFileReadyField_swigregister
CThostFtdcReqDayEndFileReadyField_swigregister(CThostFtdcReqDayEndFileReadyField)

class CThostFtdcReturnResultField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcReturnResultField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcReturnResultField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ReturnCode"] = _pyctp.CThostFtdcReturnResultField_ReturnCode_set
    __swig_getmethods__["ReturnCode"] = _pyctp.CThostFtdcReturnResultField_ReturnCode_get
    if _newclass:
        ReturnCode = _swig_property(_pyctp.CThostFtdcReturnResultField_ReturnCode_get, _pyctp.CThostFtdcReturnResultField_ReturnCode_set)
    __swig_setmethods__["DescrInfoForReturnCode"] = _pyctp.CThostFtdcReturnResultField_DescrInfoForReturnCode_set
    __swig_getmethods__["DescrInfoForReturnCode"] = _pyctp.CThostFtdcReturnResultField_DescrInfoForReturnCode_get
    if _newclass:
        DescrInfoForReturnCode = _swig_property(_pyctp.CThostFtdcReturnResultField_DescrInfoForReturnCode_get, _pyctp.CThostFtdcReturnResultField_DescrInfoForReturnCode_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcReturnResultField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcReturnResultField
    __del__ = lambda self: None
CThostFtdcReturnResultField_swigregister = _pyctp.CThostFtdcReturnResultField_swigregister
CThostFtdcReturnResultField_swigregister(CThostFtdcReturnResultField)

class CThostFtdcVerifyFuturePasswordField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcVerifyFuturePasswordField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcVerifyFuturePasswordField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcVerifyFuturePasswordField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcVerifyFuturePasswordField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcVerifyFuturePasswordField_TradeCode_get, _pyctp.CThostFtdcVerifyFuturePasswordField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcVerifyFuturePasswordField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcVerifyFuturePasswordField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcVerifyFuturePasswordField_BankID_get, _pyctp.CThostFtdcVerifyFuturePasswordField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcVerifyFuturePasswordField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcVerifyFuturePasswordField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcVerifyFuturePasswordField_BankBranchID_get, _pyctp.CThostFtdcVerifyFuturePasswordField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcVerifyFuturePasswordField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcVerifyFuturePasswordField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcVerifyFuturePasswordField_BrokerID_get, _pyctp.CThostFtdcVerifyFuturePasswordField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcVerifyFuturePasswordField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcVerifyFuturePasswordField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcVerifyFuturePasswordField_BrokerBranchID_get, _pyctp.CThostFtdcVerifyFuturePasswordField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcVerifyFuturePasswordField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcVerifyFuturePasswordField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcVerifyFuturePasswordField_TradeDate_get, _pyctp.CThostFtdcVerifyFuturePasswordField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcVerifyFuturePasswordField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcVerifyFuturePasswordField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcVerifyFuturePasswordField_TradeTime_get, _pyctp.CThostFtdcVerifyFuturePasswordField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcVerifyFuturePasswordField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcVerifyFuturePasswordField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcVerifyFuturePasswordField_BankSerial_get, _pyctp.CThostFtdcVerifyFuturePasswordField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcVerifyFuturePasswordField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcVerifyFuturePasswordField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcVerifyFuturePasswordField_TradingDay_get, _pyctp.CThostFtdcVerifyFuturePasswordField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcVerifyFuturePasswordField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcVerifyFuturePasswordField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcVerifyFuturePasswordField_PlateSerial_get, _pyctp.CThostFtdcVerifyFuturePasswordField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcVerifyFuturePasswordField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcVerifyFuturePasswordField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcVerifyFuturePasswordField_LastFragment_get, _pyctp.CThostFtdcVerifyFuturePasswordField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcVerifyFuturePasswordField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcVerifyFuturePasswordField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcVerifyFuturePasswordField_SessionID_get, _pyctp.CThostFtdcVerifyFuturePasswordField_SessionID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcVerifyFuturePasswordField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcVerifyFuturePasswordField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcVerifyFuturePasswordField_AccountID_get, _pyctp.CThostFtdcVerifyFuturePasswordField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcVerifyFuturePasswordField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcVerifyFuturePasswordField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcVerifyFuturePasswordField_Password_get, _pyctp.CThostFtdcVerifyFuturePasswordField_Password_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CThostFtdcVerifyFuturePasswordField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CThostFtdcVerifyFuturePasswordField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CThostFtdcVerifyFuturePasswordField_BankAccount_get, _pyctp.CThostFtdcVerifyFuturePasswordField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CThostFtdcVerifyFuturePasswordField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CThostFtdcVerifyFuturePasswordField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CThostFtdcVerifyFuturePasswordField_BankPassWord_get, _pyctp.CThostFtdcVerifyFuturePasswordField_BankPassWord_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcVerifyFuturePasswordField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcVerifyFuturePasswordField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcVerifyFuturePasswordField_InstallID_get, _pyctp.CThostFtdcVerifyFuturePasswordField_InstallID_set)
    __swig_setmethods__["TID"] = _pyctp.CThostFtdcVerifyFuturePasswordField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CThostFtdcVerifyFuturePasswordField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CThostFtdcVerifyFuturePasswordField_TID_get, _pyctp.CThostFtdcVerifyFuturePasswordField_TID_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcVerifyFuturePasswordField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcVerifyFuturePasswordField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcVerifyFuturePasswordField_CurrencyID_get, _pyctp.CThostFtdcVerifyFuturePasswordField_CurrencyID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcVerifyFuturePasswordField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcVerifyFuturePasswordField
    __del__ = lambda self: None
CThostFtdcVerifyFuturePasswordField_swigregister = _pyctp.CThostFtdcVerifyFuturePasswordField_swigregister
CThostFtdcVerifyFuturePasswordField_swigregister(CThostFtdcVerifyFuturePasswordField)

class CThostFtdcVerifyCustInfoField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcVerifyCustInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcVerifyCustInfoField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["CustomerName"] = _pyctp.CThostFtdcVerifyCustInfoField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CThostFtdcVerifyCustInfoField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CThostFtdcVerifyCustInfoField_CustomerName_get, _pyctp.CThostFtdcVerifyCustInfoField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CThostFtdcVerifyCustInfoField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CThostFtdcVerifyCustInfoField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CThostFtdcVerifyCustInfoField_IdCardType_get, _pyctp.CThostFtdcVerifyCustInfoField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcVerifyCustInfoField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcVerifyCustInfoField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CThostFtdcVerifyCustInfoField_IdentifiedCardNo_get, _pyctp.CThostFtdcVerifyCustInfoField_IdentifiedCardNo_set)
    __swig_setmethods__["CustType"] = _pyctp.CThostFtdcVerifyCustInfoField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CThostFtdcVerifyCustInfoField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CThostFtdcVerifyCustInfoField_CustType_get, _pyctp.CThostFtdcVerifyCustInfoField_CustType_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcVerifyCustInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcVerifyCustInfoField
    __del__ = lambda self: None
CThostFtdcVerifyCustInfoField_swigregister = _pyctp.CThostFtdcVerifyCustInfoField_swigregister
CThostFtdcVerifyCustInfoField_swigregister(CThostFtdcVerifyCustInfoField)

class CThostFtdcVerifyFuturePasswordAndCustInfoField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcVerifyFuturePasswordAndCustInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcVerifyFuturePasswordAndCustInfoField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["CustomerName"] = _pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_CustomerName_get, _pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_IdCardType_get, _pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_IdentifiedCardNo_get, _pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_IdentifiedCardNo_set)
    __swig_setmethods__["CustType"] = _pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_CustType_get, _pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_CustType_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_AccountID_get, _pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_Password_get, _pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_Password_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_CurrencyID_get, _pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_CurrencyID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcVerifyFuturePasswordAndCustInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcVerifyFuturePasswordAndCustInfoField
    __del__ = lambda self: None
CThostFtdcVerifyFuturePasswordAndCustInfoField_swigregister = _pyctp.CThostFtdcVerifyFuturePasswordAndCustInfoField_swigregister
CThostFtdcVerifyFuturePasswordAndCustInfoField_swigregister(CThostFtdcVerifyFuturePasswordAndCustInfoField)

class CThostFtdcDepositResultInformField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcDepositResultInformField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcDepositResultInformField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["DepositSeqNo"] = _pyctp.CThostFtdcDepositResultInformField_DepositSeqNo_set
    __swig_getmethods__["DepositSeqNo"] = _pyctp.CThostFtdcDepositResultInformField_DepositSeqNo_get
    if _newclass:
        DepositSeqNo = _swig_property(_pyctp.CThostFtdcDepositResultInformField_DepositSeqNo_get, _pyctp.CThostFtdcDepositResultInformField_DepositSeqNo_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcDepositResultInformField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcDepositResultInformField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcDepositResultInformField_BrokerID_get, _pyctp.CThostFtdcDepositResultInformField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcDepositResultInformField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcDepositResultInformField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcDepositResultInformField_InvestorID_get, _pyctp.CThostFtdcDepositResultInformField_InvestorID_set)
    __swig_setmethods__["Deposit"] = _pyctp.CThostFtdcDepositResultInformField_Deposit_set
    __swig_getmethods__["Deposit"] = _pyctp.CThostFtdcDepositResultInformField_Deposit_get
    if _newclass:
        Deposit = _swig_property(_pyctp.CThostFtdcDepositResultInformField_Deposit_get, _pyctp.CThostFtdcDepositResultInformField_Deposit_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcDepositResultInformField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcDepositResultInformField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcDepositResultInformField_RequestID_get, _pyctp.CThostFtdcDepositResultInformField_RequestID_set)
    __swig_setmethods__["ReturnCode"] = _pyctp.CThostFtdcDepositResultInformField_ReturnCode_set
    __swig_getmethods__["ReturnCode"] = _pyctp.CThostFtdcDepositResultInformField_ReturnCode_get
    if _newclass:
        ReturnCode = _swig_property(_pyctp.CThostFtdcDepositResultInformField_ReturnCode_get, _pyctp.CThostFtdcDepositResultInformField_ReturnCode_set)
    __swig_setmethods__["DescrInfoForReturnCode"] = _pyctp.CThostFtdcDepositResultInformField_DescrInfoForReturnCode_set
    __swig_getmethods__["DescrInfoForReturnCode"] = _pyctp.CThostFtdcDepositResultInformField_DescrInfoForReturnCode_get
    if _newclass:
        DescrInfoForReturnCode = _swig_property(_pyctp.CThostFtdcDepositResultInformField_DescrInfoForReturnCode_get, _pyctp.CThostFtdcDepositResultInformField_DescrInfoForReturnCode_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcDepositResultInformField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcDepositResultInformField
    __del__ = lambda self: None
CThostFtdcDepositResultInformField_swigregister = _pyctp.CThostFtdcDepositResultInformField_swigregister
CThostFtdcDepositResultInformField_swigregister(CThostFtdcDepositResultInformField)

class CThostFtdcReqSyncKeyField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcReqSyncKeyField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcReqSyncKeyField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcReqSyncKeyField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcReqSyncKeyField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcReqSyncKeyField_TradeCode_get, _pyctp.CThostFtdcReqSyncKeyField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcReqSyncKeyField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcReqSyncKeyField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcReqSyncKeyField_BankID_get, _pyctp.CThostFtdcReqSyncKeyField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcReqSyncKeyField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcReqSyncKeyField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcReqSyncKeyField_BankBranchID_get, _pyctp.CThostFtdcReqSyncKeyField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcReqSyncKeyField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcReqSyncKeyField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcReqSyncKeyField_BrokerID_get, _pyctp.CThostFtdcReqSyncKeyField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcReqSyncKeyField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcReqSyncKeyField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcReqSyncKeyField_BrokerBranchID_get, _pyctp.CThostFtdcReqSyncKeyField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcReqSyncKeyField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcReqSyncKeyField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcReqSyncKeyField_TradeDate_get, _pyctp.CThostFtdcReqSyncKeyField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcReqSyncKeyField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcReqSyncKeyField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcReqSyncKeyField_TradeTime_get, _pyctp.CThostFtdcReqSyncKeyField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcReqSyncKeyField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcReqSyncKeyField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcReqSyncKeyField_BankSerial_get, _pyctp.CThostFtdcReqSyncKeyField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcReqSyncKeyField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcReqSyncKeyField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcReqSyncKeyField_TradingDay_get, _pyctp.CThostFtdcReqSyncKeyField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcReqSyncKeyField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcReqSyncKeyField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcReqSyncKeyField_PlateSerial_get, _pyctp.CThostFtdcReqSyncKeyField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcReqSyncKeyField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcReqSyncKeyField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcReqSyncKeyField_LastFragment_get, _pyctp.CThostFtdcReqSyncKeyField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcReqSyncKeyField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcReqSyncKeyField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcReqSyncKeyField_SessionID_get, _pyctp.CThostFtdcReqSyncKeyField_SessionID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcReqSyncKeyField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcReqSyncKeyField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcReqSyncKeyField_InstallID_get, _pyctp.CThostFtdcReqSyncKeyField_InstallID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcReqSyncKeyField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcReqSyncKeyField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcReqSyncKeyField_UserID_get, _pyctp.CThostFtdcReqSyncKeyField_UserID_set)
    __swig_setmethods__["Message"] = _pyctp.CThostFtdcReqSyncKeyField_Message_set
    __swig_getmethods__["Message"] = _pyctp.CThostFtdcReqSyncKeyField_Message_get
    if _newclass:
        Message = _swig_property(_pyctp.CThostFtdcReqSyncKeyField_Message_get, _pyctp.CThostFtdcReqSyncKeyField_Message_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CThostFtdcReqSyncKeyField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CThostFtdcReqSyncKeyField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CThostFtdcReqSyncKeyField_DeviceID_get, _pyctp.CThostFtdcReqSyncKeyField_DeviceID_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcReqSyncKeyField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcReqSyncKeyField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CThostFtdcReqSyncKeyField_BrokerIDByBank_get, _pyctp.CThostFtdcReqSyncKeyField_BrokerIDByBank_set)
    __swig_setmethods__["OperNo"] = _pyctp.CThostFtdcReqSyncKeyField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CThostFtdcReqSyncKeyField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CThostFtdcReqSyncKeyField_OperNo_get, _pyctp.CThostFtdcReqSyncKeyField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcReqSyncKeyField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcReqSyncKeyField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcReqSyncKeyField_RequestID_get, _pyctp.CThostFtdcReqSyncKeyField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CThostFtdcReqSyncKeyField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CThostFtdcReqSyncKeyField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CThostFtdcReqSyncKeyField_TID_get, _pyctp.CThostFtdcReqSyncKeyField_TID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcReqSyncKeyField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcReqSyncKeyField
    __del__ = lambda self: None
CThostFtdcReqSyncKeyField_swigregister = _pyctp.CThostFtdcReqSyncKeyField_swigregister
CThostFtdcReqSyncKeyField_swigregister(CThostFtdcReqSyncKeyField)

class CThostFtdcRspSyncKeyField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcRspSyncKeyField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcRspSyncKeyField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcRspSyncKeyField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcRspSyncKeyField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcRspSyncKeyField_TradeCode_get, _pyctp.CThostFtdcRspSyncKeyField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcRspSyncKeyField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcRspSyncKeyField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcRspSyncKeyField_BankID_get, _pyctp.CThostFtdcRspSyncKeyField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcRspSyncKeyField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcRspSyncKeyField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcRspSyncKeyField_BankBranchID_get, _pyctp.CThostFtdcRspSyncKeyField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcRspSyncKeyField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcRspSyncKeyField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcRspSyncKeyField_BrokerID_get, _pyctp.CThostFtdcRspSyncKeyField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcRspSyncKeyField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcRspSyncKeyField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcRspSyncKeyField_BrokerBranchID_get, _pyctp.CThostFtdcRspSyncKeyField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcRspSyncKeyField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcRspSyncKeyField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcRspSyncKeyField_TradeDate_get, _pyctp.CThostFtdcRspSyncKeyField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcRspSyncKeyField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcRspSyncKeyField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcRspSyncKeyField_TradeTime_get, _pyctp.CThostFtdcRspSyncKeyField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcRspSyncKeyField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcRspSyncKeyField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcRspSyncKeyField_BankSerial_get, _pyctp.CThostFtdcRspSyncKeyField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcRspSyncKeyField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcRspSyncKeyField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcRspSyncKeyField_TradingDay_get, _pyctp.CThostFtdcRspSyncKeyField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcRspSyncKeyField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcRspSyncKeyField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcRspSyncKeyField_PlateSerial_get, _pyctp.CThostFtdcRspSyncKeyField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcRspSyncKeyField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcRspSyncKeyField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcRspSyncKeyField_LastFragment_get, _pyctp.CThostFtdcRspSyncKeyField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcRspSyncKeyField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcRspSyncKeyField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcRspSyncKeyField_SessionID_get, _pyctp.CThostFtdcRspSyncKeyField_SessionID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcRspSyncKeyField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcRspSyncKeyField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcRspSyncKeyField_InstallID_get, _pyctp.CThostFtdcRspSyncKeyField_InstallID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcRspSyncKeyField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcRspSyncKeyField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcRspSyncKeyField_UserID_get, _pyctp.CThostFtdcRspSyncKeyField_UserID_set)
    __swig_setmethods__["Message"] = _pyctp.CThostFtdcRspSyncKeyField_Message_set
    __swig_getmethods__["Message"] = _pyctp.CThostFtdcRspSyncKeyField_Message_get
    if _newclass:
        Message = _swig_property(_pyctp.CThostFtdcRspSyncKeyField_Message_get, _pyctp.CThostFtdcRspSyncKeyField_Message_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CThostFtdcRspSyncKeyField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CThostFtdcRspSyncKeyField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CThostFtdcRspSyncKeyField_DeviceID_get, _pyctp.CThostFtdcRspSyncKeyField_DeviceID_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcRspSyncKeyField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcRspSyncKeyField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CThostFtdcRspSyncKeyField_BrokerIDByBank_get, _pyctp.CThostFtdcRspSyncKeyField_BrokerIDByBank_set)
    __swig_setmethods__["OperNo"] = _pyctp.CThostFtdcRspSyncKeyField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CThostFtdcRspSyncKeyField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CThostFtdcRspSyncKeyField_OperNo_get, _pyctp.CThostFtdcRspSyncKeyField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcRspSyncKeyField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcRspSyncKeyField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcRspSyncKeyField_RequestID_get, _pyctp.CThostFtdcRspSyncKeyField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CThostFtdcRspSyncKeyField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CThostFtdcRspSyncKeyField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CThostFtdcRspSyncKeyField_TID_get, _pyctp.CThostFtdcRspSyncKeyField_TID_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CThostFtdcRspSyncKeyField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CThostFtdcRspSyncKeyField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CThostFtdcRspSyncKeyField_ErrorID_get, _pyctp.CThostFtdcRspSyncKeyField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CThostFtdcRspSyncKeyField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CThostFtdcRspSyncKeyField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CThostFtdcRspSyncKeyField_ErrorMsg_get, _pyctp.CThostFtdcRspSyncKeyField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcRspSyncKeyField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcRspSyncKeyField
    __del__ = lambda self: None
CThostFtdcRspSyncKeyField_swigregister = _pyctp.CThostFtdcRspSyncKeyField_swigregister
CThostFtdcRspSyncKeyField_swigregister(CThostFtdcRspSyncKeyField)

class CThostFtdcNotifyQueryAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcNotifyQueryAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcNotifyQueryAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcNotifyQueryAccountField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcNotifyQueryAccountField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_TradeCode_get, _pyctp.CThostFtdcNotifyQueryAccountField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcNotifyQueryAccountField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcNotifyQueryAccountField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_BankID_get, _pyctp.CThostFtdcNotifyQueryAccountField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcNotifyQueryAccountField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcNotifyQueryAccountField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_BankBranchID_get, _pyctp.CThostFtdcNotifyQueryAccountField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcNotifyQueryAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcNotifyQueryAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_BrokerID_get, _pyctp.CThostFtdcNotifyQueryAccountField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcNotifyQueryAccountField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcNotifyQueryAccountField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_BrokerBranchID_get, _pyctp.CThostFtdcNotifyQueryAccountField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcNotifyQueryAccountField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcNotifyQueryAccountField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_TradeDate_get, _pyctp.CThostFtdcNotifyQueryAccountField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcNotifyQueryAccountField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcNotifyQueryAccountField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_TradeTime_get, _pyctp.CThostFtdcNotifyQueryAccountField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcNotifyQueryAccountField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcNotifyQueryAccountField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_BankSerial_get, _pyctp.CThostFtdcNotifyQueryAccountField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcNotifyQueryAccountField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcNotifyQueryAccountField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_TradingDay_get, _pyctp.CThostFtdcNotifyQueryAccountField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcNotifyQueryAccountField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcNotifyQueryAccountField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_PlateSerial_get, _pyctp.CThostFtdcNotifyQueryAccountField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcNotifyQueryAccountField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcNotifyQueryAccountField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_LastFragment_get, _pyctp.CThostFtdcNotifyQueryAccountField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcNotifyQueryAccountField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcNotifyQueryAccountField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_SessionID_get, _pyctp.CThostFtdcNotifyQueryAccountField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CThostFtdcNotifyQueryAccountField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CThostFtdcNotifyQueryAccountField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_CustomerName_get, _pyctp.CThostFtdcNotifyQueryAccountField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CThostFtdcNotifyQueryAccountField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CThostFtdcNotifyQueryAccountField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_IdCardType_get, _pyctp.CThostFtdcNotifyQueryAccountField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcNotifyQueryAccountField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcNotifyQueryAccountField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_IdentifiedCardNo_get, _pyctp.CThostFtdcNotifyQueryAccountField_IdentifiedCardNo_set)
    __swig_setmethods__["CustType"] = _pyctp.CThostFtdcNotifyQueryAccountField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CThostFtdcNotifyQueryAccountField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_CustType_get, _pyctp.CThostFtdcNotifyQueryAccountField_CustType_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CThostFtdcNotifyQueryAccountField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CThostFtdcNotifyQueryAccountField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_BankAccount_get, _pyctp.CThostFtdcNotifyQueryAccountField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CThostFtdcNotifyQueryAccountField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CThostFtdcNotifyQueryAccountField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_BankPassWord_get, _pyctp.CThostFtdcNotifyQueryAccountField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcNotifyQueryAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcNotifyQueryAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_AccountID_get, _pyctp.CThostFtdcNotifyQueryAccountField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcNotifyQueryAccountField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcNotifyQueryAccountField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_Password_get, _pyctp.CThostFtdcNotifyQueryAccountField_Password_set)
    __swig_setmethods__["FutureSerial"] = _pyctp.CThostFtdcNotifyQueryAccountField_FutureSerial_set
    __swig_getmethods__["FutureSerial"] = _pyctp.CThostFtdcNotifyQueryAccountField_FutureSerial_get
    if _newclass:
        FutureSerial = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_FutureSerial_get, _pyctp.CThostFtdcNotifyQueryAccountField_FutureSerial_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcNotifyQueryAccountField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcNotifyQueryAccountField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_InstallID_get, _pyctp.CThostFtdcNotifyQueryAccountField_InstallID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcNotifyQueryAccountField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcNotifyQueryAccountField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_UserID_get, _pyctp.CThostFtdcNotifyQueryAccountField_UserID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcNotifyQueryAccountField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcNotifyQueryAccountField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_VerifyCertNoFlag_get, _pyctp.CThostFtdcNotifyQueryAccountField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcNotifyQueryAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcNotifyQueryAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_CurrencyID_get, _pyctp.CThostFtdcNotifyQueryAccountField_CurrencyID_set)
    __swig_setmethods__["Digest"] = _pyctp.CThostFtdcNotifyQueryAccountField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CThostFtdcNotifyQueryAccountField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_Digest_get, _pyctp.CThostFtdcNotifyQueryAccountField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CThostFtdcNotifyQueryAccountField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CThostFtdcNotifyQueryAccountField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_BankAccType_get, _pyctp.CThostFtdcNotifyQueryAccountField_BankAccType_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CThostFtdcNotifyQueryAccountField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CThostFtdcNotifyQueryAccountField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_DeviceID_get, _pyctp.CThostFtdcNotifyQueryAccountField_DeviceID_set)
    __swig_setmethods__["BankSecuAccType"] = _pyctp.CThostFtdcNotifyQueryAccountField_BankSecuAccType_set
    __swig_getmethods__["BankSecuAccType"] = _pyctp.CThostFtdcNotifyQueryAccountField_BankSecuAccType_get
    if _newclass:
        BankSecuAccType = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_BankSecuAccType_get, _pyctp.CThostFtdcNotifyQueryAccountField_BankSecuAccType_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcNotifyQueryAccountField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcNotifyQueryAccountField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_BrokerIDByBank_get, _pyctp.CThostFtdcNotifyQueryAccountField_BrokerIDByBank_set)
    __swig_setmethods__["BankSecuAcc"] = _pyctp.CThostFtdcNotifyQueryAccountField_BankSecuAcc_set
    __swig_getmethods__["BankSecuAcc"] = _pyctp.CThostFtdcNotifyQueryAccountField_BankSecuAcc_get
    if _newclass:
        BankSecuAcc = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_BankSecuAcc_get, _pyctp.CThostFtdcNotifyQueryAccountField_BankSecuAcc_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CThostFtdcNotifyQueryAccountField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CThostFtdcNotifyQueryAccountField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_BankPwdFlag_get, _pyctp.CThostFtdcNotifyQueryAccountField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CThostFtdcNotifyQueryAccountField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CThostFtdcNotifyQueryAccountField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_SecuPwdFlag_get, _pyctp.CThostFtdcNotifyQueryAccountField_SecuPwdFlag_set)
    __swig_setmethods__["OperNo"] = _pyctp.CThostFtdcNotifyQueryAccountField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CThostFtdcNotifyQueryAccountField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_OperNo_get, _pyctp.CThostFtdcNotifyQueryAccountField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcNotifyQueryAccountField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcNotifyQueryAccountField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_RequestID_get, _pyctp.CThostFtdcNotifyQueryAccountField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CThostFtdcNotifyQueryAccountField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CThostFtdcNotifyQueryAccountField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_TID_get, _pyctp.CThostFtdcNotifyQueryAccountField_TID_set)
    __swig_setmethods__["BankUseAmount"] = _pyctp.CThostFtdcNotifyQueryAccountField_BankUseAmount_set
    __swig_getmethods__["BankUseAmount"] = _pyctp.CThostFtdcNotifyQueryAccountField_BankUseAmount_get
    if _newclass:
        BankUseAmount = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_BankUseAmount_get, _pyctp.CThostFtdcNotifyQueryAccountField_BankUseAmount_set)
    __swig_setmethods__["BankFetchAmount"] = _pyctp.CThostFtdcNotifyQueryAccountField_BankFetchAmount_set
    __swig_getmethods__["BankFetchAmount"] = _pyctp.CThostFtdcNotifyQueryAccountField_BankFetchAmount_get
    if _newclass:
        BankFetchAmount = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_BankFetchAmount_get, _pyctp.CThostFtdcNotifyQueryAccountField_BankFetchAmount_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CThostFtdcNotifyQueryAccountField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CThostFtdcNotifyQueryAccountField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_ErrorID_get, _pyctp.CThostFtdcNotifyQueryAccountField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CThostFtdcNotifyQueryAccountField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CThostFtdcNotifyQueryAccountField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CThostFtdcNotifyQueryAccountField_ErrorMsg_get, _pyctp.CThostFtdcNotifyQueryAccountField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcNotifyQueryAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcNotifyQueryAccountField
    __del__ = lambda self: None
CThostFtdcNotifyQueryAccountField_swigregister = _pyctp.CThostFtdcNotifyQueryAccountField_swigregister
CThostFtdcNotifyQueryAccountField_swigregister(CThostFtdcNotifyQueryAccountField)

class CThostFtdcTransferSerialField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcTransferSerialField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcTransferSerialField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcTransferSerialField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcTransferSerialField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcTransferSerialField_PlateSerial_get, _pyctp.CThostFtdcTransferSerialField_PlateSerial_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcTransferSerialField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcTransferSerialField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcTransferSerialField_TradeDate_get, _pyctp.CThostFtdcTransferSerialField_TradeDate_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcTransferSerialField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcTransferSerialField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcTransferSerialField_TradingDay_get, _pyctp.CThostFtdcTransferSerialField_TradingDay_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcTransferSerialField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcTransferSerialField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcTransferSerialField_TradeTime_get, _pyctp.CThostFtdcTransferSerialField_TradeTime_set)
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcTransferSerialField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcTransferSerialField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcTransferSerialField_TradeCode_get, _pyctp.CThostFtdcTransferSerialField_TradeCode_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcTransferSerialField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcTransferSerialField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcTransferSerialField_SessionID_get, _pyctp.CThostFtdcTransferSerialField_SessionID_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcTransferSerialField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcTransferSerialField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcTransferSerialField_BankID_get, _pyctp.CThostFtdcTransferSerialField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcTransferSerialField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcTransferSerialField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcTransferSerialField_BankBranchID_get, _pyctp.CThostFtdcTransferSerialField_BankBranchID_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CThostFtdcTransferSerialField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CThostFtdcTransferSerialField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CThostFtdcTransferSerialField_BankAccType_get, _pyctp.CThostFtdcTransferSerialField_BankAccType_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CThostFtdcTransferSerialField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CThostFtdcTransferSerialField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CThostFtdcTransferSerialField_BankAccount_get, _pyctp.CThostFtdcTransferSerialField_BankAccount_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcTransferSerialField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcTransferSerialField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcTransferSerialField_BankSerial_get, _pyctp.CThostFtdcTransferSerialField_BankSerial_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcTransferSerialField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcTransferSerialField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcTransferSerialField_BrokerID_get, _pyctp.CThostFtdcTransferSerialField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcTransferSerialField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcTransferSerialField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcTransferSerialField_BrokerBranchID_get, _pyctp.CThostFtdcTransferSerialField_BrokerBranchID_set)
    __swig_setmethods__["FutureAccType"] = _pyctp.CThostFtdcTransferSerialField_FutureAccType_set
    __swig_getmethods__["FutureAccType"] = _pyctp.CThostFtdcTransferSerialField_FutureAccType_get
    if _newclass:
        FutureAccType = _swig_property(_pyctp.CThostFtdcTransferSerialField_FutureAccType_get, _pyctp.CThostFtdcTransferSerialField_FutureAccType_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcTransferSerialField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcTransferSerialField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcTransferSerialField_AccountID_get, _pyctp.CThostFtdcTransferSerialField_AccountID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CThostFtdcTransferSerialField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CThostFtdcTransferSerialField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CThostFtdcTransferSerialField_InvestorID_get, _pyctp.CThostFtdcTransferSerialField_InvestorID_set)
    __swig_setmethods__["FutureSerial"] = _pyctp.CThostFtdcTransferSerialField_FutureSerial_set
    __swig_getmethods__["FutureSerial"] = _pyctp.CThostFtdcTransferSerialField_FutureSerial_get
    if _newclass:
        FutureSerial = _swig_property(_pyctp.CThostFtdcTransferSerialField_FutureSerial_get, _pyctp.CThostFtdcTransferSerialField_FutureSerial_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CThostFtdcTransferSerialField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CThostFtdcTransferSerialField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CThostFtdcTransferSerialField_IdCardType_get, _pyctp.CThostFtdcTransferSerialField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcTransferSerialField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcTransferSerialField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CThostFtdcTransferSerialField_IdentifiedCardNo_get, _pyctp.CThostFtdcTransferSerialField_IdentifiedCardNo_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcTransferSerialField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcTransferSerialField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcTransferSerialField_CurrencyID_get, _pyctp.CThostFtdcTransferSerialField_CurrencyID_set)
    __swig_setmethods__["TradeAmount"] = _pyctp.CThostFtdcTransferSerialField_TradeAmount_set
    __swig_getmethods__["TradeAmount"] = _pyctp.CThostFtdcTransferSerialField_TradeAmount_get
    if _newclass:
        TradeAmount = _swig_property(_pyctp.CThostFtdcTransferSerialField_TradeAmount_get, _pyctp.CThostFtdcTransferSerialField_TradeAmount_set)
    __swig_setmethods__["CustFee"] = _pyctp.CThostFtdcTransferSerialField_CustFee_set
    __swig_getmethods__["CustFee"] = _pyctp.CThostFtdcTransferSerialField_CustFee_get
    if _newclass:
        CustFee = _swig_property(_pyctp.CThostFtdcTransferSerialField_CustFee_get, _pyctp.CThostFtdcTransferSerialField_CustFee_set)
    __swig_setmethods__["BrokerFee"] = _pyctp.CThostFtdcTransferSerialField_BrokerFee_set
    __swig_getmethods__["BrokerFee"] = _pyctp.CThostFtdcTransferSerialField_BrokerFee_get
    if _newclass:
        BrokerFee = _swig_property(_pyctp.CThostFtdcTransferSerialField_BrokerFee_get, _pyctp.CThostFtdcTransferSerialField_BrokerFee_set)
    __swig_setmethods__["AvailabilityFlag"] = _pyctp.CThostFtdcTransferSerialField_AvailabilityFlag_set
    __swig_getmethods__["AvailabilityFlag"] = _pyctp.CThostFtdcTransferSerialField_AvailabilityFlag_get
    if _newclass:
        AvailabilityFlag = _swig_property(_pyctp.CThostFtdcTransferSerialField_AvailabilityFlag_get, _pyctp.CThostFtdcTransferSerialField_AvailabilityFlag_set)
    __swig_setmethods__["OperatorCode"] = _pyctp.CThostFtdcTransferSerialField_OperatorCode_set
    __swig_getmethods__["OperatorCode"] = _pyctp.CThostFtdcTransferSerialField_OperatorCode_get
    if _newclass:
        OperatorCode = _swig_property(_pyctp.CThostFtdcTransferSerialField_OperatorCode_get, _pyctp.CThostFtdcTransferSerialField_OperatorCode_set)
    __swig_setmethods__["BankNewAccount"] = _pyctp.CThostFtdcTransferSerialField_BankNewAccount_set
    __swig_getmethods__["BankNewAccount"] = _pyctp.CThostFtdcTransferSerialField_BankNewAccount_get
    if _newclass:
        BankNewAccount = _swig_property(_pyctp.CThostFtdcTransferSerialField_BankNewAccount_get, _pyctp.CThostFtdcTransferSerialField_BankNewAccount_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CThostFtdcTransferSerialField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CThostFtdcTransferSerialField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CThostFtdcTransferSerialField_ErrorID_get, _pyctp.CThostFtdcTransferSerialField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CThostFtdcTransferSerialField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CThostFtdcTransferSerialField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CThostFtdcTransferSerialField_ErrorMsg_get, _pyctp.CThostFtdcTransferSerialField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcTransferSerialField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcTransferSerialField
    __del__ = lambda self: None
CThostFtdcTransferSerialField_swigregister = _pyctp.CThostFtdcTransferSerialField_swigregister
CThostFtdcTransferSerialField_swigregister(CThostFtdcTransferSerialField)

class CThostFtdcQryTransferSerialField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryTransferSerialField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryTransferSerialField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryTransferSerialField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryTransferSerialField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryTransferSerialField_BrokerID_get, _pyctp.CThostFtdcQryTransferSerialField_BrokerID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcQryTransferSerialField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcQryTransferSerialField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcQryTransferSerialField_AccountID_get, _pyctp.CThostFtdcQryTransferSerialField_AccountID_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcQryTransferSerialField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcQryTransferSerialField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcQryTransferSerialField_BankID_get, _pyctp.CThostFtdcQryTransferSerialField_BankID_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcQryTransferSerialField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcQryTransferSerialField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcQryTransferSerialField_CurrencyID_get, _pyctp.CThostFtdcQryTransferSerialField_CurrencyID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryTransferSerialField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryTransferSerialField
    __del__ = lambda self: None
CThostFtdcQryTransferSerialField_swigregister = _pyctp.CThostFtdcQryTransferSerialField_swigregister
CThostFtdcQryTransferSerialField_swigregister(CThostFtdcQryTransferSerialField)

class CThostFtdcNotifyFutureSignInField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcNotifyFutureSignInField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcNotifyFutureSignInField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcNotifyFutureSignInField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcNotifyFutureSignInField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcNotifyFutureSignInField_TradeCode_get, _pyctp.CThostFtdcNotifyFutureSignInField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcNotifyFutureSignInField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcNotifyFutureSignInField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcNotifyFutureSignInField_BankID_get, _pyctp.CThostFtdcNotifyFutureSignInField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcNotifyFutureSignInField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcNotifyFutureSignInField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcNotifyFutureSignInField_BankBranchID_get, _pyctp.CThostFtdcNotifyFutureSignInField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcNotifyFutureSignInField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcNotifyFutureSignInField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcNotifyFutureSignInField_BrokerID_get, _pyctp.CThostFtdcNotifyFutureSignInField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcNotifyFutureSignInField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcNotifyFutureSignInField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcNotifyFutureSignInField_BrokerBranchID_get, _pyctp.CThostFtdcNotifyFutureSignInField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcNotifyFutureSignInField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcNotifyFutureSignInField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcNotifyFutureSignInField_TradeDate_get, _pyctp.CThostFtdcNotifyFutureSignInField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcNotifyFutureSignInField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcNotifyFutureSignInField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcNotifyFutureSignInField_TradeTime_get, _pyctp.CThostFtdcNotifyFutureSignInField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcNotifyFutureSignInField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcNotifyFutureSignInField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcNotifyFutureSignInField_BankSerial_get, _pyctp.CThostFtdcNotifyFutureSignInField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcNotifyFutureSignInField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcNotifyFutureSignInField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcNotifyFutureSignInField_TradingDay_get, _pyctp.CThostFtdcNotifyFutureSignInField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcNotifyFutureSignInField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcNotifyFutureSignInField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcNotifyFutureSignInField_PlateSerial_get, _pyctp.CThostFtdcNotifyFutureSignInField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcNotifyFutureSignInField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcNotifyFutureSignInField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcNotifyFutureSignInField_LastFragment_get, _pyctp.CThostFtdcNotifyFutureSignInField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcNotifyFutureSignInField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcNotifyFutureSignInField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcNotifyFutureSignInField_SessionID_get, _pyctp.CThostFtdcNotifyFutureSignInField_SessionID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcNotifyFutureSignInField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcNotifyFutureSignInField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcNotifyFutureSignInField_InstallID_get, _pyctp.CThostFtdcNotifyFutureSignInField_InstallID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcNotifyFutureSignInField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcNotifyFutureSignInField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcNotifyFutureSignInField_UserID_get, _pyctp.CThostFtdcNotifyFutureSignInField_UserID_set)
    __swig_setmethods__["Digest"] = _pyctp.CThostFtdcNotifyFutureSignInField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CThostFtdcNotifyFutureSignInField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CThostFtdcNotifyFutureSignInField_Digest_get, _pyctp.CThostFtdcNotifyFutureSignInField_Digest_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcNotifyFutureSignInField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcNotifyFutureSignInField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcNotifyFutureSignInField_CurrencyID_get, _pyctp.CThostFtdcNotifyFutureSignInField_CurrencyID_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CThostFtdcNotifyFutureSignInField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CThostFtdcNotifyFutureSignInField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CThostFtdcNotifyFutureSignInField_DeviceID_get, _pyctp.CThostFtdcNotifyFutureSignInField_DeviceID_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcNotifyFutureSignInField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcNotifyFutureSignInField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CThostFtdcNotifyFutureSignInField_BrokerIDByBank_get, _pyctp.CThostFtdcNotifyFutureSignInField_BrokerIDByBank_set)
    __swig_setmethods__["OperNo"] = _pyctp.CThostFtdcNotifyFutureSignInField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CThostFtdcNotifyFutureSignInField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CThostFtdcNotifyFutureSignInField_OperNo_get, _pyctp.CThostFtdcNotifyFutureSignInField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcNotifyFutureSignInField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcNotifyFutureSignInField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcNotifyFutureSignInField_RequestID_get, _pyctp.CThostFtdcNotifyFutureSignInField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CThostFtdcNotifyFutureSignInField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CThostFtdcNotifyFutureSignInField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CThostFtdcNotifyFutureSignInField_TID_get, _pyctp.CThostFtdcNotifyFutureSignInField_TID_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CThostFtdcNotifyFutureSignInField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CThostFtdcNotifyFutureSignInField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CThostFtdcNotifyFutureSignInField_ErrorID_get, _pyctp.CThostFtdcNotifyFutureSignInField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CThostFtdcNotifyFutureSignInField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CThostFtdcNotifyFutureSignInField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CThostFtdcNotifyFutureSignInField_ErrorMsg_get, _pyctp.CThostFtdcNotifyFutureSignInField_ErrorMsg_set)
    __swig_setmethods__["PinKey"] = _pyctp.CThostFtdcNotifyFutureSignInField_PinKey_set
    __swig_getmethods__["PinKey"] = _pyctp.CThostFtdcNotifyFutureSignInField_PinKey_get
    if _newclass:
        PinKey = _swig_property(_pyctp.CThostFtdcNotifyFutureSignInField_PinKey_get, _pyctp.CThostFtdcNotifyFutureSignInField_PinKey_set)
    __swig_setmethods__["MacKey"] = _pyctp.CThostFtdcNotifyFutureSignInField_MacKey_set
    __swig_getmethods__["MacKey"] = _pyctp.CThostFtdcNotifyFutureSignInField_MacKey_get
    if _newclass:
        MacKey = _swig_property(_pyctp.CThostFtdcNotifyFutureSignInField_MacKey_get, _pyctp.CThostFtdcNotifyFutureSignInField_MacKey_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcNotifyFutureSignInField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcNotifyFutureSignInField
    __del__ = lambda self: None
CThostFtdcNotifyFutureSignInField_swigregister = _pyctp.CThostFtdcNotifyFutureSignInField_swigregister
CThostFtdcNotifyFutureSignInField_swigregister(CThostFtdcNotifyFutureSignInField)

class CThostFtdcNotifyFutureSignOutField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcNotifyFutureSignOutField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcNotifyFutureSignOutField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcNotifyFutureSignOutField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcNotifyFutureSignOutField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcNotifyFutureSignOutField_TradeCode_get, _pyctp.CThostFtdcNotifyFutureSignOutField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcNotifyFutureSignOutField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcNotifyFutureSignOutField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcNotifyFutureSignOutField_BankID_get, _pyctp.CThostFtdcNotifyFutureSignOutField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcNotifyFutureSignOutField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcNotifyFutureSignOutField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcNotifyFutureSignOutField_BankBranchID_get, _pyctp.CThostFtdcNotifyFutureSignOutField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcNotifyFutureSignOutField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcNotifyFutureSignOutField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcNotifyFutureSignOutField_BrokerID_get, _pyctp.CThostFtdcNotifyFutureSignOutField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcNotifyFutureSignOutField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcNotifyFutureSignOutField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcNotifyFutureSignOutField_BrokerBranchID_get, _pyctp.CThostFtdcNotifyFutureSignOutField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcNotifyFutureSignOutField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcNotifyFutureSignOutField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcNotifyFutureSignOutField_TradeDate_get, _pyctp.CThostFtdcNotifyFutureSignOutField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcNotifyFutureSignOutField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcNotifyFutureSignOutField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcNotifyFutureSignOutField_TradeTime_get, _pyctp.CThostFtdcNotifyFutureSignOutField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcNotifyFutureSignOutField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcNotifyFutureSignOutField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcNotifyFutureSignOutField_BankSerial_get, _pyctp.CThostFtdcNotifyFutureSignOutField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcNotifyFutureSignOutField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcNotifyFutureSignOutField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcNotifyFutureSignOutField_TradingDay_get, _pyctp.CThostFtdcNotifyFutureSignOutField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcNotifyFutureSignOutField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcNotifyFutureSignOutField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcNotifyFutureSignOutField_PlateSerial_get, _pyctp.CThostFtdcNotifyFutureSignOutField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcNotifyFutureSignOutField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcNotifyFutureSignOutField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcNotifyFutureSignOutField_LastFragment_get, _pyctp.CThostFtdcNotifyFutureSignOutField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcNotifyFutureSignOutField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcNotifyFutureSignOutField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcNotifyFutureSignOutField_SessionID_get, _pyctp.CThostFtdcNotifyFutureSignOutField_SessionID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcNotifyFutureSignOutField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcNotifyFutureSignOutField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcNotifyFutureSignOutField_InstallID_get, _pyctp.CThostFtdcNotifyFutureSignOutField_InstallID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcNotifyFutureSignOutField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcNotifyFutureSignOutField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcNotifyFutureSignOutField_UserID_get, _pyctp.CThostFtdcNotifyFutureSignOutField_UserID_set)
    __swig_setmethods__["Digest"] = _pyctp.CThostFtdcNotifyFutureSignOutField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CThostFtdcNotifyFutureSignOutField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CThostFtdcNotifyFutureSignOutField_Digest_get, _pyctp.CThostFtdcNotifyFutureSignOutField_Digest_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcNotifyFutureSignOutField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcNotifyFutureSignOutField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcNotifyFutureSignOutField_CurrencyID_get, _pyctp.CThostFtdcNotifyFutureSignOutField_CurrencyID_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CThostFtdcNotifyFutureSignOutField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CThostFtdcNotifyFutureSignOutField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CThostFtdcNotifyFutureSignOutField_DeviceID_get, _pyctp.CThostFtdcNotifyFutureSignOutField_DeviceID_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcNotifyFutureSignOutField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcNotifyFutureSignOutField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CThostFtdcNotifyFutureSignOutField_BrokerIDByBank_get, _pyctp.CThostFtdcNotifyFutureSignOutField_BrokerIDByBank_set)
    __swig_setmethods__["OperNo"] = _pyctp.CThostFtdcNotifyFutureSignOutField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CThostFtdcNotifyFutureSignOutField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CThostFtdcNotifyFutureSignOutField_OperNo_get, _pyctp.CThostFtdcNotifyFutureSignOutField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcNotifyFutureSignOutField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcNotifyFutureSignOutField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcNotifyFutureSignOutField_RequestID_get, _pyctp.CThostFtdcNotifyFutureSignOutField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CThostFtdcNotifyFutureSignOutField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CThostFtdcNotifyFutureSignOutField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CThostFtdcNotifyFutureSignOutField_TID_get, _pyctp.CThostFtdcNotifyFutureSignOutField_TID_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CThostFtdcNotifyFutureSignOutField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CThostFtdcNotifyFutureSignOutField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CThostFtdcNotifyFutureSignOutField_ErrorID_get, _pyctp.CThostFtdcNotifyFutureSignOutField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CThostFtdcNotifyFutureSignOutField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CThostFtdcNotifyFutureSignOutField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CThostFtdcNotifyFutureSignOutField_ErrorMsg_get, _pyctp.CThostFtdcNotifyFutureSignOutField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcNotifyFutureSignOutField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcNotifyFutureSignOutField
    __del__ = lambda self: None
CThostFtdcNotifyFutureSignOutField_swigregister = _pyctp.CThostFtdcNotifyFutureSignOutField_swigregister
CThostFtdcNotifyFutureSignOutField_swigregister(CThostFtdcNotifyFutureSignOutField)

class CThostFtdcNotifySyncKeyField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcNotifySyncKeyField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcNotifySyncKeyField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcNotifySyncKeyField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcNotifySyncKeyField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcNotifySyncKeyField_TradeCode_get, _pyctp.CThostFtdcNotifySyncKeyField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcNotifySyncKeyField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcNotifySyncKeyField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcNotifySyncKeyField_BankID_get, _pyctp.CThostFtdcNotifySyncKeyField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcNotifySyncKeyField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcNotifySyncKeyField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcNotifySyncKeyField_BankBranchID_get, _pyctp.CThostFtdcNotifySyncKeyField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcNotifySyncKeyField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcNotifySyncKeyField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcNotifySyncKeyField_BrokerID_get, _pyctp.CThostFtdcNotifySyncKeyField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcNotifySyncKeyField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcNotifySyncKeyField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcNotifySyncKeyField_BrokerBranchID_get, _pyctp.CThostFtdcNotifySyncKeyField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcNotifySyncKeyField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcNotifySyncKeyField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcNotifySyncKeyField_TradeDate_get, _pyctp.CThostFtdcNotifySyncKeyField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcNotifySyncKeyField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcNotifySyncKeyField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcNotifySyncKeyField_TradeTime_get, _pyctp.CThostFtdcNotifySyncKeyField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcNotifySyncKeyField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcNotifySyncKeyField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcNotifySyncKeyField_BankSerial_get, _pyctp.CThostFtdcNotifySyncKeyField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcNotifySyncKeyField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcNotifySyncKeyField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcNotifySyncKeyField_TradingDay_get, _pyctp.CThostFtdcNotifySyncKeyField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcNotifySyncKeyField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcNotifySyncKeyField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcNotifySyncKeyField_PlateSerial_get, _pyctp.CThostFtdcNotifySyncKeyField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcNotifySyncKeyField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcNotifySyncKeyField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcNotifySyncKeyField_LastFragment_get, _pyctp.CThostFtdcNotifySyncKeyField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcNotifySyncKeyField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcNotifySyncKeyField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcNotifySyncKeyField_SessionID_get, _pyctp.CThostFtdcNotifySyncKeyField_SessionID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcNotifySyncKeyField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcNotifySyncKeyField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcNotifySyncKeyField_InstallID_get, _pyctp.CThostFtdcNotifySyncKeyField_InstallID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcNotifySyncKeyField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcNotifySyncKeyField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcNotifySyncKeyField_UserID_get, _pyctp.CThostFtdcNotifySyncKeyField_UserID_set)
    __swig_setmethods__["Message"] = _pyctp.CThostFtdcNotifySyncKeyField_Message_set
    __swig_getmethods__["Message"] = _pyctp.CThostFtdcNotifySyncKeyField_Message_get
    if _newclass:
        Message = _swig_property(_pyctp.CThostFtdcNotifySyncKeyField_Message_get, _pyctp.CThostFtdcNotifySyncKeyField_Message_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CThostFtdcNotifySyncKeyField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CThostFtdcNotifySyncKeyField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CThostFtdcNotifySyncKeyField_DeviceID_get, _pyctp.CThostFtdcNotifySyncKeyField_DeviceID_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcNotifySyncKeyField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcNotifySyncKeyField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CThostFtdcNotifySyncKeyField_BrokerIDByBank_get, _pyctp.CThostFtdcNotifySyncKeyField_BrokerIDByBank_set)
    __swig_setmethods__["OperNo"] = _pyctp.CThostFtdcNotifySyncKeyField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CThostFtdcNotifySyncKeyField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CThostFtdcNotifySyncKeyField_OperNo_get, _pyctp.CThostFtdcNotifySyncKeyField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CThostFtdcNotifySyncKeyField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CThostFtdcNotifySyncKeyField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CThostFtdcNotifySyncKeyField_RequestID_get, _pyctp.CThostFtdcNotifySyncKeyField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CThostFtdcNotifySyncKeyField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CThostFtdcNotifySyncKeyField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CThostFtdcNotifySyncKeyField_TID_get, _pyctp.CThostFtdcNotifySyncKeyField_TID_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CThostFtdcNotifySyncKeyField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CThostFtdcNotifySyncKeyField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CThostFtdcNotifySyncKeyField_ErrorID_get, _pyctp.CThostFtdcNotifySyncKeyField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CThostFtdcNotifySyncKeyField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CThostFtdcNotifySyncKeyField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CThostFtdcNotifySyncKeyField_ErrorMsg_get, _pyctp.CThostFtdcNotifySyncKeyField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcNotifySyncKeyField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcNotifySyncKeyField
    __del__ = lambda self: None
CThostFtdcNotifySyncKeyField_swigregister = _pyctp.CThostFtdcNotifySyncKeyField_swigregister
CThostFtdcNotifySyncKeyField_swigregister(CThostFtdcNotifySyncKeyField)

class CThostFtdcQryAccountregisterField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryAccountregisterField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryAccountregisterField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryAccountregisterField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryAccountregisterField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryAccountregisterField_BrokerID_get, _pyctp.CThostFtdcQryAccountregisterField_BrokerID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcQryAccountregisterField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcQryAccountregisterField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcQryAccountregisterField_AccountID_get, _pyctp.CThostFtdcQryAccountregisterField_AccountID_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcQryAccountregisterField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcQryAccountregisterField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcQryAccountregisterField_BankID_get, _pyctp.CThostFtdcQryAccountregisterField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcQryAccountregisterField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcQryAccountregisterField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcQryAccountregisterField_BankBranchID_get, _pyctp.CThostFtdcQryAccountregisterField_BankBranchID_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcQryAccountregisterField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcQryAccountregisterField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcQryAccountregisterField_CurrencyID_get, _pyctp.CThostFtdcQryAccountregisterField_CurrencyID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryAccountregisterField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryAccountregisterField
    __del__ = lambda self: None
CThostFtdcQryAccountregisterField_swigregister = _pyctp.CThostFtdcQryAccountregisterField_swigregister
CThostFtdcQryAccountregisterField_swigregister(CThostFtdcQryAccountregisterField)

class CThostFtdcAccountregisterField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcAccountregisterField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcAccountregisterField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeDay"] = _pyctp.CThostFtdcAccountregisterField_TradeDay_set
    __swig_getmethods__["TradeDay"] = _pyctp.CThostFtdcAccountregisterField_TradeDay_get
    if _newclass:
        TradeDay = _swig_property(_pyctp.CThostFtdcAccountregisterField_TradeDay_get, _pyctp.CThostFtdcAccountregisterField_TradeDay_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcAccountregisterField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcAccountregisterField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcAccountregisterField_BankID_get, _pyctp.CThostFtdcAccountregisterField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcAccountregisterField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcAccountregisterField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcAccountregisterField_BankBranchID_get, _pyctp.CThostFtdcAccountregisterField_BankBranchID_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CThostFtdcAccountregisterField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CThostFtdcAccountregisterField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CThostFtdcAccountregisterField_BankAccount_get, _pyctp.CThostFtdcAccountregisterField_BankAccount_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcAccountregisterField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcAccountregisterField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcAccountregisterField_BrokerID_get, _pyctp.CThostFtdcAccountregisterField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcAccountregisterField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcAccountregisterField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcAccountregisterField_BrokerBranchID_get, _pyctp.CThostFtdcAccountregisterField_BrokerBranchID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcAccountregisterField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcAccountregisterField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcAccountregisterField_AccountID_get, _pyctp.CThostFtdcAccountregisterField_AccountID_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CThostFtdcAccountregisterField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CThostFtdcAccountregisterField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CThostFtdcAccountregisterField_IdCardType_get, _pyctp.CThostFtdcAccountregisterField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcAccountregisterField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcAccountregisterField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CThostFtdcAccountregisterField_IdentifiedCardNo_get, _pyctp.CThostFtdcAccountregisterField_IdentifiedCardNo_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CThostFtdcAccountregisterField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CThostFtdcAccountregisterField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CThostFtdcAccountregisterField_CustomerName_get, _pyctp.CThostFtdcAccountregisterField_CustomerName_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcAccountregisterField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcAccountregisterField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcAccountregisterField_CurrencyID_get, _pyctp.CThostFtdcAccountregisterField_CurrencyID_set)
    __swig_setmethods__["OpenOrDestroy"] = _pyctp.CThostFtdcAccountregisterField_OpenOrDestroy_set
    __swig_getmethods__["OpenOrDestroy"] = _pyctp.CThostFtdcAccountregisterField_OpenOrDestroy_get
    if _newclass:
        OpenOrDestroy = _swig_property(_pyctp.CThostFtdcAccountregisterField_OpenOrDestroy_get, _pyctp.CThostFtdcAccountregisterField_OpenOrDestroy_set)
    __swig_setmethods__["RegDate"] = _pyctp.CThostFtdcAccountregisterField_RegDate_set
    __swig_getmethods__["RegDate"] = _pyctp.CThostFtdcAccountregisterField_RegDate_get
    if _newclass:
        RegDate = _swig_property(_pyctp.CThostFtdcAccountregisterField_RegDate_get, _pyctp.CThostFtdcAccountregisterField_RegDate_set)
    __swig_setmethods__["OutDate"] = _pyctp.CThostFtdcAccountregisterField_OutDate_set
    __swig_getmethods__["OutDate"] = _pyctp.CThostFtdcAccountregisterField_OutDate_get
    if _newclass:
        OutDate = _swig_property(_pyctp.CThostFtdcAccountregisterField_OutDate_get, _pyctp.CThostFtdcAccountregisterField_OutDate_set)
    __swig_setmethods__["TID"] = _pyctp.CThostFtdcAccountregisterField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CThostFtdcAccountregisterField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CThostFtdcAccountregisterField_TID_get, _pyctp.CThostFtdcAccountregisterField_TID_set)
    __swig_setmethods__["CustType"] = _pyctp.CThostFtdcAccountregisterField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CThostFtdcAccountregisterField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CThostFtdcAccountregisterField_CustType_get, _pyctp.CThostFtdcAccountregisterField_CustType_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CThostFtdcAccountregisterField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CThostFtdcAccountregisterField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CThostFtdcAccountregisterField_BankAccType_get, _pyctp.CThostFtdcAccountregisterField_BankAccType_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcAccountregisterField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcAccountregisterField
    __del__ = lambda self: None
CThostFtdcAccountregisterField_swigregister = _pyctp.CThostFtdcAccountregisterField_swigregister
CThostFtdcAccountregisterField_swigregister(CThostFtdcAccountregisterField)

class CThostFtdcOpenAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcOpenAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcOpenAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcOpenAccountField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcOpenAccountField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcOpenAccountField_TradeCode_get, _pyctp.CThostFtdcOpenAccountField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcOpenAccountField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcOpenAccountField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcOpenAccountField_BankID_get, _pyctp.CThostFtdcOpenAccountField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcOpenAccountField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcOpenAccountField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcOpenAccountField_BankBranchID_get, _pyctp.CThostFtdcOpenAccountField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcOpenAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcOpenAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcOpenAccountField_BrokerID_get, _pyctp.CThostFtdcOpenAccountField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcOpenAccountField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcOpenAccountField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcOpenAccountField_BrokerBranchID_get, _pyctp.CThostFtdcOpenAccountField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcOpenAccountField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcOpenAccountField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcOpenAccountField_TradeDate_get, _pyctp.CThostFtdcOpenAccountField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcOpenAccountField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcOpenAccountField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcOpenAccountField_TradeTime_get, _pyctp.CThostFtdcOpenAccountField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcOpenAccountField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcOpenAccountField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcOpenAccountField_BankSerial_get, _pyctp.CThostFtdcOpenAccountField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcOpenAccountField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcOpenAccountField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcOpenAccountField_TradingDay_get, _pyctp.CThostFtdcOpenAccountField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcOpenAccountField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcOpenAccountField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcOpenAccountField_PlateSerial_get, _pyctp.CThostFtdcOpenAccountField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcOpenAccountField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcOpenAccountField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcOpenAccountField_LastFragment_get, _pyctp.CThostFtdcOpenAccountField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcOpenAccountField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcOpenAccountField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcOpenAccountField_SessionID_get, _pyctp.CThostFtdcOpenAccountField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CThostFtdcOpenAccountField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CThostFtdcOpenAccountField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CThostFtdcOpenAccountField_CustomerName_get, _pyctp.CThostFtdcOpenAccountField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CThostFtdcOpenAccountField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CThostFtdcOpenAccountField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CThostFtdcOpenAccountField_IdCardType_get, _pyctp.CThostFtdcOpenAccountField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcOpenAccountField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcOpenAccountField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CThostFtdcOpenAccountField_IdentifiedCardNo_get, _pyctp.CThostFtdcOpenAccountField_IdentifiedCardNo_set)
    __swig_setmethods__["Gender"] = _pyctp.CThostFtdcOpenAccountField_Gender_set
    __swig_getmethods__["Gender"] = _pyctp.CThostFtdcOpenAccountField_Gender_get
    if _newclass:
        Gender = _swig_property(_pyctp.CThostFtdcOpenAccountField_Gender_get, _pyctp.CThostFtdcOpenAccountField_Gender_set)
    __swig_setmethods__["CountryCode"] = _pyctp.CThostFtdcOpenAccountField_CountryCode_set
    __swig_getmethods__["CountryCode"] = _pyctp.CThostFtdcOpenAccountField_CountryCode_get
    if _newclass:
        CountryCode = _swig_property(_pyctp.CThostFtdcOpenAccountField_CountryCode_get, _pyctp.CThostFtdcOpenAccountField_CountryCode_set)
    __swig_setmethods__["CustType"] = _pyctp.CThostFtdcOpenAccountField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CThostFtdcOpenAccountField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CThostFtdcOpenAccountField_CustType_get, _pyctp.CThostFtdcOpenAccountField_CustType_set)
    __swig_setmethods__["Address"] = _pyctp.CThostFtdcOpenAccountField_Address_set
    __swig_getmethods__["Address"] = _pyctp.CThostFtdcOpenAccountField_Address_get
    if _newclass:
        Address = _swig_property(_pyctp.CThostFtdcOpenAccountField_Address_get, _pyctp.CThostFtdcOpenAccountField_Address_set)
    __swig_setmethods__["ZipCode"] = _pyctp.CThostFtdcOpenAccountField_ZipCode_set
    __swig_getmethods__["ZipCode"] = _pyctp.CThostFtdcOpenAccountField_ZipCode_get
    if _newclass:
        ZipCode = _swig_property(_pyctp.CThostFtdcOpenAccountField_ZipCode_get, _pyctp.CThostFtdcOpenAccountField_ZipCode_set)
    __swig_setmethods__["Telephone"] = _pyctp.CThostFtdcOpenAccountField_Telephone_set
    __swig_getmethods__["Telephone"] = _pyctp.CThostFtdcOpenAccountField_Telephone_get
    if _newclass:
        Telephone = _swig_property(_pyctp.CThostFtdcOpenAccountField_Telephone_get, _pyctp.CThostFtdcOpenAccountField_Telephone_set)
    __swig_setmethods__["MobilePhone"] = _pyctp.CThostFtdcOpenAccountField_MobilePhone_set
    __swig_getmethods__["MobilePhone"] = _pyctp.CThostFtdcOpenAccountField_MobilePhone_get
    if _newclass:
        MobilePhone = _swig_property(_pyctp.CThostFtdcOpenAccountField_MobilePhone_get, _pyctp.CThostFtdcOpenAccountField_MobilePhone_set)
    __swig_setmethods__["Fax"] = _pyctp.CThostFtdcOpenAccountField_Fax_set
    __swig_getmethods__["Fax"] = _pyctp.CThostFtdcOpenAccountField_Fax_get
    if _newclass:
        Fax = _swig_property(_pyctp.CThostFtdcOpenAccountField_Fax_get, _pyctp.CThostFtdcOpenAccountField_Fax_set)
    __swig_setmethods__["EMail"] = _pyctp.CThostFtdcOpenAccountField_EMail_set
    __swig_getmethods__["EMail"] = _pyctp.CThostFtdcOpenAccountField_EMail_get
    if _newclass:
        EMail = _swig_property(_pyctp.CThostFtdcOpenAccountField_EMail_get, _pyctp.CThostFtdcOpenAccountField_EMail_set)
    __swig_setmethods__["MoneyAccountStatus"] = _pyctp.CThostFtdcOpenAccountField_MoneyAccountStatus_set
    __swig_getmethods__["MoneyAccountStatus"] = _pyctp.CThostFtdcOpenAccountField_MoneyAccountStatus_get
    if _newclass:
        MoneyAccountStatus = _swig_property(_pyctp.CThostFtdcOpenAccountField_MoneyAccountStatus_get, _pyctp.CThostFtdcOpenAccountField_MoneyAccountStatus_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CThostFtdcOpenAccountField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CThostFtdcOpenAccountField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CThostFtdcOpenAccountField_BankAccount_get, _pyctp.CThostFtdcOpenAccountField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CThostFtdcOpenAccountField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CThostFtdcOpenAccountField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CThostFtdcOpenAccountField_BankPassWord_get, _pyctp.CThostFtdcOpenAccountField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcOpenAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcOpenAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcOpenAccountField_AccountID_get, _pyctp.CThostFtdcOpenAccountField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcOpenAccountField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcOpenAccountField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcOpenAccountField_Password_get, _pyctp.CThostFtdcOpenAccountField_Password_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcOpenAccountField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcOpenAccountField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcOpenAccountField_InstallID_get, _pyctp.CThostFtdcOpenAccountField_InstallID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcOpenAccountField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcOpenAccountField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CThostFtdcOpenAccountField_VerifyCertNoFlag_get, _pyctp.CThostFtdcOpenAccountField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcOpenAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcOpenAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcOpenAccountField_CurrencyID_get, _pyctp.CThostFtdcOpenAccountField_CurrencyID_set)
    __swig_setmethods__["CashExchangeCode"] = _pyctp.CThostFtdcOpenAccountField_CashExchangeCode_set
    __swig_getmethods__["CashExchangeCode"] = _pyctp.CThostFtdcOpenAccountField_CashExchangeCode_get
    if _newclass:
        CashExchangeCode = _swig_property(_pyctp.CThostFtdcOpenAccountField_CashExchangeCode_get, _pyctp.CThostFtdcOpenAccountField_CashExchangeCode_set)
    __swig_setmethods__["Digest"] = _pyctp.CThostFtdcOpenAccountField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CThostFtdcOpenAccountField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CThostFtdcOpenAccountField_Digest_get, _pyctp.CThostFtdcOpenAccountField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CThostFtdcOpenAccountField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CThostFtdcOpenAccountField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CThostFtdcOpenAccountField_BankAccType_get, _pyctp.CThostFtdcOpenAccountField_BankAccType_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CThostFtdcOpenAccountField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CThostFtdcOpenAccountField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CThostFtdcOpenAccountField_DeviceID_get, _pyctp.CThostFtdcOpenAccountField_DeviceID_set)
    __swig_setmethods__["BankSecuAccType"] = _pyctp.CThostFtdcOpenAccountField_BankSecuAccType_set
    __swig_getmethods__["BankSecuAccType"] = _pyctp.CThostFtdcOpenAccountField_BankSecuAccType_get
    if _newclass:
        BankSecuAccType = _swig_property(_pyctp.CThostFtdcOpenAccountField_BankSecuAccType_get, _pyctp.CThostFtdcOpenAccountField_BankSecuAccType_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcOpenAccountField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcOpenAccountField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CThostFtdcOpenAccountField_BrokerIDByBank_get, _pyctp.CThostFtdcOpenAccountField_BrokerIDByBank_set)
    __swig_setmethods__["BankSecuAcc"] = _pyctp.CThostFtdcOpenAccountField_BankSecuAcc_set
    __swig_getmethods__["BankSecuAcc"] = _pyctp.CThostFtdcOpenAccountField_BankSecuAcc_get
    if _newclass:
        BankSecuAcc = _swig_property(_pyctp.CThostFtdcOpenAccountField_BankSecuAcc_get, _pyctp.CThostFtdcOpenAccountField_BankSecuAcc_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CThostFtdcOpenAccountField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CThostFtdcOpenAccountField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CThostFtdcOpenAccountField_BankPwdFlag_get, _pyctp.CThostFtdcOpenAccountField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CThostFtdcOpenAccountField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CThostFtdcOpenAccountField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CThostFtdcOpenAccountField_SecuPwdFlag_get, _pyctp.CThostFtdcOpenAccountField_SecuPwdFlag_set)
    __swig_setmethods__["OperNo"] = _pyctp.CThostFtdcOpenAccountField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CThostFtdcOpenAccountField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CThostFtdcOpenAccountField_OperNo_get, _pyctp.CThostFtdcOpenAccountField_OperNo_set)
    __swig_setmethods__["TID"] = _pyctp.CThostFtdcOpenAccountField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CThostFtdcOpenAccountField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CThostFtdcOpenAccountField_TID_get, _pyctp.CThostFtdcOpenAccountField_TID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcOpenAccountField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcOpenAccountField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcOpenAccountField_UserID_get, _pyctp.CThostFtdcOpenAccountField_UserID_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CThostFtdcOpenAccountField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CThostFtdcOpenAccountField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CThostFtdcOpenAccountField_ErrorID_get, _pyctp.CThostFtdcOpenAccountField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CThostFtdcOpenAccountField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CThostFtdcOpenAccountField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CThostFtdcOpenAccountField_ErrorMsg_get, _pyctp.CThostFtdcOpenAccountField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcOpenAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcOpenAccountField
    __del__ = lambda self: None
CThostFtdcOpenAccountField_swigregister = _pyctp.CThostFtdcOpenAccountField_swigregister
CThostFtdcOpenAccountField_swigregister(CThostFtdcOpenAccountField)

class CThostFtdcCancelAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcCancelAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcCancelAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcCancelAccountField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcCancelAccountField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcCancelAccountField_TradeCode_get, _pyctp.CThostFtdcCancelAccountField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcCancelAccountField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcCancelAccountField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcCancelAccountField_BankID_get, _pyctp.CThostFtdcCancelAccountField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcCancelAccountField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcCancelAccountField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcCancelAccountField_BankBranchID_get, _pyctp.CThostFtdcCancelAccountField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcCancelAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcCancelAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcCancelAccountField_BrokerID_get, _pyctp.CThostFtdcCancelAccountField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcCancelAccountField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcCancelAccountField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcCancelAccountField_BrokerBranchID_get, _pyctp.CThostFtdcCancelAccountField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcCancelAccountField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcCancelAccountField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcCancelAccountField_TradeDate_get, _pyctp.CThostFtdcCancelAccountField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcCancelAccountField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcCancelAccountField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcCancelAccountField_TradeTime_get, _pyctp.CThostFtdcCancelAccountField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcCancelAccountField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcCancelAccountField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcCancelAccountField_BankSerial_get, _pyctp.CThostFtdcCancelAccountField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcCancelAccountField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcCancelAccountField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcCancelAccountField_TradingDay_get, _pyctp.CThostFtdcCancelAccountField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcCancelAccountField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcCancelAccountField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcCancelAccountField_PlateSerial_get, _pyctp.CThostFtdcCancelAccountField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcCancelAccountField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcCancelAccountField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcCancelAccountField_LastFragment_get, _pyctp.CThostFtdcCancelAccountField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcCancelAccountField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcCancelAccountField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcCancelAccountField_SessionID_get, _pyctp.CThostFtdcCancelAccountField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CThostFtdcCancelAccountField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CThostFtdcCancelAccountField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CThostFtdcCancelAccountField_CustomerName_get, _pyctp.CThostFtdcCancelAccountField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CThostFtdcCancelAccountField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CThostFtdcCancelAccountField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CThostFtdcCancelAccountField_IdCardType_get, _pyctp.CThostFtdcCancelAccountField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcCancelAccountField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcCancelAccountField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CThostFtdcCancelAccountField_IdentifiedCardNo_get, _pyctp.CThostFtdcCancelAccountField_IdentifiedCardNo_set)
    __swig_setmethods__["Gender"] = _pyctp.CThostFtdcCancelAccountField_Gender_set
    __swig_getmethods__["Gender"] = _pyctp.CThostFtdcCancelAccountField_Gender_get
    if _newclass:
        Gender = _swig_property(_pyctp.CThostFtdcCancelAccountField_Gender_get, _pyctp.CThostFtdcCancelAccountField_Gender_set)
    __swig_setmethods__["CountryCode"] = _pyctp.CThostFtdcCancelAccountField_CountryCode_set
    __swig_getmethods__["CountryCode"] = _pyctp.CThostFtdcCancelAccountField_CountryCode_get
    if _newclass:
        CountryCode = _swig_property(_pyctp.CThostFtdcCancelAccountField_CountryCode_get, _pyctp.CThostFtdcCancelAccountField_CountryCode_set)
    __swig_setmethods__["CustType"] = _pyctp.CThostFtdcCancelAccountField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CThostFtdcCancelAccountField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CThostFtdcCancelAccountField_CustType_get, _pyctp.CThostFtdcCancelAccountField_CustType_set)
    __swig_setmethods__["Address"] = _pyctp.CThostFtdcCancelAccountField_Address_set
    __swig_getmethods__["Address"] = _pyctp.CThostFtdcCancelAccountField_Address_get
    if _newclass:
        Address = _swig_property(_pyctp.CThostFtdcCancelAccountField_Address_get, _pyctp.CThostFtdcCancelAccountField_Address_set)
    __swig_setmethods__["ZipCode"] = _pyctp.CThostFtdcCancelAccountField_ZipCode_set
    __swig_getmethods__["ZipCode"] = _pyctp.CThostFtdcCancelAccountField_ZipCode_get
    if _newclass:
        ZipCode = _swig_property(_pyctp.CThostFtdcCancelAccountField_ZipCode_get, _pyctp.CThostFtdcCancelAccountField_ZipCode_set)
    __swig_setmethods__["Telephone"] = _pyctp.CThostFtdcCancelAccountField_Telephone_set
    __swig_getmethods__["Telephone"] = _pyctp.CThostFtdcCancelAccountField_Telephone_get
    if _newclass:
        Telephone = _swig_property(_pyctp.CThostFtdcCancelAccountField_Telephone_get, _pyctp.CThostFtdcCancelAccountField_Telephone_set)
    __swig_setmethods__["MobilePhone"] = _pyctp.CThostFtdcCancelAccountField_MobilePhone_set
    __swig_getmethods__["MobilePhone"] = _pyctp.CThostFtdcCancelAccountField_MobilePhone_get
    if _newclass:
        MobilePhone = _swig_property(_pyctp.CThostFtdcCancelAccountField_MobilePhone_get, _pyctp.CThostFtdcCancelAccountField_MobilePhone_set)
    __swig_setmethods__["Fax"] = _pyctp.CThostFtdcCancelAccountField_Fax_set
    __swig_getmethods__["Fax"] = _pyctp.CThostFtdcCancelAccountField_Fax_get
    if _newclass:
        Fax = _swig_property(_pyctp.CThostFtdcCancelAccountField_Fax_get, _pyctp.CThostFtdcCancelAccountField_Fax_set)
    __swig_setmethods__["EMail"] = _pyctp.CThostFtdcCancelAccountField_EMail_set
    __swig_getmethods__["EMail"] = _pyctp.CThostFtdcCancelAccountField_EMail_get
    if _newclass:
        EMail = _swig_property(_pyctp.CThostFtdcCancelAccountField_EMail_get, _pyctp.CThostFtdcCancelAccountField_EMail_set)
    __swig_setmethods__["MoneyAccountStatus"] = _pyctp.CThostFtdcCancelAccountField_MoneyAccountStatus_set
    __swig_getmethods__["MoneyAccountStatus"] = _pyctp.CThostFtdcCancelAccountField_MoneyAccountStatus_get
    if _newclass:
        MoneyAccountStatus = _swig_property(_pyctp.CThostFtdcCancelAccountField_MoneyAccountStatus_get, _pyctp.CThostFtdcCancelAccountField_MoneyAccountStatus_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CThostFtdcCancelAccountField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CThostFtdcCancelAccountField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CThostFtdcCancelAccountField_BankAccount_get, _pyctp.CThostFtdcCancelAccountField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CThostFtdcCancelAccountField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CThostFtdcCancelAccountField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CThostFtdcCancelAccountField_BankPassWord_get, _pyctp.CThostFtdcCancelAccountField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcCancelAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcCancelAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcCancelAccountField_AccountID_get, _pyctp.CThostFtdcCancelAccountField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcCancelAccountField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcCancelAccountField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcCancelAccountField_Password_get, _pyctp.CThostFtdcCancelAccountField_Password_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcCancelAccountField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcCancelAccountField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcCancelAccountField_InstallID_get, _pyctp.CThostFtdcCancelAccountField_InstallID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcCancelAccountField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcCancelAccountField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CThostFtdcCancelAccountField_VerifyCertNoFlag_get, _pyctp.CThostFtdcCancelAccountField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcCancelAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcCancelAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcCancelAccountField_CurrencyID_get, _pyctp.CThostFtdcCancelAccountField_CurrencyID_set)
    __swig_setmethods__["CashExchangeCode"] = _pyctp.CThostFtdcCancelAccountField_CashExchangeCode_set
    __swig_getmethods__["CashExchangeCode"] = _pyctp.CThostFtdcCancelAccountField_CashExchangeCode_get
    if _newclass:
        CashExchangeCode = _swig_property(_pyctp.CThostFtdcCancelAccountField_CashExchangeCode_get, _pyctp.CThostFtdcCancelAccountField_CashExchangeCode_set)
    __swig_setmethods__["Digest"] = _pyctp.CThostFtdcCancelAccountField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CThostFtdcCancelAccountField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CThostFtdcCancelAccountField_Digest_get, _pyctp.CThostFtdcCancelAccountField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CThostFtdcCancelAccountField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CThostFtdcCancelAccountField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CThostFtdcCancelAccountField_BankAccType_get, _pyctp.CThostFtdcCancelAccountField_BankAccType_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CThostFtdcCancelAccountField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CThostFtdcCancelAccountField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CThostFtdcCancelAccountField_DeviceID_get, _pyctp.CThostFtdcCancelAccountField_DeviceID_set)
    __swig_setmethods__["BankSecuAccType"] = _pyctp.CThostFtdcCancelAccountField_BankSecuAccType_set
    __swig_getmethods__["BankSecuAccType"] = _pyctp.CThostFtdcCancelAccountField_BankSecuAccType_get
    if _newclass:
        BankSecuAccType = _swig_property(_pyctp.CThostFtdcCancelAccountField_BankSecuAccType_get, _pyctp.CThostFtdcCancelAccountField_BankSecuAccType_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcCancelAccountField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcCancelAccountField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CThostFtdcCancelAccountField_BrokerIDByBank_get, _pyctp.CThostFtdcCancelAccountField_BrokerIDByBank_set)
    __swig_setmethods__["BankSecuAcc"] = _pyctp.CThostFtdcCancelAccountField_BankSecuAcc_set
    __swig_getmethods__["BankSecuAcc"] = _pyctp.CThostFtdcCancelAccountField_BankSecuAcc_get
    if _newclass:
        BankSecuAcc = _swig_property(_pyctp.CThostFtdcCancelAccountField_BankSecuAcc_get, _pyctp.CThostFtdcCancelAccountField_BankSecuAcc_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CThostFtdcCancelAccountField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CThostFtdcCancelAccountField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CThostFtdcCancelAccountField_BankPwdFlag_get, _pyctp.CThostFtdcCancelAccountField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CThostFtdcCancelAccountField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CThostFtdcCancelAccountField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CThostFtdcCancelAccountField_SecuPwdFlag_get, _pyctp.CThostFtdcCancelAccountField_SecuPwdFlag_set)
    __swig_setmethods__["OperNo"] = _pyctp.CThostFtdcCancelAccountField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CThostFtdcCancelAccountField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CThostFtdcCancelAccountField_OperNo_get, _pyctp.CThostFtdcCancelAccountField_OperNo_set)
    __swig_setmethods__["TID"] = _pyctp.CThostFtdcCancelAccountField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CThostFtdcCancelAccountField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CThostFtdcCancelAccountField_TID_get, _pyctp.CThostFtdcCancelAccountField_TID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcCancelAccountField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcCancelAccountField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcCancelAccountField_UserID_get, _pyctp.CThostFtdcCancelAccountField_UserID_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CThostFtdcCancelAccountField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CThostFtdcCancelAccountField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CThostFtdcCancelAccountField_ErrorID_get, _pyctp.CThostFtdcCancelAccountField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CThostFtdcCancelAccountField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CThostFtdcCancelAccountField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CThostFtdcCancelAccountField_ErrorMsg_get, _pyctp.CThostFtdcCancelAccountField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcCancelAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcCancelAccountField
    __del__ = lambda self: None
CThostFtdcCancelAccountField_swigregister = _pyctp.CThostFtdcCancelAccountField_swigregister
CThostFtdcCancelAccountField_swigregister(CThostFtdcCancelAccountField)

class CThostFtdcChangeAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcChangeAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcChangeAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcChangeAccountField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcChangeAccountField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcChangeAccountField_TradeCode_get, _pyctp.CThostFtdcChangeAccountField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcChangeAccountField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcChangeAccountField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcChangeAccountField_BankID_get, _pyctp.CThostFtdcChangeAccountField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcChangeAccountField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcChangeAccountField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcChangeAccountField_BankBranchID_get, _pyctp.CThostFtdcChangeAccountField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcChangeAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcChangeAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcChangeAccountField_BrokerID_get, _pyctp.CThostFtdcChangeAccountField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcChangeAccountField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcChangeAccountField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcChangeAccountField_BrokerBranchID_get, _pyctp.CThostFtdcChangeAccountField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcChangeAccountField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcChangeAccountField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcChangeAccountField_TradeDate_get, _pyctp.CThostFtdcChangeAccountField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcChangeAccountField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcChangeAccountField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcChangeAccountField_TradeTime_get, _pyctp.CThostFtdcChangeAccountField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcChangeAccountField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcChangeAccountField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcChangeAccountField_BankSerial_get, _pyctp.CThostFtdcChangeAccountField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcChangeAccountField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcChangeAccountField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcChangeAccountField_TradingDay_get, _pyctp.CThostFtdcChangeAccountField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcChangeAccountField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcChangeAccountField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcChangeAccountField_PlateSerial_get, _pyctp.CThostFtdcChangeAccountField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcChangeAccountField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcChangeAccountField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcChangeAccountField_LastFragment_get, _pyctp.CThostFtdcChangeAccountField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcChangeAccountField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcChangeAccountField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcChangeAccountField_SessionID_get, _pyctp.CThostFtdcChangeAccountField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CThostFtdcChangeAccountField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CThostFtdcChangeAccountField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CThostFtdcChangeAccountField_CustomerName_get, _pyctp.CThostFtdcChangeAccountField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CThostFtdcChangeAccountField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CThostFtdcChangeAccountField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CThostFtdcChangeAccountField_IdCardType_get, _pyctp.CThostFtdcChangeAccountField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcChangeAccountField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcChangeAccountField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CThostFtdcChangeAccountField_IdentifiedCardNo_get, _pyctp.CThostFtdcChangeAccountField_IdentifiedCardNo_set)
    __swig_setmethods__["Gender"] = _pyctp.CThostFtdcChangeAccountField_Gender_set
    __swig_getmethods__["Gender"] = _pyctp.CThostFtdcChangeAccountField_Gender_get
    if _newclass:
        Gender = _swig_property(_pyctp.CThostFtdcChangeAccountField_Gender_get, _pyctp.CThostFtdcChangeAccountField_Gender_set)
    __swig_setmethods__["CountryCode"] = _pyctp.CThostFtdcChangeAccountField_CountryCode_set
    __swig_getmethods__["CountryCode"] = _pyctp.CThostFtdcChangeAccountField_CountryCode_get
    if _newclass:
        CountryCode = _swig_property(_pyctp.CThostFtdcChangeAccountField_CountryCode_get, _pyctp.CThostFtdcChangeAccountField_CountryCode_set)
    __swig_setmethods__["CustType"] = _pyctp.CThostFtdcChangeAccountField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CThostFtdcChangeAccountField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CThostFtdcChangeAccountField_CustType_get, _pyctp.CThostFtdcChangeAccountField_CustType_set)
    __swig_setmethods__["Address"] = _pyctp.CThostFtdcChangeAccountField_Address_set
    __swig_getmethods__["Address"] = _pyctp.CThostFtdcChangeAccountField_Address_get
    if _newclass:
        Address = _swig_property(_pyctp.CThostFtdcChangeAccountField_Address_get, _pyctp.CThostFtdcChangeAccountField_Address_set)
    __swig_setmethods__["ZipCode"] = _pyctp.CThostFtdcChangeAccountField_ZipCode_set
    __swig_getmethods__["ZipCode"] = _pyctp.CThostFtdcChangeAccountField_ZipCode_get
    if _newclass:
        ZipCode = _swig_property(_pyctp.CThostFtdcChangeAccountField_ZipCode_get, _pyctp.CThostFtdcChangeAccountField_ZipCode_set)
    __swig_setmethods__["Telephone"] = _pyctp.CThostFtdcChangeAccountField_Telephone_set
    __swig_getmethods__["Telephone"] = _pyctp.CThostFtdcChangeAccountField_Telephone_get
    if _newclass:
        Telephone = _swig_property(_pyctp.CThostFtdcChangeAccountField_Telephone_get, _pyctp.CThostFtdcChangeAccountField_Telephone_set)
    __swig_setmethods__["MobilePhone"] = _pyctp.CThostFtdcChangeAccountField_MobilePhone_set
    __swig_getmethods__["MobilePhone"] = _pyctp.CThostFtdcChangeAccountField_MobilePhone_get
    if _newclass:
        MobilePhone = _swig_property(_pyctp.CThostFtdcChangeAccountField_MobilePhone_get, _pyctp.CThostFtdcChangeAccountField_MobilePhone_set)
    __swig_setmethods__["Fax"] = _pyctp.CThostFtdcChangeAccountField_Fax_set
    __swig_getmethods__["Fax"] = _pyctp.CThostFtdcChangeAccountField_Fax_get
    if _newclass:
        Fax = _swig_property(_pyctp.CThostFtdcChangeAccountField_Fax_get, _pyctp.CThostFtdcChangeAccountField_Fax_set)
    __swig_setmethods__["EMail"] = _pyctp.CThostFtdcChangeAccountField_EMail_set
    __swig_getmethods__["EMail"] = _pyctp.CThostFtdcChangeAccountField_EMail_get
    if _newclass:
        EMail = _swig_property(_pyctp.CThostFtdcChangeAccountField_EMail_get, _pyctp.CThostFtdcChangeAccountField_EMail_set)
    __swig_setmethods__["MoneyAccountStatus"] = _pyctp.CThostFtdcChangeAccountField_MoneyAccountStatus_set
    __swig_getmethods__["MoneyAccountStatus"] = _pyctp.CThostFtdcChangeAccountField_MoneyAccountStatus_get
    if _newclass:
        MoneyAccountStatus = _swig_property(_pyctp.CThostFtdcChangeAccountField_MoneyAccountStatus_get, _pyctp.CThostFtdcChangeAccountField_MoneyAccountStatus_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CThostFtdcChangeAccountField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CThostFtdcChangeAccountField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CThostFtdcChangeAccountField_BankAccount_get, _pyctp.CThostFtdcChangeAccountField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CThostFtdcChangeAccountField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CThostFtdcChangeAccountField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CThostFtdcChangeAccountField_BankPassWord_get, _pyctp.CThostFtdcChangeAccountField_BankPassWord_set)
    __swig_setmethods__["NewBankAccount"] = _pyctp.CThostFtdcChangeAccountField_NewBankAccount_set
    __swig_getmethods__["NewBankAccount"] = _pyctp.CThostFtdcChangeAccountField_NewBankAccount_get
    if _newclass:
        NewBankAccount = _swig_property(_pyctp.CThostFtdcChangeAccountField_NewBankAccount_get, _pyctp.CThostFtdcChangeAccountField_NewBankAccount_set)
    __swig_setmethods__["NewBankPassWord"] = _pyctp.CThostFtdcChangeAccountField_NewBankPassWord_set
    __swig_getmethods__["NewBankPassWord"] = _pyctp.CThostFtdcChangeAccountField_NewBankPassWord_get
    if _newclass:
        NewBankPassWord = _swig_property(_pyctp.CThostFtdcChangeAccountField_NewBankPassWord_get, _pyctp.CThostFtdcChangeAccountField_NewBankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcChangeAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcChangeAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcChangeAccountField_AccountID_get, _pyctp.CThostFtdcChangeAccountField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcChangeAccountField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcChangeAccountField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcChangeAccountField_Password_get, _pyctp.CThostFtdcChangeAccountField_Password_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CThostFtdcChangeAccountField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CThostFtdcChangeAccountField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CThostFtdcChangeAccountField_BankAccType_get, _pyctp.CThostFtdcChangeAccountField_BankAccType_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcChangeAccountField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcChangeAccountField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcChangeAccountField_InstallID_get, _pyctp.CThostFtdcChangeAccountField_InstallID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcChangeAccountField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcChangeAccountField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CThostFtdcChangeAccountField_VerifyCertNoFlag_get, _pyctp.CThostFtdcChangeAccountField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcChangeAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcChangeAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcChangeAccountField_CurrencyID_get, _pyctp.CThostFtdcChangeAccountField_CurrencyID_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcChangeAccountField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcChangeAccountField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CThostFtdcChangeAccountField_BrokerIDByBank_get, _pyctp.CThostFtdcChangeAccountField_BrokerIDByBank_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CThostFtdcChangeAccountField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CThostFtdcChangeAccountField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CThostFtdcChangeAccountField_BankPwdFlag_get, _pyctp.CThostFtdcChangeAccountField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CThostFtdcChangeAccountField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CThostFtdcChangeAccountField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CThostFtdcChangeAccountField_SecuPwdFlag_get, _pyctp.CThostFtdcChangeAccountField_SecuPwdFlag_set)
    __swig_setmethods__["TID"] = _pyctp.CThostFtdcChangeAccountField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CThostFtdcChangeAccountField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CThostFtdcChangeAccountField_TID_get, _pyctp.CThostFtdcChangeAccountField_TID_set)
    __swig_setmethods__["Digest"] = _pyctp.CThostFtdcChangeAccountField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CThostFtdcChangeAccountField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CThostFtdcChangeAccountField_Digest_get, _pyctp.CThostFtdcChangeAccountField_Digest_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CThostFtdcChangeAccountField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CThostFtdcChangeAccountField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CThostFtdcChangeAccountField_ErrorID_get, _pyctp.CThostFtdcChangeAccountField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CThostFtdcChangeAccountField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CThostFtdcChangeAccountField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CThostFtdcChangeAccountField_ErrorMsg_get, _pyctp.CThostFtdcChangeAccountField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcChangeAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcChangeAccountField
    __del__ = lambda self: None
CThostFtdcChangeAccountField_swigregister = _pyctp.CThostFtdcChangeAccountField_swigregister
CThostFtdcChangeAccountField_swigregister(CThostFtdcChangeAccountField)

class CThostFtdcSecAgentACIDMapField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcSecAgentACIDMapField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcSecAgentACIDMapField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcSecAgentACIDMapField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcSecAgentACIDMapField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcSecAgentACIDMapField_BrokerID_get, _pyctp.CThostFtdcSecAgentACIDMapField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcSecAgentACIDMapField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcSecAgentACIDMapField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcSecAgentACIDMapField_UserID_get, _pyctp.CThostFtdcSecAgentACIDMapField_UserID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcSecAgentACIDMapField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcSecAgentACIDMapField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcSecAgentACIDMapField_AccountID_get, _pyctp.CThostFtdcSecAgentACIDMapField_AccountID_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcSecAgentACIDMapField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcSecAgentACIDMapField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcSecAgentACIDMapField_CurrencyID_get, _pyctp.CThostFtdcSecAgentACIDMapField_CurrencyID_set)
    __swig_setmethods__["BrokerSecAgentID"] = _pyctp.CThostFtdcSecAgentACIDMapField_BrokerSecAgentID_set
    __swig_getmethods__["BrokerSecAgentID"] = _pyctp.CThostFtdcSecAgentACIDMapField_BrokerSecAgentID_get
    if _newclass:
        BrokerSecAgentID = _swig_property(_pyctp.CThostFtdcSecAgentACIDMapField_BrokerSecAgentID_get, _pyctp.CThostFtdcSecAgentACIDMapField_BrokerSecAgentID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcSecAgentACIDMapField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcSecAgentACIDMapField
    __del__ = lambda self: None
CThostFtdcSecAgentACIDMapField_swigregister = _pyctp.CThostFtdcSecAgentACIDMapField_swigregister
CThostFtdcSecAgentACIDMapField_swigregister(CThostFtdcSecAgentACIDMapField)

class CThostFtdcQrySecAgentACIDMapField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQrySecAgentACIDMapField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQrySecAgentACIDMapField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQrySecAgentACIDMapField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQrySecAgentACIDMapField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQrySecAgentACIDMapField_BrokerID_get, _pyctp.CThostFtdcQrySecAgentACIDMapField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcQrySecAgentACIDMapField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcQrySecAgentACIDMapField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcQrySecAgentACIDMapField_UserID_get, _pyctp.CThostFtdcQrySecAgentACIDMapField_UserID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcQrySecAgentACIDMapField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcQrySecAgentACIDMapField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcQrySecAgentACIDMapField_AccountID_get, _pyctp.CThostFtdcQrySecAgentACIDMapField_AccountID_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcQrySecAgentACIDMapField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcQrySecAgentACIDMapField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcQrySecAgentACIDMapField_CurrencyID_get, _pyctp.CThostFtdcQrySecAgentACIDMapField_CurrencyID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQrySecAgentACIDMapField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQrySecAgentACIDMapField
    __del__ = lambda self: None
CThostFtdcQrySecAgentACIDMapField_swigregister = _pyctp.CThostFtdcQrySecAgentACIDMapField_swigregister
CThostFtdcQrySecAgentACIDMapField_swigregister(CThostFtdcQrySecAgentACIDMapField)

class CThostFtdcUserRightsAssignField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcUserRightsAssignField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcUserRightsAssignField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcUserRightsAssignField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcUserRightsAssignField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcUserRightsAssignField_BrokerID_get, _pyctp.CThostFtdcUserRightsAssignField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcUserRightsAssignField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcUserRightsAssignField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcUserRightsAssignField_UserID_get, _pyctp.CThostFtdcUserRightsAssignField_UserID_set)
    __swig_setmethods__["DRIdentityID"] = _pyctp.CThostFtdcUserRightsAssignField_DRIdentityID_set
    __swig_getmethods__["DRIdentityID"] = _pyctp.CThostFtdcUserRightsAssignField_DRIdentityID_get
    if _newclass:
        DRIdentityID = _swig_property(_pyctp.CThostFtdcUserRightsAssignField_DRIdentityID_get, _pyctp.CThostFtdcUserRightsAssignField_DRIdentityID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcUserRightsAssignField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcUserRightsAssignField
    __del__ = lambda self: None
CThostFtdcUserRightsAssignField_swigregister = _pyctp.CThostFtdcUserRightsAssignField_swigregister
CThostFtdcUserRightsAssignField_swigregister(CThostFtdcUserRightsAssignField)

class CThostFtdcBrokerUserRightAssignField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcBrokerUserRightAssignField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcBrokerUserRightAssignField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcBrokerUserRightAssignField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcBrokerUserRightAssignField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcBrokerUserRightAssignField_BrokerID_get, _pyctp.CThostFtdcBrokerUserRightAssignField_BrokerID_set)
    __swig_setmethods__["DRIdentityID"] = _pyctp.CThostFtdcBrokerUserRightAssignField_DRIdentityID_set
    __swig_getmethods__["DRIdentityID"] = _pyctp.CThostFtdcBrokerUserRightAssignField_DRIdentityID_get
    if _newclass:
        DRIdentityID = _swig_property(_pyctp.CThostFtdcBrokerUserRightAssignField_DRIdentityID_get, _pyctp.CThostFtdcBrokerUserRightAssignField_DRIdentityID_set)
    __swig_setmethods__["Tradeable"] = _pyctp.CThostFtdcBrokerUserRightAssignField_Tradeable_set
    __swig_getmethods__["Tradeable"] = _pyctp.CThostFtdcBrokerUserRightAssignField_Tradeable_get
    if _newclass:
        Tradeable = _swig_property(_pyctp.CThostFtdcBrokerUserRightAssignField_Tradeable_get, _pyctp.CThostFtdcBrokerUserRightAssignField_Tradeable_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcBrokerUserRightAssignField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcBrokerUserRightAssignField
    __del__ = lambda self: None
CThostFtdcBrokerUserRightAssignField_swigregister = _pyctp.CThostFtdcBrokerUserRightAssignField_swigregister
CThostFtdcBrokerUserRightAssignField_swigregister(CThostFtdcBrokerUserRightAssignField)

class CThostFtdcDRTransferField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcDRTransferField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcDRTransferField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["OrigDRIdentityID"] = _pyctp.CThostFtdcDRTransferField_OrigDRIdentityID_set
    __swig_getmethods__["OrigDRIdentityID"] = _pyctp.CThostFtdcDRTransferField_OrigDRIdentityID_get
    if _newclass:
        OrigDRIdentityID = _swig_property(_pyctp.CThostFtdcDRTransferField_OrigDRIdentityID_get, _pyctp.CThostFtdcDRTransferField_OrigDRIdentityID_set)
    __swig_setmethods__["DestDRIdentityID"] = _pyctp.CThostFtdcDRTransferField_DestDRIdentityID_set
    __swig_getmethods__["DestDRIdentityID"] = _pyctp.CThostFtdcDRTransferField_DestDRIdentityID_get
    if _newclass:
        DestDRIdentityID = _swig_property(_pyctp.CThostFtdcDRTransferField_DestDRIdentityID_get, _pyctp.CThostFtdcDRTransferField_DestDRIdentityID_set)
    __swig_setmethods__["OrigBrokerID"] = _pyctp.CThostFtdcDRTransferField_OrigBrokerID_set
    __swig_getmethods__["OrigBrokerID"] = _pyctp.CThostFtdcDRTransferField_OrigBrokerID_get
    if _newclass:
        OrigBrokerID = _swig_property(_pyctp.CThostFtdcDRTransferField_OrigBrokerID_get, _pyctp.CThostFtdcDRTransferField_OrigBrokerID_set)
    __swig_setmethods__["DestBrokerID"] = _pyctp.CThostFtdcDRTransferField_DestBrokerID_set
    __swig_getmethods__["DestBrokerID"] = _pyctp.CThostFtdcDRTransferField_DestBrokerID_get
    if _newclass:
        DestBrokerID = _swig_property(_pyctp.CThostFtdcDRTransferField_DestBrokerID_get, _pyctp.CThostFtdcDRTransferField_DestBrokerID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcDRTransferField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcDRTransferField
    __del__ = lambda self: None
CThostFtdcDRTransferField_swigregister = _pyctp.CThostFtdcDRTransferField_swigregister
CThostFtdcDRTransferField_swigregister(CThostFtdcDRTransferField)

class CThostFtdcFensUserInfoField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcFensUserInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcFensUserInfoField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcFensUserInfoField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcFensUserInfoField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcFensUserInfoField_BrokerID_get, _pyctp.CThostFtdcFensUserInfoField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcFensUserInfoField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcFensUserInfoField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcFensUserInfoField_UserID_get, _pyctp.CThostFtdcFensUserInfoField_UserID_set)
    __swig_setmethods__["LoginMode"] = _pyctp.CThostFtdcFensUserInfoField_LoginMode_set
    __swig_getmethods__["LoginMode"] = _pyctp.CThostFtdcFensUserInfoField_LoginMode_get
    if _newclass:
        LoginMode = _swig_property(_pyctp.CThostFtdcFensUserInfoField_LoginMode_get, _pyctp.CThostFtdcFensUserInfoField_LoginMode_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcFensUserInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcFensUserInfoField
    __del__ = lambda self: None
CThostFtdcFensUserInfoField_swigregister = _pyctp.CThostFtdcFensUserInfoField_swigregister
CThostFtdcFensUserInfoField_swigregister(CThostFtdcFensUserInfoField)

class CThostFtdcCurrTransferIdentityField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcCurrTransferIdentityField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcCurrTransferIdentityField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["IdentityID"] = _pyctp.CThostFtdcCurrTransferIdentityField_IdentityID_set
    __swig_getmethods__["IdentityID"] = _pyctp.CThostFtdcCurrTransferIdentityField_IdentityID_get
    if _newclass:
        IdentityID = _swig_property(_pyctp.CThostFtdcCurrTransferIdentityField_IdentityID_get, _pyctp.CThostFtdcCurrTransferIdentityField_IdentityID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcCurrTransferIdentityField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcCurrTransferIdentityField
    __del__ = lambda self: None
CThostFtdcCurrTransferIdentityField_swigregister = _pyctp.CThostFtdcCurrTransferIdentityField_swigregister
CThostFtdcCurrTransferIdentityField_swigregister(CThostFtdcCurrTransferIdentityField)

class CThostFtdcLoginForbiddenUserField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcLoginForbiddenUserField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcLoginForbiddenUserField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcLoginForbiddenUserField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcLoginForbiddenUserField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcLoginForbiddenUserField_BrokerID_get, _pyctp.CThostFtdcLoginForbiddenUserField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcLoginForbiddenUserField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcLoginForbiddenUserField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcLoginForbiddenUserField_UserID_get, _pyctp.CThostFtdcLoginForbiddenUserField_UserID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CThostFtdcLoginForbiddenUserField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CThostFtdcLoginForbiddenUserField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CThostFtdcLoginForbiddenUserField_IPAddress_get, _pyctp.CThostFtdcLoginForbiddenUserField_IPAddress_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcLoginForbiddenUserField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcLoginForbiddenUserField
    __del__ = lambda self: None
CThostFtdcLoginForbiddenUserField_swigregister = _pyctp.CThostFtdcLoginForbiddenUserField_swigregister
CThostFtdcLoginForbiddenUserField_swigregister(CThostFtdcLoginForbiddenUserField)

class CThostFtdcQryLoginForbiddenUserField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcQryLoginForbiddenUserField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcQryLoginForbiddenUserField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcQryLoginForbiddenUserField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcQryLoginForbiddenUserField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcQryLoginForbiddenUserField_BrokerID_get, _pyctp.CThostFtdcQryLoginForbiddenUserField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CThostFtdcQryLoginForbiddenUserField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CThostFtdcQryLoginForbiddenUserField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CThostFtdcQryLoginForbiddenUserField_UserID_get, _pyctp.CThostFtdcQryLoginForbiddenUserField_UserID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcQryLoginForbiddenUserField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcQryLoginForbiddenUserField
    __del__ = lambda self: None
CThostFtdcQryLoginForbiddenUserField_swigregister = _pyctp.CThostFtdcQryLoginForbiddenUserField_swigregister
CThostFtdcQryLoginForbiddenUserField_swigregister(CThostFtdcQryLoginForbiddenUserField)

class CThostFtdcMulticastGroupInfoField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcMulticastGroupInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcMulticastGroupInfoField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["GroupIP"] = _pyctp.CThostFtdcMulticastGroupInfoField_GroupIP_set
    __swig_getmethods__["GroupIP"] = _pyctp.CThostFtdcMulticastGroupInfoField_GroupIP_get
    if _newclass:
        GroupIP = _swig_property(_pyctp.CThostFtdcMulticastGroupInfoField_GroupIP_get, _pyctp.CThostFtdcMulticastGroupInfoField_GroupIP_set)
    __swig_setmethods__["GroupPort"] = _pyctp.CThostFtdcMulticastGroupInfoField_GroupPort_set
    __swig_getmethods__["GroupPort"] = _pyctp.CThostFtdcMulticastGroupInfoField_GroupPort_get
    if _newclass:
        GroupPort = _swig_property(_pyctp.CThostFtdcMulticastGroupInfoField_GroupPort_get, _pyctp.CThostFtdcMulticastGroupInfoField_GroupPort_set)
    __swig_setmethods__["SourceIP"] = _pyctp.CThostFtdcMulticastGroupInfoField_SourceIP_set
    __swig_getmethods__["SourceIP"] = _pyctp.CThostFtdcMulticastGroupInfoField_SourceIP_get
    if _newclass:
        SourceIP = _swig_property(_pyctp.CThostFtdcMulticastGroupInfoField_SourceIP_get, _pyctp.CThostFtdcMulticastGroupInfoField_SourceIP_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcMulticastGroupInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcMulticastGroupInfoField
    __del__ = lambda self: None
CThostFtdcMulticastGroupInfoField_swigregister = _pyctp.CThostFtdcMulticastGroupInfoField_swigregister
CThostFtdcMulticastGroupInfoField_swigregister(CThostFtdcMulticastGroupInfoField)

class CThostFtdcTradingAccountReserveField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcTradingAccountReserveField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcTradingAccountReserveField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcTradingAccountReserveField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcTradingAccountReserveField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcTradingAccountReserveField_BrokerID_get, _pyctp.CThostFtdcTradingAccountReserveField_BrokerID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcTradingAccountReserveField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcTradingAccountReserveField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcTradingAccountReserveField_AccountID_get, _pyctp.CThostFtdcTradingAccountReserveField_AccountID_set)
    __swig_setmethods__["Reserve"] = _pyctp.CThostFtdcTradingAccountReserveField_Reserve_set
    __swig_getmethods__["Reserve"] = _pyctp.CThostFtdcTradingAccountReserveField_Reserve_get
    if _newclass:
        Reserve = _swig_property(_pyctp.CThostFtdcTradingAccountReserveField_Reserve_get, _pyctp.CThostFtdcTradingAccountReserveField_Reserve_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcTradingAccountReserveField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcTradingAccountReserveField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcTradingAccountReserveField_CurrencyID_get, _pyctp.CThostFtdcTradingAccountReserveField_CurrencyID_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcTradingAccountReserveField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcTradingAccountReserveField
    __del__ = lambda self: None
CThostFtdcTradingAccountReserveField_swigregister = _pyctp.CThostFtdcTradingAccountReserveField_swigregister
CThostFtdcTradingAccountReserveField_swigregister(CThostFtdcTradingAccountReserveField)

class CThostFtdcReserveOpenAccountConfirmField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcReserveOpenAccountConfirmField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcReserveOpenAccountConfirmField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_TradeCode_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_BankID_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_BankBranchID_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_BrokerID_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_BrokerBranchID_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_TradeDate_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_TradeTime_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_BankSerial_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_TradingDay_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_PlateSerial_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_LastFragment_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_SessionID_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_CustomerName_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_IdCardType_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_IdentifiedCardNo_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_IdentifiedCardNo_set)
    __swig_setmethods__["Gender"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_Gender_set
    __swig_getmethods__["Gender"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_Gender_get
    if _newclass:
        Gender = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_Gender_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_Gender_set)
    __swig_setmethods__["CountryCode"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_CountryCode_set
    __swig_getmethods__["CountryCode"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_CountryCode_get
    if _newclass:
        CountryCode = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_CountryCode_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_CountryCode_set)
    __swig_setmethods__["CustType"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_CustType_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_CustType_set)
    __swig_setmethods__["Address"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_Address_set
    __swig_getmethods__["Address"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_Address_get
    if _newclass:
        Address = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_Address_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_Address_set)
    __swig_setmethods__["ZipCode"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_ZipCode_set
    __swig_getmethods__["ZipCode"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_ZipCode_get
    if _newclass:
        ZipCode = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_ZipCode_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_ZipCode_set)
    __swig_setmethods__["Telephone"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_Telephone_set
    __swig_getmethods__["Telephone"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_Telephone_get
    if _newclass:
        Telephone = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_Telephone_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_Telephone_set)
    __swig_setmethods__["MobilePhone"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_MobilePhone_set
    __swig_getmethods__["MobilePhone"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_MobilePhone_get
    if _newclass:
        MobilePhone = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_MobilePhone_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_MobilePhone_set)
    __swig_setmethods__["Fax"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_Fax_set
    __swig_getmethods__["Fax"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_Fax_get
    if _newclass:
        Fax = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_Fax_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_Fax_set)
    __swig_setmethods__["EMail"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_EMail_set
    __swig_getmethods__["EMail"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_EMail_get
    if _newclass:
        EMail = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_EMail_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_EMail_set)
    __swig_setmethods__["MoneyAccountStatus"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_MoneyAccountStatus_set
    __swig_getmethods__["MoneyAccountStatus"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_MoneyAccountStatus_get
    if _newclass:
        MoneyAccountStatus = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_MoneyAccountStatus_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_MoneyAccountStatus_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_BankAccount_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_BankPassWord_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_BankPassWord_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_InstallID_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_InstallID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_VerifyCertNoFlag_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_CurrencyID_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_CurrencyID_set)
    __swig_setmethods__["Digest"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_Digest_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_BankAccType_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_BankAccType_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_BrokerIDByBank_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_BrokerIDByBank_set)
    __swig_setmethods__["TID"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_TID_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_TID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_AccountID_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_Password_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_Password_set)
    __swig_setmethods__["BankReserveOpenSeq"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_BankReserveOpenSeq_set
    __swig_getmethods__["BankReserveOpenSeq"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_BankReserveOpenSeq_get
    if _newclass:
        BankReserveOpenSeq = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_BankReserveOpenSeq_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_BankReserveOpenSeq_set)
    __swig_setmethods__["BookDate"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_BookDate_set
    __swig_getmethods__["BookDate"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_BookDate_get
    if _newclass:
        BookDate = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_BookDate_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_BookDate_set)
    __swig_setmethods__["BookPsw"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_BookPsw_set
    __swig_getmethods__["BookPsw"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_BookPsw_get
    if _newclass:
        BookPsw = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_BookPsw_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_BookPsw_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_ErrorID_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CThostFtdcReserveOpenAccountConfirmField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CThostFtdcReserveOpenAccountConfirmField_ErrorMsg_get, _pyctp.CThostFtdcReserveOpenAccountConfirmField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcReserveOpenAccountConfirmField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcReserveOpenAccountConfirmField
    __del__ = lambda self: None
CThostFtdcReserveOpenAccountConfirmField_swigregister = _pyctp.CThostFtdcReserveOpenAccountConfirmField_swigregister
CThostFtdcReserveOpenAccountConfirmField_swigregister(CThostFtdcReserveOpenAccountConfirmField)

class CThostFtdcReserveOpenAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcReserveOpenAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcReserveOpenAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CThostFtdcReserveOpenAccountField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CThostFtdcReserveOpenAccountField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_TradeCode_get, _pyctp.CThostFtdcReserveOpenAccountField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CThostFtdcReserveOpenAccountField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CThostFtdcReserveOpenAccountField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_BankID_get, _pyctp.CThostFtdcReserveOpenAccountField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CThostFtdcReserveOpenAccountField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CThostFtdcReserveOpenAccountField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_BankBranchID_get, _pyctp.CThostFtdcReserveOpenAccountField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CThostFtdcReserveOpenAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CThostFtdcReserveOpenAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_BrokerID_get, _pyctp.CThostFtdcReserveOpenAccountField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CThostFtdcReserveOpenAccountField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CThostFtdcReserveOpenAccountField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_BrokerBranchID_get, _pyctp.CThostFtdcReserveOpenAccountField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CThostFtdcReserveOpenAccountField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CThostFtdcReserveOpenAccountField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_TradeDate_get, _pyctp.CThostFtdcReserveOpenAccountField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CThostFtdcReserveOpenAccountField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CThostFtdcReserveOpenAccountField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_TradeTime_get, _pyctp.CThostFtdcReserveOpenAccountField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CThostFtdcReserveOpenAccountField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CThostFtdcReserveOpenAccountField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_BankSerial_get, _pyctp.CThostFtdcReserveOpenAccountField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CThostFtdcReserveOpenAccountField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CThostFtdcReserveOpenAccountField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_TradingDay_get, _pyctp.CThostFtdcReserveOpenAccountField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CThostFtdcReserveOpenAccountField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CThostFtdcReserveOpenAccountField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_PlateSerial_get, _pyctp.CThostFtdcReserveOpenAccountField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CThostFtdcReserveOpenAccountField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CThostFtdcReserveOpenAccountField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_LastFragment_get, _pyctp.CThostFtdcReserveOpenAccountField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CThostFtdcReserveOpenAccountField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CThostFtdcReserveOpenAccountField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_SessionID_get, _pyctp.CThostFtdcReserveOpenAccountField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CThostFtdcReserveOpenAccountField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CThostFtdcReserveOpenAccountField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_CustomerName_get, _pyctp.CThostFtdcReserveOpenAccountField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CThostFtdcReserveOpenAccountField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CThostFtdcReserveOpenAccountField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_IdCardType_get, _pyctp.CThostFtdcReserveOpenAccountField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcReserveOpenAccountField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CThostFtdcReserveOpenAccountField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_IdentifiedCardNo_get, _pyctp.CThostFtdcReserveOpenAccountField_IdentifiedCardNo_set)
    __swig_setmethods__["Gender"] = _pyctp.CThostFtdcReserveOpenAccountField_Gender_set
    __swig_getmethods__["Gender"] = _pyctp.CThostFtdcReserveOpenAccountField_Gender_get
    if _newclass:
        Gender = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_Gender_get, _pyctp.CThostFtdcReserveOpenAccountField_Gender_set)
    __swig_setmethods__["CountryCode"] = _pyctp.CThostFtdcReserveOpenAccountField_CountryCode_set
    __swig_getmethods__["CountryCode"] = _pyctp.CThostFtdcReserveOpenAccountField_CountryCode_get
    if _newclass:
        CountryCode = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_CountryCode_get, _pyctp.CThostFtdcReserveOpenAccountField_CountryCode_set)
    __swig_setmethods__["CustType"] = _pyctp.CThostFtdcReserveOpenAccountField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CThostFtdcReserveOpenAccountField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_CustType_get, _pyctp.CThostFtdcReserveOpenAccountField_CustType_set)
    __swig_setmethods__["Address"] = _pyctp.CThostFtdcReserveOpenAccountField_Address_set
    __swig_getmethods__["Address"] = _pyctp.CThostFtdcReserveOpenAccountField_Address_get
    if _newclass:
        Address = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_Address_get, _pyctp.CThostFtdcReserveOpenAccountField_Address_set)
    __swig_setmethods__["ZipCode"] = _pyctp.CThostFtdcReserveOpenAccountField_ZipCode_set
    __swig_getmethods__["ZipCode"] = _pyctp.CThostFtdcReserveOpenAccountField_ZipCode_get
    if _newclass:
        ZipCode = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_ZipCode_get, _pyctp.CThostFtdcReserveOpenAccountField_ZipCode_set)
    __swig_setmethods__["Telephone"] = _pyctp.CThostFtdcReserveOpenAccountField_Telephone_set
    __swig_getmethods__["Telephone"] = _pyctp.CThostFtdcReserveOpenAccountField_Telephone_get
    if _newclass:
        Telephone = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_Telephone_get, _pyctp.CThostFtdcReserveOpenAccountField_Telephone_set)
    __swig_setmethods__["MobilePhone"] = _pyctp.CThostFtdcReserveOpenAccountField_MobilePhone_set
    __swig_getmethods__["MobilePhone"] = _pyctp.CThostFtdcReserveOpenAccountField_MobilePhone_get
    if _newclass:
        MobilePhone = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_MobilePhone_get, _pyctp.CThostFtdcReserveOpenAccountField_MobilePhone_set)
    __swig_setmethods__["Fax"] = _pyctp.CThostFtdcReserveOpenAccountField_Fax_set
    __swig_getmethods__["Fax"] = _pyctp.CThostFtdcReserveOpenAccountField_Fax_get
    if _newclass:
        Fax = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_Fax_get, _pyctp.CThostFtdcReserveOpenAccountField_Fax_set)
    __swig_setmethods__["EMail"] = _pyctp.CThostFtdcReserveOpenAccountField_EMail_set
    __swig_getmethods__["EMail"] = _pyctp.CThostFtdcReserveOpenAccountField_EMail_get
    if _newclass:
        EMail = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_EMail_get, _pyctp.CThostFtdcReserveOpenAccountField_EMail_set)
    __swig_setmethods__["MoneyAccountStatus"] = _pyctp.CThostFtdcReserveOpenAccountField_MoneyAccountStatus_set
    __swig_getmethods__["MoneyAccountStatus"] = _pyctp.CThostFtdcReserveOpenAccountField_MoneyAccountStatus_get
    if _newclass:
        MoneyAccountStatus = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_MoneyAccountStatus_get, _pyctp.CThostFtdcReserveOpenAccountField_MoneyAccountStatus_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CThostFtdcReserveOpenAccountField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CThostFtdcReserveOpenAccountField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_BankAccount_get, _pyctp.CThostFtdcReserveOpenAccountField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CThostFtdcReserveOpenAccountField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CThostFtdcReserveOpenAccountField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_BankPassWord_get, _pyctp.CThostFtdcReserveOpenAccountField_BankPassWord_set)
    __swig_setmethods__["InstallID"] = _pyctp.CThostFtdcReserveOpenAccountField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CThostFtdcReserveOpenAccountField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_InstallID_get, _pyctp.CThostFtdcReserveOpenAccountField_InstallID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcReserveOpenAccountField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CThostFtdcReserveOpenAccountField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_VerifyCertNoFlag_get, _pyctp.CThostFtdcReserveOpenAccountField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CThostFtdcReserveOpenAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CThostFtdcReserveOpenAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_CurrencyID_get, _pyctp.CThostFtdcReserveOpenAccountField_CurrencyID_set)
    __swig_setmethods__["Digest"] = _pyctp.CThostFtdcReserveOpenAccountField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CThostFtdcReserveOpenAccountField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_Digest_get, _pyctp.CThostFtdcReserveOpenAccountField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CThostFtdcReserveOpenAccountField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CThostFtdcReserveOpenAccountField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_BankAccType_get, _pyctp.CThostFtdcReserveOpenAccountField_BankAccType_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcReserveOpenAccountField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CThostFtdcReserveOpenAccountField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_BrokerIDByBank_get, _pyctp.CThostFtdcReserveOpenAccountField_BrokerIDByBank_set)
    __swig_setmethods__["TID"] = _pyctp.CThostFtdcReserveOpenAccountField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CThostFtdcReserveOpenAccountField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_TID_get, _pyctp.CThostFtdcReserveOpenAccountField_TID_set)
    __swig_setmethods__["ReserveOpenAccStas"] = _pyctp.CThostFtdcReserveOpenAccountField_ReserveOpenAccStas_set
    __swig_getmethods__["ReserveOpenAccStas"] = _pyctp.CThostFtdcReserveOpenAccountField_ReserveOpenAccStas_get
    if _newclass:
        ReserveOpenAccStas = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_ReserveOpenAccStas_get, _pyctp.CThostFtdcReserveOpenAccountField_ReserveOpenAccStas_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CThostFtdcReserveOpenAccountField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CThostFtdcReserveOpenAccountField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_ErrorID_get, _pyctp.CThostFtdcReserveOpenAccountField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CThostFtdcReserveOpenAccountField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CThostFtdcReserveOpenAccountField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CThostFtdcReserveOpenAccountField_ErrorMsg_get, _pyctp.CThostFtdcReserveOpenAccountField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcReserveOpenAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcReserveOpenAccountField
    __del__ = lambda self: None
CThostFtdcReserveOpenAccountField_swigregister = _pyctp.CThostFtdcReserveOpenAccountField_swigregister
CThostFtdcReserveOpenAccountField_swigregister(CThostFtdcReserveOpenAccountField)

class CThostFtdcMBLMarketDataField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcMBLMarketDataField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcMBLMarketDataField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CThostFtdcMBLMarketDataField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CThostFtdcMBLMarketDataField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CThostFtdcMBLMarketDataField_InstrumentID_get, _pyctp.CThostFtdcMBLMarketDataField_InstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CThostFtdcMBLMarketDataField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CThostFtdcMBLMarketDataField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CThostFtdcMBLMarketDataField_ExchangeID_get, _pyctp.CThostFtdcMBLMarketDataField_ExchangeID_set)
    __swig_setmethods__["Direction"] = _pyctp.CThostFtdcMBLMarketDataField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CThostFtdcMBLMarketDataField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CThostFtdcMBLMarketDataField_Direction_get, _pyctp.CThostFtdcMBLMarketDataField_Direction_set)
    __swig_setmethods__["Price"] = _pyctp.CThostFtdcMBLMarketDataField_Price_set
    __swig_getmethods__["Price"] = _pyctp.CThostFtdcMBLMarketDataField_Price_get
    if _newclass:
        Price = _swig_property(_pyctp.CThostFtdcMBLMarketDataField_Price_get, _pyctp.CThostFtdcMBLMarketDataField_Price_set)
    __swig_setmethods__["Volume"] = _pyctp.CThostFtdcMBLMarketDataField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CThostFtdcMBLMarketDataField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CThostFtdcMBLMarketDataField_Volume_get, _pyctp.CThostFtdcMBLMarketDataField_Volume_set)

    def __init__(self):
        this = _pyctp.new_CThostFtdcMBLMarketDataField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcMBLMarketDataField
    __del__ = lambda self: None
CThostFtdcMBLMarketDataField_swigregister = _pyctp.CThostFtdcMBLMarketDataField_swigregister
CThostFtdcMBLMarketDataField_swigregister(CThostFtdcMBLMarketDataField)

class CThostFtdcMdSpi(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcMdSpi, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcMdSpi, name)
    __repr__ = _swig_repr

    def OnFrontConnected(self):
        return _pyctp.CThostFtdcMdSpi_OnFrontConnected(self)

    def OnFrontDisconnected(self, nReason):
        return _pyctp.CThostFtdcMdSpi_OnFrontDisconnected(self, nReason)

    def OnHeartBeatWarning(self, nTimeLapse):
        return _pyctp.CThostFtdcMdSpi_OnHeartBeatWarning(self, nTimeLapse)

    def OnRspUserLogin(self, pRspUserLogin, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcMdSpi_OnRspUserLogin(self, pRspUserLogin, pRspInfo, nRequestID, bIsLast)

    def OnRspUserLogout(self, pUserLogout, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcMdSpi_OnRspUserLogout(self, pUserLogout, pRspInfo, nRequestID, bIsLast)

    def OnRspError(self, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcMdSpi_OnRspError(self, pRspInfo, nRequestID, bIsLast)

    def OnRspSubMarketData(self, pSpecificInstrument, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcMdSpi_OnRspSubMarketData(self, pSpecificInstrument, pRspInfo, nRequestID, bIsLast)

    def OnRspUnSubMarketData(self, pSpecificInstrument, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcMdSpi_OnRspUnSubMarketData(self, pSpecificInstrument, pRspInfo, nRequestID, bIsLast)

    def OnRspSubForQuoteRsp(self, pSpecificInstrument, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcMdSpi_OnRspSubForQuoteRsp(self, pSpecificInstrument, pRspInfo, nRequestID, bIsLast)

    def OnRspUnSubForQuoteRsp(self, pSpecificInstrument, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcMdSpi_OnRspUnSubForQuoteRsp(self, pSpecificInstrument, pRspInfo, nRequestID, bIsLast)

    def OnRtnDepthMarketData(self, pDepthMarketData):
        return _pyctp.CThostFtdcMdSpi_OnRtnDepthMarketData(self, pDepthMarketData)

    def OnRtnMBLMarketData(self, pMBLMarketData):
        return _pyctp.CThostFtdcMdSpi_OnRtnMBLMarketData(self, pMBLMarketData)

    def OnRtnForQuoteRsp(self, pForQuoteRsp):
        return _pyctp.CThostFtdcMdSpi_OnRtnForQuoteRsp(self, pForQuoteRsp)

    def __init__(self):
        if self.__class__ == CThostFtdcMdSpi:
            _self = None
        else:
            _self = self
        this = _pyctp.new_CThostFtdcMdSpi(_self, )
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcMdSpi
    __del__ = lambda self: None
    def __disown__(self):
        self.this.disown()
        _pyctp.disown_CThostFtdcMdSpi(self)
        return weakref_proxy(self)
CThostFtdcMdSpi_swigregister = _pyctp.CThostFtdcMdSpi_swigregister
CThostFtdcMdSpi_swigregister(CThostFtdcMdSpi)

class CThostFtdcMdApi(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcMdApi, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcMdApi, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    if _newclass:
        CreateFtdcMdApi = staticmethod(_pyctp.CThostFtdcMdApi_CreateFtdcMdApi)
    else:
        CreateFtdcMdApi = _pyctp.CThostFtdcMdApi_CreateFtdcMdApi

    def Release(self):
        return _pyctp.CThostFtdcMdApi_Release(self)

    def Init(self):
        return _pyctp.CThostFtdcMdApi_Init(self)

    def Join(self):
        return _pyctp.CThostFtdcMdApi_Join(self)

    def GetTradingDay(self):
        return _pyctp.CThostFtdcMdApi_GetTradingDay(self)

    def RegisterFront(self, pszFrontAddress):
        return _pyctp.CThostFtdcMdApi_RegisterFront(self, pszFrontAddress)

    def RegisterNameServer(self, pszNsAddress):
        return _pyctp.CThostFtdcMdApi_RegisterNameServer(self, pszNsAddress)

    def RegisterFensUserInfo(self, pFensUserInfo):
        return _pyctp.CThostFtdcMdApi_RegisterFensUserInfo(self, pFensUserInfo)

    def RegisterSpi(self, pSpi):
        return _pyctp.CThostFtdcMdApi_RegisterSpi(self, pSpi)

    def SubscribeMarketData(self, ppInstrumentID, nCount):
        return _pyctp.CThostFtdcMdApi_SubscribeMarketData(self, ppInstrumentID, nCount)

    def UnSubscribeMarketData(self, ppInstrumentID, nCount):
        return _pyctp.CThostFtdcMdApi_UnSubscribeMarketData(self, ppInstrumentID, nCount)

    def SubscribeForQuoteRsp(self, ppInstrumentID, nCount):
        return _pyctp.CThostFtdcMdApi_SubscribeForQuoteRsp(self, ppInstrumentID, nCount)

    def UnSubscribeForQuoteRsp(self, ppInstrumentID, nCount):
        return _pyctp.CThostFtdcMdApi_UnSubscribeForQuoteRsp(self, ppInstrumentID, nCount)

    def ReqUserLogin(self, pReqUserLoginField, nRequestID):
        return _pyctp.CThostFtdcMdApi_ReqUserLogin(self, pReqUserLoginField, nRequestID)

    def ReqUserLogout(self, pUserLogout, nRequestID):
        return _pyctp.CThostFtdcMdApi_ReqUserLogout(self, pUserLogout, nRequestID)
CThostFtdcMdApi_swigregister = _pyctp.CThostFtdcMdApi_swigregister
CThostFtdcMdApi_swigregister(CThostFtdcMdApi)

def CThostFtdcMdApi_CreateFtdcMdApi(pszFlowPath, bIsUsingUdp, bIsMulticast):
    return _pyctp.CThostFtdcMdApi_CreateFtdcMdApi(pszFlowPath, bIsUsingUdp, bIsMulticast)
CThostFtdcMdApi_CreateFtdcMdApi = _pyctp.CThostFtdcMdApi_CreateFtdcMdApi

class CThostFtdcTraderSpi(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcTraderSpi, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcTraderSpi, name)
    __repr__ = _swig_repr

    def OnFrontConnected(self):
        return _pyctp.CThostFtdcTraderSpi_OnFrontConnected(self)

    def OnFrontDisconnected(self, nReason):
        return _pyctp.CThostFtdcTraderSpi_OnFrontDisconnected(self, nReason)

    def OnHeartBeatWarning(self, nTimeLapse):
        return _pyctp.CThostFtdcTraderSpi_OnHeartBeatWarning(self, nTimeLapse)

    def OnRspAuthenticate(self, pRspAuthenticateField, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspAuthenticate(self, pRspAuthenticateField, pRspInfo, nRequestID, bIsLast)

    def OnRspUserLogin(self, pRspUserLogin, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspUserLogin(self, pRspUserLogin, pRspInfo, nRequestID, bIsLast)

    def OnRspUserLogout(self, pUserLogout, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspUserLogout(self, pUserLogout, pRspInfo, nRequestID, bIsLast)

    def OnRspUserPasswordUpdate(self, pUserPasswordUpdate, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspUserPasswordUpdate(self, pUserPasswordUpdate, pRspInfo, nRequestID, bIsLast)

    def OnRspTradingAccountPasswordUpdate(self, pTradingAccountPasswordUpdate, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspTradingAccountPasswordUpdate(self, pTradingAccountPasswordUpdate, pRspInfo, nRequestID, bIsLast)

    def OnRspOrderInsert(self, pInputOrder, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspOrderInsert(self, pInputOrder, pRspInfo, nRequestID, bIsLast)

    def OnRspParkedOrderInsert(self, pParkedOrder, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspParkedOrderInsert(self, pParkedOrder, pRspInfo, nRequestID, bIsLast)

    def OnRspParkedOrderAction(self, pParkedOrderAction, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspParkedOrderAction(self, pParkedOrderAction, pRspInfo, nRequestID, bIsLast)

    def OnRspOrderAction(self, pInputOrderAction, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspOrderAction(self, pInputOrderAction, pRspInfo, nRequestID, bIsLast)

    def OnRspQueryMaxOrderVolume(self, pQueryMaxOrderVolume, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQueryMaxOrderVolume(self, pQueryMaxOrderVolume, pRspInfo, nRequestID, bIsLast)

    def OnRspSettlementInfoConfirm(self, pSettlementInfoConfirm, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspSettlementInfoConfirm(self, pSettlementInfoConfirm, pRspInfo, nRequestID, bIsLast)

    def OnRspRemoveParkedOrder(self, pRemoveParkedOrder, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspRemoveParkedOrder(self, pRemoveParkedOrder, pRspInfo, nRequestID, bIsLast)

    def OnRspRemoveParkedOrderAction(self, pRemoveParkedOrderAction, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspRemoveParkedOrderAction(self, pRemoveParkedOrderAction, pRspInfo, nRequestID, bIsLast)

    def OnRspExecOrderInsert(self, pInputExecOrder, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspExecOrderInsert(self, pInputExecOrder, pRspInfo, nRequestID, bIsLast)

    def OnRspExecOrderAction(self, pInputExecOrderAction, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspExecOrderAction(self, pInputExecOrderAction, pRspInfo, nRequestID, bIsLast)

    def OnRspForQuoteInsert(self, pInputForQuote, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspForQuoteInsert(self, pInputForQuote, pRspInfo, nRequestID, bIsLast)

    def OnRspQuoteInsert(self, pInputQuote, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQuoteInsert(self, pInputQuote, pRspInfo, nRequestID, bIsLast)

    def OnRspQuoteAction(self, pInputQuoteAction, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQuoteAction(self, pInputQuoteAction, pRspInfo, nRequestID, bIsLast)

    def OnRspBatchOrderAction(self, pInputBatchOrderAction, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspBatchOrderAction(self, pInputBatchOrderAction, pRspInfo, nRequestID, bIsLast)

    def OnRspQryOrder(self, pOrder, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryOrder(self, pOrder, pRspInfo, nRequestID, bIsLast)

    def OnRspQryTrade(self, pTrade, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryTrade(self, pTrade, pRspInfo, nRequestID, bIsLast)

    def OnRspQryInvestorPosition(self, pInvestorPosition, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryInvestorPosition(self, pInvestorPosition, pRspInfo, nRequestID, bIsLast)

    def OnRspQryTradingAccount(self, pTradingAccount, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryTradingAccount(self, pTradingAccount, pRspInfo, nRequestID, bIsLast)

    def OnRspQryInvestor(self, pInvestor, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryInvestor(self, pInvestor, pRspInfo, nRequestID, bIsLast)

    def OnRspQryTradingCode(self, pTradingCode, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryTradingCode(self, pTradingCode, pRspInfo, nRequestID, bIsLast)

    def OnRspQryInstrumentMarginRate(self, pInstrumentMarginRate, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryInstrumentMarginRate(self, pInstrumentMarginRate, pRspInfo, nRequestID, bIsLast)

    def OnRspQryInstrumentCommissionRate(self, pInstrumentCommissionRate, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryInstrumentCommissionRate(self, pInstrumentCommissionRate, pRspInfo, nRequestID, bIsLast)

    def OnRspQryExchange(self, pExchange, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryExchange(self, pExchange, pRspInfo, nRequestID, bIsLast)

    def OnRspQryProduct(self, pProduct, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryProduct(self, pProduct, pRspInfo, nRequestID, bIsLast)

    def OnRspQryInstrument(self, pInstrument, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryInstrument(self, pInstrument, pRspInfo, nRequestID, bIsLast)

    def OnRspQryDepthMarketData(self, pDepthMarketData, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryDepthMarketData(self, pDepthMarketData, pRspInfo, nRequestID, bIsLast)

    def OnRspQrySettlementInfo(self, pSettlementInfo, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQrySettlementInfo(self, pSettlementInfo, pRspInfo, nRequestID, bIsLast)

    def OnRspQryInstrumentStatus(self, pInstrumentStatus, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryInstrumentStatus(self, pInstrumentStatus, pRspInfo, nRequestID, bIsLast)

    def OnRspQryTransferBank(self, pTransferBank, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryTransferBank(self, pTransferBank, pRspInfo, nRequestID, bIsLast)

    def OnRspQryInvestorPositionDetail(self, pInvestorPositionDetail, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryInvestorPositionDetail(self, pInvestorPositionDetail, pRspInfo, nRequestID, bIsLast)

    def OnRspQryNotice(self, pNotice, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryNotice(self, pNotice, pRspInfo, nRequestID, bIsLast)

    def OnRspQrySettlementInfoConfirm(self, pSettlementInfoConfirm, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQrySettlementInfoConfirm(self, pSettlementInfoConfirm, pRspInfo, nRequestID, bIsLast)

    def OnRspQryInvestorPositionCombineDetail(self, pInvestorPositionCombineDetail, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryInvestorPositionCombineDetail(self, pInvestorPositionCombineDetail, pRspInfo, nRequestID, bIsLast)

    def OnRspQryCFMMCTradingAccountKey(self, pCFMMCTradingAccountKey, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryCFMMCTradingAccountKey(self, pCFMMCTradingAccountKey, pRspInfo, nRequestID, bIsLast)

    def OnRspQryEWarrantOffset(self, pEWarrantOffset, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryEWarrantOffset(self, pEWarrantOffset, pRspInfo, nRequestID, bIsLast)

    def OnRspQryInvestorProductGroupMargin(self, pInvestorProductGroupMargin, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryInvestorProductGroupMargin(self, pInvestorProductGroupMargin, pRspInfo, nRequestID, bIsLast)

    def OnRspQryExchangeMarginRate(self, pExchangeMarginRate, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryExchangeMarginRate(self, pExchangeMarginRate, pRspInfo, nRequestID, bIsLast)

    def OnRspQryExchangeMarginRateAdjust(self, pExchangeMarginRateAdjust, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryExchangeMarginRateAdjust(self, pExchangeMarginRateAdjust, pRspInfo, nRequestID, bIsLast)

    def OnRspQryExchangeRate(self, pExchangeRate, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryExchangeRate(self, pExchangeRate, pRspInfo, nRequestID, bIsLast)

    def OnRspQrySecAgentACIDMap(self, pSecAgentACIDMap, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQrySecAgentACIDMap(self, pSecAgentACIDMap, pRspInfo, nRequestID, bIsLast)

    def OnRspQryOptionInstrTradeCost(self, pOptionInstrTradeCost, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryOptionInstrTradeCost(self, pOptionInstrTradeCost, pRspInfo, nRequestID, bIsLast)

    def OnRspQryOptionInstrCommRate(self, pOptionInstrCommRate, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryOptionInstrCommRate(self, pOptionInstrCommRate, pRspInfo, nRequestID, bIsLast)

    def OnRspQryExecOrder(self, pExecOrder, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryExecOrder(self, pExecOrder, pRspInfo, nRequestID, bIsLast)

    def OnRspQryForQuote(self, pForQuote, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryForQuote(self, pForQuote, pRspInfo, nRequestID, bIsLast)

    def OnRspQryQuote(self, pQuote, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryQuote(self, pQuote, pRspInfo, nRequestID, bIsLast)

    def OnRspQryTransferSerial(self, pTransferSerial, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryTransferSerial(self, pTransferSerial, pRspInfo, nRequestID, bIsLast)

    def OnRspQryAccountregister(self, pAccountregister, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryAccountregister(self, pAccountregister, pRspInfo, nRequestID, bIsLast)

    def OnRspError(self, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspError(self, pRspInfo, nRequestID, bIsLast)

    def OnRtnOrder(self, pOrder):
        return _pyctp.CThostFtdcTraderSpi_OnRtnOrder(self, pOrder)

    def OnRtnTrade(self, pTrade):
        return _pyctp.CThostFtdcTraderSpi_OnRtnTrade(self, pTrade)

    def OnErrRtnOrderInsert(self, pInputOrder, pRspInfo):
        return _pyctp.CThostFtdcTraderSpi_OnErrRtnOrderInsert(self, pInputOrder, pRspInfo)

    def OnErrRtnOrderAction(self, pOrderAction, pRspInfo):
        return _pyctp.CThostFtdcTraderSpi_OnErrRtnOrderAction(self, pOrderAction, pRspInfo)

    def OnRtnInstrumentStatus(self, pInstrumentStatus):
        return _pyctp.CThostFtdcTraderSpi_OnRtnInstrumentStatus(self, pInstrumentStatus)

    def OnRtnTradingNotice(self, pTradingNoticeInfo):
        return _pyctp.CThostFtdcTraderSpi_OnRtnTradingNotice(self, pTradingNoticeInfo)

    def OnRtnErrorConditionalOrder(self, pErrorConditionalOrder):
        return _pyctp.CThostFtdcTraderSpi_OnRtnErrorConditionalOrder(self, pErrorConditionalOrder)

    def OnRtnExecOrder(self, pExecOrder):
        return _pyctp.CThostFtdcTraderSpi_OnRtnExecOrder(self, pExecOrder)

    def OnErrRtnExecOrderInsert(self, pInputExecOrder, pRspInfo):
        return _pyctp.CThostFtdcTraderSpi_OnErrRtnExecOrderInsert(self, pInputExecOrder, pRspInfo)

    def OnErrRtnExecOrderAction(self, pExecOrderAction, pRspInfo):
        return _pyctp.CThostFtdcTraderSpi_OnErrRtnExecOrderAction(self, pExecOrderAction, pRspInfo)

    def OnErrRtnForQuoteInsert(self, pInputForQuote, pRspInfo):
        return _pyctp.CThostFtdcTraderSpi_OnErrRtnForQuoteInsert(self, pInputForQuote, pRspInfo)

    def OnRtnQuote(self, pQuote):
        return _pyctp.CThostFtdcTraderSpi_OnRtnQuote(self, pQuote)

    def OnErrRtnQuoteInsert(self, pInputQuote, pRspInfo):
        return _pyctp.CThostFtdcTraderSpi_OnErrRtnQuoteInsert(self, pInputQuote, pRspInfo)

    def OnErrRtnQuoteAction(self, pQuoteAction, pRspInfo):
        return _pyctp.CThostFtdcTraderSpi_OnErrRtnQuoteAction(self, pQuoteAction, pRspInfo)

    def OnRtnForQuoteRsp(self, pForQuoteRsp):
        return _pyctp.CThostFtdcTraderSpi_OnRtnForQuoteRsp(self, pForQuoteRsp)

    def OnErrRtnBatchOrderAction(self, pBatchOrderAction, pRspInfo):
        return _pyctp.CThostFtdcTraderSpi_OnErrRtnBatchOrderAction(self, pBatchOrderAction, pRspInfo)

    def OnRspQryContractBank(self, pContractBank, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryContractBank(self, pContractBank, pRspInfo, nRequestID, bIsLast)

    def OnRspQryParkedOrder(self, pParkedOrder, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryParkedOrder(self, pParkedOrder, pRspInfo, nRequestID, bIsLast)

    def OnRspQryParkedOrderAction(self, pParkedOrderAction, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryParkedOrderAction(self, pParkedOrderAction, pRspInfo, nRequestID, bIsLast)

    def OnRspQryTradingNotice(self, pTradingNotice, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryTradingNotice(self, pTradingNotice, pRspInfo, nRequestID, bIsLast)

    def OnRspQryBrokerTradingParams(self, pBrokerTradingParams, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryBrokerTradingParams(self, pBrokerTradingParams, pRspInfo, nRequestID, bIsLast)

    def OnRspQryBrokerTradingAlgos(self, pBrokerTradingAlgos, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQryBrokerTradingAlgos(self, pBrokerTradingAlgos, pRspInfo, nRequestID, bIsLast)

    def OnRtnFromBankToFutureByBank(self, pRspTransfer):
        return _pyctp.CThostFtdcTraderSpi_OnRtnFromBankToFutureByBank(self, pRspTransfer)

    def OnRtnFromFutureToBankByBank(self, pRspTransfer):
        return _pyctp.CThostFtdcTraderSpi_OnRtnFromFutureToBankByBank(self, pRspTransfer)

    def OnRtnRepealFromBankToFutureByBank(self, pRspRepeal):
        return _pyctp.CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByBank(self, pRspRepeal)

    def OnRtnRepealFromFutureToBankByBank(self, pRspRepeal):
        return _pyctp.CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByBank(self, pRspRepeal)

    def OnRtnFromBankToFutureByFuture(self, pRspTransfer):
        return _pyctp.CThostFtdcTraderSpi_OnRtnFromBankToFutureByFuture(self, pRspTransfer)

    def OnRtnFromFutureToBankByFuture(self, pRspTransfer):
        return _pyctp.CThostFtdcTraderSpi_OnRtnFromFutureToBankByFuture(self, pRspTransfer)

    def OnRtnRepealFromBankToFutureByFutureManual(self, pRspRepeal):
        return _pyctp.CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByFutureManual(self, pRspRepeal)

    def OnRtnRepealFromFutureToBankByFutureManual(self, pRspRepeal):
        return _pyctp.CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByFutureManual(self, pRspRepeal)

    def OnRtnQueryBankBalanceByFuture(self, pNotifyQueryAccount):
        return _pyctp.CThostFtdcTraderSpi_OnRtnQueryBankBalanceByFuture(self, pNotifyQueryAccount)

    def OnErrRtnBankToFutureByFuture(self, pReqTransfer, pRspInfo):
        return _pyctp.CThostFtdcTraderSpi_OnErrRtnBankToFutureByFuture(self, pReqTransfer, pRspInfo)

    def OnErrRtnFutureToBankByFuture(self, pReqTransfer, pRspInfo):
        return _pyctp.CThostFtdcTraderSpi_OnErrRtnFutureToBankByFuture(self, pReqTransfer, pRspInfo)

    def OnErrRtnRepealBankToFutureByFutureManual(self, pReqRepeal, pRspInfo):
        return _pyctp.CThostFtdcTraderSpi_OnErrRtnRepealBankToFutureByFutureManual(self, pReqRepeal, pRspInfo)

    def OnErrRtnRepealFutureToBankByFutureManual(self, pReqRepeal, pRspInfo):
        return _pyctp.CThostFtdcTraderSpi_OnErrRtnRepealFutureToBankByFutureManual(self, pReqRepeal, pRspInfo)

    def OnErrRtnQueryBankBalanceByFuture(self, pReqQueryAccount, pRspInfo):
        return _pyctp.CThostFtdcTraderSpi_OnErrRtnQueryBankBalanceByFuture(self, pReqQueryAccount, pRspInfo)

    def OnRtnRepealFromBankToFutureByFuture(self, pRspRepeal):
        return _pyctp.CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByFuture(self, pRspRepeal)

    def OnRtnRepealFromFutureToBankByFuture(self, pRspRepeal):
        return _pyctp.CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByFuture(self, pRspRepeal)

    def OnRspFromBankToFutureByFuture(self, pReqTransfer, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspFromBankToFutureByFuture(self, pReqTransfer, pRspInfo, nRequestID, bIsLast)

    def OnRspFromFutureToBankByFuture(self, pReqTransfer, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspFromFutureToBankByFuture(self, pReqTransfer, pRspInfo, nRequestID, bIsLast)

    def OnRspQueryBankAccountMoneyByFuture(self, pReqQueryAccount, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CThostFtdcTraderSpi_OnRspQueryBankAccountMoneyByFuture(self, pReqQueryAccount, pRspInfo, nRequestID, bIsLast)

    def OnRtnOpenAccountByBank(self, pOpenAccount):
        return _pyctp.CThostFtdcTraderSpi_OnRtnOpenAccountByBank(self, pOpenAccount)

    def OnRtnCancelAccountByBank(self, pCancelAccount):
        return _pyctp.CThostFtdcTraderSpi_OnRtnCancelAccountByBank(self, pCancelAccount)

    def OnRtnChangeAccountByBank(self, pChangeAccount):
        return _pyctp.CThostFtdcTraderSpi_OnRtnChangeAccountByBank(self, pChangeAccount)

    def __init__(self):
        if self.__class__ == CThostFtdcTraderSpi:
            _self = None
        else:
            _self = self
        this = _pyctp.new_CThostFtdcTraderSpi(_self, )
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CThostFtdcTraderSpi
    __del__ = lambda self: None
    def __disown__(self):
        self.this.disown()
        _pyctp.disown_CThostFtdcTraderSpi(self)
        return weakref_proxy(self)
CThostFtdcTraderSpi_swigregister = _pyctp.CThostFtdcTraderSpi_swigregister
CThostFtdcTraderSpi_swigregister(CThostFtdcTraderSpi)

class CThostFtdcTraderApi(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcTraderApi, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcTraderApi, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    if _newclass:
        CreateFtdcTraderApi = staticmethod(_pyctp.CThostFtdcTraderApi_CreateFtdcTraderApi)
    else:
        CreateFtdcTraderApi = _pyctp.CThostFtdcTraderApi_CreateFtdcTraderApi
    if _newclass:
        GetApiVersion = staticmethod(_pyctp.CThostFtdcTraderApi_GetApiVersion)
    else:
        GetApiVersion = _pyctp.CThostFtdcTraderApi_GetApiVersion

    def Release(self):
        return _pyctp.CThostFtdcTraderApi_Release(self)

    def Init(self):
        return _pyctp.CThostFtdcTraderApi_Init(self)

    def Join(self):
        return _pyctp.CThostFtdcTraderApi_Join(self)

    def GetTradingDay(self):
        return _pyctp.CThostFtdcTraderApi_GetTradingDay(self)

    def RegisterFront(self, pszFrontAddress):
        return _pyctp.CThostFtdcTraderApi_RegisterFront(self, pszFrontAddress)

    def RegisterNameServer(self, pszNsAddress):
        return _pyctp.CThostFtdcTraderApi_RegisterNameServer(self, pszNsAddress)

    def RegisterFensUserInfo(self, pFensUserInfo):
        return _pyctp.CThostFtdcTraderApi_RegisterFensUserInfo(self, pFensUserInfo)

    def RegisterSpi(self, pSpi):
        return _pyctp.CThostFtdcTraderApi_RegisterSpi(self, pSpi)

    def SubscribePrivateTopic(self, nResumeType):
        return _pyctp.CThostFtdcTraderApi_SubscribePrivateTopic(self, nResumeType)

    def SubscribePublicTopic(self, nResumeType):
        return _pyctp.CThostFtdcTraderApi_SubscribePublicTopic(self, nResumeType)

    def ReqAuthenticate(self, pReqAuthenticateField, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqAuthenticate(self, pReqAuthenticateField, nRequestID)

    def ReqUserLogin(self, pReqUserLoginField, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqUserLogin(self, pReqUserLoginField, nRequestID)

    def ReqUserLogout(self, pUserLogout, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqUserLogout(self, pUserLogout, nRequestID)

    def ReqUserPasswordUpdate(self, pUserPasswordUpdate, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqUserPasswordUpdate(self, pUserPasswordUpdate, nRequestID)

    def ReqTradingAccountPasswordUpdate(self, pTradingAccountPasswordUpdate, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqTradingAccountPasswordUpdate(self, pTradingAccountPasswordUpdate, nRequestID)

    def ReqOrderInsert(self, pInputOrder, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqOrderInsert(self, pInputOrder, nRequestID)

    def ReqParkedOrderInsert(self, pParkedOrder, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqParkedOrderInsert(self, pParkedOrder, nRequestID)

    def ReqParkedOrderAction(self, pParkedOrderAction, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqParkedOrderAction(self, pParkedOrderAction, nRequestID)

    def ReqOrderAction(self, pInputOrderAction, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqOrderAction(self, pInputOrderAction, nRequestID)

    def ReqQueryMaxOrderVolume(self, pQueryMaxOrderVolume, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQueryMaxOrderVolume(self, pQueryMaxOrderVolume, nRequestID)

    def ReqSettlementInfoConfirm(self, pSettlementInfoConfirm, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqSettlementInfoConfirm(self, pSettlementInfoConfirm, nRequestID)

    def ReqRemoveParkedOrder(self, pRemoveParkedOrder, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqRemoveParkedOrder(self, pRemoveParkedOrder, nRequestID)

    def ReqRemoveParkedOrderAction(self, pRemoveParkedOrderAction, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqRemoveParkedOrderAction(self, pRemoveParkedOrderAction, nRequestID)

    def ReqExecOrderInsert(self, pInputExecOrder, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqExecOrderInsert(self, pInputExecOrder, nRequestID)

    def ReqExecOrderAction(self, pInputExecOrderAction, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqExecOrderAction(self, pInputExecOrderAction, nRequestID)

    def ReqForQuoteInsert(self, pInputForQuote, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqForQuoteInsert(self, pInputForQuote, nRequestID)

    def ReqQuoteInsert(self, pInputQuote, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQuoteInsert(self, pInputQuote, nRequestID)

    def ReqQuoteAction(self, pInputQuoteAction, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQuoteAction(self, pInputQuoteAction, nRequestID)

    def ReqBatchOrderAction(self, pInputBatchOrderAction, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqBatchOrderAction(self, pInputBatchOrderAction, nRequestID)

    def ReqQryOrder(self, pQryOrder, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryOrder(self, pQryOrder, nRequestID)

    def ReqQryTrade(self, pQryTrade, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryTrade(self, pQryTrade, nRequestID)

    def ReqQryInvestorPosition(self, pQryInvestorPosition, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryInvestorPosition(self, pQryInvestorPosition, nRequestID)

    def ReqQryTradingAccount(self, pQryTradingAccount, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryTradingAccount(self, pQryTradingAccount, nRequestID)

    def ReqQryInvestor(self, pQryInvestor, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryInvestor(self, pQryInvestor, nRequestID)

    def ReqQryTradingCode(self, pQryTradingCode, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryTradingCode(self, pQryTradingCode, nRequestID)

    def ReqQryInstrumentMarginRate(self, pQryInstrumentMarginRate, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryInstrumentMarginRate(self, pQryInstrumentMarginRate, nRequestID)

    def ReqQryInstrumentCommissionRate(self, pQryInstrumentCommissionRate, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryInstrumentCommissionRate(self, pQryInstrumentCommissionRate, nRequestID)

    def ReqQryExchange(self, pQryExchange, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryExchange(self, pQryExchange, nRequestID)

    def ReqQryProduct(self, pQryProduct, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryProduct(self, pQryProduct, nRequestID)

    def ReqQryInstrument(self, pQryInstrument, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryInstrument(self, pQryInstrument, nRequestID)

    def ReqQryDepthMarketData(self, pQryDepthMarketData, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryDepthMarketData(self, pQryDepthMarketData, nRequestID)

    def ReqQrySettlementInfo(self, pQrySettlementInfo, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQrySettlementInfo(self, pQrySettlementInfo, nRequestID)

    def ReqQryInstrumentStatus(self, pQryInstrumentStatus, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryInstrumentStatus(self, pQryInstrumentStatus, nRequestID)

    def ReqQryTransferBank(self, pQryTransferBank, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryTransferBank(self, pQryTransferBank, nRequestID)

    def ReqQryInvestorPositionDetail(self, pQryInvestorPositionDetail, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryInvestorPositionDetail(self, pQryInvestorPositionDetail, nRequestID)

    def ReqQryNotice(self, pQryNotice, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryNotice(self, pQryNotice, nRequestID)

    def ReqQrySettlementInfoConfirm(self, pQrySettlementInfoConfirm, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQrySettlementInfoConfirm(self, pQrySettlementInfoConfirm, nRequestID)

    def ReqQryInvestorPositionCombineDetail(self, pQryInvestorPositionCombineDetail, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryInvestorPositionCombineDetail(self, pQryInvestorPositionCombineDetail, nRequestID)

    def ReqQryCFMMCTradingAccountKey(self, pQryCFMMCTradingAccountKey, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryCFMMCTradingAccountKey(self, pQryCFMMCTradingAccountKey, nRequestID)

    def ReqQryEWarrantOffset(self, pQryEWarrantOffset, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryEWarrantOffset(self, pQryEWarrantOffset, nRequestID)

    def ReqQryInvestorProductGroupMargin(self, pQryInvestorProductGroupMargin, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryInvestorProductGroupMargin(self, pQryInvestorProductGroupMargin, nRequestID)

    def ReqQryExchangeMarginRate(self, pQryExchangeMarginRate, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryExchangeMarginRate(self, pQryExchangeMarginRate, nRequestID)

    def ReqQryExchangeMarginRateAdjust(self, pQryExchangeMarginRateAdjust, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryExchangeMarginRateAdjust(self, pQryExchangeMarginRateAdjust, nRequestID)

    def ReqQryExchangeRate(self, pQryExchangeRate, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryExchangeRate(self, pQryExchangeRate, nRequestID)

    def ReqQrySecAgentACIDMap(self, pQrySecAgentACIDMap, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQrySecAgentACIDMap(self, pQrySecAgentACIDMap, nRequestID)

    def ReqQryOptionInstrTradeCost(self, pQryOptionInstrTradeCost, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryOptionInstrTradeCost(self, pQryOptionInstrTradeCost, nRequestID)

    def ReqQryOptionInstrCommRate(self, pQryOptionInstrCommRate, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryOptionInstrCommRate(self, pQryOptionInstrCommRate, nRequestID)

    def ReqQryExecOrder(self, pQryExecOrder, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryExecOrder(self, pQryExecOrder, nRequestID)

    def ReqQryForQuote(self, pQryForQuote, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryForQuote(self, pQryForQuote, nRequestID)

    def ReqQryQuote(self, pQryQuote, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryQuote(self, pQryQuote, nRequestID)

    def ReqQryTransferSerial(self, pQryTransferSerial, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryTransferSerial(self, pQryTransferSerial, nRequestID)

    def ReqQryAccountregister(self, pQryAccountregister, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryAccountregister(self, pQryAccountregister, nRequestID)

    def ReqQryContractBank(self, pQryContractBank, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryContractBank(self, pQryContractBank, nRequestID)

    def ReqQryParkedOrder(self, pQryParkedOrder, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryParkedOrder(self, pQryParkedOrder, nRequestID)

    def ReqQryParkedOrderAction(self, pQryParkedOrderAction, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryParkedOrderAction(self, pQryParkedOrderAction, nRequestID)

    def ReqQryTradingNotice(self, pQryTradingNotice, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryTradingNotice(self, pQryTradingNotice, nRequestID)

    def ReqQryBrokerTradingParams(self, pQryBrokerTradingParams, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryBrokerTradingParams(self, pQryBrokerTradingParams, nRequestID)

    def ReqQryBrokerTradingAlgos(self, pQryBrokerTradingAlgos, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQryBrokerTradingAlgos(self, pQryBrokerTradingAlgos, nRequestID)

    def ReqFromBankToFutureByFuture(self, pReqTransfer, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqFromBankToFutureByFuture(self, pReqTransfer, nRequestID)

    def ReqFromFutureToBankByFuture(self, pReqTransfer, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqFromFutureToBankByFuture(self, pReqTransfer, nRequestID)

    def ReqQueryBankAccountMoneyByFuture(self, pReqQueryAccount, nRequestID):
        return _pyctp.CThostFtdcTraderApi_ReqQueryBankAccountMoneyByFuture(self, pReqQueryAccount, nRequestID)
CThostFtdcTraderApi_swigregister = _pyctp.CThostFtdcTraderApi_swigregister
CThostFtdcTraderApi_swigregister(CThostFtdcTraderApi)

def CThostFtdcTraderApi_CreateFtdcTraderApi(*args):
    return _pyctp.CThostFtdcTraderApi_CreateFtdcTraderApi(*args)
CThostFtdcTraderApi_CreateFtdcTraderApi = _pyctp.CThostFtdcTraderApi_CreateFtdcTraderApi

def CThostFtdcTraderApi_GetApiVersion():
    return _pyctp.CThostFtdcTraderApi_GetApiVersion()
CThostFtdcTraderApi_GetApiVersion = _pyctp.CThostFtdcTraderApi_GetApiVersion

# This file is compatible with both classic and new-style classes.


